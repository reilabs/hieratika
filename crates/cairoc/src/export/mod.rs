//! This module contains the functions to export to file the data generated by
//! the cairoc crate.

use std::{
    env,
    fs::{OpenOptions, create_dir_all},
    io::{BufWriter, Write},
    path::{Path, PathBuf},
};

use hieratika_errors::compile::cairo::Result;

pub mod lowered;
pub mod sierra;

fn target_dir() -> PathBuf {
    // TODO: this is a temp directory. Decide how to deal with calls outside of
    // the workspace.
    PathBuf::from(env!("CARGO_MANIFEST_DIR")).join("../../target")
}

/// This function writes `data` to `filename`.
///
/// Existing files are overwritten. Missing directories are created.
///
/// # Errors
///
/// - [`hieratika_errors::compile::cairo::Error::FileIO`] if there are issues
///   creating the missing folders of the path of `filename` or if there are
///   issues writing `data` to `filename`.
fn write_to_file(filename: &Path, data: &[u8]) -> Result<()> {
    let prefix = filename.parent().unwrap_or(Path::new(""));
    create_dir_all(prefix)?;
    let output_file = OpenOptions::new()
        .write(true)
        .create(true)
        .truncate(true)
        .open(filename)
        .unwrap();
    let mut f = BufWriter::new(output_file);
    f.write_all(data)?;
    Ok(())
}
