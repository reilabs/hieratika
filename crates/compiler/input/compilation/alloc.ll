; ModuleID = 'alloc.db98974eb1e1f83e-cgu.0'
source_filename = "alloc.db98974eb1e1f83e-cgu.0"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n32:64-S128"
target triple = "riscv64"

%"core::fmt::rt::Argument<'_>" = type { %"core::fmt::rt::ArgumentType<'_>" }
%"core::fmt::rt::ArgumentType<'_>" = type { ptr, [1 x i64] }

@alloc_e4c0784e4975da2173a354afd99193ad = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the range is within the slice" }>, align 1
@alloc_424341b75ece3fa20496f1c69b9fb0ac = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"unsafe precondition(s) violated: ptr::write_bytes requires that the destination pointer is aligned and non-null" }>, align 1
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_2f5fae7ca9908dec8d13988b47dc9dc4 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null" }>, align 1
@alloc_d1c03a1f2ac5174b3088e1d4a8a664e1 = private unnamed_addr constant <{ [105 x i8] }> <{ [105 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs" }>, align 1
@alloc_9f0d15b92aba5db727d77e6b46e60a6d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1c03a1f2ac5174b3088e1d4a8a664e1, [16 x i8] c"i\00\00\00\00\00\00\00\B0\01\00\00:\00\00\00" }>, align 8
@alloc_6458170d55f163cf8296d020f34783fa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1c03a1f2ac5174b3088e1d4a8a664e1, [16 x i8] c"i\00\00\00\00\00\00\00\B0\01\00\004\00\00\00" }>, align 8
@alloc_8d17c0d7765c1f1b0dc7acf59030ea5a = private unnamed_addr constant <{ [66 x i8] }> <{ [66 x i8] c"assertion failed: !bytes.is_empty() && bytes[bytes.len() - 1] == 0" }>, align 1
@alloc_7e539950dfc031d8f4e8dcd31988878b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1c03a1f2ac5174b3088e1d4a8a664e1, [16 x i8] c"i\00\00\00\00\00\00\00\B0\01\00\00\11\00\00\00" }>, align 8
@alloc_96dbbd18d2586395505ff540e7734837 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1c03a1f2ac5174b3088e1d4a8a664e1, [16 x i8] c"i\00\00\00\00\00\00\00\1F\01\00\00X\00\00\00" }>, align 8
@alloc_fda627a204408664747b80345fea4cda = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1c03a1f2ac5174b3088e1d4a8a664e1, [16 x i8] c"i\00\00\00\00\00\00\00U\02\00\008\00\00\00" }>, align 8
@alloc_a43b508e8ea2d401cabcd7f7ed1bc1cb = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/fmt/mod.rs" }>, align 1
@alloc_169f356811361b0ca861a16299c49ec7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a43b508e8ea2d401cabcd7f7ed1bc1cb, [16 x i8] c"g\00\00\00\00\00\00\00w\02\00\00.\00\00\00" }>, align 8
@alloc_a8dd4e910fe494c40f40e713f79a72c4 = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/num/mod.rs" }>, align 1
@alloc_94d53e123a230fae37821433f56279b5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a8dd4e910fe494c40f40e713f79a72c4, [16 x i8] c"g\00\00\00\00\00\00\00\91\02\00\00\11\00\00\00" }>, align 8
@alloc_503d6b1c88920234878649959379ae93 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a8dd4e910fe494c40f40e713f79a72c4, [16 x i8] c"g\00\00\00\00\00\00\00x\02\00\00\11\00\00\00" }>, align 8
@alloc_d304c5266651b8490d07d5bcb908bafa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a8dd4e910fe494c40f40e713f79a72c4, [16 x i8] c"g\00\00\00\00\00\00\00\98\01\00\00\05\00\00\00" }>, align 8
@alloc_289b84035b3220255b84b8869a538376 = private unnamed_addr constant <{ [69 x i8] }> <{ [69 x i8] c"unsafe precondition(s) violated: usize::unchecked_add cannot overflow" }>, align 1
@alloc_ffc44ed1670ebf78d81555edceff65f6 = private unnamed_addr constant <{ [69 x i8] }> <{ [69 x i8] c"unsafe precondition(s) violated: usize::unchecked_mul cannot overflow" }>, align 1
@alloc_4910c64b4ac045acdaf52a268f526b79 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a8dd4e910fe494c40f40e713f79a72c4, [16 x i8] c"g\00\00\00\00\00\00\00D\05\00\00\05\00\00\00" }>, align 8
@alloc_d4d2a2a8539eafc62756407d946babb3 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"unsafe precondition(s) violated: ptr::read_volatile requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_981fd9513041e1603a1d1d7b668a749d = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_b7474065d782af00c4610bb4ef55210b = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null" }>, align 1
@alloc_0a14891e1e5c702b367f18048e678740 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"unsafe precondition(s) violated: ptr::add requires that the address calculation does not overflow" }>, align 1
@alloc_20b3d155afd5c58c42e598b7e6d186ef = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null" }>, align 1
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_e63ee67e9f016291703fc30f0a3bafbb = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_d798000f5e29a7ace65ad32e5f0d1042 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e63ee67e9f016291703fc30f0a3bafbb, [16 x i8] c"m\00\00\00\00\00\00\00\0E\03\00\00\09\00\00\00" }>, align 8
@alloc_7efb3a7632b3620f628ce83a521b4d9b = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"unsafe precondition(s) violated: ptr::sub_ptr requires `self >= origin`" }>, align 1
@alloc_a5950421c53dc0311338c91af1c8a0af = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/validations.rs" }>, align 1
@alloc_d9e2802da4477df7b77952a1ddb0372e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a5950421c53dc0311338c91af1c8a0af, [16 x i8] c"o\00\00\00\00\00\00\00\0C\00\00\00\0D\00\00\00" }>, align 8
@alloc_7c07a05f842324d6be0405323e60c45b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a5950421c53dc0311338c91af1c8a0af, [16 x i8] c"o\00\00\00\00\00\00\00^\00\00\00)\00\00\00" }>, align 8
@alloc_46a923eb6db18588b7fa16266e38f8d0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a5950421c53dc0311338c91af1c8a0af, [16 x i8] c"o\00\00\00\00\00\00\00c\00\00\00-\00\00\00" }>, align 8
@alloc_d9aa37eaacf9955be967a8e431ed2fc1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a5950421c53dc0311338c91af1c8a0af, [16 x i8] c"o\00\00\00\00\00\00\00h\00\00\001\00\00\00" }>, align 8
@alloc_38d865ee598848532cbd764e0d6298fc = private unnamed_addr constant <{ [57 x i8] }> <{ [57 x i8] c"unsafe precondition(s) violated: invalid value for `char`" }>, align 1
@alloc_67341a965ea037d885c831ba2f04d9c3 = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/char/methods.rs" }>, align 1
@alloc_e454375bd4e2d7bf3d2181f3182870b2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_67341a965ea037d885c831ba2f04d9c3, [16 x i8] c"l\00\00\00\00\00\00\00\16\07\00\00\0D\00\00\00" }>, align 8
@alloc_ab14703751a9eb3585c49b2e55e9a9e5 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: hint::assert_unchecked must never be called when the condition is false" }>, align 1
@alloc_7431955562f63ecb58909cc7619ec5a3 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs" }>, align 1
@alloc_a24dbebe50c7330ea9e880a90209de3e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7431955562f63ecb58909cc7619ec5a3, [16 x i8] c"q\00\00\00\00\00\00\00\A2\00\00\00\14\00\00\00" }>, align 8
@alloc_c3130451b7c81e38ff5790b41ab72b64 = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/alloc/layout.rs" }>, align 1
@alloc_b76487b54ad25f73c299361487488532 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c3130451b7c81e38ff5790b41ab72b64, [16 x i8] c"l\00\00\00\00\00\00\00i\00\00\00 \00\00\00" }>, align 8
@alloc_cd1513ae8d1ae22acf9342b8dfa1561d = private unnamed_addr constant <{ [164 x i8] }> <{ [164 x i8] c"unsafe precondition(s) violated: Layout::from_size_align_unchecked requires that align is a power of 2 and the rounded-up allocation size does not exceed isize::MAX" }>, align 1
@alloc_a6e8913658d98d0dbd0444b57ddfd811 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"chunk size must be non-zero" }>, align 1
@alloc_2cdbb89777c912da09e05e08ed401368 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_a6e8913658d98d0dbd0444b57ddfd811, [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc_7d843728bf4d16111edf7d5771921810 = private unnamed_addr constant <{ [105 x i8] }> <{ [105 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/mod.rs" }>, align 1
@alloc_871f925ed96b531f7787060e3d510a9e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d843728bf4d16111edf7d5771921810, [16 x i8] c"i\00\00\00\00\00\00\00\1F\0F\00\00\16\00\00\00" }>, align 8
@alloc_c27e56c692e13311a7048470a9bf5a0c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d843728bf4d16111edf7d5771921810, [16 x i8] c"i\00\00\00\00\00\00\00!\0F\00\00\16\00\00\00" }>, align 8
@alloc_acbb8b2e1996f2ad5ddbda55c6bd461e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d843728bf4d16111edf7d5771921810, [16 x i8] c"i\00\00\00\00\00\00\00!\05\00\00B\00\00\00" }>, align 8
@alloc_0ef375a3ad611d5d326bb0a0e87c29b8 = private unnamed_addr constant <{ [132 x i8] }> <{ [132 x i8] c"unsafe precondition(s) violated: slice::as_chunks_unchecked requires `N != 0` and the slice to split exactly into `N`-element chunks" }>, align 1
@alloc_7b0b40b257267a6d829753c9eb3d4ab1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d843728bf4d16111edf7d5771921810, [16 x i8] c"i\00\00\00\00\00\00\00R\0F\00\00%\00\00\00" }>, align 8
@alloc_d3f03b9e9b21b575b3a2fed9191139a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7d843728bf4d16111edf7d5771921810, [16 x i8] c"i\00\00\00\00\00\00\00`\0F\00\006\00\00\00" }>, align 8
@alloc_11195730e5236cfdc15ea13be1c301f9 = private unnamed_addr constant <{ [162 x i8] }> <{ [162 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`" }>, align 1
@alloc_7f0934048e781d8feafd75ef8bf5cd64 = private unnamed_addr constant <{ [106 x i8] }> <{ [106 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/iter.rs" }>, align 1
@alloc_1daec6da96277ea3a68e8e91b870bb85 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7f0934048e781d8feafd75ef8bf5cd64, [16 x i8] c"j\00\00\00\00\00\00\00 \09\00\00(\00\00\00" }>, align 8
@alloc_c879b920e8854eb53ead23b1bd948b77 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/index.rs" }>, align 1
@alloc_ffa744ba3383c2926c1004bae723738a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c879b920e8854eb53ead23b1bd948b77, [16 x i8] c"k\00\00\00\00\00\00\00S\03\00\002\00\00\00" }>, align 8
@alloc_3cee366dba514cb0c18c40b06fd3b2da = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c879b920e8854eb53ead23b1bd948b77, [16 x i8] c"k\00\00\00\00\00\00\00L\03\00\004\00\00\00" }>, align 8
@alloc_989a063590c196fd6d3380034ff016db = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/memchr.rs" }>, align 1
@alloc_e468df286ae29d94cc1abcc60a58d9b2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989a063590c196fd6d3380034ff016db, [16 x i8] c"l\00\00\00\00\00\00\00)\00\00\00\0C\00\00\00" }>, align 8
@alloc_6c5b35390ec72a1d8429c4c7b102f354 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989a063590c196fd6d3380034ff016db, [16 x i8] c"l\00\00\00\00\00\00\00-\00\00\00\09\00\00\00" }>, align 8
@alloc_4bbfdd898298471f08a38e188ddbe855 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_989a063590c196fd6d3380034ff016db, [16 x i8] c"l\00\00\00\00\00\00\00\1C\00\00\00\15\00\00\00" }>, align 8
@vtable.0 = private constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h20bd182c5c54c60eE" }>, align 8, !dbg !0
@alloc_00ae4b301f7fab8ac9617c03fcbd7274 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.1 = private constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hae95477830e486b2E" }>, align 8, !dbg !16
@vtable.2 = private constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb01e2dcb36eedd7cE" }>, align 8, !dbg !27
@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize" }>, align 1
@alloc_4e46ae026644514d12bbae22164d73f9 = private unnamed_addr constant <{ [105 x i8] }> <{ [105 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ub_checks.rs" }>, align 1
@alloc_5e69183382d227f934d9b2ef3c182205 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4e46ae026644514d12bbae22164d73f9, [16 x i8] c"i\00\00\00\00\00\00\00\86\00\00\006\00\00\00" }>, align 8
@alloc_99ac8a81a24cac863217ce4a5cbfabea = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Error" }>, align 1
@alloc_50d1422a5940a2b883b94c395ee0d275 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs" }>, align 1
@alloc_94ac45f841eeb3b83140452cd3cd917d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_50d1422a5940a2b883b94c395ee0d275, [16 x i8] c"q\00\00\00\00\00\00\00\95\00\00\00\01\00\00\00" }>, align 8
@alloc_8e685ef482aec04a2d7a8ed5ef1228a3 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"Utf8Error" }>, align 1
@alloc_f34017a1538f19bf68b6d6294eec0bb3 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"valid_up_to" }>, align 1
@vtable.3 = private constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h8901250f82f506b0E" }>, align 8, !dbg !51
@alloc_91eca80c47235190e5fbed3d6d8be36c = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"error_len" }>, align 1
@alloc_37d2e53432a03a1f90b3e7253015eaf9 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc_9535bf4c204f3eb9b19ec2c83e446e52 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.4 = private constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h54ac28b3a129e867E" }>, align 8, !dbg !59
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_477d6fd19596379e27b9bd4358550877 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"LayoutError" }>, align 1
@vtable.5 = private constant <{ ptr, [16 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h6e6ff1aa33bbb4faE", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h0c4aaed91e329fa8E", ptr @_ZN4core3fmt5Write9write_fmt17h17a6868f9c748f56E }>, align 8, !dbg !68
@alloc_e96fb6e25c55edb0aec8b24d111f5d7f = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"unsafe precondition(s) violated: slice::get_unchecked_mut requires that the index is within the slice" }>, align 1
@alloc_3f3fff85a6f5968306bca63b270d353f = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/iter.rs" }>, align 1
@alloc_ecd8f61dc9800309a27d18ff5093cd34 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3f3fff85a6f5968306bca63b270d353f, [16 x i8] c"h\00\00\00\00\00\00\00i\00\00\00\0A\00\00\00" }>, align 8
@alloc_1aa971d962b1dc94cbc372b55496a1bd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3f3fff85a6f5968306bca63b270d353f, [16 x i8] c"h\00\00\00\00\00\00\00\C0\00\00\00&\00\00\00" }>, align 8
@alloc_a65110618077034d15ace85ff0e4cec7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3f3fff85a6f5968306bca63b270d353f, [16 x i8] c"h\00\00\00\00\00\00\00\C0\00\00\00\11\00\00\00" }>, align 8
@alloc_7c580b658250fa2caf9dba95656e9fea = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/char/decode.rs" }>, align 1
@alloc_d91ec9bed56fa96a16a893dd1a70684e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c580b658250fa2caf9dba95656e9fea, [16 x i8] c"k\00\00\00\00\00\00\00E\00\00\00\15\00\00\00" }>, align 8
@alloc_d791eaf358ed821941e2d4cfd804d89b = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc_2fb5b595c02e90d046a1dffece948868 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c580b658250fa2caf9dba95656e9fea, [16 x i8] c"k\00\00\00\00\00\00\00f\00\00\00\17\00\00\00" }>, align 8
@alloc_e59db0cc494922884add3474fe7ca357 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7c580b658250fa2caf9dba95656e9fea, [16 x i8] c"k\00\00\00\00\00\00\00f\00\00\00\13\00\00\00" }>, align 8
@alloc_31365cfefba383c4d2bf6b6a04cc10aa = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"capacity overflow" }>, align 1
@alloc_11d257f5ed6cc7fc38feaa801053bac6 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_31365cfefba383c4d2bf6b6a04cc10aa, [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc_33682dd3d4b898c7538132dc0c143f74 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"`len` must be smaller than or equal to `self.capacity()`" }>, align 1
@alloc_dc2afad2f62918e2eed91adbf0bed9ff = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_33682dd3d4b898c7538132dc0c143f74, [8 x i8] c"8\00\00\00\00\00\00\00" }>, align 8
@alloc_d27d7016dcb65398246b53c2661df55c = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs" }>, align 1
@alloc_7ebc97ee82ef8190ac95da0d9c6f9d43 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\E9\00\00\00\09\00\00\00" }>, align 8
@alloc_52f6123897970d51878a92e700db4fa9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\E0\01\00\00L\00\00\00" }>, align 8
@alloc_5c7a1386658d70e296b7c0767179e38d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\CD\01\00\003\00\00\00" }>, align 8
@alloc_90c395786d9559872c9bc56c3e35fbb8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\13\02\00\00 \00\00\00" }>, align 8
@alloc_867b71d642822fe06cc43eb7dbd61cbd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00(\02\00\00\11\00\00\00" }>, align 8
@alloc_600ccc83711dc678007edb121e7ecdc6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00E\02\00\00\0D\00\00\00" }>, align 8
@alloc_c99632408c318731a6463c8d43d5f795 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00A\02\00\00\0D\00\00\00" }>, align 8
@alloc_f61de39dd8c0d6ce4a7ac898dcc11c4d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00]\02\00\00\0D\00\00\00" }>, align 8
@alloc_40b28a94c379c596f1ea303094bfc857 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00Y\02\00\00\0D\00\00\00" }>, align 8
@alloc_f618e816ca814de4958218055ad99397 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"assertion failed: additional > 0" }>, align 1
@alloc_c435383a1286f4112d78babaafacb720 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\80\02\00\00\09\00\00\00" }>, align 8
@alloc_7e2827044a0a1ea97ee85728939b70ec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\85\02\00\00)\00\00\00" }>, align 8
@alloc_6efbafbb9ca60d10c6c657c9e1f5fb7e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\8D\02\00\00\1C\00\00\00" }>, align 8
@alloc_7dd820fc2353d6e78dcc35dcb96fb34a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\92\02\00\00\13\00\00\00" }>, align 8
@alloc_5b0bab6b8a576f0da6ed67e1e199ab81 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\90\02\00\00\1A\00\00\00" }>, align 8
@alloc_cec94f4f583d594d9fc50f7573eb8288 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\89\02\00\00\1C\00\00\00" }>, align 8
@alloc_93a1f017e54dc45d40059c12ee2514a2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\A2\02\00\00)\00\00\00" }>, align 8
@alloc_c0f63f01bf777184241d983e099327d8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\A8\02\00\00\13\00\00\00" }>, align 8
@alloc_23a3d4744acd471a3c8dbf46cf7661a4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\A6\02\00\00\1A\00\00\00" }>, align 8
@alloc_d665e8656ddee09488f97f267e080a3a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\A5\02\00\00\13\00\00\00" }>, align 8
@alloc_e32c9f49965bcd982ae19540c5ba95f8 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"Tried to shrink to a larger capacity" }>, align 1
@alloc_52f548b6953b1f75b3b067c87f664dd5 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_e32c9f49965bcd982ae19540c5ba95f8, [8 x i8] c"$\00\00\00\00\00\00\00" }>, align 8
@alloc_fc3bfbc8c061027976bfabb82120978f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\B3\02\00\00\09\00\00\00" }>, align 8
@alloc_2888ebeadf91c22b7e70ddfd9dba5abd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\D9\02\00\00\11\00\00\00" }>, align 8
@alloc_89bd8666822a16f761fde021cfb2330d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\03\03\00\00\09\00\00\00" }>, align 8
@alloc_8cb20e0422639acf6990b598495f1254 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\06\03\00\00\0D\00\00\00" }>, align 8
@alloc_dcec76c3bb4659c0fab740764cd7475f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\00\03\00\00\05\00\00\00" }>, align 8
@alloc_175bca62bc9ddd286cc0663944a17128 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00\0D\03\00\00N\00\00\00" }>, align 8
@alloc_f5ca9184f677385d2f0972463cdac9ea = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00'\03\00\00\1E\00\00\00" }>, align 8
@alloc_a2607a9f56caecc8b029e45eefb4308e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d27d7016dcb65398246b53c2661df55c, [16 x i8] c"h\00\00\00\00\00\00\00/\03\00\00W\00\00\00" }>, align 8
@__rust_no_alloc_shim_is_unstable = external dso_local global i8
@alloc_21e181c3100359566694da81ad3a6b42 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/alloc.rs" }>, align 1
@alloc_dde264d245f0a2a468c806470ebb5456 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\C1\00\00\00\1B\00\00\00" }>, align 8
@alloc_7e80d81941cf5c819e3db4cff23967f9 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"`new_layout.size()` must be greater than or equal to `old_layout.size()`" }>, align 1
@alloc_04056f6d76887c0653320aca2f1cbe49 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_7e80d81941cf5c819e3db4cff23967f9, [8 x i8] c"H\00\00\00\00\00\00\00" }>, align 8
@alloc_f7e097dcbfe9543a6530595869b765eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\D1\00\00\00\09\00\00\00" }>, align 8
@alloc_46765a78bfce89bba8b56fcfb1141a33 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\EF\00\00\00\1F\00\00\00" }>, align 8
@alloc_3cac7365d6fc5872bb051806abdbbde3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\DF\00\00\00\11\00\00\00" }>, align 8
@alloc_28683999e6cbd30a51f01c03e9bf8994 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\E4\00\00\00:\00\00\00" }>, align 8
@alloc_aae8d81914a7812d593250f2e6c9ad12 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\E2\00\00\00\1B\00\00\00" }>, align 8
@alloc_c18aec2f64791555f5b3394d1fad7c20 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"`new_layout.size()` must be smaller than or equal to `old_layout.size()`" }>, align 1
@alloc_1020994b51d9ceb7568ac48c79478bfe = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_c18aec2f64791555f5b3394d1fad7c20, [8 x i8] c"H\00\00\00\00\00\00\00" }>, align 8
@alloc_1c21d73e21956617058bd8f91fe5fcbe = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\001\01\00\00\09\00\00\00" }>, align 8
@alloc_29ea7ae903dd0695b7b7eeb620655852 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00M\01\00\00\1F\00\00\00" }>, align 8
@alloc_efff60fa8c638150cc0c017becc55b0d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00@\01\00\00\11\00\00\00" }>, align 8
@alloc_60978929e2b2f89f214a9dee9aae7ea1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00C\01\00\00\1B\00\00\00" }>, align 8
@alloc_afc2a81fe13a0b3a87a4890cf54edc49 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"allocation failed" }>, align 1
@alloc_6baf420c0410c6f30b16cb34b783a44f = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_afc2a81fe13a0b3a87a4890cf54edc49, [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc_d8ee81cc72e45807bfff68229bba85f1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\8D\01\00\00\09\00\00\00" }>, align 8
@__rust_alloc_error_handler_should_panic = external dso_local global i8
@alloc_531b0048d6ed72a56ae658b8fe4d292a = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"memory allocation of " }>, align 1
@alloc_e7770b048557af7ef3910860746912e2 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c" bytes failed" }>, align 1
@alloc_7c7b93fd305fe7ff1d4a9e5bebdd169b = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_531b0048d6ed72a56ae658b8fe4d292a, [8 x i8] c"\15\00\00\00\00\00\00\00", ptr @alloc_e7770b048557af7ef3910860746912e2, [8 x i8] c"\0D\00\00\00\00\00\00\00" }>, align 8
@alloc_7dd813c198fcb81e7e182574ce36ec6d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\B6\01\00\00\0D\00\00\00" }>, align 8
@alloc_3fc333d2be47ba02b7c7378360afcfe2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_21e181c3100359566694da81ad3a6b42, [16 x i8] c"f\00\00\00\00\00\00\00\B4\01\00\00\0D\00\00\00" }>, align 8
@alloc_f4dd3f5e20709c2d39d9ccc318b10360 = private unnamed_addr constant <{ [110 x i8] }> <{ [110 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/boxed/convert.rs" }>, align 1
@alloc_30cca34b9ca3bc71253a116c188b9e4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f4dd3f5e20709c2d39d9ccc318b10360, [16 x i8] c"n\00\00\00\00\00\00\00R\00\00\00\13\00\00\00" }>, align 8
@alloc_ed59b6ae190f03b7d6e34c32363bc0bf = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17hdd2efb14eebc5b8bE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h4065c6c534685a91E" }>, align 8
@vtable.6 = private constant <{ ptr, [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17hdd2efb14eebc5b8bE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN254_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6e614d15668a76eE", ptr @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h4065c6c534685a91E", ptr @alloc_ed59b6ae190f03b7d6e34c32363bc0bf, ptr @_ZN4core5error5Error6source17h0bdb0b5a76915a11E, ptr @_ZN4core5error5Error7type_id17h3ba4ed2a179b14a4E, ptr @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..error..Error$GT$11description17h48c6d84981b3d80cE", ptr @_ZN4core5error5Error5cause17h82cae8f6d2cc9637E, ptr @_ZN4core5error5Error7provide17hf3cab819f04860fdE }>, align 8, !dbg !119
@alloc_cd91605c90130cd85b6914711c13b33e = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/boxed.rs" }>, align 1
@alloc_251fcef07d5ab66677109f871c020c8b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_cd91605c90130cd85b6914711c13b33e, [16 x i8] c"f\00\00\00\00\00\00\00\10\07\00\00.\00\00\00" }>, align 8
@alloc_a500d906b91607583596fa15e63c2ada = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc_7112f08c7b295b5f6a78117d80e70907 = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/borrow.rs" }>, align 1
@alloc_f660fed6470d8fdcc38f89abbae259fb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7112f08c7b295b5f6a78117d80e70907, [16 x i8] c"g\00\00\00\00\00\00\00\15\01\00\00%\00\00\00" }>, align 8
@alloc_dbd6112801b11838880ab8653fc65e2d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7112f08c7b295b5f6a78117d80e70907, [16 x i8] c"g\00\00\00\00\00\00\00\D6\01\00\003\00\00\00" }>, align 8
@alloc_504ab2be3c083e9805e5221eba3917a9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7112f08c7b295b5f6a78117d80e70907, [16 x i8] c"g\00\00\00\00\00\00\00\E7\01\00\003\00\00\00" }>, align 8
@alloc_48ac04d310206a129588d490519ad8d1 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"key is not properly ordered relative to neighbors" }>, align 1
@alloc_2d176137a8b89209c523717d4f986029 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_48ac04d310206a129588d490519ad8d1, [8 x i8] c"1\00\00\00\00\00\00\00" }>, align 8
@alloc_1ac27a7ad4b1fedc41713a13c30f215d = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"assertion failed: edge_idx <= CAPACITY" }>, align 1
@alloc_3c8f52581bc143b157902c1ce433ff22 = private unnamed_addr constant <{ [119 x i8] }> <{ [119 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs" }>, align 1
@alloc_fdeaf922b78fe0d8a4ddaa1eb03169fa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3c8f52581bc143b157902c1ce433ff22, [16 x i8] c"w\00\00\00\00\00\00\00\80\03\00\00\05\00\00\00" }>, align 8
@alloc_6914a2a2730bbe9ab0a2ec588ca3bb0f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3c8f52581bc143b157902c1ce433ff22, [16 x i8] c"w\00\00\00\00\00\00\00\86\03\00\00\0F\00\00\00" }>, align 8
@alloc_d0de19b92850c0368ebf2096fc88d53c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3c8f52581bc143b157902c1ce433ff22, [16 x i8] c"w\00\00\00\00\00\00\00\86\03\00\00A\00\00\00" }>, align 8
@alloc_57e359cf053e0fa750f69fb57c4d24f1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3c8f52581bc143b157902c1ce433ff22, [16 x i8] c"w\00\00\00\00\00\00\00\86\03\00\00@\00\00\00" }>, align 8
@alloc_6fd25ed348c66af91a0e024a68db0dbb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3c8f52581bc143b157902c1ce433ff22, [16 x i8] c"w\00\00\00\00\00\00\00\86\03\00\005\00\00\00" }>, align 8
@alloc_1c48aaa25881cebb537398237e87da2c = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"memory allocation failed" }>, align 1
@alloc_236b52f5c81143245b05b9fdb0db30b7 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c" because the computed capacity exceeded the collection's maximum" }>, align 1
@alloc_8743fc3ff085a87cd6d6fd0bc23a3ce4 = private unnamed_addr constant <{ [47 x i8] }> <{ [47 x i8] c" because the memory allocator returned an error" }>, align 1
@alloc_9f74a5c2eec971276fa979f74ab30915 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/collections/mod.rs" }>, align 1
@alloc_bbf62262887b8b896beb1704dfc73111 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_9f74a5c2eec971276fa979f74ab30915, [16 x i8] c"p\00\00\00\00\00\00\00\85\00\00\00\09\00\00\00" }>, align 8
@alloc_a34730e5e9c81f41511a865a846f8771 = private unnamed_addr constant <{ [106 x i8] }> <{ [106 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs" }>, align 1
@alloc_5d2681ff4fbc1370c12be37e64de7262 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\B7\00\00\00\14\00\00\00" }>, align 8
@alloc_afc85ac7fa1fc5f9a417a32db98225bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\17\01\00\007\00\00\00" }>, align 8
@alloc_11c66dabf7f7feef72599f3946f6dfc4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\1B\01\00\00\1E\00\00\00" }>, align 8
@alloc_f6e394c6859c56983342eb358e885f0c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\1C\01\00\00\14\00\00\00" }>, align 8
@alloc_9ed1d40f60081ac3c8582d1e71419d75 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"assertion failed: memchr::memchr(0, &v).is_none()" }>, align 1
@alloc_156d5c7c6f69fe34845cc3baa812fa37 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00Q\01\00\00\09\00\00\00" }>, align 8
@alloc_0e7eff428019b5753767681608ae6587 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00V\01\00\00\0B\00\00\00" }>, align 8
@alloc_781b2bbbd116826056d7a9c10c6889b7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00W\01\00\00\0B\00\00\00" }>, align 8
@alloc_9848efa103523892095f8411b68557c3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00X\01\00\00\19\00\00\00" }>, align 8
@alloc_b81e3863036eb7cddad670d5f49dd48c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\94\01\00\00\17\00\00\00" }>, align 8
@alloc_c8f8d850bafb8c953da39152ff673a10 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\01\00" }>, align 1
@alloc_0bf25458e8613f0cbeeb109fec892b39 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\F0\01\00\00\09\00\00\00" }>, align 8
@alloc_d6e10e01f54dbc5798f664872daa8769 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00s\02\00\00-\00\00\00" }>, align 8
@alloc_d2aec74c294cb6f49efc94f79e2e54ed = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00s\02\00\00\17\00\00\00" }>, align 8
@alloc_4ca7a4293309f2a594112e5992259be2 = private unnamed_addr constant <{ [63 x i8] }> <{ [63 x i8] c"assertion failed: memchr::memchr(0, &v).unwrap() + 1 == v.len()" }>, align 1
@alloc_09d709bae586d94aaa77cc454a7d298a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00s\02\00\00\09\00\00\00" }>, align 8
@alloc_6cdd581df14db01179aebcce3453bd09 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00x\02\00\00\19\00\00\00" }>, align 8
@alloc_86d69e9e608dca2a470f1f25dbb1fb03 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00\A0\02\00\00\1E\00\00\00" }>, align 8
@alloc_503e3ddfab6ff94d3e7b9f01abf94ee7 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"nul byte found in provided data at position: " }>, align 1
@alloc_577aa44f47f6ef39a87ddb5a9b4451b8 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_503e3ddfab6ff94d3e7b9f01abf94ee7, [8 x i8] c"-\00\00\00\00\00\00\00" }>, align 8
@alloc_aa5194b5890f52a428105d12b66ef167 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"data provided contains an interior nul byte at pos " }>, align 1
@alloc_ff42d28a277982e056a5409725510716 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_aa5194b5890f52a428105d12b66ef167, [8 x i8] c"3\00\00\00\00\00\00\00" }>, align 8
@alloc_3412ac35c3cedf13fa8186649587ae51 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"data provided is not nul terminated" }>, align 1
@alloc_23f759e465b470884cf2ee7ff692a8fa = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_3412ac35c3cedf13fa8186649587ae51, [8 x i8] c"#\00\00\00\00\00\00\00" }>, align 8
@alloc_2be04d996cb96ea7cf76b18f168cc936 = private unnamed_addr constant <{ [33 x i8] }> <{ [33 x i8] c"C string contained non-utf8 bytes" }>, align 1
@alloc_aef15d1c7629ae4e01160d230d1515e3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\006\04\00\003\00\00\00" }>, align 8
@alloc_62924e1e8b0d672be51647c6040252d9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a34730e5e9c81f41511a865a846f8771, [16 x i8] c"j\00\00\00\00\00\00\00<\04\00\00\1A\00\00\00" }>, align 8
@alloc_d4d0b95d03b96c59f7662e0365977680 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"nul byte found in data" }>, align 1
@alloc_333f007011cfcaddbf304140a6ae8139 = private unnamed_addr constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17heb4a47b0542153a5E" }>, align 8
@vtable.7 = private constant <{ [24 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17he57a55edfbb947feE", ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17heb4a47b0542153a5E", ptr @alloc_333f007011cfcaddbf304140a6ae8139, ptr @_ZN4core5error5Error6source17h81941f4639b1e47dE, ptr @_ZN4core5error5Error7type_id17hf803431a91448a39E, ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..error..Error$GT$11description17hfdb6b94179120958E", ptr @_ZN4core5error5Error5cause17hfc560bb7f7dbe947E, ptr @_ZN4core5error5Error7provide17h91b26135a66ff8baE }>, align 8, !dbg !141
@alloc_a439077caaee6bab9af745f1531d72a4 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"a formatting trait implementation returned an error when the underlying stream did not" }>, align 1
@alloc_4dfdfb3c25faeb5b391322104620ef8a = private unnamed_addr constant <{ [100 x i8] }> <{ [100 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/fmt.rs" }>, align 1
@alloc_dccb8b006c854771352df302727257a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4dfdfb3c25faeb5b391322104620ef8a, [16 x i8] c"d\00\00\00\00\00\00\00\8A\02\00\00\0E\00\00\00" }>, align 8
@alloc_1a1fc64ecac873f4b978693c3f83c39d = private unnamed_addr constant <{ [99 x i8] }> <{ [99 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/rc.rs" }>, align 1
@alloc_e9e555dabcea10b1f843fa8f0c99f780 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1a1fc64ecac873f4b978693c3f83c39d, [16 x i8] c"c\00\00\00\00\00\00\00)\01\00\001\00\00\00" }>, align 8
@alloc_615b28cb4d10e4886844407f3d3341a3 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/slice.rs" }>, align 1
@alloc_29284281892bde93e7545e1a18a5f8dc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_615b28cb4d10e4886844407f3d3341a3, [16 x i8] c"f\00\00\00\00\00\00\00\A1\00\00\00\19\00\00\00" }>, align 8
@alloc_1302e1bce89cada18067fac642ba3231 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_615b28cb4d10e4886844407f3d3341a3, [16 x i8] c"f\00\00\00\00\00\00\00m\03\00\00\10\00\00\00" }>, align 8
@alloc_a232d0a15782d0e92e6d58d94c0c62ba = private unnamed_addr constant <{ [100 x i8] }> <{ [100 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/str.rs" }>, align 1
@alloc_c293372f8f30b1fc526359c56aa5c89f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\C0\00\00\00\0E\00\00\00" }>, align 8
@alloc_92bd1ae6467565f43615e43ac39bf41a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\8C\01\00\00A\00\00\00" }>, align 8
@alloc_bc07c7a33ae726400a93eb9e81138f66 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\A3\01\00\00?\00\00\00" }>, align 8
@alloc_3274b17868dcd12126c89c982b6d4c8a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\A4\01\00\004\00\00\00" }>, align 8
@alloc_ed9af1e4279834b9852d26f8d3d4b8c2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\A4\01\00\003\00\00\00" }>, align 8
@alloc_19e04ffb8ff30923e1e2debaf035124d = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"assertion failed: '\CE\A3'.len_utf8() == 2" }>, align 1
@alloc_15d0514513d1f32ff678727c0d5776e8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\A2\01\00\00\0D\00\00\00" }>, align 8
@alloc_28cedd3a8e0c6f009a156ddd894b61f9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\84\02\00\00\13\00\00\00" }>, align 8
@alloc_3fe01a8f0c7681d7141ec2caceee152c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\A0\02\00\00\09\00\00\00" }>, align 8
@alloc_e48e8a9597ed398ce02259aed66b0df2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\9D\02\00\006\00\00\00" }>, align 8
@alloc_e12cbdefc2186a0a49cbe82704556654 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\9D\02\00\00\0D\00\00\00" }>, align 8
@alloc_7d12abe270608543095c00c24c20eff8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\A7\02\00\00\14\00\00\00" }>, align 8
@alloc_66270c0eb24b37d82ccb41e5f655ad61 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\AF\02\00\00\09\00\00\00" }>, align 8
@alloc_e1d6c52e6efc094399824cc5c4faa274 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\91\02\00\00\1B\00\00\00" }>, align 8
@alloc_44d8ad110fab633cdaecb51ef75e82a7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_a232d0a15782d0e92e6d58d94c0c62ba, [16 x i8] c"d\00\00\00\00\00\00\00\91\02\00\00\0D\00\00\00" }>, align 8
@alloc_57d533e027f0d7e891de841e67393521 = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/string.rs" }>, align 1
@alloc_bfe1800c95e72e5697f38b2dfd7acff2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\EA\01\00\00\17\00\00\00" }>, align 8
@alloc_55773bc7650d9b4ca2871ef04250ccf4 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\EF\BF\BD" }>, align 1
@alloc_084813e4c477ff533b4bda7eee02bed0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\81\02\00\00\11\00\00\00" }>, align 8
@alloc_2a70e4b3a45ca4c601ad735ef6b33a99 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00(\03\00\00'\00\00\00" }>, align 8
@alloc_37279426793bee973b1ffc46555e5638 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00N\03\00\00\22\00\00\00" }>, align 8
@alloc_cfe4cbf656be2b6f9e730fd865604915 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00s\03\00\00'\00\00\00" }>, align 8
@alloc_238cb96f85b9d7e10cadcd603f5f3e36 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\99\03\00\00\22\00\00\00" }>, align 8
@alloc_5f6f00486b3db66e0fcfb99068155af3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00g\04\00\00\12\00\00\00" }>, align 8
@alloc_eb331bd363aabbd7fe50c17b00db1b63 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\CB\04\00\00\12\00\00\00" }>, align 8
@alloc_ae56b34ad047abccc1fe4f6306545d3f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\8D\05\00\00\1B\00\00\00" }>, align 8
@alloc_261264039435881a8b2969e98c3da3d3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\8E\05\00\00\1B\00\00\00" }>, align 8
@alloc_9611bc68a938bae1a46be4c541ce042c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00s\06\00\00\1F\00\00\00" }>, align 8
@alloc_f75f43df8b3ea1b7e01ee0bd50b84955 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"assertion failed: new_len <= self.s.len()" }>, align 1
@alloc_0eac978c2a0b868eee1ab188c8627753 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00t\06\00\00\11\00\00\00" }>, align 8
@alloc_2dd14832ef12136d13f9f9c3e468a707 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\C3\06\00\00\12\00\00\00" }>, align 8
@alloc_67225652672aa7bd26b8efdb02f6545a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\C6\06\00\00M\00\00\00" }>, align 8
@alloc_bd20691fc8adec093d36c3db10edeb84 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\C6\06\00\00Y\00\00\00" }>, align 8
@alloc_a9538baca41d2286e1df2d6082a4139a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\C8\06\00\00\1E\00\00\00" }>, align 8
@alloc_6d4c13210275430bedb64a9bec928024 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\EA\07\00\00\1E\00\00\00" }>, align 8
@alloc_d8ada33d87f7034e38d41dac689ce480 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\1E\08\00\00\14\00\00\00" }>, align 8
@alloc_176ebab96aba90174b4232bc9c47a0d3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\009\08\00\00\19\00\00\00" }>, align 8
@alloc_759e2e01d7b3588a0bc62fa5bfed5833 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00=\08\00\00,\00\00\00" }>, align 8
@alloc_b4a16a01cd856e7c4dcc831ea549de66 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00=\08\00\00\0F\00\00\00" }>, align 8
@alloc_ab92493c11d5b21eb87a07b7b9126afe = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00E\08\00\00\1E\00\00\00" }>, align 8
@alloc_6fbea5e9c73aa07232d8e93629f5148f = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"invalid utf-16: lone surrogate found" }>, align 1
@alloc_8f25c7227a5bf6e813f71dc7dbd57c20 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"invalid utf-8" }>, align 1
@alloc_c9030d29d46859fcf5c8ae281867725c = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"invalid utf-16" }>, align 1
@alloc_1ac06a49b23a927d7f574d6fe0595f78 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\A5\08\00\00 \00\00\00" }>, align 8
@alloc_e68d78b1122174498773fa3fd0dbb2fb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00\AD\08\00\00\12\00\00\00" }>, align 8
@alloc_15c5d354754d7e2685cda16fd1b1c241 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57d533e027f0d7e891de841e67393521, [16 x i8] c"g\00\00\00\00\00\00\00f\09\00\00\0D\00\00\00" }>, align 8
@alloc_7c803916a094a5a08efe0ee16b3f38af = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Drain" }>, align 1
@vtable.8 = private constant <{ [24 x i8], ptr }> <{ [24 x i8] c"\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hce3520abf5f196dbE" }>, align 8, !dbg !162
@alloc_8058cc9486e726ef3c3a75c2d37a7eff = private unnamed_addr constant <{ [101 x i8] }> <{ [101 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/sync.rs" }>, align 1
@alloc_0659adea0430e83450adcc76a42e8b50 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_8058cc9486e726ef3c3a75c2d37a7eff, [16 x i8] c"e\00\00\00\00\00\00\00n\01\00\002\00\00\00" }>, align 8
@_ZN5alloc4sync18STATIC_INNER_SLICE17h661ba81b17d2f3ceE = dso_local global <{ [17 x i8], [15 x i8] }> <{ [17 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00", [15 x i8] undef }>, align 16, !dbg !175
@alloc_7f242bf8e16f6de690decf6e22f76ded = private unnamed_addr constant <{ [106 x i8] }> <{ [106 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/vec/drain.rs" }>, align 1
@alloc_c70b18d78de667afe02befc61dda8808 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_7f242bf8e16f6de690decf6e22f76ded, [16 x i8] c"j\00\00\00\00\00\00\00\C0\00\00\00,\00\00\00" }>, align 8
@alloc_00c4bc2c43db60dab26d25d7c2e3bd2a = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"assertion failed: new_len <= self.capacity()" }>, align 1
@alloc_355fc9e25550a1fdecb26f2d666c2f29 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs" }>, align 1
@alloc_e8d631727a1005594ce4cdadeb8520ae = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\00b\07\00\00\09\00\00\00" }>, align 8
@alloc_5fc4bcfe6162e3f7dd1ab90daae602fa = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"swap_remove index (is " }>, align 1
@alloc_769eecd3f15a8549d24cdee545c7619d = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c") should be < len (is " }>, align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c")" }>, align 1
@alloc_503baa8206645801c4d7396accc462a6 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_5fc4bcfe6162e3f7dd1ab90daae602fa, [8 x i8] c"\16\00\00\00\00\00\00\00", ptr @alloc_769eecd3f15a8549d24cdee545c7619d, [8 x i8] c"\16\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_f81e62bd7bc140ac77bc0b3edf24c36d = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"insertion index (is " }>, align 1
@alloc_73d2a4a6a707d5b622cbb703396dae5d = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c") should be <= len (is " }>, align 1
@alloc_b612ed5cfc036b9f11e8d618749f21bf = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_f81e62bd7bc140ac77bc0b3edf24c36d, [8 x i8] c"\14\00\00\00\00\00\00\00", ptr @alloc_73d2a4a6a707d5b622cbb703396dae5d, [8 x i8] c"\17\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_d669053c7caa5cb753c02057860b7ece = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"removal index (is " }>, align 1
@alloc_07bff6ac01d535857c62102c0b9448af = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_d669053c7caa5cb753c02057860b7ece, [8 x i8] c"\12\00\00\00\00\00\00\00", ptr @alloc_769eecd3f15a8549d24cdee545c7619d, [8 x i8] c"\16\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_39a35524e808b870ab98e7f0383e6fd9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\00\C6\09\00\00\11\00\00\00" }>, align 8
@alloc_71415033ff45a949340809663942b22b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\00\C7\09\00\00\11\00\00\00" }>, align 8
@alloc_5dcdb7a39dd825b3bf7596a49bacf0c5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\00:\0A\00\00$\00\00\00" }>, align 8
@alloc_8d018a6923b2b772addd51fdae94025f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\00?\0A\00\00O\00\00\00" }>, align 8
@alloc_f1378387cf0e6437b81cf2ad3c3c7f63 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\00B\0A\00\00\1B\00\00\00" }>, align 8
@alloc_0a39fd70720444d81558dc462acec7f8 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"`at` split index (is " }>, align 1
@alloc_002e02b507288c370be6dc0bd34bc42a = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_0a39fd70720444d81558dc462acec7f8, [8 x i8] c"\15\00\00\00\00\00\00\00", ptr @alloc_73d2a4a6a707d5b622cbb703396dae5d, [8 x i8] c"\17\00\00\00\00\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_a5deeec27c6c510bd4fc6f2dc8c29929 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_355fc9e25550a1fdecb26f2d666c2f29, [16 x i8] c"h\00\00\00\00\00\00\009\0B\00\00\11\00\00\00" }>, align 8

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h003b1cf887d8a7f1E"(ptr align 8 %self, ptr align 8 %g) unnamed_addr #0 !dbg !298 {
start:
  %g.dbg.spill = alloca [8 x i8], align 8
  %init.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !374, !DIExpression(), !382)
    #dbg_declare(ptr %init.dbg.spill, !375, !DIExpression(), !383)
  store ptr %g, ptr %g.dbg.spill, align 8
    #dbg_declare(ptr %g.dbg.spill, !376, !DIExpression(), !384)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %self, i64 24, i1 false), !dbg !385
; call core::iter::adapters::map::map_fold
  %_5 = call align 8 ptr @_ZN4core4iter8adapters3map8map_fold17hc2e7bfde55dd6f3bE(ptr align 8 %g) #19, !dbg !386
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h0da292ef89c16011E(ptr align 8 %_4, ptr align 8 %_5) #19, !dbg !385
  ret void, !dbg !387
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0479151a0823b3f7E"(ptr align 8 %self, ptr align 8 %g) unnamed_addr #0 !dbg !388 {
start:
  %g.dbg.spill = alloca [8 x i8], align 8
  %init.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !456, !DIExpression(), !461)
    #dbg_declare(ptr %init.dbg.spill, !457, !DIExpression(), !462)
  store ptr %g, ptr %g.dbg.spill, align 8
    #dbg_declare(ptr %g.dbg.spill, !458, !DIExpression(), !463)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %self, i64 16, i1 false), !dbg !464
; call core::iter::adapters::map::map_fold
  %_5 = call align 8 ptr @_ZN4core4iter8adapters3map8map_fold17hb832041a4efbc5a4E(ptr align 8 %g) #19, !dbg !465
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h3912cac9188d7787E(ptr align 8 %_4, ptr align 8 %_5) #19, !dbg !464
  ret void, !dbg !466
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9531550f4ac50ad4E"(ptr align 8 %self, ptr align 8 %g) unnamed_addr #0 !dbg !467 {
start:
  %g.dbg.spill = alloca [8 x i8], align 8
  %init.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !496, !DIExpression(), !501)
    #dbg_declare(ptr %init.dbg.spill, !497, !DIExpression(), !502)
  store ptr %g, ptr %g.dbg.spill, align 8
    #dbg_declare(ptr %g.dbg.spill, !498, !DIExpression(), !503)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %self, i64 16, i1 false), !dbg !504
; call core::iter::adapters::map::map_fold
  %_5 = call align 8 ptr @_ZN4core4iter8adapters3map8map_fold17he407e15938df864bE(ptr align 8 %g) #19, !dbg !505
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h12fe053263c9c7d0E(ptr align 8 %_4, ptr align 8 %_5) #19, !dbg !504
  ret void, !dbg !506
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: noredzone nounwind
define dso_local i8 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hbae18a08927bccfcE"(ptr %self.0, ptr %self.1, i8 zeroext %init) unnamed_addr #0 !dbg !507 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !541, !DIExpression(), !548)
  store i8 %init, ptr %init.dbg.spill, align 1
    #dbg_declare(ptr %init.dbg.spill, !542, !DIExpression(), !549)
    #dbg_declare(ptr %g.dbg.spill, !543, !DIExpression(), !550)
; call core::iter::adapters::map::map_fold
  call void @_ZN4core4iter8adapters3map8map_fold17h0debb8688aedadfbE() #19, !dbg !551
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i8 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17ha17c27d0cf9e4d87E"(ptr %self.0, ptr %self.1, i8 zeroext %init) #19, !dbg !552
  ret i8 %_0, !dbg !553
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hdbff830f5d3b66aaE"(ptr %self.0, ptr %self.1, i64 %init) unnamed_addr #0 !dbg !554 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !586, !DIExpression(), !593)
  store i64 %init, ptr %init.dbg.spill, align 8
    #dbg_declare(ptr %init.dbg.spill, !587, !DIExpression(), !594)
    #dbg_declare(ptr %g.dbg.spill, !588, !DIExpression(), !595)
; call core::iter::adapters::map::map_fold
  call void @_ZN4core4iter8adapters3map8map_fold17he58b8026ff44e7ecE() #19, !dbg !596
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i64 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9fbe9567f08afa6bE"(ptr %self.0, ptr %self.1, i64 %init) #19, !dbg !597
  ret i64 %_0, !dbg !598
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68119ae6bd8b6adcE"(ptr align 8 %self) unnamed_addr #1 !dbg !599 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [3 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !604, !DIExpression(), !607)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5fa99f22fd232816E"(ptr align 8 %self) #19, !dbg !608
  store i24 %2, ptr %1, align 4, !dbg !608
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_2, ptr align 4 %1, i64 3, i1 false), !dbg !608
  %_4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !609
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %0, ptr align 1 %_2, i64 3, i1 false), !dbg !608
  %3 = load i24, ptr %0, align 4, !dbg !608
; call core::option::Option<T>::map
  %4 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17h420c33d78b51a426E"(i24 %3, ptr align 1 %_4) #19, !dbg !608
  %_0.0 = extractvalue { i16, i16 } %4, 0, !dbg !608
  %_0.1 = extractvalue { i16, i16 } %4, 1, !dbg !608
  %5 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !610
  %6 = insertvalue { i16, i16 } %5, i16 %_0.1, 1, !dbg !610
  ret { i16, i16 } %6, !dbg !610
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb76c32654efa819eE"(ptr align 8 %self) unnamed_addr #1 !dbg !611 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [3 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !627, !DIExpression(), !629)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h75b0106cbd867343E"(ptr align 8 %self) #19, !dbg !630
  store i24 %2, ptr %1, align 4, !dbg !630
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_2, ptr align 4 %1, i64 3, i1 false), !dbg !630
  %_4 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !631
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %0, ptr align 1 %_2, i64 3, i1 false), !dbg !630
  %3 = load i24, ptr %0, align 4, !dbg !630
; call core::option::Option<T>::map
  %4 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17h6da2db0481086ae8E"(i24 %3, ptr align 1 %_4) #19, !dbg !630
  %_0.0 = extractvalue { i16, i16 } %4, 0, !dbg !630
  %_0.1 = extractvalue { i16, i16 } %4, 1, !dbg !630
  %5 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !632
  %6 = insertvalue { i16, i16 } %5, i16 %_0.1, 1, !dbg !632
  ret { i16, i16 } %6, !dbg !632
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcc9d1d3d9e012ba6E"(ptr align 8 %self) unnamed_addr #1 !dbg !633 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [3 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !642, !DIExpression(), !643)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h75b0106cbd867343E"(ptr align 8 %self) #19, !dbg !644
  store i24 %2, ptr %1, align 4, !dbg !644
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_2, ptr align 4 %1, i64 3, i1 false), !dbg !644
  %_4 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !645
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %0, ptr align 1 %_2, i64 3, i1 false), !dbg !644
  %3 = load i24, ptr %0, align 4, !dbg !644
; call core::option::Option<T>::map
  %4 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17h420c33d78b51a426E"(i24 %3, ptr align 1 %_4) #19, !dbg !644
  %_0.0 = extractvalue { i16, i16 } %4, 0, !dbg !644
  %_0.1 = extractvalue { i16, i16 } %4, 1, !dbg !644
  %5 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !646
  %6 = insertvalue { i16, i16 } %5, i16 %_0.1, 1, !dbg !646
  ret { i16, i16 } %6, !dbg !646
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcece374a8b7cd35fE"(ptr align 8 %self) unnamed_addr #1 !dbg !647 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [3 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !652, !DIExpression(), !653)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5fa99f22fd232816E"(ptr align 8 %self) #19, !dbg !654
  store i24 %2, ptr %1, align 4, !dbg !654
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_2, ptr align 4 %1, i64 3, i1 false), !dbg !654
  %_4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !655
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %0, ptr align 1 %_2, i64 3, i1 false), !dbg !654
  %3 = load i24, ptr %0, align 4, !dbg !654
; call core::option::Option<T>::map
  %4 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17h6da2db0481086ae8E"(i24 %3, ptr align 1 %_4) #19, !dbg !654
  %_0.0 = extractvalue { i16, i16 } %4, 0, !dbg !654
  %_0.1 = extractvalue { i16, i16 } %4, 1, !dbg !654
  %5 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !656
  %6 = insertvalue { i16, i16 } %5, i16 %_0.1, 1, !dbg !656
  ret { i16, i16 } %6, !dbg !656
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h162fd55153b4dc0dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !657 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !677, !DIExpression(), !678)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h446c9bbfa4daeae2E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !679
  ret void, !dbg !680
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h56381cb01a7560a8E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !681 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !686, !DIExpression(), !687)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h071f82a4bc31955eE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !688
  ret void, !dbg !689
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7a8fb8088cec46bcE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !690 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !695, !DIExpression(), !697)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbea72e21e6a48405E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !698
  ret void, !dbg !699
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h872aa59146a7cfa9E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !700 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !705, !DIExpression(), !707)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4e794c678f5b34f7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !708
  ret void, !dbg !709
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h93fc57080880152fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !710 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !715, !DIExpression(), !716)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h071f82a4bc31955eE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !717
  ret void, !dbg !718
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17heb596a49b23f6739E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !719 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !724, !DIExpression(), !725)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h446c9bbfa4daeae2E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !726
  ret void, !dbg !727
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf81945ef99946e86E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !728 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !733, !DIExpression(), !735)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4cc36d4bc8345ca0E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !736
  ret void, !dbg !737
}

; <core::slice::iter::ArrayChunks<T,_> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e993169ed0301a1E"(ptr align 8 %self) unnamed_addr #1 !dbg !738 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !755, !DIExpression(), !756)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_0 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf7a8722f0f1b4dd7E"(ptr align 8 %self) #19, !dbg !757
  ret ptr %_0, !dbg !758
}

; <core::slice::iter::ArrayChunks<T,_> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4f47c3f8dfce9377E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !759 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !764, !DIExpression(), !765)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h65e994da2a282a9dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !766
  ret void, !dbg !767
}

; <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hff3ac44154215173E"(ptr align 8 %self) unnamed_addr #0 !dbg !768 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !775, !DIExpression(), !777)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3292520a76dfa431E"(ptr align 8 %self) #19, !dbg !778
; call core::option::Option<&T>::cloned
  %0 = call { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hffd608ba647f43afE"(ptr align 2 %_2) #19, !dbg !778
  %_0.0 = extractvalue { i16, i16 } %0, 0, !dbg !778
  %_0.1 = extractvalue { i16, i16 } %0, 1, !dbg !778
  %1 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !779
  %2 = insertvalue { i16, i16 } %1, i16 %_0.1, 1, !dbg !779
  ret { i16, i16 } %2, !dbg !779
}

; <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h368b936733322da0E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !780 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !785, !DIExpression(), !786)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hcfdc20b34ffd9102E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !787
  ret void, !dbg !788
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5fa99f22fd232816E"(ptr align 8 %self) unnamed_addr #0 !dbg !789 {
start:
  %0 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [4 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !807, !DIExpression(), !809)
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 ptr @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01da7c7a3271c7d8E"(ptr align 8 %self) #19, !dbg !810
; call core::option::Option<&T>::copied
  %1 = call i24 @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h55368225e46eda0aE"(ptr align 1 %_2) #19, !dbg !810
  store i24 %1, ptr %0, align 4, !dbg !810
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0, ptr align 4 %0, i64 3, i1 false), !dbg !810
  %2 = load i24, ptr %_0, align 1, !dbg !811
  ret i24 %2, !dbg !811
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h75b0106cbd867343E"(ptr align 8 %self) unnamed_addr #0 !dbg !812 {
start:
  %0 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [4 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !817, !DIExpression(), !819)
; call <core::slice::iter::ArrayChunks<T,_> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 ptr @"_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e993169ed0301a1E"(ptr align 8 %self) #19, !dbg !820
; call core::option::Option<&T>::copied
  %1 = call i24 @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h55368225e46eda0aE"(ptr align 1 %_2) #19, !dbg !820
  store i24 %1, ptr %0, align 4, !dbg !820
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0, ptr align 4 %0, i64 3, i1 false), !dbg !820
  %2 = load i24, ptr %_0, align 1, !dbg !821
  ret i24 %2, !dbg !821
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h071f82a4bc31955eE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !822 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !827, !DIExpression(), !828)
; call <core::slice::iter::ArrayChunks<T,_> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4f47c3f8dfce9377E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !829
  ret void, !dbg !830
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h446c9bbfa4daeae2E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !831 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !836, !DIExpression(), !837)
; call <&mut I as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4a215a4537c6396fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !838
  ret void, !dbg !839
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0bc16a9aaaea1196E"(ptr align 8 %self, ptr align 8 %fold) unnamed_addr #1 !dbg !840 {
start:
  %fold.dbg.spill = alloca [8 x i8], align 8
    #dbg_declare(ptr %self, !902, !DIExpression(), !908)
  %init.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %init.dbg.spill, !903, !DIExpression(), !909)
  store ptr %fold, ptr %fold.dbg.spill, align 8
    #dbg_declare(ptr %fold.dbg.spill, !904, !DIExpression(), !910)
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
  %_6 = call align 8 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217hf7734f8bacd29157E"(ptr align 8 %fold) #19, !dbg !911
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h9c44473518146786E"(ptr align 8 %self, ptr align 8 %_6) #19, !dbg !912
  ret void, !dbg !913
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hd354c25741e129f9E"(ptr align 8 %self, ptr align 8 %fold) unnamed_addr #1 !dbg !914 {
start:
  %fold.dbg.spill = alloca [8 x i8], align 8
    #dbg_declare(ptr %self, !936, !DIExpression(), !941)
  %init.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %init.dbg.spill, !937, !DIExpression(), !942)
  store ptr %fold, ptr %fold.dbg.spill, align 8
    #dbg_declare(ptr %fold.dbg.spill, !938, !DIExpression(), !943)
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
  %_6 = call align 8 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h98dfac8b1641c412E"(ptr align 8 %fold) #19, !dbg !944
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17he837e14668a706faE"(ptr align 8 %self, ptr align 8 %_6) #19, !dbg !945
  ret void, !dbg !946
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h9c44473518146786E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 !dbg !947 {
start:
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !960, !DIExpression(), !972)
    #dbg_declare(ptr %init.dbg.spill, !961, !DIExpression(), !973)
    #dbg_declare(ptr %f, !962, !DIExpression(), !974)
  %_5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !975
  %_8 = load ptr, ptr %self, align 8, !dbg !976
; call core::iter::traits::iterator::Iterator::try_fold
  %_4 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6b75e17449d59d0cE(ptr align 8 %_5, ptr align 8 %f, ptr align 2 %_8) #19, !dbg !975
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::into_try
  call void @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17heb5fe5b30a334288E"(i1 zeroext %_4) #19, !dbg !975
  ret void, !dbg !977
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17he837e14668a706faE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 !dbg !978 {
start:
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !986, !DIExpression(), !991)
    #dbg_declare(ptr %init.dbg.spill, !987, !DIExpression(), !992)
    #dbg_declare(ptr %f, !988, !DIExpression(), !993)
  %_5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !994
  %_8 = load ptr, ptr %self, align 8, !dbg !995
; call core::iter::traits::iterator::Iterator::try_fold
  %_4 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h0f9f1a459c628c4dE(ptr align 8 %_5, ptr align 8 %f, ptr align 2 %_8) #19, !dbg !994
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::into_try
  call void @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17heb5fe5b30a334288E"(i1 zeroext %_4) #19, !dbg !994
  ret void, !dbg !996
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h1187b641496e956bE"(ptr align 8 %_1, i64 %0) unnamed_addr #1 !dbg !997 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %x.dbg.spill = alloca [4 x i8], align 4
  %1 = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [4 x i8], align 2
  %_4 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %3 = alloca [8 x i8], align 8
  %x = alloca [8 x i8], align 4
  store i64 %0, ptr %3, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 8 %3, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !1042, !DIExpression(DW_OP_deref, DW_OP_deref), !1048)
    #dbg_declare(ptr %_1.dbg.spill, !1043, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8, DW_OP_deref), !1049)
    #dbg_declare(ptr %acc.dbg.spill, !1040, !DIExpression(), !1050)
    #dbg_declare(ptr %x, !1041, !DIExpression(), !1051)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 4 %x, i64 8, i1 false), !dbg !1052
  %4 = load i64, ptr %2, align 8, !dbg !1052
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %5 = call i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18c5bbc23a0b879bE"(i64 %4) #19, !dbg !1052
  store i64 %5, ptr %1, align 8, !dbg !1052
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_4, ptr align 8 %1, i64 8, i1 false), !dbg !1052
  %6 = load i16, ptr %_4, align 4, !dbg !1052
  %_5 = zext i16 %6 to i64, !dbg !1052
  %7 = icmp eq i64 %_5, 0, !dbg !1053
  br i1 %7, label %bb4, label %bb3, !dbg !1053

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_4, i64 4, !dbg !1054
  %x1 = load i32, ptr %8, align 4, !dbg !1054
  store i32 %x1, ptr %x.dbg.spill, align 4, !dbg !1054
    #dbg_declare(ptr %x.dbg.spill, !1044, !DIExpression(), !1055)
  %_12 = load ptr, ptr %_1, align 8, !dbg !1056
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
  call void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17hf30d866d56315808E"(ptr align 8 %_12, i32 signext %x1) #19, !dbg !1056
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::from_try
  %9 = call zeroext i1 @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h1caaea004344712eE"() #19, !dbg !1057
  %10 = zext i1 %9 to i8, !dbg !1057
  store i8 %10, ptr %_0, align 1, !dbg !1057
  br label %bb8, !dbg !1057

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i64 2, !dbg !1058
  %r = load i16, ptr %11, align 2, !dbg !1058
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !1058
    #dbg_declare(ptr %r.dbg.spill, !1046, !DIExpression(), !1059)
  %12 = getelementptr inbounds i8, ptr %_10, i64 2, !dbg !1060
  store i16 %r, ptr %12, align 2, !dbg !1060
  store i16 1, ptr %_10, align 2, !dbg !1060
  %13 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !1061
  %_13 = load ptr, ptr %13, align 8, !dbg !1061
  %14 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !1061
  %_14 = load ptr, ptr %14, align 8, !dbg !1061
  %15 = load i16, ptr %_10, align 2, !dbg !1061
  %16 = getelementptr inbounds i8, ptr %_10, i64 2, !dbg !1061
  %17 = load i16, ptr %16, align 2, !dbg !1061
  store i16 %15, ptr %_14, align 2, !dbg !1061
  %18 = getelementptr inbounds i8, ptr %_14, i64 2, !dbg !1061
  store i16 %17, ptr %18, align 2, !dbg !1061
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17he735945b32468a36E"() #19, !dbg !1062
  store i8 1, ptr %_0, align 1, !dbg !1063
  br label %bb8, !dbg !1064

bb8:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_0, align 1, !dbg !1065
  %20 = trunc i8 %19 to i1, !dbg !1065
  ret i1 %20, !dbg !1065

bb2:                                              ; No predecessors!
  unreachable, !dbg !1052
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h894d65eb4fc12f09E"(ptr align 8 %_1, i64 %0) unnamed_addr #1 !dbg !1066 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %x.dbg.spill = alloca [4 x i8], align 4
  %1 = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [4 x i8], align 2
  %_4 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %3 = alloca [8 x i8], align 8
  %x = alloca [8 x i8], align 4
  store i64 %0, ptr %3, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 8 %3, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !1078, !DIExpression(DW_OP_deref, DW_OP_deref), !1084)
    #dbg_declare(ptr %_1.dbg.spill, !1079, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8, DW_OP_deref), !1085)
    #dbg_declare(ptr %acc.dbg.spill, !1076, !DIExpression(), !1086)
    #dbg_declare(ptr %x, !1077, !DIExpression(), !1087)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 4 %x, i64 8, i1 false), !dbg !1088
  %4 = load i64, ptr %2, align 8, !dbg !1088
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %5 = call i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18c5bbc23a0b879bE"(i64 %4) #19, !dbg !1088
  store i64 %5, ptr %1, align 8, !dbg !1088
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_4, ptr align 8 %1, i64 8, i1 false), !dbg !1088
  %6 = load i16, ptr %_4, align 4, !dbg !1088
  %_5 = zext i16 %6 to i64, !dbg !1088
  %7 = icmp eq i64 %_5, 0, !dbg !1089
  br i1 %7, label %bb4, label %bb3, !dbg !1089

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_4, i64 4, !dbg !1090
  %x1 = load i32, ptr %8, align 4, !dbg !1090
  store i32 %x1, ptr %x.dbg.spill, align 4, !dbg !1090
    #dbg_declare(ptr %x.dbg.spill, !1080, !DIExpression(), !1091)
  %_12 = load ptr, ptr %_1, align 8, !dbg !1092
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
  call void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h1641c08e0e8259a1E"(ptr align 8 %_12, i32 signext %x1) #19, !dbg !1092
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::from_try
  %9 = call zeroext i1 @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h1caaea004344712eE"() #19, !dbg !1093
  %10 = zext i1 %9 to i8, !dbg !1093
  store i8 %10, ptr %_0, align 1, !dbg !1093
  br label %bb8, !dbg !1093

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i64 2, !dbg !1094
  %r = load i16, ptr %11, align 2, !dbg !1094
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !1094
    #dbg_declare(ptr %r.dbg.spill, !1082, !DIExpression(), !1095)
  %12 = getelementptr inbounds i8, ptr %_10, i64 2, !dbg !1096
  store i16 %r, ptr %12, align 2, !dbg !1096
  store i16 1, ptr %_10, align 2, !dbg !1096
  %13 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !1097
  %_13 = load ptr, ptr %13, align 8, !dbg !1097
  %14 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !1097
  %_14 = load ptr, ptr %14, align 8, !dbg !1097
  %15 = load i16, ptr %_10, align 2, !dbg !1097
  %16 = getelementptr inbounds i8, ptr %_10, i64 2, !dbg !1097
  %17 = load i16, ptr %16, align 2, !dbg !1097
  store i16 %15, ptr %_14, align 2, !dbg !1097
  %18 = getelementptr inbounds i8, ptr %_14, i64 2, !dbg !1097
  store i16 %17, ptr %18, align 2, !dbg !1097
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17he735945b32468a36E"() #19, !dbg !1098
  store i8 1, ptr %_0, align 1, !dbg !1099
  br label %bb8, !dbg !1100

bb8:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_0, align 1, !dbg !1101
  %20 = trunc i8 %19 to i1, !dbg !1101
  ret i1 %20, !dbg !1101

bb2:                                              ; No predecessors!
  unreachable, !dbg !1088
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h053ec0577368bca0E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !1102 {
start:
  %upper.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1107, !DIExpression(), !1110)
  %_8 = load ptr, ptr %self, align 8, !dbg !1111
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h2f8e984a5c096097E"(ptr align 2 %_8) #19, !dbg !1111
  br i1 %_2, label %bb2, label %bb3, !dbg !1111

bb3:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !1112
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h6d263224b728e7f1E"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %_7) #19, !dbg !1112
  %0 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !1113
  %upper.0 = load i64, ptr %0, align 8, !dbg !1113
  %1 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1113
  %upper.1 = load i64, ptr %1, align 8, !dbg !1113
  store i64 %upper.0, ptr %upper.dbg.spill, align 8, !dbg !1113
  %2 = getelementptr inbounds i8, ptr %upper.dbg.spill, i64 8, !dbg !1113
  store i64 %upper.1, ptr %2, align 8, !dbg !1113
    #dbg_declare(ptr %upper.dbg.spill, !1108, !DIExpression(), !1114)
  store i64 0, ptr %_0, align 8, !dbg !1115
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1115
  store i64 %upper.0, ptr %3, align 8, !dbg !1115
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1115
  store i64 %upper.1, ptr %4, align 8, !dbg !1115
  br label %bb5, !dbg !1116

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !1117
  store i64 0, ptr %5, align 8, !dbg !1117
  store i64 1, ptr %_4, align 8, !dbg !1117
  store i64 0, ptr %_0, align 8, !dbg !1118
  %6 = load i64, ptr %_4, align 8, !dbg !1118
  %7 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !1118
  %8 = load i64, ptr %7, align 8, !dbg !1118
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1118
  store i64 %6, ptr %9, align 8, !dbg !1118
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1118
  store i64 %8, ptr %10, align 8, !dbg !1118
  br label %bb5, !dbg !1116

bb5:                                              ; preds = %bb2, %bb3
  ret void, !dbg !1119
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h1bc7ca62f3cc9270E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !1120 {
start:
  %upper.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1125, !DIExpression(), !1128)
  %_8 = load ptr, ptr %self, align 8, !dbg !1129
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h2f8e984a5c096097E"(ptr align 2 %_8) #19, !dbg !1129
  br i1 %_2, label %bb2, label %bb3, !dbg !1129

bb3:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !1130
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7a4cf7d250e8c107E"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %_7) #19, !dbg !1130
  %0 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !1131
  %upper.0 = load i64, ptr %0, align 8, !dbg !1131
  %1 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1131
  %upper.1 = load i64, ptr %1, align 8, !dbg !1131
  store i64 %upper.0, ptr %upper.dbg.spill, align 8, !dbg !1131
  %2 = getelementptr inbounds i8, ptr %upper.dbg.spill, i64 8, !dbg !1131
  store i64 %upper.1, ptr %2, align 8, !dbg !1131
    #dbg_declare(ptr %upper.dbg.spill, !1126, !DIExpression(), !1132)
  store i64 0, ptr %_0, align 8, !dbg !1133
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1133
  store i64 %upper.0, ptr %3, align 8, !dbg !1133
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !1133
  store i64 %upper.1, ptr %4, align 8, !dbg !1133
  br label %bb5, !dbg !1134

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !1135
  store i64 0, ptr %5, align 8, !dbg !1135
  store i64 1, ptr %_4, align 8, !dbg !1135
  store i64 0, ptr %_0, align 8, !dbg !1136
  %6 = load i64, ptr %_4, align 8, !dbg !1136
  %7 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !1136
  %8 = load i64, ptr %7, align 8, !dbg !1136
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1136
  store i64 %6, ptr %9, align 8, !dbg !1136
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1136
  store i64 %8, ptr %10, align 8, !dbg !1136
  br label %bb5, !dbg !1134

bb5:                                              ; preds = %bb2, %bb3
  ret void, !dbg !1137
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7af9b6d4ad70b8deE"(i64 %self.0, i64 %self.1, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !1138 {
start:
  %ptr.dbg.spill1.i.i = alloca [8 x i8], align 8
  %index.dbg.spill.i.i = alloca [8 x i8], align 8
  %ptr.dbg.spill.i.i = alloca [16 x i8], align 8
  %ptr.dbg.spill1.i = alloca [8 x i8], align 8
  %len.dbg.spill.i = alloca [8 x i8], align 8
  %offset.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %new_len.dbg.spill = alloca [8 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store i64 %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !1167, !DIExpression(), !1173)
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %1, align 8
    #dbg_declare(ptr %slice.dbg.spill, !1168, !DIExpression(), !1174)
  br label %bb1, !dbg !1175

bb1:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %slice.1, ptr %2, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !1178, !DIExpression(), !1186)
; call core::ptr::metadata::metadata
  %_0.i = call i64 @_ZN4core3ptr8metadata8metadata17h4d1dda34fb850d52E(ptr %slice.0, i64 %slice.1) #19, !dbg !1188
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check
  call void @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut18precondition_check17hbf49d1e92a4285adE"(i64 %self.0, i64 %self.1, i64 %_0.i) #19, !dbg !1189
  br label %bb3, !dbg !1189

bb3:                                              ; preds = %bb1
  %new_len = sub nuw i64 %self.1, %self.0, !dbg !1190
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !1190
    #dbg_declare(ptr %new_len.dbg.spill, !1169, !DIExpression(), !1191)
  store ptr %slice.0, ptr %ptr.dbg.spill.i, align 8
  %3 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i, i64 8
  store i64 %slice.1, ptr %3, align 8
    #dbg_declare(ptr %ptr.dbg.spill.i, !1192, !DIExpression(), !1202)
  store i64 %self.0, ptr %offset.dbg.spill.i, align 8
    #dbg_declare(ptr %offset.dbg.spill.i, !1197, !DIExpression(), !1204)
  store i64 %new_len, ptr %len.dbg.spill.i, align 8
    #dbg_declare(ptr %len.dbg.spill.i, !1198, !DIExpression(), !1205)
  store ptr %slice.0, ptr %ptr.dbg.spill.i.i, align 8
  %4 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i64 8
  store i64 %slice.1, ptr %4, align 8
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1206, !DIExpression(), !1214)
  store i64 %self.0, ptr %index.dbg.spill.i.i, align 8
    #dbg_declare(ptr %index.dbg.spill.i.i, !1211, !DIExpression(), !1216)
  store ptr %slice.0, ptr %ptr.dbg.spill1.i.i, align 8, !dbg !1217
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1212, !DIExpression(), !1218)
  %_0.i.i = getelementptr inbounds i8, ptr %slice.0, i64 %self.0, !dbg !1219
  store ptr %_0.i.i, ptr %ptr.dbg.spill1.i, align 8, !dbg !1220
    #dbg_declare(ptr %ptr.dbg.spill1.i, !1199, !DIExpression(), !1221)
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.i.i, 0, !dbg !1222
  %6 = insertvalue { ptr, i64 } %5, i64 %new_len, 1, !dbg !1222
  %_0.0 = extractvalue { ptr, i64 } %6, 0, !dbg !1223
  %_0.1 = extractvalue { ptr, i64 } %6, 1, !dbg !1223
  %7 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1224
  %8 = insertvalue { ptr, i64 } %7, i64 %_0.1, 1, !dbg !1224
  ret { ptr, i64 } %8, !dbg !1224
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut18precondition_check17hbf49d1e92a4285adE"(i64 %start1, i64 %end, i64 %len) unnamed_addr #1 !dbg !1225 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %start.dbg.spill = alloca [8 x i8], align 8
  store i64 %start1, ptr %start.dbg.spill, align 8
    #dbg_declare(ptr %start.dbg.spill, !1230, !DIExpression(), !1233)
  store i64 %end, ptr %end.dbg.spill, align 8
    #dbg_declare(ptr %end.dbg.spill, !1231, !DIExpression(), !1233)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !1232, !DIExpression(), !1233)
  %_4 = icmp uge i64 %end, %start1, !dbg !1234
  br i1 %_4, label %bb1, label %bb3, !dbg !1234

bb3:                                              ; preds = %bb1, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_e4c0784e4975da2173a354afd99193ad, i64 101) #20, !dbg !1236
  unreachable, !dbg !1236

bb1:                                              ; preds = %start
  %_5 = icmp ule i64 %end, %len, !dbg !1237
  br i1 %_5, label %bb2, label %bb3, !dbg !1237

bb2:                                              ; preds = %bb1
  ret void, !dbg !1238
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h131bfb384e61a5beE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !1239 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1251, !DIExpression(), !1253)
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !1252, !DIExpression(), !1254)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h32020fa005a005ebE"(i64 0, i64 %self, ptr %slice.0, i64 %slice.1) #19, !dbg !1255
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !1255
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !1255
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1256
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !1256
  ret { ptr, i64 } %3, !dbg !1256
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he5773afdf4580b36E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !1257 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1261, !DIExpression(), !1263)
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !1262, !DIExpression(), !1264)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7af9b6d4ad70b8deE"(i64 0, i64 %self, ptr %slice.0, i64 %slice.1) #19, !dbg !1265
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !1265
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !1265
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1266
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !1266
  ret { ptr, i64 } %3, !dbg !1266
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha0f5a8aed2ce91e5E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !1267 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1275, !DIExpression(), !1277)
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !1276, !DIExpression(), !1278)
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %slice.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !1178, !DIExpression(), !1279)
; call core::ptr::metadata::metadata
  %_0.i = call i64 @_ZN4core3ptr8metadata8metadata17h4d1dda34fb850d52E(ptr %slice.0, i64 %slice.1) #19, !dbg !1281
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %2 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7af9b6d4ad70b8deE"(i64 %self, i64 %_0.i, ptr %slice.0, i64 %slice.1) #19, !dbg !1282
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !1282
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !1282
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !1283
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !1283
  ret { ptr, i64 } %4, !dbg !1283
}

; <core::slice::iter::Iter<T> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN110_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..unchecked_iterator..UncheckedIterator$GT$14next_unchecked17h9bac6f3dfbf9c5adE"(ptr align 8 %self) unnamed_addr #1 !dbg !1284 {
start:
  %self.dbg.spill.i2.i = alloca [8 x i8], align 8
  %count.dbg.spill.i.i = alloca [8 x i8], align 8
  %self.dbg.spill.i1.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i.i2 = alloca [8 x i8], align 8
  %_end.dbg.spill.i = alloca [8 x i8], align 8
  %old.dbg.spill.i = alloca [8 x i8], align 8
  %offset.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i3 = alloca [8 x i8], align 8
  %self.dbg.spill.i1.i = alloca [8 x i8], align 8
  %self.dbg.spill.i.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1291, !DIExpression(), !1292)
  store ptr %self, ptr %self.dbg.spill.i3, align 8
    #dbg_declare(ptr %self.dbg.spill.i3, !1293, !DIExpression(), !1308)
  store i64 1, ptr %offset.dbg.spill.i, align 8
    #dbg_declare(ptr %offset.dbg.spill.i, !1299, !DIExpression(), !1310)
  %old.i = load ptr, ptr %self, align 8, !dbg !1311
  store ptr %old.i, ptr %old.dbg.spill.i, align 8, !dbg !1311
    #dbg_declare(ptr %old.dbg.spill.i, !1300, !DIExpression(), !1312)
  %_10.i = getelementptr inbounds i8, ptr %self, i64 8, !dbg !1313
  store ptr %_10.i, ptr %self.dbg.spill.i.i2, align 8
    #dbg_declare(ptr %self.dbg.spill.i.i2, !1314, !DIExpression(), !1325)
  store ptr %_10.i, ptr %_end.dbg.spill.i, align 8, !dbg !1327
    #dbg_declare(ptr %_end.dbg.spill.i, !1305, !DIExpression(), !1328)
  %_12.i = load ptr, ptr %self, align 8, !dbg !1329
  store ptr %_12.i, ptr %self.dbg.spill.i1.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1.i1, !1330, !DIExpression(), !1338)
  store i64 1, ptr %count.dbg.spill.i.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i.i, !1337, !DIExpression(), !1340)
  store ptr %_12.i, ptr %self.dbg.spill.i2.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i2.i, !1341, !DIExpression(), !1348)
  %_3.i.i = getelementptr inbounds [2 x i8], ptr %_12.i, i64 1, !dbg !1350
  store ptr %_3.i.i, ptr %self, align 8, !dbg !1351
  store ptr %old.i, ptr %_3, align 8, !dbg !1352
  store ptr %_3, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !1353, !DIExpression(), !1360)
  %_4.i = load ptr, ptr %_3, align 8, !dbg !1362
  store ptr %_4.i, ptr %self.dbg.spill.i1.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i1.i, !1341, !DIExpression(), !1363)
  store ptr %_4.i, ptr %self.dbg.spill.i.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i.i, !1365, !DIExpression(), !1370)
  ret ptr %_4.i, !dbg !1372
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h05254696377b7db8E"(ptr align 8 %self) unnamed_addr #1 !dbg !1373 {
start:
  %pred.dbg.spill = alloca [8 x i8], align 8
  %flag.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1418, !DIExpression(), !1425)
  %flag = getelementptr inbounds i8, ptr %self, i64 16, !dbg !1426
  store ptr %flag, ptr %flag.dbg.spill, align 8, !dbg !1426
    #dbg_declare(ptr %flag.dbg.spill, !1419, !DIExpression(), !1427)
  %pred = getelementptr inbounds i8, ptr %self, i64 17, !dbg !1428
  store ptr %pred, ptr %pred.dbg.spill, align 8, !dbg !1428
    #dbg_declare(ptr %pred.dbg.spill, !1422, !DIExpression(), !1429)
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
  %0 = call { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17hca7c3cfa00c3dc4bE"(ptr align 1 %flag, ptr align 1 %pred) #19, !dbg !1430
  %_5.0 = extractvalue { ptr, ptr } %0, 0, !dbg !1430
  %_5.1 = extractvalue { ptr, ptr } %0, 1, !dbg !1430
; call core::iter::traits::iterator::Iterator::find
  %_0 = call i32 @_ZN4core4iter6traits8iterator8Iterator4find17hd106590b1f58c5e2E(ptr align 8 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #19, !dbg !1431
  ret i32 %_0, !dbg !1432
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha1e2debf19aa7813E"(ptr align 8 %self) unnamed_addr #1 !dbg !1433 {
start:
  %pred.dbg.spill = alloca [8 x i8], align 8
  %flag.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !1453, !DIExpression(), !1459)
  %flag = getelementptr inbounds i8, ptr %self, i64 16, !dbg !1460
  store ptr %flag, ptr %flag.dbg.spill, align 8, !dbg !1460
    #dbg_declare(ptr %flag.dbg.spill, !1454, !DIExpression(), !1461)
  %pred = getelementptr inbounds i8, ptr %self, i64 17, !dbg !1462
  store ptr %pred, ptr %pred.dbg.spill, align 8, !dbg !1462
    #dbg_declare(ptr %pred.dbg.spill, !1456, !DIExpression(), !1463)
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
  %0 = call { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h2e34675695ca28e1E"(ptr align 1 %flag, ptr align 1 %pred) #19, !dbg !1464
  %_5.0 = extractvalue { ptr, ptr } %0, 0, !dbg !1464
  %_5.1 = extractvalue { ptr, ptr } %0, 1, !dbg !1464
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::find
  %_0 = call i32 @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hcb6973d7cab9c285E"(ptr align 8 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #19, !dbg !1465
  ret i32 %_0, !dbg !1466
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h2e34675695ca28e1E"(ptr align 1 %flag, ptr align 1 %pred) unnamed_addr #0 !dbg !1467 {
start:
  %pred.dbg.spill = alloca [8 x i8], align 8
  %flag.dbg.spill = alloca [8 x i8], align 8
  store ptr %flag, ptr %flag.dbg.spill, align 8
    #dbg_declare(ptr %flag.dbg.spill, !1477, !DIExpression(), !1481)
  store ptr %pred, ptr %pred.dbg.spill, align 8
    #dbg_declare(ptr %pred.dbg.spill, !1478, !DIExpression(), !1482)
  %0 = insertvalue { ptr, ptr } poison, ptr %flag, 0, !dbg !1483
  %1 = insertvalue { ptr, ptr } %0, ptr %pred, 1, !dbg !1483
  ret { ptr, ptr } %1, !dbg !1483
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17hca7c3cfa00c3dc4bE"(ptr align 1 %flag, ptr align 1 %pred) unnamed_addr #0 !dbg !1484 {
start:
  %pred.dbg.spill = alloca [8 x i8], align 8
  %flag.dbg.spill = alloca [8 x i8], align 8
  store ptr %flag, ptr %flag.dbg.spill, align 8
    #dbg_declare(ptr %flag.dbg.spill, !1492, !DIExpression(), !1496)
  store ptr %pred, ptr %pred.dbg.spill, align 8
    #dbg_declare(ptr %pred.dbg.spill, !1493, !DIExpression(), !1497)
  %0 = insertvalue { ptr, ptr } poison, ptr %flag, 0, !dbg !1498
  %1 = insertvalue { ptr, ptr } %0, ptr %pred, 1, !dbg !1498
  ret { ptr, ptr } %1, !dbg !1498
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h921f5f98988e8e66E"(ptr align 8 %_1, ptr align 4 %x) unnamed_addr #1 !dbg !1499 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !1506, !DIExpression(DW_OP_deref), !1508)
    #dbg_declare(ptr %_1.dbg.spill, !1507, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8), !1509)
  store ptr %x, ptr %x.dbg.spill, align 8
    #dbg_declare(ptr %x.dbg.spill, !1505, !DIExpression(), !1510)
  %_6 = load ptr, ptr %_1, align 8, !dbg !1511
  %0 = load i8, ptr %_6, align 1, !dbg !1511
  %_3 = trunc i8 %0 to i1, !dbg !1511
  br i1 %_3, label %bb4, label %bb1, !dbg !1511

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !1512
  %_7 = load ptr, ptr %1, align 8, !dbg !1512
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
  %_4 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h87fcd1a278770be1E"(ptr align 1 %_7, ptr align 4 %x) #19, !dbg !1512
  br i1 %_4, label %bb3, label %bb4, !dbg !1512

bb4:                                              ; preds = %bb1, %start
  %_8 = load ptr, ptr %_1, align 8, !dbg !1513
  store i8 1, ptr %_8, align 1, !dbg !1513
  store i8 1, ptr %_0, align 1, !dbg !1514
  br label %bb5, !dbg !1515

bb3:                                              ; preds = %bb1
  store i8 0, ptr %_0, align 1, !dbg !1516
  br label %bb5, !dbg !1515

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !1517
  %3 = trunc i8 %2 to i1, !dbg !1517
  ret i1 %3, !dbg !1517
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17he21767f430dc75b6E"(ptr align 8 %_1, ptr align 4 %x) unnamed_addr #1 !dbg !1518 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !1524, !DIExpression(DW_OP_deref), !1526)
    #dbg_declare(ptr %_1.dbg.spill, !1525, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8), !1527)
  store ptr %x, ptr %x.dbg.spill, align 8
    #dbg_declare(ptr %x.dbg.spill, !1523, !DIExpression(), !1528)
  %_6 = load ptr, ptr %_1, align 8, !dbg !1529
  %0 = load i8, ptr %_6, align 1, !dbg !1529
  %_3 = trunc i8 %0 to i1, !dbg !1529
  br i1 %_3, label %bb4, label %bb1, !dbg !1529

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !1530
  %_7 = load ptr, ptr %1, align 8, !dbg !1530
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
  %_4 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h6ef02b37b9a12ce2E"(ptr align 1 %_7, ptr align 4 %x) #19, !dbg !1530
  br i1 %_4, label %bb3, label %bb4, !dbg !1530

bb4:                                              ; preds = %bb1, %start
  %_8 = load ptr, ptr %_1, align 8, !dbg !1531
  store i8 1, ptr %_8, align 1, !dbg !1531
  store i8 1, ptr %_0, align 1, !dbg !1532
  br label %bb5, !dbg !1533

bb3:                                              ; preds = %bb1
  store i8 0, ptr %_0, align 1, !dbg !1534
  br label %bb5, !dbg !1533

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !1535
  %3 = trunc i8 %2 to i1, !dbg !1535
  ret i1 %3, !dbg !1535
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hffaef22b86024aceE"(ptr %unique) unnamed_addr #1 !dbg !1536 {
start:
  %unique.dbg.spill = alloca [8 x i8], align 8
  store ptr %unique, ptr %unique.dbg.spill, align 8
    #dbg_declare(ptr %unique.dbg.spill, !1541, !DIExpression(), !1542)
; call core::ptr::unique::Unique<T>::as_non_null_ptr
  %_0 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h01259becb5e317e0E"(ptr %unique) #19, !dbg !1543
  ret ptr %_0, !dbg !1544
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hddeb5d4682d2c52eE"(ptr %pointer) unnamed_addr #1 !dbg !1545 {
start:
  %pointer.dbg.spill = alloca [8 x i8], align 8
  store ptr %pointer, ptr %pointer.dbg.spill, align 8
    #dbg_declare(ptr %pointer.dbg.spill, !1551, !DIExpression(), !1552)
  ret ptr %pointer, !dbg !1553
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h25f7d85e5ccf0ff4E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !1554 {
start:
  %_2 = alloca [40 x i8], align 8
    #dbg_declare(ptr %iter, !1575, !DIExpression(), !1579)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfa8d03b5b32e6b82E"(ptr sret([40 x i8]) align 8 %_2, ptr align 8 %iter) #19, !dbg !1580
; call core::iter::adapters::try_process
  call void @_ZN4core4iter8adapters11try_process17hbcfc53cefae4d526E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2) #19, !dbg !1581
  ret void, !dbg !1582
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h35457f419b514e9dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !1583 {
start:
  %_2 = alloca [40 x i8], align 8
    #dbg_declare(ptr %iter, !1587, !DIExpression(), !1589)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2154cb9d0fbded29E"(ptr sret([40 x i8]) align 8 %_2, ptr align 8 %iter) #19, !dbg !1590
; call core::iter::adapters::try_process
  call void @_ZN4core4iter8adapters11try_process17hec6061fc37721b99E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2) #19, !dbg !1591
  ret void, !dbg !1592
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h0461c4832ad24d56E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_1, ptr align 8 %i) unnamed_addr #1 !dbg !1593 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !1601, !DIExpression(), !1602)
    #dbg_declare(ptr %i, !1600, !DIExpression(), !1603)
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h2befd31383be27e3E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %i) #19, !dbg !1604
  ret void, !dbg !1605
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h97273b0d57d9a248E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_1, ptr align 8 %i) unnamed_addr #1 !dbg !1606 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !1613, !DIExpression(), !1614)
    #dbg_declare(ptr %i, !1612, !DIExpression(), !1615)
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17he04e4d310b13a522E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %i) #19, !dbg !1616
  ret void, !dbg !1617
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E"() unnamed_addr #1 !dbg !1618 {
start:
  %residual.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %_1.dbg.spill, !1649, !DIExpression(), !1650)
    #dbg_declare(ptr %residual.dbg.spill, !1648, !DIExpression(), !1650)
  store i16 2, ptr %_0, align 4, !dbg !1651
  %0 = load i64, ptr %_0, align 4, !dbg !1652
  ret i64 %0, !dbg !1652
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E"(ptr align 8 %0) unnamed_addr #1 !dbg !1653 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [16 x i8], align 8
    #dbg_declare(ptr %residual.dbg.spill, !1699, !DIExpression(), !1704)
    #dbg_declare(ptr %e.dbg.spill, !1700, !DIExpression(), !1705)
    #dbg_declare(ptr undef, !1706, !DIExpression(), !1715)
  store ptr null, ptr %_0, align 8, !dbg !1717
  %1 = load ptr, ptr %_0, align 8, !dbg !1718
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1718
  %3 = load i64, ptr %2, align 8, !dbg !1718
  %4 = insertvalue { ptr, i64 } poison, ptr %1, 0, !dbg !1718
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1, !dbg !1718
  ret { ptr, i64 } %5, !dbg !1718
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h33f1e92ae445a6e0E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !1719 {
start:
  %e.dbg.spill = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %residual = alloca [16 x i8], align 8
  store i64 %0, ptr %residual, align 8
  %3 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %residual, !1775, !DIExpression(), !1780)
  %e.0 = load i64, ptr %residual, align 8, !dbg !1781
  %4 = getelementptr inbounds i8, ptr %residual, i64 8, !dbg !1781
  %e.1 = load i64, ptr %4, align 8, !dbg !1781
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !1781
  %5 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !1781
  store i64 %e.1, ptr %5, align 8, !dbg !1781
    #dbg_declare(ptr %e.dbg.spill, !1776, !DIExpression(), !1782)
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %6 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf2f6d2c9f90567a2E"(i64 %e.0, i64 %e.1) #19, !dbg !1783
  %_3.0 = extractvalue { i64, i64 } %6, 0, !dbg !1783
  %_3.1 = extractvalue { i64, i64 } %6, 1, !dbg !1783
  store i64 %_3.0, ptr %_0, align 8, !dbg !1784
  %7 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1784
  store i64 %_3.1, ptr %7, align 8, !dbg !1784
  %8 = load i64, ptr %_0, align 8, !dbg !1785
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1785
  %10 = load i64, ptr %9, align 8, !dbg !1785
  %11 = insertvalue { i64, i64 } poison, i64 %8, 0, !dbg !1785
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !1785
  ret { i64, i64 } %12, !dbg !1785
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !1786 {
start:
  %t.dbg.spill.i = alloca [16 x i8], align 8
  %e.dbg.spill = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %residual = alloca [16 x i8], align 8
  store i64 %0, ptr %residual, align 8
  %3 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %residual, !1803, !DIExpression(), !1807)
  %e.0 = load i64, ptr %residual, align 8, !dbg !1808
  %4 = getelementptr inbounds i8, ptr %residual, i64 8, !dbg !1808
  %e.1 = load i64, ptr %4, align 8, !dbg !1808
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !1808
  %5 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !1808
  store i64 %e.1, ptr %5, align 8, !dbg !1808
    #dbg_declare(ptr %e.dbg.spill, !1804, !DIExpression(), !1809)
  store i64 %e.0, ptr %t.dbg.spill.i, align 8
  %6 = getelementptr inbounds i8, ptr %t.dbg.spill.i, i64 8
  store i64 %e.1, ptr %6, align 8
    #dbg_declare(ptr %t.dbg.spill.i, !1810, !DIExpression(), !1817)
  %7 = insertvalue { i64, i64 } poison, i64 %e.0, 0, !dbg !1819
  %8 = insertvalue { i64, i64 } %7, i64 %e.1, 1, !dbg !1819
  %_3.0 = extractvalue { i64, i64 } %8, 0, !dbg !1820
  %_3.1 = extractvalue { i64, i64 } %8, 1, !dbg !1820
  store i64 %_3.0, ptr %_0, align 8, !dbg !1821
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1821
  store i64 %_3.1, ptr %9, align 8, !dbg !1821
  %10 = load i64, ptr %_0, align 8, !dbg !1822
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1822
  %12 = load i64, ptr %11, align 8, !dbg !1822
  %13 = insertvalue { i64, i64 } poison, i64 %10, 0, !dbg !1822
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1, !dbg !1822
  ret { i64, i64 } %14, !dbg !1822
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb909015815a5ee67E"(ptr sret([24 x i8]) align 8 %_0, i16 zeroext %0, ptr align 8 %1) unnamed_addr #1 !dbg !1823 {
start:
  %t.dbg.spill.i = alloca [2 x i8], align 2
  %e.dbg.spill = alloca [2 x i8], align 2
  %residual = alloca [2 x i8], align 2
  store i16 %0, ptr %residual, align 2
    #dbg_declare(ptr %residual, !1827, !DIExpression(), !1832)
  %e = load i16, ptr %residual, align 2, !dbg !1833
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !1833
    #dbg_declare(ptr %e.dbg.spill, !1828, !DIExpression(), !1834)
  store i16 %e, ptr %t.dbg.spill.i, align 2
    #dbg_declare(ptr %t.dbg.spill.i, !1835, !DIExpression(), !1842)
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1844
  store i16 %e, ptr %2, align 8, !dbg !1844
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !1844
  ret void, !dbg !1845
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdbba48e631aaff81E"(ptr sret([24 x i8]) align 8 %_0, i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !1846 {
start:
  %t.dbg.spill.i = alloca [16 x i8], align 8
  %e.dbg.spill = alloca [16 x i8], align 8
  %residual = alloca [16 x i8], align 8
  store i64 %0, ptr %residual, align 8
  %3 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %residual, !1864, !DIExpression(), !1868)
  %e.0 = load i64, ptr %residual, align 8, !dbg !1869
  %4 = getelementptr inbounds i8, ptr %residual, i64 8, !dbg !1869
  %e.1 = load i64, ptr %4, align 8, !dbg !1869
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !1869
  %5 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !1869
  store i64 %e.1, ptr %5, align 8, !dbg !1869
    #dbg_declare(ptr %e.dbg.spill, !1865, !DIExpression(), !1870)
  store i64 %e.0, ptr %t.dbg.spill.i, align 8
  %6 = getelementptr inbounds i8, ptr %t.dbg.spill.i, i64 8
  store i64 %e.1, ptr %6, align 8
    #dbg_declare(ptr %t.dbg.spill.i, !1810, !DIExpression(), !1871)
  %7 = insertvalue { i64, i64 } poison, i64 %e.0, 0, !dbg !1873
  %8 = insertvalue { i64, i64 } %7, i64 %e.1, 1, !dbg !1873
  %_3.0 = extractvalue { i64, i64 } %8, 0, !dbg !1874
  %_3.1 = extractvalue { i64, i64 } %8, 1, !dbg !1874
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1875
  store i64 %_3.0, ptr %9, align 8, !dbg !1875
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !1875
  store i64 %_3.1, ptr %10, align 8, !dbg !1875
  store i64 1, ptr %_0, align 8, !dbg !1875
  ret void, !dbg !1876
}

; <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::FromResidual<core::ops::try_trait::NeverShortCircuitResidual>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN158_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..try_trait..NeverShortCircuitResidual$GT$$GT$13from_residual17hda002c82c25223a6E"() unnamed_addr #1 !dbg !1877 {
start:
  %never.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !1887, !DIExpression(), !1888)
    #dbg_declare(ptr %never.dbg.spill, !1886, !DIExpression(), !1888)
  unreachable, !dbg !1889
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h0ddc44c50adc7e18E"() unnamed_addr #1 !dbg !1890 {
start:
  %b.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !1910, !DIExpression(), !1913)
    #dbg_declare(ptr %b.dbg.spill, !1911, !DIExpression(), !1914)
  store i8 1, ptr %_0, align 1, !dbg !1915
  %0 = load i8, ptr %_0, align 1, !dbg !1916
  %1 = trunc i8 %0 to i1, !dbg !1916
  ret i1 %1, !dbg !1916
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h877cb5f984e65f0cE"(i32 signext %0) unnamed_addr #1 !dbg !1917 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %residual = alloca [4 x i8], align 4
  store i32 %0, ptr %residual, align 4
    #dbg_declare(ptr %residual, !1948, !DIExpression(), !1951)
  %b = load i32, ptr %residual, align 4, !dbg !1952
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !1952
    #dbg_declare(ptr %b.dbg.spill, !1949, !DIExpression(), !1953)
  store i32 %b, ptr %_0, align 4, !dbg !1954
  %1 = load i32, ptr %_0, align 4, !dbg !1955
  ret i32 %1, !dbg !1955
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h54ac28b3a129e867E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !1956 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2013, !DIExpression(), !2015)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !2014, !DIExpression(), !2016)
  %_3 = load ptr, ptr %self, align 8, !dbg !2017
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %_0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h9607ef3dfbebba9bE"(ptr align 1 %_3, ptr align 8 %f) #19, !dbg !2018
  ret i1 %_0, !dbg !2019
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb01e2dcb36eedd7cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !2020 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2025, !DIExpression(), !2029)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !2026, !DIExpression(), !2030)
  %_3 = load ptr, ptr %self, align 8, !dbg !2031
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h477141b2a8c92ce7E"(ptr align 1 %_3, ptr align 8 %f) #19, !dbg !2032
  ret i1 %_0, !dbg !2033
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hce3520abf5f196dbE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !2034 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2038, !DIExpression(), !2040)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !2039, !DIExpression(), !2041)
  %_3.0 = load ptr, ptr %self, align 8, !dbg !2042
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !2042
  %_3.1 = load i64, ptr %0, align 8, !dbg !2042
; call <str as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e78d225f156be20E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f) #19, !dbg !2043
  ret i1 %_0, !dbg !2044
}

; core::intrinsics::write_bytes::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core10intrinsics11write_bytes18precondition_check17he7d582f03055b4ecE(ptr %addr, i64 %align, i1 zeroext %zero_size) unnamed_addr #1 !dbg !2045 {
start:
  %zero_size.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %addr.dbg.spill = alloca [8 x i8], align 8
  store ptr %addr, ptr %addr.dbg.spill, align 8
    #dbg_declare(ptr %addr.dbg.spill, !2051, !DIExpression(), !2054)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !2052, !DIExpression(), !2054)
  %0 = zext i1 %zero_size to i8
  store i8 %0, ptr %zero_size.dbg.spill, align 1
    #dbg_declare(ptr %zero_size.dbg.spill, !2053, !DIExpression(), !2054)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %addr, i64 %align, i1 zeroext %zero_size) #19, !dbg !2055
  br i1 %_4, label %bb2, label %bb3, !dbg !2055

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_424341b75ece3fa20496f1c69b9fb0ac, i64 111) #20, !dbg !2058
  unreachable, !dbg !2058

bb2:                                              ; preds = %start
  ret void, !dbg !2059
}

; core::intrinsics::copy_nonoverlapping::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %src, ptr %dst, i64 %size, i64 %align, i64 %count) unnamed_addr #1 !dbg !2060 {
start:
  %count.dbg.spill = alloca [8 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %dst.dbg.spill = alloca [8 x i8], align 8
  %src.dbg.spill = alloca [8 x i8], align 8
  %zero_size = alloca [1 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !2066, !DIExpression(), !2073)
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !2067, !DIExpression(), !2073)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !2068, !DIExpression(), !2073)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !2069, !DIExpression(), !2073)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !2070, !DIExpression(), !2073)
    #dbg_declare(ptr %zero_size, !2071, !DIExpression(), !2074)
  %0 = icmp eq i64 %count, 0, !dbg !2075
  br i1 %0, label %bb1, label %bb2, !dbg !2075

bb1:                                              ; preds = %start
  store i8 1, ptr %zero_size, align 1, !dbg !2075
  br label %bb3, !dbg !2075

bb2:                                              ; preds = %start
  %1 = icmp eq i64 %size, 0, !dbg !2077
  %2 = zext i1 %1 to i8, !dbg !2077
  store i8 %2, ptr %zero_size, align 1, !dbg !2077
  br label %bb3, !dbg !2075

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %zero_size, align 1, !dbg !2078
  %_9 = trunc i8 %3 to i1, !dbg !2078
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_8 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %src, i64 %align, i1 zeroext %_9) #19, !dbg !2079
  br i1 %_8, label %bb5, label %bb8, !dbg !2079

bb8:                                              ; preds = %bb5, %bb3
  store i8 0, ptr %_6, align 1, !dbg !2079
  br label %bb9, !dbg !2079

bb5:                                              ; preds = %bb3
  %4 = load i8, ptr %zero_size, align 1, !dbg !2080
  %_12 = trunc i8 %4 to i1, !dbg !2080
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_10 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %dst, i64 %align, i1 zeroext %_12) #19, !dbg !2081
  br i1 %_10, label %bb7, label %bb8, !dbg !2081

bb7:                                              ; preds = %bb5
; call core::ub_checks::maybe_is_nonoverlapping
  %5 = call zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping17h52b29ba9de20a021E(ptr %src, ptr %dst, i64 %size, i64 %count) #19, !dbg !2082
  %6 = zext i1 %5 to i8, !dbg !2082
  store i8 %6, ptr %_6, align 1, !dbg !2082
  br label %bb9, !dbg !2082

bb9:                                              ; preds = %bb7, %bb8
  %7 = load i8, ptr %_6, align 1, !dbg !2083
  %8 = trunc i8 %7 to i1, !dbg !2083
  br i1 %8, label %bb11, label %bb10, !dbg !2083

bb10:                                             ; preds = %bb9
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #20, !dbg !2084
  unreachable, !dbg !2084

bb11:                                             ; preds = %bb9
  ret void, !dbg !2085
}

; core::intrinsics::copy::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core10intrinsics4copy18precondition_check17h22f1a0946e134f3bE(ptr %src, ptr %dst, i64 %align, i1 zeroext %zero_size) unnamed_addr #1 !dbg !2086 {
start:
  %zero_size.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %dst.dbg.spill = alloca [8 x i8], align 8
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !2091, !DIExpression(), !2095)
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !2092, !DIExpression(), !2095)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !2093, !DIExpression(), !2095)
  %0 = zext i1 %zero_size to i8
  store i8 %0, ptr %zero_size.dbg.spill, align 1
    #dbg_declare(ptr %zero_size.dbg.spill, !2094, !DIExpression(), !2095)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %src, i64 %align, i1 zeroext %zero_size) #19, !dbg !2096
  br i1 %_5, label %bb2, label %bb5, !dbg !2096

bb5:                                              ; preds = %bb2, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_2f5fae7ca9908dec8d13988b47dc9dc4, i64 104) #20, !dbg !2098
  unreachable, !dbg !2098

bb2:                                              ; preds = %start
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_6 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %dst, i64 %align, i1 zeroext %zero_size) #19, !dbg !2099
  br i1 %_6, label %bb4, label %bb5, !dbg !2099

bb4:                                              ; preds = %bb2
  ret void, !dbg !2100
}

; core::intrinsics::cold_path
; Function Attrs: cold noredzone nounwind
define internal void @_ZN4core10intrinsics9cold_path17h7bc7d849f0520b83E() unnamed_addr #2 !dbg !2101 {
start:
  ret void, !dbg !2104
}

; core::any::TypeId::of
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core3any6TypeId2of17h800f12e433303fc0E() unnamed_addr #0 !dbg !2105 {
start:
  %t2.dbg.spill = alloca [8 x i8], align 8
  %t1.dbg.spill = alloca [8 x i8], align 8
  %t.dbg.spill = alloca [16 x i8], align 16
  %0 = alloca [16 x i8], align 16
  store i128 -17397807898473685372772643467316910836, ptr %0, align 16, !dbg !2128
  %t = load i128, ptr %0, align 16, !dbg !2128
  store i128 %t, ptr %t.dbg.spill, align 16, !dbg !2128
    #dbg_declare(ptr %t.dbg.spill, !2121, !DIExpression(), !2129)
  %_3 = lshr i128 %t, 64, !dbg !2130
  %t1 = trunc i128 %_3 to i64, !dbg !2130
  store i64 %t1, ptr %t1.dbg.spill, align 8, !dbg !2130
    #dbg_declare(ptr %t1.dbg.spill, !2124, !DIExpression(), !2131)
  %t2 = trunc i128 %t to i64, !dbg !2132
  store i64 %t2, ptr %t2.dbg.spill, align 8, !dbg !2132
    #dbg_declare(ptr %t2.dbg.spill, !2126, !DIExpression(), !2133)
  %1 = insertvalue { i64, i64 } poison, i64 %t1, 0, !dbg !2134
  %2 = insertvalue { i64, i64 } %1, i64 %t2, 1, !dbg !2134
  ret { i64, i64 } %2, !dbg !2134
}

; core::any::TypeId::of
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core3any6TypeId2of17hb25573cdebddc43eE() unnamed_addr #0 !dbg !2135 {
start:
  %t2.dbg.spill = alloca [8 x i8], align 8
  %t1.dbg.spill = alloca [8 x i8], align 8
  %t.dbg.spill = alloca [16 x i8], align 16
  %0 = alloca [16 x i8], align 16
  store i128 -41764715735603895522320874518445042123, ptr %0, align 16, !dbg !2146
  %t = load i128, ptr %0, align 16, !dbg !2146
  store i128 %t, ptr %t.dbg.spill, align 16, !dbg !2146
    #dbg_declare(ptr %t.dbg.spill, !2140, !DIExpression(), !2147)
  %_3 = lshr i128 %t, 64, !dbg !2148
  %t1 = trunc i128 %_3 to i64, !dbg !2148
  store i64 %t1, ptr %t1.dbg.spill, align 8, !dbg !2148
    #dbg_declare(ptr %t1.dbg.spill, !2142, !DIExpression(), !2149)
  %t2 = trunc i128 %t to i64, !dbg !2150
  store i64 %t2, ptr %t2.dbg.spill, align 8, !dbg !2150
    #dbg_declare(ptr %t2.dbg.spill, !2144, !DIExpression(), !2151)
  %1 = insertvalue { i64, i64 } poison, i64 %t1, 0, !dbg !2152
  %2 = insertvalue { i64, i64 } %1, i64 %t2, 1, !dbg !2152
  ret { i64, i64 } %2, !dbg !2152
}

; core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h32b2d2bf6c473d80E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #1 !dbg !2153 {
start:
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2161, !DIExpression(), !2163)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !2162, !DIExpression(), !2164)
  %_3 = load i8, ptr %self, align 1, !dbg !2165
  %_4 = load i8, ptr %other, align 1, !dbg !2166
  %_0 = icmp eq i8 %_3, %_4, !dbg !2165
  ret i1 %_0, !dbg !2167
}

; core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h614f779dfc56329fE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !2168 {
start:
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2174, !DIExpression(), !2176)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !2175, !DIExpression(), !2177)
  %_3 = load i64, ptr %self, align 8, !dbg !2178
  %_4 = load i64, ptr %other, align 8, !dbg !2179
  %_0 = icmp eq i64 %_3, %_4, !dbg !2178
  ret i1 %_0, !dbg !2180
}

; core::ffi::c_str::CStr::to_bytes_with_nul
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2181 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !2197, !DIExpression(), !2198)
  %1 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !2199
  %2 = insertvalue { ptr, i64 } %1, i64 %self.1, 1, !dbg !2199
  ret { ptr, i64 } %2, !dbg !2199
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha6543f6aaea04575E(ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 !dbg !2200 {
start:
  %bytes.dbg.spill = alloca [16 x i8], align 8
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i64 8
  store i64 %bytes.1, ptr %0, align 8
    #dbg_declare(ptr %bytes.dbg.spill, !2205, !DIExpression(), !2206)
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::runtime
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7runtime17hf4ecf365b496096eE(ptr align 1 %bytes.0, i64 %bytes.1) #19, !dbg !2207
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !2207
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !2207
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2209
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !2209
  ret { ptr, i64 } %3, !dbg !2209
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7runtime17hf4ecf365b496096eE(ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #1 !dbg !2210 {
start:
  %bytes.dbg.spill = alloca [16 x i8], align 8
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i64 8
  store i64 %bytes.1, ptr %0, align 8
    #dbg_declare(ptr %bytes.dbg.spill, !2214, !DIExpression(), !2215)
; call core::slice::<impl [T]>::is_empty
  %_2 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1 %bytes.0, i64 %bytes.1) #19, !dbg !2216
  br i1 %_2, label %bb5, label %bb2, !dbg !2216

bb2:                                              ; preds = %start
  %_6.0 = sub i64 %bytes.1, 1, !dbg !2218
  %_6.1 = icmp ult i64 %bytes.1, 1, !dbg !2218
  br i1 %_6.1, label %panic, label %bb3, !dbg !2218

bb5:                                              ; preds = %bb4, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_8d17c0d7765c1f1b0dc7acf59030ea5a, i64 66, ptr align 8 @alloc_7e539950dfc031d8f4e8dcd31988878b) #20, !dbg !2219
  unreachable, !dbg !2219

bb3:                                              ; preds = %bb2
  %_8 = icmp ult i64 %_6.0, %bytes.1, !dbg !2222
  br i1 %_8, label %bb4, label %panic1, !dbg !2222

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_9f0d15b92aba5db727d77e6b46e60a6d) #20, !dbg !2218
  unreachable, !dbg !2218

bb4:                                              ; preds = %bb3
  %1 = getelementptr inbounds i8, ptr %bytes.0, i64 %_6.0, !dbg !2222
  %_3 = load i8, ptr %1, align 1, !dbg !2222
  %2 = icmp eq i8 %_3, 0, !dbg !2222
  br i1 %2, label %bb6, label %bb5, !dbg !2222

panic1:                                           ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 %_6.0, i64 %bytes.1, ptr align 8 @alloc_6458170d55f163cf8296d020f34783fa) #20, !dbg !2222
  unreachable, !dbg !2222

bb6:                                              ; preds = %bb4
  %3 = insertvalue { ptr, i64 } poison, ptr %bytes.0, 0, !dbg !2223
  %4 = insertvalue { ptr, i64 } %3, i64 %bytes.1, 1, !dbg !2223
  ret { ptr, i64 } %4, !dbg !2223
}

; core::ffi::c_str::CStr::from_ptr
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17heec05a6e074ea783E(ptr %ptr) unnamed_addr #1 !dbg !2224 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !2229, !DIExpression(), !2232)
; call core::ffi::c_str::strlen
  %len = call i64 @_ZN4core3ffi5c_str6strlen17hfb36e049099ff8d1E(ptr %ptr) #19, !dbg !2233
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !2233
    #dbg_declare(ptr %len.dbg.spill, !2230, !DIExpression(), !2234)
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2235, !DIExpression(), !2245)
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 1), !dbg !2247
  %_6.0 = extractvalue { i64, i1 } %0, 0, !dbg !2247
  %_6.1 = extractvalue { i64, i1 } %0, 1, !dbg !2247
  br i1 %_6.1, label %panic, label %bb3, !dbg !2247

bb3:                                              ; preds = %start
; call core::slice::raw::from_raw_parts
  %1 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h42c262a59a518897E(ptr %ptr, i64 %_6.0) #19, !dbg !2248
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !2248
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !2248
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
  %2 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha6543f6aaea04575E(ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !2249
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !2249
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !2249
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2250
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !2250
  ret { ptr, i64 } %4, !dbg !2250

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_96dbbd18d2586395505ff540e7734837) #20, !dbg !2247
  unreachable, !dbg !2247
}

; core::ffi::c_str::CStr::to_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3ffi5c_str4CStr8to_bytes17h40a5d5761cbaddacE(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2251 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %bytes.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !2254, !DIExpression(), !2257)
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E(ptr align 1 %self.0, i64 %self.1) #19, !dbg !2258
  %bytes.0 = extractvalue { ptr, i64 } %1, 0, !dbg !2258
  %bytes.1 = extractvalue { ptr, i64 } %1, 1, !dbg !2258
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 8, !dbg !2258
  %2 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i64 8, !dbg !2258
  store i64 %bytes.1, ptr %2, align 8, !dbg !2258
    #dbg_declare(ptr %bytes.dbg.spill, !2255, !DIExpression(), !2259)
  store ptr %bytes.0, ptr %self.dbg.spill.i, align 8
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %bytes.1, ptr %3, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2260, !DIExpression(), !2267)
  %_6.0 = sub i64 %bytes.1, 1, !dbg !2269
  %_6.1 = icmp ult i64 %bytes.1, 1, !dbg !2269
  br i1 %_6.1, label %panic, label %bb3, !dbg !2269

bb3:                                              ; preds = %start
; call core::slice::raw::from_raw_parts
  %4 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h42c262a59a518897E(ptr %bytes.0, i64 %_6.0) #19, !dbg !2270
  %_0.0 = extractvalue { ptr, i64 } %4, 0, !dbg !2270
  %_0.1 = extractvalue { ptr, i64 } %4, 1, !dbg !2270
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2271
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1, 1, !dbg !2271
  ret { ptr, i64 } %6, !dbg !2271

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_fda627a204408664747b80345fea4cda) #20, !dbg !2269
  unreachable, !dbg !2269
}

; core::ffi::c_str::strlen
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3ffi5c_str6strlen17hfb36e049099ff8d1E(ptr %ptr) unnamed_addr #1 !dbg !2272 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !2276, !DIExpression(), !2277)
; call core::ffi::c_str::strlen::runtime
  %_0 = call i64 @_ZN4core3ffi5c_str6strlen7runtime17h429f74902c896c11E(ptr %ptr) #19, !dbg !2278
  ret i64 %_0, !dbg !2280
}

; core::ffi::c_str::strlen::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3ffi5c_str6strlen7runtime17h429f74902c896c11E(ptr %s) unnamed_addr #1 !dbg !2281 {
start:
  %s.dbg.spill = alloca [8 x i8], align 8
  store ptr %s, ptr %s.dbg.spill, align 8
    #dbg_declare(ptr %s.dbg.spill, !2284, !DIExpression(), !2285)
  %_0 = call i64 @strlen(ptr %s) #19, !dbg !2286
  ret i64 %_0, !dbg !2288
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h9607ef3dfbebba9bE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 !dbg !2289 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2296, !DIExpression(), !2298)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !2297, !DIExpression(), !2299)
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8a931bc535da4445E(ptr align 8 %f) #19, !dbg !2300
  br i1 %_3, label %bb2, label %bb3, !dbg !2300

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h3620bb11f995d411E(ptr align 8 %f) #19, !dbg !2301
  br i1 %_5, label %bb5, label %bb6, !dbg !2301

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h82f9f3e4c5ec98ecE"(ptr align 1 %self, ptr align 8 %f) #19, !dbg !2302
  %1 = zext i1 %0 to i8, !dbg !2302
  store i8 %1, ptr %_0, align 1, !dbg !2302
  br label %bb7, !dbg !2302

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %2 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h447db19b7d01ee58E"(ptr align 1 %self, ptr align 8 %f) #19, !dbg !2303
  %3 = zext i1 %2 to i8, !dbg !2303
  store i8 %3, ptr %_0, align 1, !dbg !2303
  br label %bb7, !dbg !2303

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hfc47f814aa826677E"(ptr align 1 %self, ptr align 8 %f) #19, !dbg !2304
  %5 = zext i1 %4 to i8, !dbg !2304
  store i8 %5, ptr %_0, align 1, !dbg !2304
  br label %bb7, !dbg !2304

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %6 = load i8, ptr %_0, align 1, !dbg !2305
  %7 = trunc i8 %6 to i1, !dbg !2305
  ret i1 %7, !dbg !2305
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h8901250f82f506b0E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !2306 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2311, !DIExpression(), !2313)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !2312, !DIExpression(), !2314)
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8a931bc535da4445E(ptr align 8 %f) #19, !dbg !2315
  br i1 %_3, label %bb2, label %bb3, !dbg !2315

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h3620bb11f995d411E(ptr align 8 %f) #19, !dbg !2316
  br i1 %_5, label %bb5, label %bb6, !dbg !2316

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17ha08e884baf93fe5eE"(ptr align 8 %self, ptr align 8 %f) #19, !dbg !2317
  %1 = zext i1 %0 to i8, !dbg !2317
  store i8 %1, ptr %_0, align 1, !dbg !2317
  br label %bb7, !dbg !2317

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %2 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h3dd1a47b22e61be3E"(ptr align 8 %self, ptr align 8 %f) #19, !dbg !2318
  %3 = zext i1 %2 to i8, !dbg !2318
  store i8 %3, ptr %_0, align 1, !dbg !2318
  br label %bb7, !dbg !2318

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hd4e86af42a28a756E"(ptr align 8 %self, ptr align 8 %f) #19, !dbg !2319
  %5 = zext i1 %4 to i8, !dbg !2319
  store i8 %5, ptr %_0, align 1, !dbg !2319
  br label %bb7, !dbg !2319

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %6 = load i8, ptr %_0, align 1, !dbg !2320
  %7 = trunc i8 %6 to i1, !dbg !2320
  ret i1 %7, !dbg !2320
}

; core::fmt::Write::write_fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @_ZN4core3fmt5Write9write_fmt17h17a6868f9c748f56E(ptr align 8 %self, ptr align 8 %args) unnamed_addr #0 !dbg !2321 {
start:
  %0 = alloca [48 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2410, !DIExpression(), !2414)
    #dbg_declare(ptr %args, !2411, !DIExpression(), !2415)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %args, i64 48, i1 false), !dbg !2416
; call <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
  %_0 = call zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h339dd32b174ea071E"(ptr align 8 %self, ptr align 8 %0) #19, !dbg !2416
  ret i1 %_0, !dbg !2417
}

; core::fmt::Arguments::estimated_capacity
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3fmt9Arguments18estimated_capacity17h0aa853e31d84981cE(ptr align 8 %self) unnamed_addr #1 !dbg !2418 {
start:
  %pieces_length.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2424, !DIExpression(), !2427)
  %_14.0 = load ptr, ptr %self, align 8, !dbg !2428
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !2428
  %_14.1 = load i64, ptr %0, align 8, !dbg !2428
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6afd0e2edcd8e72E"(ptr align 8 %_14.0, i64 %_14.1) #19, !dbg !2428
  %_4.0 = extractvalue { ptr, ptr } %1, 0, !dbg !2428
  %_4.1 = extractvalue { ptr, ptr } %1, 1, !dbg !2428
; call core::iter::traits::iterator::Iterator::map
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h4102d12a4a4a27b0E(ptr %_4.0, ptr %_4.1) #19, !dbg !2428
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2428
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2428
; call core::iter::traits::iterator::Iterator::sum
  %pieces_length = call i64 @_ZN4core4iter6traits8iterator8Iterator3sum17h162802470fc82891E(ptr %_3.0, ptr %_3.1) #19, !dbg !2428
  store i64 %pieces_length, ptr %pieces_length.dbg.spill, align 8, !dbg !2428
    #dbg_declare(ptr %pieces_length.dbg.spill, !2425, !DIExpression(), !2429)
  %3 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !2430
  %_15.0 = load ptr, ptr %3, align 8, !dbg !2430
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !2430
  %_15.1 = load i64, ptr %4, align 8, !dbg !2430
; call core::slice::<impl [T]>::is_empty
  %_5 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hde578c486e02b392E"(ptr align 8 %_15.0, i64 %_15.1) #19, !dbg !2430
  br i1 %_5, label %bb5, label %bb6, !dbg !2430

bb6:                                              ; preds = %start
  %_16.0 = load ptr, ptr %self, align 8, !dbg !2431
  %5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !2431
  %_16.1 = load i64, ptr %5, align 8, !dbg !2431
; call core::slice::<impl [T]>::is_empty
  %_6 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hb4a3073d01c98febE"(ptr align 8 %_16.0, i64 %_16.1) #19, !dbg !2431
  br i1 %_6, label %bb13, label %bb8, !dbg !2431

bb5:                                              ; preds = %start
  store i64 %pieces_length, ptr %_0, align 8, !dbg !2432
  br label %bb15, !dbg !2433

bb8:                                              ; preds = %bb6
  %_17.0 = load ptr, ptr %self, align 8, !dbg !2434
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !2434
  %_17.1 = load i64, ptr %6, align 8, !dbg !2434
  %_11 = icmp ult i64 0, %_17.1, !dbg !2434
  br i1 %_11, label %bb9, label %panic, !dbg !2434

bb13:                                             ; preds = %bb11, %bb9, %bb6
; call core::num::<impl usize>::checked_mul
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE"(i64 %pieces_length, i64 2) #19, !dbg !2435
  %_13.0 = extractvalue { i64, i64 } %7, 0, !dbg !2435
  %_13.1 = extractvalue { i64, i64 } %7, 1, !dbg !2435
; call core::option::Option<T>::unwrap_or
  %8 = call i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h84d3606abc15c5b9E"(i64 %_13.0, i64 %_13.1, i64 0) #19, !dbg !2435
  store i64 %8, ptr %_0, align 8, !dbg !2435
  br label %bb15, !dbg !2435

bb9:                                              ; preds = %bb8
  %_18.0 = load ptr, ptr %self, align 8, !dbg !2434
  %9 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !2434
  %_18.1 = load i64, ptr %9, align 8, !dbg !2434
  %10 = getelementptr inbounds { ptr, i64 }, ptr %_18.0, i64 0, !dbg !2434
  %_19.0 = load ptr, ptr %10, align 8, !dbg !2434
  %11 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !2434
  %_19.1 = load i64, ptr %11, align 8, !dbg !2434
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E"(ptr align 1 %_19.0, i64 %_19.1) #19, !dbg !2434
  br i1 %_7, label %bb11, label %bb13, !dbg !2434

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 0, i64 %_17.1, ptr align 8 @alloc_169f356811361b0ca861a16299c49ec7) #20, !dbg !2434
  unreachable, !dbg !2434

bb11:                                             ; preds = %bb9
  %_12 = icmp ult i64 %pieces_length, 16, !dbg !2436
  br i1 %_12, label %bb12, label %bb13, !dbg !2436

bb12:                                             ; preds = %bb11
  store i64 0, ptr %_0, align 8, !dbg !2437
  br label %bb15, !dbg !2438

bb15:                                             ; preds = %bb5, %bb13, %bb12
  %12 = load i64, ptr %_0, align 8, !dbg !2439
  ret i64 %12, !dbg !2439
}

; core::fmt::Arguments::estimated_capacity::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17h84118b2ebfb16d0bE"(ptr align 1 %_1, ptr align 8 %x) unnamed_addr #1 !dbg !2440 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !2446, !DIExpression(), !2447)
  store ptr %x, ptr %x.dbg.spill, align 8
    #dbg_declare(ptr %x.dbg.spill, !2445, !DIExpression(), !2448)
  %_3.0 = load ptr, ptr %x, align 8, !dbg !2449
  %0 = getelementptr inbounds i8, ptr %x, i64 8, !dbg !2449
  %_3.1 = load i64, ptr %0, align 8, !dbg !2449
; call core::str::<impl str>::len
  %_0 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !2449
  ret i64 %_0, !dbg !2450
}

; core::fmt::Arguments::as_statically_known_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3fmt9Arguments23as_statically_known_str17h798a4b7fe9c92c9eE(ptr align 8 %self) unnamed_addr #1 !dbg !2451 {
start:
  %0 = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %s = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2467, !DIExpression(), !2470)
    #dbg_declare(ptr %s, !2468, !DIExpression(), !2471)
; call core::fmt::Arguments::as_str
  %1 = call { ptr, i64 } @_ZN4core3fmt9Arguments6as_str17h07f759ec19814b9cE(ptr align 8 %self) #19, !dbg !2472
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !2472
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !2472
  store ptr %2, ptr %s, align 8, !dbg !2472
  %4 = getelementptr inbounds i8, ptr %s, i64 8, !dbg !2472
  store i64 %3, ptr %4, align 8, !dbg !2472
; call core::option::Option<T>::is_some
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h7f617821f9074f55E"(ptr align 8 %s) #19, !dbg !2473
  %5 = call i1 @llvm.is.constant.i1(i1 %_4), !dbg !2474
  %6 = zext i1 %5 to i8, !dbg !2474
  store i8 %6, ptr %0, align 1, !dbg !2474
  %7 = load i8, ptr %0, align 1, !dbg !2474
  %_3 = trunc i8 %7 to i1, !dbg !2474
  br i1 %_3, label %bb4, label %bb5, !dbg !2474

bb5:                                              ; preds = %start
  store ptr null, ptr %_0, align 8, !dbg !2475
  br label %bb6, !dbg !2476

bb4:                                              ; preds = %start
  %8 = load ptr, ptr %s, align 8, !dbg !2477
  %9 = getelementptr inbounds i8, ptr %s, i64 8, !dbg !2477
  %10 = load i64, ptr %9, align 8, !dbg !2477
  store ptr %8, ptr %_0, align 8, !dbg !2477
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2477
  store i64 %10, ptr %11, align 8, !dbg !2477
  br label %bb6, !dbg !2476

bb6:                                              ; preds = %bb4, %bb5
  %12 = load ptr, ptr %_0, align 8, !dbg !2478
  %13 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2478
  %14 = load i64, ptr %13, align 8, !dbg !2478
  %15 = insertvalue { ptr, i64 } poison, ptr %12, 0, !dbg !2478
  %16 = insertvalue { ptr, i64 } %15, i64 %14, 1, !dbg !2478
  ret { ptr, i64 } %16, !dbg !2478
}

; core::fmt::Arguments::as_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3fmt9Arguments6as_str17h07f759ec19814b9cE(ptr align 8 %self) unnamed_addr #1 !dbg !2479 {
start:
  %s.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [32 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2482, !DIExpression(), !2485)
  %_3.0 = load ptr, ptr %self, align 8, !dbg !2486
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !2486
  %_3.1 = load i64, ptr %0, align 8, !dbg !2486
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !2487
  %_4.0 = load ptr, ptr %1, align 8, !dbg !2487
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2487
  %_4.1 = load i64, ptr %2, align 8, !dbg !2487
  store ptr %_3.0, ptr %_2, align 8, !dbg !2488
  %3 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !2488
  store i64 %_3.1, ptr %3, align 8, !dbg !2488
  %4 = getelementptr inbounds i8, ptr %_2, i64 16, !dbg !2488
  store ptr %_4.0, ptr %4, align 8, !dbg !2488
  %5 = getelementptr inbounds i8, ptr %4, i64 8, !dbg !2488
  store i64 %_4.1, ptr %5, align 8, !dbg !2488
  %_11.0 = load ptr, ptr %_2, align 8, !dbg !2489
  %6 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !2489
  %_11.1 = load i64, ptr %6, align 8, !dbg !2489
  %7 = icmp eq i64 %_11.1, 0, !dbg !2489
  br i1 %7, label %bb2, label %bb3, !dbg !2489

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_2, i64 16, !dbg !2490
  %_12.0 = load ptr, ptr %8, align 8, !dbg !2490
  %9 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !2490
  %_12.1 = load i64, ptr %9, align 8, !dbg !2490
  %10 = icmp eq i64 %_12.1, 0, !dbg !2490
  br i1 %10, label %bb6, label %bb1, !dbg !2490

bb3:                                              ; preds = %start
  %_13.0 = load ptr, ptr %_2, align 8, !dbg !2491
  %11 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !2491
  %_13.1 = load i64, ptr %11, align 8, !dbg !2491
  %12 = icmp eq i64 %_13.1, 1, !dbg !2491
  br i1 %12, label %bb4, label %bb1, !dbg !2491

bb6:                                              ; preds = %bb2
  store ptr inttoptr (i64 1 to ptr), ptr %_0, align 8, !dbg !2492
  %13 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2492
  store i64 0, ptr %13, align 8, !dbg !2492
  br label %bb7, !dbg !2493

bb1:                                              ; preds = %bb4, %bb3, %bb2
  store ptr null, ptr %_0, align 8, !dbg !2494
  br label %bb7, !dbg !2494

bb7:                                              ; preds = %bb1, %bb5, %bb6
  %14 = load ptr, ptr %_0, align 8, !dbg !2495
  %15 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2495
  %16 = load i64, ptr %15, align 8, !dbg !2495
  %17 = insertvalue { ptr, i64 } poison, ptr %14, 0, !dbg !2495
  %18 = insertvalue { ptr, i64 } %17, i64 %16, 1, !dbg !2495
  ret { ptr, i64 } %18, !dbg !2495

bb4:                                              ; preds = %bb3
  %19 = getelementptr inbounds i8, ptr %_2, i64 16, !dbg !2496
  %_14.0 = load ptr, ptr %19, align 8, !dbg !2496
  %20 = getelementptr inbounds i8, ptr %19, i64 8, !dbg !2496
  %_14.1 = load i64, ptr %20, align 8, !dbg !2496
  %21 = icmp eq i64 %_14.1, 0, !dbg !2496
  br i1 %21, label %bb5, label %bb1, !dbg !2496

bb5:                                              ; preds = %bb4
  %_15.0 = load ptr, ptr %_2, align 8, !dbg !2497
  %22 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !2497
  %_15.1 = load i64, ptr %22, align 8, !dbg !2497
  %s = getelementptr inbounds { ptr, i64 }, ptr %_15.0, i64 0, !dbg !2497
  store ptr %s, ptr %s.dbg.spill, align 8, !dbg !2497
    #dbg_declare(ptr %s.dbg.spill, !2483, !DIExpression(), !2498)
  %_16.0 = load ptr, ptr %s, align 8, !dbg !2499
  %23 = getelementptr inbounds i8, ptr %s, i64 8, !dbg !2499
  %_16.1 = load i64, ptr %23, align 8, !dbg !2499
  store ptr %_16.0, ptr %_0, align 8, !dbg !2500
  %24 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2500
  store i64 %_16.1, ptr %24, align 8, !dbg !2500
  br label %bb7, !dbg !2501
}

; core::fmt::Formatter::write_fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E(ptr align 8 %self, ptr align 8 %fmt) unnamed_addr #1 !dbg !2502 {
start:
  %0 = alloca [48 x i8], align 8
  %s.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2507, !DIExpression(), !2511)
    #dbg_declare(ptr %fmt, !2508, !DIExpression(), !2512)
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i64 } @_ZN4core3fmt9Arguments23as_statically_known_str17h798a4b7fe9c92c9eE(ptr align 8 %fmt) #19, !dbg !2513
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !2513
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !2513
  store ptr %2, ptr %_3, align 8, !dbg !2513
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !2513
  store i64 %3, ptr %4, align 8, !dbg !2513
  %5 = load ptr, ptr %_3, align 8, !dbg !2513
  %6 = ptrtoint ptr %5 to i64, !dbg !2513
  %7 = icmp eq i64 %6, 0, !dbg !2513
  %_5 = select i1 %7, i64 0, i64 1, !dbg !2513
  %8 = icmp eq i64 %_5, 1, !dbg !2514
  br i1 %8, label %bb2, label %bb3, !dbg !2514

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 8, !dbg !2515
  %9 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !2515
  %s.1 = load i64, ptr %9, align 8, !dbg !2515
  store ptr %s.0, ptr %s.dbg.spill, align 8, !dbg !2515
  %10 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8, !dbg !2515
  store i64 %s.1, ptr %10, align 8, !dbg !2515
    #dbg_declare(ptr %s.dbg.spill, !2509, !DIExpression(), !2515)
  %11 = getelementptr inbounds i8, ptr %self, i64 48, !dbg !2516
  %_7.0 = load ptr, ptr %11, align 8, !dbg !2516
  %12 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !2516
  %_7.1 = load ptr, ptr %12, align 8, !dbg !2516
  %13 = getelementptr inbounds i8, ptr %_7.1, i64 24, !dbg !2516
  %14 = load ptr, ptr %13, align 8, !dbg !2516, !invariant.load !15, !nonnull !15
  %15 = call zeroext i1 %14(ptr align 1 %_7.0, ptr align 1 %s.0, i64 %s.1) #19, !dbg !2516
  %16 = zext i1 %15 to i8, !dbg !2516
  store i8 %16, ptr %_0, align 1, !dbg !2516
  br label %bb4, !dbg !2516

bb3:                                              ; preds = %start
  %17 = getelementptr inbounds i8, ptr %self, i64 48, !dbg !2517
  %_8.0 = load ptr, ptr %17, align 8, !dbg !2517
  %18 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !2517
  %_8.1 = load ptr, ptr %18, align 8, !dbg !2517
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %fmt, i64 48, i1 false), !dbg !2518
; call core::fmt::write
  %19 = call zeroext i1 @_ZN4core3fmt5write17h09f3fe8c6b03e28fE(ptr align 1 %_8.0, ptr align 8 %_8.1, ptr align 8 %0) #19, !dbg !2518
  %20 = zext i1 %19 to i8, !dbg !2518
  store i8 %20, ptr %_0, align 1, !dbg !2518
  br label %bb4, !dbg !2518

bb4:                                              ; preds = %bb3, %bb2
  %21 = load i8, ptr %_0, align 1, !dbg !2519
  %22 = trunc i8 %21 to i1, !dbg !2519
  ret i1 %22, !dbg !2519

bb5:                                              ; No predecessors!
  unreachable, !dbg !2520
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @_ZN4core3mem15size_of_val_raw17hfc037130fcee5e8fE(ptr %val.0, i64 %val.1) unnamed_addr #1 !dbg !2521 {
start:
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [16 x i8], align 8
  store ptr %val.0, ptr %val.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i64 8
  store i64 %val.1, ptr %1, align 8
    #dbg_declare(ptr %val.dbg.spill, !2526, !DIExpression(), !2527)
  %2 = mul nsw i64 %val.1, 1, !dbg !2528
  store i64 %2, ptr %0, align 8, !dbg !2528
  %_0 = load i64, ptr %0, align 8, !dbg !2528
  ret i64 %_0, !dbg !2529
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @_ZN4core3mem16align_of_val_raw17he49e2e6348a68ebfE(ptr %val.0, i64 %val.1) unnamed_addr #1 !dbg !2530 {
start:
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [16 x i8], align 8
  store ptr %val.0, ptr %val.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i64 8
  store i64 %val.1, ptr %1, align 8
    #dbg_declare(ptr %val.dbg.spill, !2532, !DIExpression(), !2533)
  %2 = mul nsw i64 %val.1, 1, !dbg !2534
  store i64 1, ptr %0, align 8, !dbg !2534
  %_0 = load i64, ptr %0, align 8, !dbg !2534
  ret i64 %_0, !dbg !2535
}

; core::mem::take
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3mem4take17h8d397c24782aadc6E(ptr align 8 %dest) unnamed_addr #1 !dbg !2536 {
start:
  %dest.dbg.spill = alloca [8 x i8], align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
    #dbg_declare(ptr %dest.dbg.spill, !2545, !DIExpression(), !2548)
; call <alloc::boxed::Box<[T]> as core::default::Default>::default
  %0 = call { ptr, i64 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h799a061006e6e183E"() #19, !dbg !2549
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !2549
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !2549
; call core::mem::replace
  %1 = call { ptr, i64 } @_ZN4core3mem7replace17h3e76aae5b8fff781E(ptr align 8 %dest, ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !2550
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !2550
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !2550
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !2551
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !2551
  ret { ptr, i64 } %3, !dbg !2551
}

; core::mem::take
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core3mem4take17hd620c28adb6a0c9eE(ptr align 8 %dest) unnamed_addr #1 !dbg !2552 {
start:
  %dest.dbg.spill = alloca [8 x i8], align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
    #dbg_declare(ptr %dest.dbg.spill, !2557, !DIExpression(), !2560)
; call <core::slice::iter::Iter<T> as core::default::Default>::default
  %0 = call { ptr, ptr } @"_ZN75_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h6455e60f8a0ac6a0E"() #19, !dbg !2561
  %_2.0 = extractvalue { ptr, ptr } %0, 0, !dbg !2561
  %_2.1 = extractvalue { ptr, ptr } %0, 1, !dbg !2561
; call core::mem::replace
  %1 = call { ptr, ptr } @_ZN4core3mem7replace17hbf0915b005fb72f6E(ptr align 8 %dest, ptr %_2.0, ptr %_2.1) #19, !dbg !2562
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !2562
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !2562
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !2563
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !2563
  ret { ptr, ptr } %3, !dbg !2563
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3mem7replace17h3e76aae5b8fff781E(ptr align 8 %dest, ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !2564 {
start:
  %result.dbg.spill = alloca [16 x i8], align 8
  %src.dbg.spill = alloca [16 x i8], align 8
  %dest.dbg.spill = alloca [8 x i8], align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
    #dbg_declare(ptr %dest.dbg.spill, !2568, !DIExpression(), !2572)
  store ptr %src.0, ptr %src.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i64 8
  store i64 %src.1, ptr %0, align 8
    #dbg_declare(ptr %src.dbg.spill, !2569, !DIExpression(), !2573)
; call core::ptr::read
  %1 = call { ptr, i64 } @_ZN4core3ptr4read17h2e437cd775b4c54bE(ptr %dest) #19, !dbg !2574
  %result.0 = extractvalue { ptr, i64 } %1, 0, !dbg !2574
  %result.1 = extractvalue { ptr, i64 } %1, 1, !dbg !2574
  store ptr %result.0, ptr %result.dbg.spill, align 8, !dbg !2574
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i64 8, !dbg !2574
  store i64 %result.1, ptr %2, align 8, !dbg !2574
    #dbg_declare(ptr %result.dbg.spill, !2570, !DIExpression(), !2575)
; call core::ptr::write
  call void @_ZN4core3ptr5write17he9b8da1104db5e9fE(ptr %dest, ptr align 1 %src.0, i64 %src.1) #19, !dbg !2576
  %3 = insertvalue { ptr, i64 } poison, ptr %result.0, 0, !dbg !2577
  %4 = insertvalue { ptr, i64 } %3, i64 %result.1, 1, !dbg !2577
  ret { ptr, i64 } %4, !dbg !2577
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @_ZN4core3mem7replace17h4ac15aa4e8b140cfE(ptr align 2 %dest, i16 %src.0, i16 %src.1) unnamed_addr #1 !dbg !2578 {
start:
  %result.dbg.spill = alloca [4 x i8], align 2
  %src.dbg.spill = alloca [4 x i8], align 2
  %dest.dbg.spill = alloca [8 x i8], align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
    #dbg_declare(ptr %dest.dbg.spill, !2583, !DIExpression(), !2589)
  store i16 %src.0, ptr %src.dbg.spill, align 2
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i64 2
  store i16 %src.1, ptr %0, align 2
    #dbg_declare(ptr %src.dbg.spill, !2584, !DIExpression(), !2590)
; call core::ptr::read
  %1 = call { i16, i16 } @_ZN4core3ptr4read17h9d8e0c1e8c9002dbE(ptr %dest) #19, !dbg !2591
  %result.0 = extractvalue { i16, i16 } %1, 0, !dbg !2591
  %result.1 = extractvalue { i16, i16 } %1, 1, !dbg !2591
  store i16 %result.0, ptr %result.dbg.spill, align 2, !dbg !2591
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i64 2, !dbg !2591
  store i16 %result.1, ptr %2, align 2, !dbg !2591
    #dbg_declare(ptr %result.dbg.spill, !2585, !DIExpression(), !2592)
; call core::ptr::write
  call void @_ZN4core3ptr5write17h3dda0bd55031b673E(ptr %dest, i16 %src.0, i16 %src.1) #19, !dbg !2593
  %3 = insertvalue { i16, i16 } poison, i16 %result.0, 0, !dbg !2594
  %4 = insertvalue { i16, i16 } %3, i16 %result.1, 1, !dbg !2594
  ret { i16, i16 } %4, !dbg !2594
}

; core::mem::replace
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core3mem7replace17hbf0915b005fb72f6E(ptr align 8 %dest, ptr %src.0, ptr %src.1) unnamed_addr #1 !dbg !2595 {
start:
  %result.dbg.spill = alloca [16 x i8], align 8
  %src.dbg.spill = alloca [16 x i8], align 8
  %dest.dbg.spill = alloca [8 x i8], align 8
  store ptr %dest, ptr %dest.dbg.spill, align 8
    #dbg_declare(ptr %dest.dbg.spill, !2599, !DIExpression(), !2603)
  store ptr %src.0, ptr %src.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i64 8
  store ptr %src.1, ptr %0, align 8
    #dbg_declare(ptr %src.dbg.spill, !2600, !DIExpression(), !2604)
; call core::ptr::read
  %1 = call { ptr, ptr } @_ZN4core3ptr4read17he810e9133f8e596eE(ptr %dest) #19, !dbg !2605
  %result.0 = extractvalue { ptr, ptr } %1, 0, !dbg !2605
  %result.1 = extractvalue { ptr, ptr } %1, 1, !dbg !2605
  store ptr %result.0, ptr %result.dbg.spill, align 8, !dbg !2605
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i64 8, !dbg !2605
  store ptr %result.1, ptr %2, align 8, !dbg !2605
    #dbg_declare(ptr %result.dbg.spill, !2601, !DIExpression(), !2606)
; call core::ptr::write
  call void @_ZN4core3ptr5write17hd2da871d5984becbE(ptr %dest, ptr %src.0, ptr %src.1) #19, !dbg !2607
  %3 = insertvalue { ptr, ptr } poison, ptr %result.0, 0, !dbg !2608
  %4 = insertvalue { ptr, ptr } %3, ptr %result.1, 1, !dbg !2608
  ret { ptr, ptr } %4, !dbg !2608
}

; core::num::<impl u8>::is_ascii_lowercase
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17hd7e0b550fd0e3e2eE"(ptr align 1 %self) unnamed_addr #1 !dbg !2609 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2616, !DIExpression(), !2617)
  %0 = load i8, ptr %self, align 1, !dbg !2618
  %_2 = icmp ule i8 97, %0, !dbg !2618
  br i1 %_2, label %bb2, label %bb1, !dbg !2618

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2619
  br label %bb3, !dbg !2619

bb2:                                              ; preds = %start
  %1 = load i8, ptr %self, align 1, !dbg !2618
  %_3 = icmp ule i8 %1, 122, !dbg !2618
  %2 = zext i1 %_3 to i8, !dbg !2618
  store i8 %2, ptr %_0, align 1, !dbg !2618
  br label %bb3, !dbg !2618

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1, !dbg !2621
  %4 = trunc i8 %3 to i1, !dbg !2621
  ret i1 %4, !dbg !2621
}

; core::num::<impl u8>::is_ascii_uppercase
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17hcf2c6ea93f31546cE"(ptr align 1 %self) unnamed_addr #1 !dbg !2622 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2624, !DIExpression(), !2625)
  %0 = load i8, ptr %self, align 1, !dbg !2626
  %_2 = icmp ule i8 65, %0, !dbg !2626
  br i1 %_2, label %bb2, label %bb1, !dbg !2626

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2627
  br label %bb3, !dbg !2627

bb2:                                              ; preds = %start
  %1 = load i8, ptr %self, align 1, !dbg !2626
  %_3 = icmp ule i8 %1, 90, !dbg !2626
  %2 = zext i1 %_3 to i8, !dbg !2626
  store i8 %2, ptr %_0, align 1, !dbg !2626
  br label %bb3, !dbg !2626

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1, !dbg !2629
  %4 = trunc i8 %3 to i1, !dbg !2629
  ret i1 %4, !dbg !2629
}

; core::num::<impl u8>::to_ascii_lowercase
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h86adba17fc20bfc9E"(ptr align 1 %self) unnamed_addr #1 !dbg !2630 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2634, !DIExpression(), !2635)
  %_2 = load i8, ptr %self, align 1, !dbg !2636
; call core::num::<impl u8>::is_ascii_uppercase
  %_5 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17hcf2c6ea93f31546cE"(ptr align 1 %self) #19, !dbg !2637
  %_4 = zext i1 %_5 to i8, !dbg !2637
  %0 = call { i8, i1 } @llvm.umul.with.overflow.i8(i8 %_4, i8 32), !dbg !2638
  %_6.0 = extractvalue { i8, i1 } %0, 0, !dbg !2638
  %_6.1 = extractvalue { i8, i1 } %0, 1, !dbg !2638
  br i1 %_6.1, label %panic, label %bb2, !dbg !2638

bb2:                                              ; preds = %start
  %_0 = or i8 %_2, %_6.0, !dbg !2636
  ret i8 %_0, !dbg !2639

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8 @alloc_94d53e123a230fae37821433f56279b5) #20, !dbg !2638
  unreachable, !dbg !2638
}

; core::num::<impl u8>::to_ascii_uppercase
; Function Attrs: inlinehint noredzone nounwind
define internal i8 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17h27d67ee103102a11E"(ptr align 1 %self) unnamed_addr #1 !dbg !2640 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2642, !DIExpression(), !2643)
  %_2 = load i8, ptr %self, align 1, !dbg !2644
; call core::num::<impl u8>::is_ascii_lowercase
  %_5 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17hd7e0b550fd0e3e2eE"(ptr align 1 %self) #19, !dbg !2645
  %_4 = zext i1 %_5 to i8, !dbg !2646
  %0 = call { i8, i1 } @llvm.umul.with.overflow.i8(i8 %_4, i8 32), !dbg !2647
  %_6.0 = extractvalue { i8, i1 } %0, 0, !dbg !2647
  %_6.1 = extractvalue { i8, i1 } %0, 1, !dbg !2647
  br i1 %_6.1, label %panic, label %bb2, !dbg !2647

bb2:                                              ; preds = %start
  %_0 = xor i8 %_2, %_6.0, !dbg !2644
  ret i8 %_0, !dbg !2648

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8 @alloc_503d6b1c88920234878649959379ae93) #20, !dbg !2647
  unreachable, !dbg !2647
}

; core::num::<impl i32>::abs
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17h5b6bed69db1a7108E"(i32 signext %self) unnamed_addr #1 !dbg !2649 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2656, !DIExpression(), !2657)
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2658, !DIExpression(), !2663)
  %_0.i = icmp slt i32 %self, 0, !dbg !2665
  br i1 %_0.i, label %bb2, label %bb4, !dbg !2666

bb4:                                              ; preds = %start
  store i32 %self, ptr %_0, align 4, !dbg !2667
  br label %bb5, !dbg !2668

bb2:                                              ; preds = %start
  %_3 = icmp eq i32 %self, -2147483648, !dbg !2669
  br i1 %_3, label %panic, label %bb3, !dbg !2669

bb5:                                              ; preds = %bb3, %bb4
  %0 = load i32, ptr %_0, align 4, !dbg !2670
  ret i32 %0, !dbg !2670

bb3:                                              ; preds = %bb2
  %1 = sub i32 0, %self, !dbg !2669
  store i32 %1, ptr %_0, align 4, !dbg !2669
  br label %bb5, !dbg !2668

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_neg_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_neg_overflow17h46f6b4e5fe3e9b7eE(ptr align 8 @alloc_d304c5266651b8490d07d5bcb908bafa) #20, !dbg !2669
  unreachable, !dbg !2669
}

; core::num::<impl u16>::from_be_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_be_bytes17h5d55dbcf25f37a80E"(i16 %0) unnamed_addr #1 !dbg !2671 {
start:
  %1 = alloca [2 x i8], align 2
  %self.dbg.spill.i.i = alloca [2 x i8], align 2
  %x.dbg.spill.i = alloca [2 x i8], align 2
  %2 = alloca [2 x i8], align 2
  %3 = alloca [2 x i8], align 1
  %4 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %4, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %bytes, ptr align 2 %4, i64 2, i1 false)
    #dbg_declare(ptr %bytes, !2675, !DIExpression(), !2676)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %3, ptr align 1 %bytes, i64 2, i1 false), !dbg !2677
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %2, ptr align 1 %3, i64 2, i1 false), !dbg !2677
  %5 = load i16, ptr %2, align 2, !dbg !2677
; call core::num::<impl u16>::from_ne_bytes
  %_2 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h4fee0b590fc22014E"(i16 %5) #19, !dbg !2677
  store i16 %_2, ptr %x.dbg.spill.i, align 2
    #dbg_declare(ptr %x.dbg.spill.i, !2678, !DIExpression(), !2683)
  store i16 %_2, ptr %self.dbg.spill.i.i, align 2
    #dbg_declare(ptr %self.dbg.spill.i.i, !2685, !DIExpression(), !2688)
  %6 = call i16 @llvm.bswap.i16(i16 %_2), !dbg !2690
  store i16 %6, ptr %1, align 2, !dbg !2690
  %_0.i.i = load i16, ptr %1, align 2, !dbg !2690
  ret i16 %_0.i.i, !dbg !2691
}

; core::num::<impl u16>::from_le_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17hf064cb1cd367c2e9E"(i16 %0) unnamed_addr #1 !dbg !2692 {
start:
  %x.dbg.spill.i = alloca [2 x i8], align 2
  %1 = alloca [2 x i8], align 2
  %2 = alloca [2 x i8], align 1
  %3 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %3, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %bytes, ptr align 2 %3, i64 2, i1 false)
    #dbg_declare(ptr %bytes, !2694, !DIExpression(), !2695)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2, ptr align 1 %bytes, i64 2, i1 false), !dbg !2696
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %2, i64 2, i1 false), !dbg !2696
  %4 = load i16, ptr %1, align 2, !dbg !2696
; call core::num::<impl u16>::from_ne_bytes
  %_2 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h4fee0b590fc22014E"(i16 %4) #19, !dbg !2696
  store i16 %_2, ptr %x.dbg.spill.i, align 2
    #dbg_declare(ptr %x.dbg.spill.i, !2697, !DIExpression(), !2700)
  ret i16 %_2, !dbg !2702
}

; core::num::<impl u16>::from_ne_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h4fee0b590fc22014E"(i16 %0) unnamed_addr #1 !dbg !2703 {
start:
  %1 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %1, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %bytes, ptr align 2 %1, i64 2, i1 false)
    #dbg_declare(ptr %bytes, !2705, !DIExpression(), !2706)
  %_0 = load i16, ptr %bytes, align 1, !dbg !2707
  ret i16 %_0, !dbg !2708
}

; core::num::<impl u16>::is_utf16_surrogate
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %self) unnamed_addr #1 !dbg !2709 {
start:
  %self.dbg.spill = alloca [2 x i8], align 2
  %_0 = alloca [1 x i8], align 1
  store i16 %self, ptr %self.dbg.spill, align 2
    #dbg_declare(ptr %self.dbg.spill, !2713, !DIExpression(), !2714)
  %_2 = icmp ule i16 -10240, %self, !dbg !2715
  br i1 %_2, label %bb2, label %bb1, !dbg !2715

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2716
  br label %bb3, !dbg !2716

bb2:                                              ; preds = %start
  %_3 = icmp ule i16 %self, -8193, !dbg !2715
  %0 = zext i1 %_3 to i8, !dbg !2715
  store i8 %0, ptr %_0, align 1, !dbg !2715
  br label %bb3, !dbg !2715

bb3:                                              ; preds = %bb2, %bb1
  %1 = load i8, ptr %_0, align 1, !dbg !2718
  %2 = trunc i8 %1 to i1, !dbg !2718
  ret i1 %2, !dbg !2718
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !2719 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2724, !DIExpression(), !2726)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !2725, !DIExpression(), !2727)
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !2728
  %_5.0 = extractvalue { i64, i1 } %0, 0, !dbg !2728
  %_5.1 = extractvalue { i64, i1 } %0, 1, !dbg !2728
  %1 = zext i1 %_5.1 to i8
  store i8 %1, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !2729, !DIExpression(), !2734)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !2736

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !2737
  br label %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit, !dbg !2738

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !2739
  br label %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit, !dbg !2738

_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit: ; preds = %bb3.i, %bb1.i
  %2 = load i8, ptr %_0.i, align 1, !dbg !2740
  %3 = trunc i8 %2 to i1, !dbg !2740
  br i1 %3, label %bb2, label %bb3, !dbg !2741

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit
  %_6 = add nuw i64 %self, %rhs, !dbg !2742
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2743
  store i64 %_6, ptr %4, align 8, !dbg !2743
  store i64 1, ptr %_0, align 8, !dbg !2743
  br label %bb4, !dbg !2744

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit
  store i64 0, ptr %_0, align 8, !dbg !2745
  br label %bb4, !dbg !2744

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i64, ptr %_0, align 8, !dbg !2746
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2746
  %7 = load i64, ptr %6, align 8, !dbg !2746
  %8 = insertvalue { i64, i64 } poison, i64 %5, 0, !dbg !2746
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !2746
  ret { i64, i64 } %9, !dbg !2746
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !2747 {
start:
  %b.dbg.spill.i1 = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [8 x i8], align 8
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2749, !DIExpression(), !2754)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !2750, !DIExpression(), !2755)
  store i64 %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2756, !DIExpression(), !2769)
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !2765, !DIExpression(), !2771)
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !2772
  %_5.0.i = extractvalue { i64, i1 } %0, 0, !dbg !2772
  %_5.1.i = extractvalue { i64, i1 } %0, 1, !dbg !2772
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !2773
    #dbg_declare(ptr %a.dbg.spill.i, !2766, !DIExpression(), !2774)
  %1 = zext i1 %_5.1.i to i8, !dbg !2775
  store i8 %1, ptr %b.dbg.spill.i1, align 1, !dbg !2775
    #dbg_declare(ptr %b.dbg.spill.i1, !2768, !DIExpression(), !2776)
  %_5.0 = extractvalue { i64, i1 } %0, 0, !dbg !2777
  %_5.1 = extractvalue { i64, i1 } %0, 1, !dbg !2777
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !2778
    #dbg_declare(ptr %a.dbg.spill, !2751, !DIExpression(), !2779)
  %2 = zext i1 %_5.1 to i8, !dbg !2780
  store i8 %2, ptr %b.dbg.spill, align 1, !dbg !2780
    #dbg_declare(ptr %b.dbg.spill, !2753, !DIExpression(), !2781)
  %3 = zext i1 %_5.1 to i8
  store i8 %3, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !2729, !DIExpression(), !2782)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !2784

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !2785
  br label %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit, !dbg !2786

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !2787
  br label %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit, !dbg !2786

_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit: ; preds = %bb3.i, %bb1.i
  %4 = load i8, ptr %_0.i, align 1, !dbg !2788
  %5 = trunc i8 %4 to i1, !dbg !2788
  br i1 %5, label %bb3, label %bb4, !dbg !2789

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2790
  store i64 %_5.0, ptr %6, align 8, !dbg !2790
  store i64 1, ptr %_0, align 8, !dbg !2790
  br label %bb5, !dbg !2791

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E.exit
  store i64 0, ptr %_0, align 8, !dbg !2792
  br label %bb5, !dbg !2791

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i64, ptr %_0, align 8, !dbg !2793
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2793
  %9 = load i64, ptr %8, align 8, !dbg !2793
  %10 = insertvalue { i64, i64 } poison, i64 %7, 0, !dbg !2793
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !2793
  ret { i64, i64 } %11, !dbg !2793
}

; core::num::<impl usize>::checked_sub
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h483f8f95fa41d001E"(i64 %self, i64 %rhs) unnamed_addr #1 !dbg !2794 {
start:
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2796, !DIExpression(), !2798)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !2797, !DIExpression(), !2799)
  %_3 = icmp ult i64 %self, %rhs, !dbg !2800
  br i1 %_3, label %bb1, label %bb2, !dbg !2800

bb2:                                              ; preds = %start
  %_4 = sub nuw i64 %self, %rhs, !dbg !2801
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2802
  store i64 %_4, ptr %0, align 8, !dbg !2802
  store i64 1, ptr %_0, align 8, !dbg !2802
  br label %bb3, !dbg !2803

bb1:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !2804
  br label %bb3, !dbg !2803

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i64, ptr %_0, align 8, !dbg !2805
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !2805
  %3 = load i64, ptr %2, align 8, !dbg !2805
  %4 = insertvalue { i64, i64 } poison, i64 %1, 0, !dbg !2805
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !2805
  ret { i64, i64 } %5, !dbg !2805
}

; core::num::<impl usize>::unchecked_add::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h90ef0525d3a3b7c6E"(i64 %lhs, i64 %rhs) unnamed_addr #1 !dbg !2806 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %lhs.dbg.spill = alloca [8 x i8], align 8
  store i64 %lhs, ptr %lhs.dbg.spill, align 8
    #dbg_declare(ptr %lhs.dbg.spill, !2811, !DIExpression(), !2813)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !2812, !DIExpression(), !2813)
  store i64 %lhs, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2814, !DIExpression(), !2821)
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !2817, !DIExpression(), !2824)
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lhs, i64 %rhs), !dbg !2825
  %_5.0.i = extractvalue { i64, i1 } %0, 0, !dbg !2825
  %_5.1.i = extractvalue { i64, i1 } %0, 1, !dbg !2825
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !2826
    #dbg_declare(ptr %a.dbg.spill.i, !2818, !DIExpression(), !2827)
  %1 = zext i1 %_5.1.i to i8, !dbg !2828
  store i8 %1, ptr %b.dbg.spill.i, align 1, !dbg !2828
    #dbg_declare(ptr %b.dbg.spill.i, !2820, !DIExpression(), !2829)
  %_4.0 = extractvalue { i64, i1 } %0, 0, !dbg !2830
  %_4.1 = extractvalue { i64, i1 } %0, 1, !dbg !2830
  br i1 %_4.1, label %bb2, label %bb3, !dbg !2830

bb3:                                              ; preds = %start
  ret void, !dbg !2831

bb2:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_289b84035b3220255b84b8869a538376, i64 69) #20, !dbg !2832
  unreachable, !dbg !2832
}

; core::num::<impl usize>::unchecked_mul::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h6a26816055385cd9E"(i64 %lhs, i64 %rhs) unnamed_addr #1 !dbg !2833 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %lhs.dbg.spill = alloca [8 x i8], align 8
  store i64 %lhs, ptr %lhs.dbg.spill, align 8
    #dbg_declare(ptr %lhs.dbg.spill, !2836, !DIExpression(), !2838)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !2837, !DIExpression(), !2838)
  store i64 %lhs, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2756, !DIExpression(), !2839)
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !2765, !DIExpression(), !2842)
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %lhs, i64 %rhs), !dbg !2843
  %_5.0.i = extractvalue { i64, i1 } %0, 0, !dbg !2843
  %_5.1.i = extractvalue { i64, i1 } %0, 1, !dbg !2843
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !2844
    #dbg_declare(ptr %a.dbg.spill.i, !2766, !DIExpression(), !2845)
  %1 = zext i1 %_5.1.i to i8, !dbg !2846
  store i8 %1, ptr %b.dbg.spill.i, align 1, !dbg !2846
    #dbg_declare(ptr %b.dbg.spill.i, !2768, !DIExpression(), !2847)
  %_4.0 = extractvalue { i64, i1 } %0, 0, !dbg !2848
  %_4.1 = extractvalue { i64, i1 } %0, 1, !dbg !2848
  br i1 %_4.1, label %bb2, label %bb3, !dbg !2848

bb3:                                              ; preds = %start
  ret void, !dbg !2849

bb2:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_ffc44ed1670ebf78d81555edceff65f6, i64 69) #20, !dbg !2850
  unreachable, !dbg !2850
}

; core::num::<impl usize>::abs_diff
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha9257a7921bb32bdE"(i64 %self, i64 %other) unnamed_addr #1 !dbg !2851 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2855, !DIExpression(), !2857)
  store i64 %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !2856, !DIExpression(), !2858)
  %0 = icmp eq i64 8, 1, !dbg !2859
  br i1 %0, label %bb2, label %bb5, !dbg !2859

bb2:                                              ; preds = %start
  %_6 = trunc i64 %self to i32, !dbg !2860
  %_7 = trunc i64 %other to i32, !dbg !2861
  store i32 %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2862, !DIExpression(), !2868)
  store i32 %_7, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2867, !DIExpression(), !2870)
  %_0.i = sub i32 %_6, %_7, !dbg !2871
; call core::num::<impl i32>::abs
  %_4 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17h5b6bed69db1a7108E"(i32 signext %_0.i) #19, !dbg !2860
  %1 = sext i32 %_4 to i64, !dbg !2860
  store i64 %1, ptr %_0, align 8, !dbg !2860
  br label %bb10, !dbg !2872

bb5:                                              ; preds = %start
  %_8 = icmp ult i64 %self, %other, !dbg !2873
  br i1 %_8, label %bb6, label %bb8, !dbg !2873

bb10:                                             ; preds = %bb7, %bb9, %bb2
  %2 = load i64, ptr %_0, align 8, !dbg !2874
  ret i64 %2, !dbg !2874

bb8:                                              ; preds = %bb5
  %_10.0 = sub i64 %self, %other, !dbg !2875
  %_10.1 = icmp ult i64 %self, %other, !dbg !2875
  br i1 %_10.1, label %panic, label %bb9, !dbg !2875

bb6:                                              ; preds = %bb5
  %_9.0 = sub i64 %other, %self, !dbg !2876
  %_9.1 = icmp ult i64 %other, %self, !dbg !2876
  br i1 %_9.1, label %panic1, label %bb7, !dbg !2876

bb9:                                              ; preds = %bb8
  store i64 %_10.0, ptr %_0, align 8, !dbg !2875
  br label %bb10, !dbg !2877

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_4910c64b4ac045acdaf52a268f526b79) #20, !dbg !2875
  unreachable, !dbg !2875

bb7:                                              ; preds = %bb6
  store i64 %_9.0, ptr %_0, align 8, !dbg !2876
  br label %bb10, !dbg !2877

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_4910c64b4ac045acdaf52a268f526b79) #20, !dbg !2876
  unreachable, !dbg !2876
}

; core::num::<impl usize>::div_ceil
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E"(i64 %self, i64 %rhs, ptr align 8 %0) unnamed_addr #1 !dbg !2878 {
start:
  %r.dbg.spill = alloca [8 x i8], align 8
  %d.dbg.spill = alloca [8 x i8], align 8
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2882, !DIExpression(), !2888)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !2883, !DIExpression(), !2889)
  %_4 = icmp eq i64 %rhs, 0, !dbg !2890
  br i1 %_4, label %panic, label %bb1, !dbg !2890

bb1:                                              ; preds = %start
  %d = udiv i64 %self, %rhs, !dbg !2890
  store i64 %d, ptr %d.dbg.spill, align 8, !dbg !2890
    #dbg_declare(ptr %d.dbg.spill, !2884, !DIExpression(), !2891)
  %_6 = icmp eq i64 %rhs, 0, !dbg !2892
  br i1 %_6, label %panic1, label %bb2, !dbg !2892

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h9baa8b25c99cffa1E(ptr align 8 %0) #20, !dbg !2890
  unreachable, !dbg !2890

bb2:                                              ; preds = %bb1
  %r = urem i64 %self, %rhs, !dbg !2892
  store i64 %r, ptr %r.dbg.spill, align 8, !dbg !2892
    #dbg_declare(ptr %r.dbg.spill, !2886, !DIExpression(), !2893)
  %_7 = icmp ugt i64 %r, 0, !dbg !2894
  br i1 %_7, label %bb3, label %bb5, !dbg !2894

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h33ec7c25b61c77dbE(ptr align 8 %0) #20, !dbg !2892
  unreachable, !dbg !2892

bb5:                                              ; preds = %bb2
  store i64 %d, ptr %_0, align 8, !dbg !2895
  br label %bb6, !dbg !2896

bb3:                                              ; preds = %bb2
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %d, i64 1), !dbg !2897
  %_8.0 = extractvalue { i64, i1 } %1, 0, !dbg !2897
  %_8.1 = extractvalue { i64, i1 } %1, 1, !dbg !2897
  br i1 %_8.1, label %panic2, label %bb4, !dbg !2897

bb6:                                              ; preds = %bb4, %bb5
  %2 = load i64, ptr %_0, align 8, !dbg !2898
  ret i64 %2, !dbg !2898

bb4:                                              ; preds = %bb3
  store i64 %_8.0, ptr %_0, align 8, !dbg !2897
  br label %bb6, !dbg !2896

panic2:                                           ; preds = %bb3
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 %0) #20, !dbg !2897
  unreachable, !dbg !2897
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h931e6ead3df1050fE"(i32 signext %0) unnamed_addr #1 !dbg !2899 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !2904, !DIExpression(), !2907)
  %1 = load i32, ptr %self, align 4, !dbg !2908
  %2 = icmp eq i32 %1, 1114112, !dbg !2908
  %_2 = select i1 %2, i64 0, i64 1, !dbg !2908
  %3 = icmp eq i64 %_2, 0, !dbg !2909
  br i1 %3, label %bb3, label %bb2, !dbg !2909

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !2910
  br label %bb6, !dbg !2910

bb2:                                              ; preds = %start
  %x = load i32, ptr %self, align 4, !dbg !2911
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !2911
    #dbg_declare(ptr %x.dbg.spill, !2905, !DIExpression(), !2912)
  store i32 %x, ptr %_0, align 4, !dbg !2913
  br label %bb6, !dbg !2914

bb6:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %self, align 4, !dbg !2915
  %5 = icmp eq i32 %4, 1114112, !dbg !2915
  %_4 = select i1 %5, i64 0, i64 1, !dbg !2915
  %6 = icmp eq i64 %_4, 1, !dbg !2915
  br i1 %6, label %bb4, label %bb5, !dbg !2915

bb4:                                              ; preds = %bb5, %bb6
  %7 = load i32, ptr %_0, align 4, !dbg !2916
  ret i32 %7, !dbg !2916

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !2915

bb1:                                              ; No predecessors!
  unreachable, !dbg !2908
}

; core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::from_try
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h1caaea004344712eE"() unnamed_addr #1 !dbg !2917 {
start:
  %v.dbg.spill1 = alloca [0 x i8], align 1
  %v.dbg.spill = alloca [0 x i8], align 1
  %r.dbg.spill = alloca [0 x i8], align 1
  %_2 = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
    #dbg_declare(ptr %r.dbg.spill, !2924, !DIExpression(), !2929)
    #dbg_declare(ptr %v.dbg.spill, !2925, !DIExpression(), !2930)
    #dbg_declare(ptr %v.dbg.spill1, !2927, !DIExpression(), !2931)
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::branch
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h80636d330e2d6154E"() #19, !dbg !2932
  br label %bb4, !dbg !2933

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2934
  br label %bb6, !dbg !2935

bb6:                                              ; preds = %bb3, %bb4
  %0 = load i8, ptr %_0, align 1, !dbg !2936
  %1 = trunc i8 %0 to i1, !dbg !2936
  ret i1 %1, !dbg !2936

bb3:                                              ; No predecessors!
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::FromResidual<core::ops::try_trait::NeverShortCircuitResidual>>::from_residual
  call void @"_ZN158_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..try_trait..NeverShortCircuitResidual$GT$$GT$13from_residual17hda002c82c25223a6E"() #19, !dbg !2937
  store i8 1, ptr %_0, align 1, !dbg !2938
  br label %bb6, !dbg !2939

bb2:                                              ; No predecessors!
  unreachable, !dbg !2932
}

; core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::into_try
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17heb5fe5b30a334288E"(i1 zeroext %0) unnamed_addr #1 !dbg !2940 {
start:
  %v.dbg.spill1 = alloca [0 x i8], align 1
  %v.dbg.spill = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
    #dbg_declare(ptr %self, !2945, !DIExpression(), !2950)
    #dbg_declare(ptr %v.dbg.spill, !2946, !DIExpression(), !2951)
    #dbg_declare(ptr %v.dbg.spill1, !2948, !DIExpression(), !2952)
  %2 = load i8, ptr %self, align 1, !dbg !2953
  %3 = trunc i8 %2 to i1, !dbg !2953
  %_2 = zext i1 %3 to i64, !dbg !2953
  %4 = icmp eq i64 %_2, 0, !dbg !2954
  br i1 %4, label %bb3, label %bb2, !dbg !2954

bb3:                                              ; preds = %start
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17he735945b32468a36E"() #19, !dbg !2955
  br label %bb4, !dbg !2955

bb2:                                              ; preds = %start
  br label %bb4, !dbg !2956

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !2957

bb1:                                              ; No predecessors!
  unreachable, !dbg !2953
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint noredzone nounwind
define internal i16 @_ZN4core3ops8function5FnMut8call_mut17h7989d0ab572576f1E(ptr align 1 %_1, i16 %0) unnamed_addr #1 !dbg !2958 {
start:
  %1 = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [2 x i8], align 2
  %_2 = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_2, ptr align 2 %2, i64 2, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !2966, !DIExpression(), !2974)
    #dbg_declare(ptr %_2, !2967, !DIExpression(), !2974)
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %_2, i64 2, i1 false), !dbg !2974
  %3 = load i16, ptr %1, align 2, !dbg !2974
; call core::num::<impl u16>::from_be_bytes
  %_0 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_be_bytes17h5d55dbcf25f37a80E"(i16 %3) #19, !dbg !2974
  ret i16 %_0, !dbg !2974
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint noredzone nounwind
define internal i16 @_ZN4core3ops8function5FnMut8call_mut17hbbad6afb38ae9aacE(ptr align 1 %_1, i16 %0) unnamed_addr #1 !dbg !2975 {
start:
  %1 = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [2 x i8], align 2
  %_2 = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_2, ptr align 2 %2, i64 2, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !2977, !DIExpression(), !2979)
    #dbg_declare(ptr %_2, !2978, !DIExpression(), !2979)
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %_2, i64 2, i1 false), !dbg !2979
  %3 = load i16, ptr %1, align 2, !dbg !2979
; call core::num::<impl u16>::from_le_bytes
  %_0 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17hf064cb1cd367c2e9E"(i16 %3) #19, !dbg !2979
  ret i16 %_0, !dbg !2979
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: noredzone nounwind
define dso_local i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h2f73320d6fb7f6d0E"(ptr align 1 %self, i16 %0) unnamed_addr #0 !dbg !2980 {
start:
  %1 = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [2 x i8], align 2
  %args = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %args, ptr align 2 %2, i64 2, i1 false)
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2984, !DIExpression(), !2988)
    #dbg_declare(ptr %args, !2985, !DIExpression(), !2989)
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %args, i64 2, i1 false), !dbg !2990
  %3 = load i16, ptr %1, align 2, !dbg !2990
; call core::ops::function::FnMut::call_mut
  %_0 = call i16 @_ZN4core3ops8function5FnMut8call_mut17h7989d0ab572576f1E(ptr align 1 %self, i16 %3) #19, !dbg !2990
  ret i16 %_0, !dbg !2991
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: noredzone nounwind
define dso_local i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17he49726397a5040ccE"(ptr align 1 %self, i16 %0) unnamed_addr #0 !dbg !2992 {
start:
  %1 = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [2 x i8], align 2
  %args = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %args, ptr align 2 %2, i64 2, i1 false)
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !2994, !DIExpression(), !2996)
    #dbg_declare(ptr %args, !2995, !DIExpression(), !2997)
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %args, i64 2, i1 false), !dbg !2998
  %3 = load i16, ptr %1, align 2, !dbg !2998
; call core::ops::function::FnMut::call_mut
  %_0 = call i16 @_ZN4core3ops8function5FnMut8call_mut17hbbad6afb38ae9aacE(ptr align 1 %self, i16 %3) #19, !dbg !2998
  ret i16 %_0, !dbg !2999
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h98dfac8b1641c412E"(ptr align 8 %f) unnamed_addr #1 !dbg !3000 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !3008, !DIExpression(), !3009)
  ret ptr %f, !dbg !3010
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217hf7734f8bacd29157E"(ptr align 8 %f) unnamed_addr #1 !dbg !3011 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !3018, !DIExpression(), !3019)
  ret ptr %f, !dbg !3020
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h1641c08e0e8259a1E"(ptr align 8 %_1, i32 signext %b) unnamed_addr #1 !dbg !3021 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3027, !DIExpression(DW_OP_deref), !3028)
    #dbg_declare(ptr %a.dbg.spill, !3025, !DIExpression(), !3029)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !3026, !DIExpression(), !3030)
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h62f5d3aa93029042E"(ptr align 8 %_1, i32 signext %b) #19, !dbg !3031
  ret void, !dbg !3032
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17hf30d866d56315808E"(ptr align 8 %_1, i32 signext %b) unnamed_addr #1 !dbg !3033 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3039, !DIExpression(DW_OP_deref), !3040)
    #dbg_declare(ptr %a.dbg.spill, !3037, !DIExpression(), !3041)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !3038, !DIExpression(), !3042)
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h2b128d7671aea31cE"(ptr align 8 %_1, i32 signext %b) #19, !dbg !3043
  ret void, !dbg !3044
}

; core::ptr::read_volatile
; Function Attrs: inlinehint noredzone nounwind
define dso_local i8 @_ZN4core3ptr13read_volatile17h714bdb722e2b088bE(ptr %src) unnamed_addr #1 !dbg !3045 {
start:
  %0 = alloca [1 x i8], align 1
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !3050, !DIExpression(), !3051)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3052
  br i1 %_2, label %bb2, label %bb4, !dbg !3052

bb4:                                              ; preds = %bb2, %start
  %1 = load volatile i8, ptr %src, align 1, !dbg !3054
  store i8 %1, ptr %0, align 1, !dbg !3054
  %_0 = load i8, ptr %0, align 1, !dbg !3054
  ret i8 %_0, !dbg !3055

bb2:                                              ; preds = %start
; call core::ptr::read_volatile::precondition_check
  call void @_ZN4core3ptr13read_volatile18precondition_check17hca0cf469d8ed1accE(ptr %src, i64 1, i1 zeroext false) #19, !dbg !3056
  br label %bb4, !dbg !3056
}

; core::ptr::read_volatile::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3ptr13read_volatile18precondition_check17hca0cf469d8ed1accE(ptr %addr, i64 %align, i1 zeroext %is_zst) unnamed_addr #1 !dbg !3057 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %addr.dbg.spill = alloca [8 x i8], align 8
  store ptr %addr, ptr %addr.dbg.spill, align 8
    #dbg_declare(ptr %addr.dbg.spill, !3060, !DIExpression(), !3063)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !3061, !DIExpression(), !3063)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !3062, !DIExpression(), !3063)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %addr, i64 %align, i1 zeroext %is_zst) #19, !dbg !3064
  br i1 %_4, label %bb2, label %bb3, !dbg !3064

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_d4d2a2a8539eafc62756407d946babb3, i64 110) #20, !dbg !3066
  unreachable, !dbg !3066

bb2:                                              ; preds = %start
  ret void, !dbg !3067
}

; core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17hd0cd1a95236e015dE"(ptr align 8 %_1) unnamed_addr #0 !dbg !3068 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3092, !DIExpression(), !3095)
; call <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he8242861257fb4f1E"(ptr align 8 %_1) #19, !dbg !3095
  ret void, !dbg !3095
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h93ab6bc7c634651bE(ptr %data, i64 %len) unnamed_addr #1 !dbg !3096 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !3105, !DIExpression(), !3107)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !3106, !DIExpression(), !3108)
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h05bc0f2b21cd6fd0E(ptr %data, i64 %len) #19, !dbg !3109
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !3109
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !3109
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !3110
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !3110
  ret { ptr, i64 } %2, !dbg !3110
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc2637c05955ff3d5E(ptr %data, i64 %len) unnamed_addr #1 !dbg !3111 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !3120, !DIExpression(), !3122)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !3121, !DIExpression(), !3123)
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17had41452b219de104E(ptr %data, i64 %len) #19, !dbg !3124
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !3124
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !3124
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !3125
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !3125
  ret { ptr, i64 } %2, !dbg !3125
}

; core::ptr::drop_in_place<alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17hdd2efb14eebc5b8bE"(ptr align 8 %_1) unnamed_addr #0 !dbg !3126 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3131, !DIExpression(), !3132)
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %_1) #19, !dbg !3132
  ret void, !dbg !3132
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h6d5a020ae49863f9E(ptr %data, i64 %len) unnamed_addr #1 !dbg !3133 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !3137, !DIExpression(), !3139)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !3138, !DIExpression(), !3140)
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hfd111c9dff9c7b33E(ptr %data, i64 %len) #19, !dbg !3141
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !3141
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !3141
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !3142
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !3142
  ret { ptr, i64 } %2, !dbg !3142
}

; core::ptr::drop_in_place<usize>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr26drop_in_place$LT$usize$GT$17h26cff127ab46f82eE"(ptr align 8 %_1) unnamed_addr #1 !dbg !3143 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3148, !DIExpression(), !3149)
  ret void, !dbg !3149
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2e76790e6722d9caE"(ptr align 8 %_1) unnamed_addr #1 !dbg !3150 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3155, !DIExpression(), !3156)
  ret void, !dbg !3156
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h1698b470aad21974E"(ptr align 8 %_1) unnamed_addr #1 !dbg !3157 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3162, !DIExpression(), !3163)
  ret void, !dbg !3163
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17heda7b8d9e9a04d0aE"(ptr align 1 %_1) unnamed_addr #1 !dbg !3164 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3169, !DIExpression(), !3172)
  ret void, !dbg !3172
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %_1) unnamed_addr #0 !dbg !3173 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3178, !DIExpression(), !3180)
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h3e5ac1a2fc7a82ffE"(ptr align 8 %_1) #19, !dbg !3180
  ret void, !dbg !3180
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h3e5ac1a2fc7a82ffE"(ptr align 8 %_1) unnamed_addr #0 !dbg !3181 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3186, !DIExpression(), !3187)
; call <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdaf5ef8f0552c2caE"(ptr align 8 %_1) #19, !dbg !3187
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hdae0bff5a98dabeeE"(ptr align 8 %_1) #19, !dbg !3187
  ret void, !dbg !3187
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h3769aa7d242c253dE"(ptr align 8 %_1) unnamed_addr #1 !dbg !3188 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3193, !DIExpression(), !3194)
  ret void, !dbg !3194
}

; core::ptr::drop_in_place<alloc::string::FromUtf8Error>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h4655c8c2d5c9086eE"(ptr align 8 %_1) unnamed_addr #0 !dbg !3195 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3204, !DIExpression(), !3207)
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h3e5ac1a2fc7a82ffE"(ptr align 8 %_1) #19, !dbg !3207
  ret void, !dbg !3207
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr4read17h2e437cd775b4c54bE(ptr %src) unnamed_addr #1 !dbg !3208 {
start:
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !3213, !DIExpression(), !3214)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3215
  br i1 %_2, label %bb2, label %bb4, !dbg !3215

bb4:                                              ; preds = %bb2, %start
  %_0.0 = load ptr, ptr %src, align 8, !dbg !3217
  %0 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !3217
  %_0.1 = load i64, ptr %0, align 8, !dbg !3217
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !3218
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !3218
  ret { ptr, i64 } %2, !dbg !3218

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E(ptr %src, i64 8, i1 zeroext false) #19, !dbg !3219
  br label %bb4, !dbg !3219
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @_ZN4core3ptr4read17h909e5ee099ae3bacE(ptr %src) unnamed_addr #1 !dbg !3220 {
start:
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !3225, !DIExpression(), !3228)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3229
  br i1 %_2, label %bb2, label %bb4, !dbg !3229

bb4:                                              ; preds = %bb2, %start
  %_0.0 = load i64, ptr %src, align 8, !dbg !3231
  %0 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !3231
  %_0.1 = load ptr, ptr %0, align 8, !dbg !3231
  %1 = insertvalue { i64, ptr } poison, i64 %_0.0, 0, !dbg !3232
  %2 = insertvalue { i64, ptr } %1, ptr %_0.1, 1, !dbg !3232
  ret { i64, ptr } %2, !dbg !3232

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E(ptr %src, i64 8, i1 zeroext false) #19, !dbg !3233
  br label %bb4, !dbg !3233
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @_ZN4core3ptr4read17h9d8e0c1e8c9002dbE(ptr %src) unnamed_addr #1 !dbg !3234 {
start:
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !3239, !DIExpression(), !3240)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3241
  br i1 %_2, label %bb2, label %bb4, !dbg !3241

bb4:                                              ; preds = %bb2, %start
  %_0.0 = load i16, ptr %src, align 2, !dbg !3243
  %0 = getelementptr inbounds i8, ptr %src, i64 2, !dbg !3243
  %_0.1 = load i16, ptr %0, align 2, !dbg !3243
  %1 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !3244
  %2 = insertvalue { i16, i16 } %1, i16 %_0.1, 1, !dbg !3244
  ret { i16, i16 } %2, !dbg !3244

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E(ptr %src, i64 2, i1 zeroext false) #19, !dbg !3245
  br label %bb4, !dbg !3245
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core3ptr4read17he810e9133f8e596eE(ptr %src) unnamed_addr #1 !dbg !3246 {
start:
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !3251, !DIExpression(), !3252)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3253
  br i1 %_2, label %bb2, label %bb4, !dbg !3253

bb4:                                              ; preds = %bb2, %start
  %_0.0 = load ptr, ptr %src, align 8, !dbg !3255
  %0 = getelementptr inbounds i8, ptr %src, i64 8, !dbg !3255
  %_0.1 = load ptr, ptr %0, align 8, !dbg !3255
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !3256
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !3256
  ret { ptr, ptr } %2, !dbg !3256

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E(ptr %src, i64 8, i1 zeroext false) #19, !dbg !3257
  br label %bb4, !dbg !3257
}

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core3ptr4read17hf0e7eddf83f137d7E(ptr %src) unnamed_addr #1 !dbg !3258 {
start:
  %src.dbg.spill = alloca [8 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !3263, !DIExpression(), !3266)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3267
  br i1 %_2, label %bb2, label %bb4, !dbg !3267

bb4:                                              ; preds = %bb2, %start
  ret void, !dbg !3269

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E(ptr %src, i64 1, i1 zeroext true) #19, !dbg !3270
  br label %bb4, !dbg !3270
}

; core::ptr::read::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E(ptr %addr, i64 %align, i1 zeroext %is_zst) unnamed_addr #1 !dbg !3271 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %addr.dbg.spill = alloca [8 x i8], align 8
  store ptr %addr, ptr %addr.dbg.spill, align 8
    #dbg_declare(ptr %addr.dbg.spill, !3274, !DIExpression(), !3277)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !3275, !DIExpression(), !3277)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !3276, !DIExpression(), !3277)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %addr, i64 %align, i1 zeroext %is_zst) #19, !dbg !3278
  br i1 %_4, label %bb2, label %bb3, !dbg !3278

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_981fd9513041e1603a1d1d7b668a749d, i64 101) #20, !dbg !3280
  unreachable, !dbg !3280

bb2:                                              ; preds = %start
  ret void, !dbg !3281
}

; core::ptr::drop_in_place<alloc::borrow::Cow<str>>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %_1) unnamed_addr #0 !dbg !3282 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3302, !DIExpression(), !3305)
  %0 = load i64, ptr %_1, align 8, !dbg !3305
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !3305
  %_2 = select i1 %1, i64 0, i64 1, !dbg !3305
  %2 = icmp eq i64 %_2, 0, !dbg !3305
  br i1 %2, label %bb1, label %bb2, !dbg !3305

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3305

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %_1) #19, !dbg !3305
  br label %bb1, !dbg !3305
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hdae0bff5a98dabeeE"(ptr align 8 %_1) unnamed_addr #0 !dbg !3306 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3311, !DIExpression(), !3312)
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h320ebc5f8ac34099E"(ptr align 8 %_1) #19, !dbg !3312
  ret void, !dbg !3312
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17hc51ec1a8ee64cbf5E"(ptr align 1 %_1) unnamed_addr #1 !dbg !3313 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3318, !DIExpression(), !3321)
  ret void, !dbg !3321
}

; core::ptr::drop_in_place<&core::option::Option<u8>>
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17hec7bea8fa6c5667fE"(ptr align 8 %_1) unnamed_addr #1 !dbg !3322 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3327, !DIExpression(), !3330)
  ret void, !dbg !3330
}

; core::ptr::drop_in_place<alloc::vec::drain::Drain<u8>>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17hd26f3abebc46171bE"(ptr align 8 %_1) unnamed_addr #0 !dbg !3331 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3336, !DIExpression(), !3339)
; call <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbb029c7b50692847E"(ptr align 8 %_1) #19, !dbg !3339
  ret void, !dbg !3339
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hbf51f9f937146909E"(ptr align 8 %_1) unnamed_addr #0 !dbg !3340 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !3345, !DIExpression(), !3346)
  %_6.0 = load ptr, ptr %_1, align 8, !dbg !3346
  %0 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !3346
  %_6.1 = load i64, ptr %0, align 8, !dbg !3346
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09b9ddd7b4a3eacdE"(ptr align 8 %_1) #19, !dbg !3346
  ret void, !dbg !3346
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core3ptr5write17h3dda0bd55031b673E(ptr %dst, i16 %src.0, i16 %src.1) unnamed_addr #1 !dbg !3347 {
start:
  %src.dbg.spill = alloca [4 x i8], align 2
  %dst.dbg.spill = alloca [8 x i8], align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !3352, !DIExpression(), !3354)
  store i16 %src.0, ptr %src.dbg.spill, align 2
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i64 2
  store i16 %src.1, ptr %0, align 2
    #dbg_declare(ptr %src.dbg.spill, !3353, !DIExpression(), !3355)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3356
  br i1 %_3, label %bb2, label %bb4, !dbg !3356

bb4:                                              ; preds = %bb2, %start
  store i16 %src.0, ptr %dst, align 2, !dbg !3358
  %1 = getelementptr inbounds i8, ptr %dst, i64 2, !dbg !3358
  store i16 %src.1, ptr %1, align 2, !dbg !3358
  ret void, !dbg !3359

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h1f9c7ca54558bd85E(ptr %dst, i64 2, i1 zeroext false) #19, !dbg !3360
  br label %bb4, !dbg !3360
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core3ptr5write17h578f9e803926fa08E(ptr %dst, i8 zeroext %src) unnamed_addr #1 !dbg !3361 {
start:
  %src.dbg.spill = alloca [1 x i8], align 1
  %dst.dbg.spill = alloca [8 x i8], align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !3366, !DIExpression(), !3368)
  store i8 %src, ptr %src.dbg.spill, align 1
    #dbg_declare(ptr %src.dbg.spill, !3367, !DIExpression(), !3369)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3370
  br i1 %_3, label %bb2, label %bb4, !dbg !3370

bb4:                                              ; preds = %bb2, %start
  store i8 %src, ptr %dst, align 1, !dbg !3372
  ret void, !dbg !3373

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h1f9c7ca54558bd85E(ptr %dst, i64 1, i1 zeroext false) #19, !dbg !3374
  br label %bb4, !dbg !3374
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core3ptr5write17hd2da871d5984becbE(ptr %dst, ptr %src.0, ptr %src.1) unnamed_addr #1 !dbg !3375 {
start:
  %src.dbg.spill = alloca [16 x i8], align 8
  %dst.dbg.spill = alloca [8 x i8], align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !3380, !DIExpression(), !3382)
  store ptr %src.0, ptr %src.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i64 8
  store ptr %src.1, ptr %0, align 8
    #dbg_declare(ptr %src.dbg.spill, !3381, !DIExpression(), !3383)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3384
  br i1 %_3, label %bb2, label %bb4, !dbg !3384

bb4:                                              ; preds = %bb2, %start
  store ptr %src.0, ptr %dst, align 8, !dbg !3386
  %1 = getelementptr inbounds i8, ptr %dst, i64 8, !dbg !3386
  store ptr %src.1, ptr %1, align 8, !dbg !3386
  ret void, !dbg !3387

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h1f9c7ca54558bd85E(ptr %dst, i64 8, i1 zeroext false) #19, !dbg !3388
  br label %bb4, !dbg !3388
}

; core::ptr::write
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core3ptr5write17he9b8da1104db5e9fE(ptr %dst, ptr align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !3389 {
start:
  %src.dbg.spill = alloca [16 x i8], align 8
  %dst.dbg.spill = alloca [8 x i8], align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !3393, !DIExpression(), !3395)
  store ptr %src.0, ptr %src.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i64 8
  store i64 %src.1, ptr %0, align 8
    #dbg_declare(ptr %src.dbg.spill, !3394, !DIExpression(), !3396)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3397
  br i1 %_3, label %bb2, label %bb4, !dbg !3397

bb4:                                              ; preds = %bb2, %start
  store ptr %src.0, ptr %dst, align 8, !dbg !3399
  %1 = getelementptr inbounds i8, ptr %dst, i64 8, !dbg !3399
  store i64 %src.1, ptr %1, align 8, !dbg !3399
  ret void, !dbg !3400

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h1f9c7ca54558bd85E(ptr %dst, i64 8, i1 zeroext false) #19, !dbg !3401
  br label %bb4, !dbg !3401
}

; core::ptr::write::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core3ptr5write18precondition_check17h1f9c7ca54558bd85E(ptr %addr, i64 %align, i1 zeroext %is_zst) unnamed_addr #1 !dbg !3402 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %addr.dbg.spill = alloca [8 x i8], align 8
  store ptr %addr, ptr %addr.dbg.spill, align 8
    #dbg_declare(ptr %addr.dbg.spill, !3407, !DIExpression(), !3410)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !3408, !DIExpression(), !3410)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !3409, !DIExpression(), !3410)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %addr, i64 %align, i1 zeroext %is_zst) #19, !dbg !3411
  br i1 %_4, label %bb2, label %bb3, !dbg !3411

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_b7474065d782af00c4610bb4ef55210b, i64 102) #20, !dbg !3413
  unreachable, !dbg !3413

bb2:                                              ; preds = %start
  ret void, !dbg !3414
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1ccfc74c589b8c82E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3415 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3432, !DIExpression(), !3433)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10390270927a683aE"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !3434
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !3434
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !3434
  %2 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !3435
  %3 = insertvalue { ptr, i64 } %2, i64 %_2.1, 1, !dbg !3435
  ret { ptr, i64 } %3, !dbg !3435
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5b03a388edb65e62E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3436 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3459, !DIExpression(), !3460)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8e18d9a642bc4dcbE"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !3461
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !3461
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !3461
  %2 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !3462
  %3 = insertvalue { ptr, i64 } %2, i64 %_2.1, 1, !dbg !3462
  ret { ptr, i64 } %3, !dbg !3462
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc18eeea7ef5fa95bE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3463 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3477, !DIExpression(), !3478)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8604ea24a1f3cfe7E"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !3479
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !3479
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !3479
  %2 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !3480
  %3 = insertvalue { ptr, i64 } %2, i64 %_2.1, 1, !dbg !3480
  ret { ptr, i64 } %3, !dbg !3480
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hcfa3c6ac58bfea4aE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3481 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3502, !DIExpression(), !3503)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf86ddfcb6acb57ebE"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !3504
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !3504
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !3504
  %2 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !3505
  %3 = insertvalue { ptr, i64 } %2, i64 %_2.1, 1, !dbg !3505
  ret { ptr, i64 } %3, !dbg !3505
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd8a863cceea1dd7cE"(ptr %ptr) unnamed_addr #1 !dbg !3506 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3511, !DIExpression(), !3512)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdd2dd5e2574d3004E"(ptr %ptr) #19, !dbg !3513
  ret ptr %_2, !dbg !3514
}

; core::ptr::unique::Unique<T>::as_non_null_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h01259becb5e317e0E"(ptr %self) unnamed_addr #1 !dbg !3515 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3518, !DIExpression(), !3519)
  ret ptr %self, !dbg !3520
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h868fc1eb7ffbefb1E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3521 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !3526, !DIExpression(), !3527)
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7839b8f23029f390E"(ptr %self.0, i64 %self.1) #19, !dbg !3528
  ret ptr %_2, !dbg !3529
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hb7f0e71d357e661aE"(ptr %self) unnamed_addr #1 !dbg !3530 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3535, !DIExpression(), !3536)
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7778508a78035cbaE"(ptr %self) #19, !dbg !3537
  ret ptr %_2, !dbg !3538
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h57809246cddec3c6E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3539 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !3544, !DIExpression(), !3545)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3546, !DIExpression(), !3552)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !3554
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !3554
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3555
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3555
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !3556
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !3556
  ret { ptr, i64 } %5, !dbg !3556
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hc032be863a5aadc0E"() unnamed_addr #1 !dbg !3557 {
start:
; call core::ptr::non_null::NonNull<T>::dangling
  %_1 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h7f837a49b7871e24E"() #19, !dbg !3575
  ret ptr %_1, !dbg !3576
}

; core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %this, i64 %count, i64 %size) unnamed_addr #1 !dbg !3577 {
start:
  %size.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !3582, !DIExpression(), !3585)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !3583, !DIExpression(), !3585)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !3584, !DIExpression(), !3585)
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h71a7edaff8983bf7E"(ptr %this, i64 %count, i64 %size) #19, !dbg !3586
  br i1 %_4, label %bb2, label %bb3, !dbg !3586

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_0a14891e1e5c702b367f18048e678740, i64 97) #20, !dbg !3588
  unreachable, !dbg !3588

bb2:                                              ; preds = %start
  ret void, !dbg !3589
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h71a7edaff8983bf7E"(ptr %this, i64 %count, i64 %size) unnamed_addr #1 !dbg !3590 {
start:
  %size.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !3594, !DIExpression(), !3597)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !3595, !DIExpression(), !3598)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !3596, !DIExpression(), !3599)
  store ptr %this, ptr %_4, align 8, !dbg !3600
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !3600
  store i64 %count, ptr %0, align 8, !dbg !3600
  %1 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !3600
  store i64 %size, ptr %1, align 8, !dbg !3600
  %2 = load ptr, ptr %_4, align 8, !dbg !3602
  %3 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !3602
  %4 = load i64, ptr %3, align 8, !dbg !3602
  %5 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !3602
  %6 = load i64, ptr %5, align 8, !dbg !3602
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17he1785df49f7b348aE"(ptr %2, i64 %4, i64 %6) #19, !dbg !3602
  ret i1 %_0, !dbg !3603
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17he1785df49f7b348aE"(ptr %this, i64 %count, i64 %size) unnamed_addr #1 !dbg !3604 {
start:
  %self.dbg.spill.i2 = alloca [8 x i8], align 8
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !3607, !DIExpression(), !3614)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !3608, !DIExpression(), !3614)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !3609, !DIExpression(), !3614)
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE"(i64 %count, i64 %size) #19, !dbg !3615
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !3615
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !3615
  store i64 %1, ptr %_5, align 8, !dbg !3615
  %3 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !3615
  store i64 %2, ptr %3, align 8, !dbg !3615
  %_6 = load i64, ptr %_5, align 8, !dbg !3615
  %4 = icmp eq i64 %_6, 1, !dbg !3617
  br i1 %4, label %bb2, label %bb3, !dbg !3617

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !3618
  %byte_offset = load i64, ptr %5, align 8, !dbg !3618
  store i64 %byte_offset, ptr %byte_offset.dbg.spill, align 8, !dbg !3618
    #dbg_declare(ptr %byte_offset.dbg.spill, !3610, !DIExpression(), !3619)
  store ptr %this, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !3620, !DIExpression(), !3625)
  store ptr %this, ptr %self.dbg.spill.i2, align 8
    #dbg_declare(ptr %self.dbg.spill.i2, !3627, !DIExpression(), !3634)
  %_0.i = ptrtoint ptr %this to i64, !dbg !3636
  store i64 %_0.i, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2814, !DIExpression(), !3637)
  store i64 %byte_offset, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !2817, !DIExpression(), !3639)
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i, i64 %byte_offset), !dbg !3640
  %_5.0.i = extractvalue { i64, i1 } %6, 0, !dbg !3640
  %_5.1.i = extractvalue { i64, i1 } %6, 1, !dbg !3640
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !3641
    #dbg_declare(ptr %a.dbg.spill.i, !2818, !DIExpression(), !3642)
  %7 = zext i1 %_5.1.i to i8, !dbg !3643
  store i8 %7, ptr %b.dbg.spill.i, align 1, !dbg !3643
    #dbg_declare(ptr %b.dbg.spill.i, !2820, !DIExpression(), !3644)
  %_8.0 = extractvalue { i64, i1 } %6, 0, !dbg !3645
  %_8.1 = extractvalue { i64, i1 } %6, 1, !dbg !3645
  %8 = zext i1 %_8.1 to i8, !dbg !3646
  store i8 %8, ptr %overflow.dbg.spill, align 1, !dbg !3646
    #dbg_declare(ptr %overflow.dbg.spill, !3612, !DIExpression(), !3647)
  %_10 = icmp ule i64 %byte_offset, 9223372036854775807, !dbg !3648
  br i1 %_10, label %bb6, label %bb7, !dbg !3648

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !3649
  br label %bb8, !dbg !3650

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !3648
  br label %bb8, !dbg !3648

bb6:                                              ; preds = %bb2
  %9 = xor i1 %_8.1, true, !dbg !3651
  %10 = zext i1 %9 to i8, !dbg !3651
  store i8 %10, ptr %_0, align 1, !dbg !3651
  br label %bb8, !dbg !3648

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %11 = load i8, ptr %_0, align 1, !dbg !3652
  %12 = trunc i8 %11 to i1, !dbg !3652
  ret i1 %12, !dbg !3652

bb9:                                              ; No predecessors!
  unreachable, !dbg !3653
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7ca6d387f0c6f0a1E"(ptr %self) unnamed_addr #1 !dbg !3654 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3658, !DIExpression(), !3659)
  store ptr %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3660, !DIExpression(), !3665)
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h55bba6fb1b551a04E"(ptr %self) #19, !dbg !3667
  ret i1 %_0, !dbg !3668
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h9974e5af26a1ad9bE"(ptr %self) unnamed_addr #1 !dbg !3669 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3673, !DIExpression(), !3674)
  store ptr %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3675, !DIExpression(), !3680)
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf87342fe1dcf4495E"(ptr %self) #19, !dbg !3682
  ret i1 %_0, !dbg !3683
}

; core::ptr::mut_ptr::<impl *mut T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h6486c3ed35f5c567E"(ptr %self, ptr %origin) unnamed_addr #1 !dbg !3684 {
start:
  %origin.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3689, !DIExpression(), !3691)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !3690, !DIExpression(), !3692)
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hbee069a125a583b1E"(ptr %self, ptr %origin) #19, !dbg !3693
  ret i64 %_0, !dbg !3694
}

; core::ptr::mut_ptr::<impl *mut T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h7a367b3b04a95fb4E"(ptr %self, ptr %origin) unnamed_addr #1 !dbg !3695 {
start:
  %origin.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3699, !DIExpression(), !3701)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !3700, !DIExpression(), !3702)
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17he3e986582cfad05cE"(ptr %self, ptr %origin) #19, !dbg !3703
  ret i64 %_0, !dbg !3704
}

; core::ptr::mut_ptr::<impl *mut T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h8a482fb13ea87352E"(ptr %self, ptr %origin) unnamed_addr #1 !dbg !3705 {
start:
  %origin.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3710, !DIExpression(), !3712)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !3711, !DIExpression(), !3713)
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h9539228fdfdd35ccE"(ptr %self, ptr %origin) #19, !dbg !3714
  ret i64 %_0, !dbg !3715
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h05bc0f2b21cd6fd0E(ptr %data_pointer, i64 %metadata) unnamed_addr #1 !dbg !3716 {
start:
  %metadata.dbg.spill = alloca [8 x i8], align 8
  %data_pointer.dbg.spill = alloca [8 x i8], align 8
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 8
    #dbg_declare(ptr %data_pointer.dbg.spill, !3720, !DIExpression(), !3724)
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
    #dbg_declare(ptr %metadata.dbg.spill, !3721, !DIExpression(), !3725)
  %0 = insertvalue { ptr, i64 } poison, ptr %data_pointer, 0, !dbg !3726
  %1 = insertvalue { ptr, i64 } %0, i64 %metadata, 1, !dbg !3726
  ret { ptr, i64 } %1, !dbg !3726
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr8metadata14from_raw_parts17had41452b219de104E(ptr %data_pointer, i64 %metadata) unnamed_addr #1 !dbg !3727 {
start:
  %metadata.dbg.spill = alloca [8 x i8], align 8
  %data_pointer.dbg.spill = alloca [8 x i8], align 8
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 8
    #dbg_declare(ptr %data_pointer.dbg.spill, !3729, !DIExpression(), !3733)
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
    #dbg_declare(ptr %metadata.dbg.spill, !3730, !DIExpression(), !3734)
  %0 = insertvalue { ptr, i64 } poison, ptr %data_pointer, 0, !dbg !3735
  %1 = insertvalue { ptr, i64 } %0, i64 %metadata, 1, !dbg !3735
  ret { ptr, i64 } %1, !dbg !3735
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hfd111c9dff9c7b33E(ptr %data_pointer, i64 %metadata) unnamed_addr #1 !dbg !3736 {
start:
  %metadata.dbg.spill = alloca [8 x i8], align 8
  %data_pointer.dbg.spill = alloca [8 x i8], align 8
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 8
    #dbg_declare(ptr %data_pointer.dbg.spill, !3738, !DIExpression(), !3742)
  store i64 %metadata, ptr %metadata.dbg.spill, align 8
    #dbg_declare(ptr %metadata.dbg.spill, !3739, !DIExpression(), !3743)
  %0 = insertvalue { ptr, i64 } poison, ptr %data_pointer, 0, !dbg !3744
  %1 = insertvalue { ptr, i64 } %0, i64 %metadata, 1, !dbg !3744
  ret { ptr, i64 } %1, !dbg !3744
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10390270927a683aE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3745 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3750, !DIExpression(), !3751)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3752
  br i1 %_2, label %bb2, label %bb3, !dbg !3752

bb3:                                              ; preds = %bb2, %start
  %1 = insertvalue { ptr, i64 } poison, ptr %ptr.0, 0, !dbg !3754
  %2 = insertvalue { ptr, i64 } %1, i64 %ptr.1, 1, !dbg !3754
  ret { ptr, i64 } %2, !dbg !3754

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr.0) #19, !dbg !3755
  br label %bb3, !dbg !3755
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h24ab239f65b2e2fdE"(ptr %ptr) unnamed_addr #1 !dbg !3756 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3762, !DIExpression(), !3763)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3764
  br i1 %_2, label %bb2, label %bb3, !dbg !3764

bb3:                                              ; preds = %bb2, %start
  ret ptr %ptr, !dbg !3766

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr) #19, !dbg !3767
  br label %bb3, !dbg !3767
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8604ea24a1f3cfe7E"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3768 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3773, !DIExpression(), !3774)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3775
  br i1 %_2, label %bb2, label %bb3, !dbg !3775

bb3:                                              ; preds = %bb2, %start
  %1 = insertvalue { ptr, i64 } poison, ptr %ptr.0, 0, !dbg !3777
  %2 = insertvalue { ptr, i64 } %1, i64 %ptr.1, 1, !dbg !3777
  ret { ptr, i64 } %2, !dbg !3777

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr.0) #19, !dbg !3778
  br label %bb3, !dbg !3778
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8e18d9a642bc4dcbE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3779 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3784, !DIExpression(), !3785)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3786
  br i1 %_2, label %bb2, label %bb3, !dbg !3786

bb3:                                              ; preds = %bb2, %start
  %1 = insertvalue { ptr, i64 } poison, ptr %ptr.0, 0, !dbg !3788
  %2 = insertvalue { ptr, i64 } %1, i64 %ptr.1, 1, !dbg !3788
  ret { ptr, i64 } %2, !dbg !3788

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr.0) #19, !dbg !3789
  br label %bb3, !dbg !3789
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdd2dd5e2574d3004E"(ptr %ptr) unnamed_addr #1 !dbg !3790 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3795, !DIExpression(), !3796)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3797
  br i1 %_2, label %bb2, label %bb3, !dbg !3797

bb3:                                              ; preds = %bb2, %start
  ret ptr %ptr, !dbg !3799

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr) #19, !dbg !3800
  br label %bb3, !dbg !3800
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf86ddfcb6acb57ebE"(ptr %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !3801 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3806, !DIExpression(), !3807)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !3808
  br i1 %_2, label %bb2, label %bb3, !dbg !3808

bb3:                                              ; preds = %bb2, %start
  %1 = insertvalue { ptr, i64 } poison, ptr %ptr.0, 0, !dbg !3810
  %2 = insertvalue { ptr, i64 } %1, i64 %ptr.1, 1, !dbg !3810
  ret { ptr, i64 } %2, !dbg !3810

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr.0) #19, !dbg !3811
  br label %bb3, !dbg !3811
}

; core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E"(ptr %ptr) unnamed_addr #1 !dbg !3812 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3818, !DIExpression(), !3819)
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7ca6d387f0c6f0a1E"(ptr %ptr) #19, !dbg !3820
  br i1 %_2, label %bb2, label %bb3, !dbg !3820

bb3:                                              ; preds = %start
  ret void, !dbg !3822

bb2:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_20b3d155afd5c58c42e598b7e6d186ef, i64 93) #20, !dbg !3823
  unreachable, !dbg !3823
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hf35a6d062855dc58E"(ptr %ptr) unnamed_addr #1 !dbg !3824 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !3842, !DIExpression(), !3843)
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h9974e5af26a1ad9bE"(ptr %ptr) #19, !dbg !3844
  br i1 %_2, label %bb2, label %bb3, !dbg !3844

bb3:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_3 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdd2dd5e2574d3004E"(ptr %ptr) #19, !dbg !3845
  store ptr %_3, ptr %_0, align 8, !dbg !3846
  br label %bb5, !dbg !3847

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8, !dbg !3848
  br label %bb5, !dbg !3847

bb5:                                              ; preds = %bb2, %bb3
  %0 = load ptr, ptr %_0, align 8, !dbg !3849
  ret ptr %0, !dbg !3849
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5f80deec9184cfdeE"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3850 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !3865, !DIExpression(), !3866)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3867, !DIExpression(), !3877)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !3879
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !3879
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3880
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3880
  ret ptr %_4.0, !dbg !3881
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7778508a78035cbaE"(ptr %self) unnamed_addr #1 !dbg !3882 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3887, !DIExpression(), !3888)
  store ptr %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3889, !DIExpression(), !3895)
  ret ptr %self, !dbg !3897
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haa995a3a05901304E"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !3898 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !3908, !DIExpression(), !3909)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3910, !DIExpression(), !3920)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !3922
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !3922
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !3923
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !3923
  ret ptr %_4.0, !dbg !3924
}

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h468fa7823ca4adccE"(ptr %self, ptr %subtracted) unnamed_addr #1 !dbg !3925 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %subtracted.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3930, !DIExpression(), !3932)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 8
    #dbg_declare(ptr %subtracted.dbg.spill, !3931, !DIExpression(), !3933)
  store ptr %self, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !3934, !DIExpression(), !3940)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3934, !DIExpression(), !3942)
; call core::ptr::mut_ptr::<impl *mut T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h8a482fb13ea87352E"(ptr %self, ptr %subtracted) #19, !dbg !3944
  ret i64 %_0, !dbg !3945
}

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h4dfe548463abd778E"(ptr %self, ptr %subtracted) unnamed_addr #1 !dbg !3946 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %subtracted.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3951, !DIExpression(), !3953)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 8
    #dbg_declare(ptr %subtracted.dbg.spill, !3952, !DIExpression(), !3954)
  store ptr %self, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !3955, !DIExpression(), !3961)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3955, !DIExpression(), !3963)
; call core::ptr::mut_ptr::<impl *mut T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h6486c3ed35f5c567E"(ptr %self, ptr %subtracted) #19, !dbg !3965
  ret i64 %_0, !dbg !3966
}

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hcd8796171527ec9bE"(ptr %self, ptr %subtracted) unnamed_addr #1 !dbg !3967 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %subtracted.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !3972, !DIExpression(), !3974)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 8
    #dbg_declare(ptr %subtracted.dbg.spill, !3973, !DIExpression(), !3975)
  store ptr %self, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !1341, !DIExpression(), !3976)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !1341, !DIExpression(), !3978)
; call core::ptr::mut_ptr::<impl *mut T>::sub_ptr
  %_0 = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h7a367b3b04a95fb4E"(ptr %self, ptr %subtracted) #19, !dbg !3980
  ret i64 %_0, !dbg !3981
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h7f837a49b7871e24E"() unnamed_addr #1 !dbg !3982 {
start:
  %addr.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8, !dbg !3989
  store i64 1, ptr %addr.dbg.spill.i, align 8
    #dbg_declare(ptr %addr.dbg.spill.i, !3990, !DIExpression(), !3995)
  store ptr inttoptr (i64 1 to ptr), ptr %ptr.dbg.spill, align 8, !dbg !3989
    #dbg_declare(ptr %ptr.dbg.spill, !3987, !DIExpression(), !4001)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h24ab239f65b2e2fdE"(ptr inttoptr (i64 1 to ptr)) #19, !dbg !4002
  ret ptr %_0, !dbg !4003
}

; core::ptr::non_null::NonNull<T>::from_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h244efbe8644ce377E"(ptr align 8 %r) unnamed_addr #1 !dbg !4004 {
start:
  %r.dbg.spill = alloca [8 x i8], align 8
  store ptr %r, ptr %r.dbg.spill, align 8
    #dbg_declare(ptr %r.dbg.spill, !4010, !DIExpression(), !4011)
  ret ptr %r, !dbg !4012
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h77f7fcff4f678f3eE"(ptr align 1 %r.0, i64 %r.1) unnamed_addr #1 !dbg !4013 {
start:
  %r.dbg.spill = alloca [16 x i8], align 8
  store ptr %r.0, ptr %r.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i64 8
  store i64 %r.1, ptr %0, align 8
    #dbg_declare(ptr %r.dbg.spill, !4022, !DIExpression(), !4023)
  %1 = insertvalue { ptr, i64 } poison, ptr %r.0, 0, !dbg !4024
  %2 = insertvalue { ptr, i64 } %1, i64 %r.1, 1, !dbg !4024
  ret { ptr, i64 } %2, !dbg !4024
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17ha943e422435483a1E"(ptr align 1 %r.0, i64 %r.1) unnamed_addr #1 !dbg !4025 {
start:
  %r.dbg.spill = alloca [16 x i8], align 8
  store ptr %r.0, ptr %r.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i64 8
  store i64 %r.1, ptr %0, align 8
    #dbg_declare(ptr %r.dbg.spill, !4034, !DIExpression(), !4035)
  %1 = insertvalue { ptr, i64 } poison, ptr %r.0, 0, !dbg !4036
  %2 = insertvalue { ptr, i64 } %1, i64 %r.1, 1, !dbg !4036
  ret { ptr, i64 } %2, !dbg !4036
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8ea954c26f14c1dfE"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !4037 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4042, !DIExpression(), !4043)
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2099230a19b7993fE"(ptr %self.0, i64 %self.1) #19, !dbg !4044
  store ptr %_2, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3889, !DIExpression(), !4045)
  ret ptr %_2, !dbg !4047
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2099230a19b7993fE"(ptr %self.0, i64 %self.1) unnamed_addr #1 !dbg !4048 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4053, !DIExpression(), !4054)
; call core::ptr::non_null::NonNull<T>::cast
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7839b8f23029f390E"(ptr %self.0, i64 %self.1) #19, !dbg !4055
  ret ptr %_0, !dbg !4056
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E"(ptr %data, i64 %len) unnamed_addr #1 !dbg !4057 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !4062, !DIExpression(), !4064)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !4063, !DIExpression(), !4065)
  store ptr %data, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3889, !DIExpression(), !4066)
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbe29bced288f50aaE(ptr %data, i64 %len) #19, !dbg !4068
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4068
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4068
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8604ea24a1f3cfe7E"(ptr %_3.0, i64 %_3.1) #19, !dbg !4069
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !4069
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !4069
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4070
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !4070
  ret { ptr, i64 } %3, !dbg !4070
}

; core::ptr::alignment::Alignment::as_usize
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h577df9ed10743be2E(i64 %self) unnamed_addr #1 !dbg !4071 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4077, !DIExpression(), !4078)
  store i64 %self, ptr %_2, align 8, !dbg !4079
  %_3 = load i64, ptr %_2, align 8, !dbg !4079
  %_4 = icmp uge i64 %_3, 1, !dbg !4079
  %_5 = icmp ule i64 %_3, -9223372036854775808, !dbg !4079
  %_6 = and i1 %_4, %_5, !dbg !4079
  ret i64 %_3, !dbg !4080
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h7c7f21c0a2a81ed1E"(ptr %self, ptr %dest, i64 %count) unnamed_addr #1 !dbg !4081 {
start:
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %dest.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4085, !DIExpression(), !4088)
  store ptr %dest, ptr %dest.dbg.spill, align 8
    #dbg_declare(ptr %dest.dbg.spill, !4086, !DIExpression(), !4089)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !4087, !DIExpression(), !4090)
  store ptr %self, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !4091, !DIExpression(), !4096)
  store ptr %dest, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !4094, !DIExpression(), !4098)
  store i64 %count, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !4095, !DIExpression(), !4099)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !4100
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !4100

bb2.i:                                            ; preds = %start
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %self, ptr %dest, i64 1, i64 1, i64 %count) #19, !dbg !4102
  br label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !4102

_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit: ; preds = %start, %bb2.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dest, ptr align 1 %self, i64 %count, i1 false), !dbg !4103
  ret void, !dbg !4104
}

; core::ptr::const_ptr::<impl *const T>::add::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E"(ptr %this, i64 %count, i64 %size) unnamed_addr #1 !dbg !4105 {
start:
  %size.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !4108, !DIExpression(), !4111)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !4109, !DIExpression(), !4111)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !4110, !DIExpression(), !4111)
; call core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h2e43117cd2c59ea1E"(ptr %this, i64 %count, i64 %size) #19, !dbg !4112
  br i1 %_4, label %bb2, label %bb3, !dbg !4112

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_0a14891e1e5c702b367f18048e678740, i64 97) #20, !dbg !4114
  unreachable, !dbg !4114

bb2:                                              ; preds = %start
  ret void, !dbg !4115
}

; core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h2e43117cd2c59ea1E"(ptr %this, i64 %count, i64 %size) unnamed_addr #1 !dbg !4116 {
start:
  %size.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !4118, !DIExpression(), !4121)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !4119, !DIExpression(), !4122)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !4120, !DIExpression(), !4123)
  store ptr %this, ptr %_4, align 8, !dbg !4124
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4124
  store i64 %count, ptr %0, align 8, !dbg !4124
  %1 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !4124
  store i64 %size, ptr %1, align 8, !dbg !4124
  %2 = load ptr, ptr %_4, align 8, !dbg !4126
  %3 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4126
  %4 = load i64, ptr %3, align 8, !dbg !4126
  %5 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !4126
  %6 = load i64, ptr %5, align 8, !dbg !4126
; call core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17h281ce41416f38da5E"(ptr %2, i64 %4, i64 %6) #19, !dbg !4126
  ret i1 %_0, !dbg !4127
}

; core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17h281ce41416f38da5E"(ptr %this, i64 %count, i64 %size) unnamed_addr #1 !dbg !4128 {
start:
  %self.dbg.spill.i2 = alloca [8 x i8], align 8
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !4131, !DIExpression(), !4138)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !4132, !DIExpression(), !4138)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !4133, !DIExpression(), !4138)
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE"(i64 %count, i64 %size) #19, !dbg !4139
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !4139
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !4139
  store i64 %1, ptr %_5, align 8, !dbg !4139
  %3 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !4139
  store i64 %2, ptr %3, align 8, !dbg !4139
  %_6 = load i64, ptr %_5, align 8, !dbg !4139
  %4 = icmp eq i64 %_6, 1, !dbg !4141
  br i1 %4, label %bb2, label %bb3, !dbg !4141

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !4142
  %byte_offset = load i64, ptr %5, align 8, !dbg !4142
  store i64 %byte_offset, ptr %byte_offset.dbg.spill, align 8, !dbg !4142
    #dbg_declare(ptr %byte_offset.dbg.spill, !4134, !DIExpression(), !4143)
  store ptr %this, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !3620, !DIExpression(), !4144)
  store ptr %this, ptr %self.dbg.spill.i2, align 8
    #dbg_declare(ptr %self.dbg.spill.i2, !3627, !DIExpression(), !4146)
  %_0.i = ptrtoint ptr %this to i64, !dbg !4148
  store i64 %_0.i, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2814, !DIExpression(), !4149)
  store i64 %byte_offset, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !2817, !DIExpression(), !4151)
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_0.i, i64 %byte_offset), !dbg !4152
  %_5.0.i = extractvalue { i64, i1 } %6, 0, !dbg !4152
  %_5.1.i = extractvalue { i64, i1 } %6, 1, !dbg !4152
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !4153
    #dbg_declare(ptr %a.dbg.spill.i, !2818, !DIExpression(), !4154)
  %7 = zext i1 %_5.1.i to i8, !dbg !4155
  store i8 %7, ptr %b.dbg.spill.i, align 1, !dbg !4155
    #dbg_declare(ptr %b.dbg.spill.i, !2820, !DIExpression(), !4156)
  %_8.0 = extractvalue { i64, i1 } %6, 0, !dbg !4157
  %_8.1 = extractvalue { i64, i1 } %6, 1, !dbg !4157
  %8 = zext i1 %_8.1 to i8, !dbg !4158
  store i8 %8, ptr %overflow.dbg.spill, align 1, !dbg !4158
    #dbg_declare(ptr %overflow.dbg.spill, !4136, !DIExpression(), !4159)
  %_10 = icmp ule i64 %byte_offset, 9223372036854775807, !dbg !4160
  br i1 %_10, label %bb6, label %bb7, !dbg !4160

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !4161
  br label %bb8, !dbg !4162

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !4160
  br label %bb8, !dbg !4160

bb6:                                              ; preds = %bb2
  %9 = xor i1 %_8.1, true, !dbg !4163
  %10 = zext i1 %9 to i8, !dbg !4163
  store i8 %10, ptr %_0, align 1, !dbg !4163
  br label %bb8, !dbg !4160

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %11 = load i8, ptr %_0, align 1, !dbg !4164
  %12 = trunc i8 %11 to i1, !dbg !4164
  ret i1 %12, !dbg !4164

bb9:                                              ; No predecessors!
  unreachable, !dbg !4165
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf87342fe1dcf4495E"(ptr %self) unnamed_addr #1 !dbg !4166 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4170, !DIExpression(), !4173)
  store ptr %self, ptr %ptr.dbg.spill, align 8, !dbg !4174
    #dbg_declare(ptr %ptr.dbg.spill, !4171, !DIExpression(), !4175)
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null7runtime17hbe7b8461a255eb05E"(ptr %self) #19, !dbg !4176
  ret i1 %_0, !dbg !4178
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null7runtime17hbe7b8461a255eb05E"(ptr %ptr) unnamed_addr #1 !dbg !4179 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !4182, !DIExpression(), !4183)
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4184, !DIExpression(), !4187)
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !4190, !DIExpression(), !4196)
  %_0.i = ptrtoint ptr %ptr to i64, !dbg !4198
  %_0 = icmp eq i64 %_0.i, 0, !dbg !4199
  ret i1 %_0, !dbg !4200
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h9539228fdfdd35ccE"(ptr %self, ptr %origin) unnamed_addr #1 !dbg !4201 {
start:
  %0 = alloca [8 x i8], align 8
  %pointee_size.dbg.spill = alloca [8 x i8], align 8
  %origin.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4205, !DIExpression(), !4209)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !4206, !DIExpression(), !4210)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !4211
  br i1 %_3, label %bb2, label %bb3, !dbg !4211

bb3:                                              ; preds = %bb2, %start
  store i64 1, ptr %pointee_size.dbg.spill, align 8, !dbg !4213
    #dbg_declare(ptr %pointee_size.dbg.spill, !4207, !DIExpression(), !4214)
  %_8 = icmp ult i64 0, 1, !dbg !4215
  br i1 %_8, label %bb5, label %bb7, !dbg !4215

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::sub_ptr::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr18precondition_check17hcc37f6d62006b3bdE"(ptr %self, ptr %origin) #19, !dbg !4216
  br label %bb3, !dbg !4216

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_d798000f5e29a7ace65ad32e5f0d1042) #20, !dbg !4217
  unreachable, !dbg !4217

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i64 1, 9223372036854775807, !dbg !4218
  br i1 %_9, label %bb6, label %bb7, !dbg !4218

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %self to i64, !dbg !4219
  %2 = ptrtoint ptr %origin to i64, !dbg !4219
  %3 = sub nuw i64 %1, %2, !dbg !4219
  %4 = udiv exact i64 %3, 1, !dbg !4219
  store i64 %4, ptr %0, align 8, !dbg !4219
  %_0 = load i64, ptr %0, align 8, !dbg !4219
  ret i64 %_0, !dbg !4220
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hbee069a125a583b1E"(ptr %self, ptr %origin) unnamed_addr #1 !dbg !4221 {
start:
  %0 = alloca [8 x i8], align 8
  %pointee_size.dbg.spill = alloca [8 x i8], align 8
  %origin.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4225, !DIExpression(), !4229)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !4226, !DIExpression(), !4230)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !4231
  br i1 %_3, label %bb2, label %bb3, !dbg !4231

bb3:                                              ; preds = %bb2, %start
  store i64 2, ptr %pointee_size.dbg.spill, align 8, !dbg !4233
    #dbg_declare(ptr %pointee_size.dbg.spill, !4227, !DIExpression(), !4234)
  %_8 = icmp ult i64 0, 2, !dbg !4235
  br i1 %_8, label %bb5, label %bb7, !dbg !4235

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::sub_ptr::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr18precondition_check17hcc37f6d62006b3bdE"(ptr %self, ptr %origin) #19, !dbg !4236
  br label %bb3, !dbg !4236

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_d798000f5e29a7ace65ad32e5f0d1042) #20, !dbg !4237
  unreachable, !dbg !4237

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i64 2, 9223372036854775807, !dbg !4238
  br i1 %_9, label %bb6, label %bb7, !dbg !4238

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %self to i64, !dbg !4239
  %2 = ptrtoint ptr %origin to i64, !dbg !4239
  %3 = sub nuw i64 %1, %2, !dbg !4239
  %4 = udiv exact i64 %3, 2, !dbg !4239
  store i64 %4, ptr %0, align 8, !dbg !4239
  %_0 = load i64, ptr %0, align 8, !dbg !4239
  ret i64 %_0, !dbg !4240
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17he3e986582cfad05cE"(ptr %self, ptr %origin) unnamed_addr #1 !dbg !4241 {
start:
  %0 = alloca [8 x i8], align 8
  %pointee_size.dbg.spill = alloca [8 x i8], align 8
  %origin.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4245, !DIExpression(), !4249)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !4246, !DIExpression(), !4250)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !4251
  br i1 %_3, label %bb2, label %bb3, !dbg !4251

bb3:                                              ; preds = %bb2, %start
  store i64 2, ptr %pointee_size.dbg.spill, align 8, !dbg !4253
    #dbg_declare(ptr %pointee_size.dbg.spill, !4247, !DIExpression(), !4254)
  %_8 = icmp ult i64 0, 2, !dbg !4255
  br i1 %_8, label %bb5, label %bb7, !dbg !4255

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::sub_ptr::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr18precondition_check17hcc37f6d62006b3bdE"(ptr %self, ptr %origin) #19, !dbg !4256
  br label %bb3, !dbg !4256

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_d798000f5e29a7ace65ad32e5f0d1042) #20, !dbg !4257
  unreachable, !dbg !4257

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i64 2, 9223372036854775807, !dbg !4258
  br i1 %_9, label %bb6, label %bb7, !dbg !4258

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %self to i64, !dbg !4259
  %2 = ptrtoint ptr %origin to i64, !dbg !4259
  %3 = sub nuw i64 %1, %2, !dbg !4259
  %4 = udiv exact i64 %3, 2, !dbg !4259
  store i64 %4, ptr %0, align 8, !dbg !4259
  %_0 = load i64, ptr %0, align 8, !dbg !4259
  ret i64 %_0, !dbg !4260
}

; core::ptr::const_ptr::<impl *const T>::sub_ptr::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr18precondition_check17hcc37f6d62006b3bdE"(ptr %this, ptr %origin) unnamed_addr #1 !dbg !4261 {
start:
  %origin.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  store ptr %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !4266, !DIExpression(), !4268)
  store ptr %origin, ptr %origin.dbg.spill, align 8
    #dbg_declare(ptr %origin.dbg.spill, !4267, !DIExpression(), !4268)
; call core::ptr::const_ptr::<impl *const T>::sub_ptr::runtime_ptr_ge
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr14runtime_ptr_ge17hd482217019bb0c37E"(ptr %this, ptr %origin) #19, !dbg !4269
  br i1 %_3, label %bb2, label %bb3, !dbg !4269

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_7efb3a7632b3620f628ce83a521b4d9b, i64 71) #20, !dbg !4271
  unreachable, !dbg !4271

bb2:                                              ; preds = %start
  ret void, !dbg !4272
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core3str11validations15utf8_first_byte17hdbc2e47bbbbdc5feE(i8 zeroext %byte, i32 signext %width) unnamed_addr #1 !dbg !4273 {
start:
  %width.dbg.spill = alloca [4 x i8], align 4
  %byte.dbg.spill = alloca [1 x i8], align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4279, !DIExpression(), !4281)
  store i32 %width, ptr %width.dbg.spill, align 4
    #dbg_declare(ptr %width.dbg.spill, !4280, !DIExpression(), !4282)
  %_5 = icmp ult i32 %width, 8, !dbg !4283
  br i1 %_5, label %bb1, label %panic, !dbg !4283

bb1:                                              ; preds = %start
  %0 = and i32 %width, 7, !dbg !4283
  %1 = trunc i32 %0 to i8, !dbg !4283
  %_4 = lshr i8 127, %1, !dbg !4283
  %_3 = and i8 %byte, %_4, !dbg !4284
  %_0 = zext i8 %_3 to i32, !dbg !4284
  ret i32 %_0, !dbg !4285

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17he50ba0874cb8eaabE(ptr align 8 @alloc_d9e2802da4477df7b77952a1ddb0372e) #20, !dbg !4283
  unreachable, !dbg !4283
}

; core::str::validations::utf8_is_cont_byte
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h0eb7cfc992066ddbE(i8 zeroext %byte) unnamed_addr #1 !dbg !4286 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4290, !DIExpression(), !4291)
  %_0 = icmp slt i8 %byte, -64, !dbg !4292
  ret i1 %_0, !dbg !4293
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h3c53666c4e6aadefE(i32 signext %ch, i8 zeroext %byte) unnamed_addr #1 !dbg !4294 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %ch.dbg.spill = alloca [4 x i8], align 4
  store i32 %ch, ptr %ch.dbg.spill, align 4
    #dbg_declare(ptr %ch.dbg.spill, !4298, !DIExpression(), !4300)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4299, !DIExpression(), !4301)
  %_3 = shl i32 %ch, 6, !dbg !4302
  %_7 = and i8 %byte, 63, !dbg !4303
  %_6 = zext i8 %_7 to i32, !dbg !4303
  %_0 = or i32 %_3, %_6, !dbg !4302
  ret i32 %_0, !dbg !4304
}

; core::str::validations::next_code_point_reverse
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h6940c3b67ca13fe1E(ptr align 8 %bytes) unnamed_addr #1 !dbg !4305 {
start:
  %next_byte.dbg.spill = alloca [1 x i8], align 1
  %x.dbg.spill = alloca [1 x i8], align 1
  %y.dbg.spill = alloca [1 x i8], align 1
  %z.dbg.spill = alloca [1 x i8], align 1
  %w.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill = alloca [8 x i8], align 8
  %residual.dbg.spill = alloca [0 x i8], align 1
  %bytes.dbg.spill = alloca [8 x i8], align 8
  %ch = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 4
  store ptr %bytes, ptr %bytes.dbg.spill, align 8
    #dbg_declare(ptr %bytes.dbg.spill, !4322, !DIExpression(), !4344)
    #dbg_declare(ptr %ch, !4334, !DIExpression(), !4345)
    #dbg_declare(ptr %residual.dbg.spill, !4325, !DIExpression(), !4346)
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_3 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h570d5c5f6788e5b2E"(ptr align 8 %bytes) #19, !dbg !4347
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %0 = call align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7eec2262dff7c3c8E"(ptr align 1 %_3) #19, !dbg !4347
  store ptr %0, ptr %_2, align 8, !dbg !4347
  %1 = load ptr, ptr %_2, align 8, !dbg !4347
  %2 = ptrtoint ptr %1 to i64, !dbg !4347
  %3 = icmp eq i64 %2, 0, !dbg !4347
  %_4 = select i1 %3, i64 1, i64 0, !dbg !4347
  %4 = icmp eq i64 %_4, 0, !dbg !4347
  br i1 %4, label %bb4, label %bb5, !dbg !4347

bb4:                                              ; preds = %start
  %val = load ptr, ptr %_2, align 8, !dbg !4347
  store ptr %val, ptr %val.dbg.spill, align 8, !dbg !4347
    #dbg_declare(ptr %val.dbg.spill, !4327, !DIExpression(), !4348)
    #dbg_declare(ptr %val.dbg.spill, !4331, !DIExpression(), !4349)
  %_8 = load i8, ptr %val, align 1, !dbg !4350
  %_7 = icmp ult i8 %_8, -128, !dbg !4350
  br i1 %_7, label %bb6, label %bb7, !dbg !4350

bb5:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %5 = call { i32, i32 } @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h704e9d46e33e2afbE"() #19, !dbg !4351
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !4351
  %7 = extractvalue { i32, i32 } %5, 1, !dbg !4351
  store i32 %6, ptr %_0, align 4, !dbg !4351
  %8 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !4351
  store i32 %7, ptr %8, align 4, !dbg !4351
  br label %bb26, !dbg !4351

bb7:                                              ; preds = %bb4
  %w = load i8, ptr %val, align 1, !dbg !4352
  store i8 %w, ptr %w.dbg.spill, align 1, !dbg !4352
    #dbg_declare(ptr %w.dbg.spill, !4323, !DIExpression(), !4353)
    #dbg_declare(ptr %w.dbg.spill, !4332, !DIExpression(), !4354)
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_14 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h570d5c5f6788e5b2E"(ptr align 8 %bytes) #19, !dbg !4355
; call core::option::Option<T>::unwrap_unchecked
  %_13 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4e427adaa6e91b0bE"(ptr align 1 %_14, ptr align 8 @alloc_7c07a05f842324d6be0405323e60c45b) #19, !dbg !4355
  %z = load i8, ptr %_13, align 1, !dbg !4356
  store i8 %z, ptr %z.dbg.spill, align 1, !dbg !4356
    #dbg_declare(ptr %z.dbg.spill, !4336, !DIExpression(), !4357)
; call core::str::validations::utf8_first_byte
  %_15 = call i32 @_ZN4core3str11validations15utf8_first_byte17hdbc2e47bbbbdc5feE(i8 zeroext %z, i32 signext 2) #19, !dbg !4358
  store i32 %_15, ptr %ch, align 4, !dbg !4359
; call core::str::validations::utf8_is_cont_byte
  %_16 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h0eb7cfc992066ddbE(i8 zeroext %z) #19, !dbg !4360
  br i1 %_16, label %bb12, label %bb24, !dbg !4360

bb6:                                              ; preds = %bb4
  %next_byte = load i8, ptr %val, align 1, !dbg !4361
  store i8 %next_byte, ptr %next_byte.dbg.spill, align 1, !dbg !4361
    #dbg_declare(ptr %next_byte.dbg.spill, !4329, !DIExpression(), !4349)
  %_9 = zext i8 %next_byte to i32, !dbg !4362
  %9 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !4363
  store i32 %_9, ptr %9, align 4, !dbg !4363
  store i32 1, ptr %_0, align 4, !dbg !4363
  br label %bb26, !dbg !4364

bb24:                                             ; preds = %bb22, %bb7
  %_31 = load i32, ptr %ch, align 4, !dbg !4367
; call core::str::validations::utf8_acc_cont_byte
  %_30 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h3c53666c4e6aadefE(i32 signext %_31, i8 zeroext %w) #19, !dbg !4368
  store i32 %_30, ptr %ch, align 4, !dbg !4369
  %_32 = load i32, ptr %ch, align 4, !dbg !4370
  %10 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !4371
  store i32 %_32, ptr %10, align 4, !dbg !4371
  store i32 1, ptr %_0, align 4, !dbg !4371
  br label %bb26, !dbg !4372

bb12:                                             ; preds = %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_19 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h570d5c5f6788e5b2E"(ptr align 8 %bytes) #19, !dbg !4373
; call core::option::Option<T>::unwrap_unchecked
  %_18 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4e427adaa6e91b0bE"(ptr align 1 %_19, ptr align 8 @alloc_46a923eb6db18588b7fa16266e38f8d0) #19, !dbg !4373
  %y = load i8, ptr %_18, align 1, !dbg !4374
  store i8 %y, ptr %y.dbg.spill, align 1, !dbg !4374
    #dbg_declare(ptr %y.dbg.spill, !4338, !DIExpression(), !4375)
; call core::str::validations::utf8_first_byte
  %_20 = call i32 @_ZN4core3str11validations15utf8_first_byte17hdbc2e47bbbbdc5feE(i8 zeroext %y, i32 signext 3) #19, !dbg !4376
  store i32 %_20, ptr %ch, align 4, !dbg !4377
; call core::str::validations::utf8_is_cont_byte
  %_21 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h0eb7cfc992066ddbE(i8 zeroext %y) #19, !dbg !4378
  br i1 %_21, label %bb17, label %bb22, !dbg !4378

bb22:                                             ; preds = %bb17, %bb12
  %_29 = load i32, ptr %ch, align 4, !dbg !4379
; call core::str::validations::utf8_acc_cont_byte
  %_28 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h3c53666c4e6aadefE(i32 signext %_29, i8 zeroext %z) #19, !dbg !4380
  store i32 %_28, ptr %ch, align 4, !dbg !4381
  br label %bb24, !dbg !4382

bb17:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_24 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h570d5c5f6788e5b2E"(ptr align 8 %bytes) #19, !dbg !4383
; call core::option::Option<T>::unwrap_unchecked
  %_23 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4e427adaa6e91b0bE"(ptr align 1 %_24, ptr align 8 @alloc_d9aa37eaacf9955be967a8e431ed2fc1) #19, !dbg !4383
  %x = load i8, ptr %_23, align 1, !dbg !4384
  store i8 %x, ptr %x.dbg.spill, align 1, !dbg !4384
    #dbg_declare(ptr %x.dbg.spill, !4340, !DIExpression(), !4385)
; call core::str::validations::utf8_first_byte
  %_25 = call i32 @_ZN4core3str11validations15utf8_first_byte17hdbc2e47bbbbdc5feE(i8 zeroext %x, i32 signext 4) #19, !dbg !4386
  store i32 %_25, ptr %ch, align 4, !dbg !4387
  %_27 = load i32, ptr %ch, align 4, !dbg !4388
; call core::str::validations::utf8_acc_cont_byte
  %_26 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h3c53666c4e6aadefE(i32 signext %_27, i8 zeroext %y) #19, !dbg !4389
  store i32 %_26, ptr %ch, align 4, !dbg !4390
  br label %bb22, !dbg !4391

bb26:                                             ; preds = %bb5, %bb6, %bb24
  %11 = load i32, ptr %_0, align 4, !dbg !4372
  %12 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !4372
  %13 = load i32, ptr %12, align 4, !dbg !4372
  %14 = insertvalue { i32, i32 } poison, i32 %11, 0, !dbg !4372
  %15 = insertvalue { i32, i32 } %14, i32 %13, 1, !dbg !4372
  ret { i32, i32 } %15, !dbg !4372

bb3:                                              ; No predecessors!
  unreachable, !dbg !4347
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h09ad5fa2dba47c47E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4392 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4402, !DIExpression(), !4403)
; call core::str::<impl str>::chars
  %1 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hb2e95cef6820fa16E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !4404
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4404
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4404
  %2 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !4405
  store i64 0, ptr %2, align 8, !dbg !4405
  store ptr %_2.0, ptr %_0, align 8, !dbg !4405
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !4405
  store ptr %_2.1, ptr %3, align 8, !dbg !4405
  ret void, !dbg !4406
}

; core::str::<impl str>::len
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4407 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4411, !DIExpression(), !4412)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !4418)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !4420
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !4420
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4421
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4421
  ret i64 %_2.1, !dbg !4422
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hb2e95cef6820fa16E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4423 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4427, !DIExpression(), !4428)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !4429)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !4431
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !4431
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !4432
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !4432
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h938db19c45b87448E"(ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !4432
  %_2.0 = extractvalue { ptr, ptr } %4, 0, !dbg !4432
  %_2.1 = extractvalue { ptr, ptr } %4, 1, !dbg !4432
  %5 = insertvalue { ptr, ptr } poison, ptr %_2.0, 0, !dbg !4433
  %6 = insertvalue { ptr, ptr } %5, ptr %_2.1, 1, !dbg !4433
  ret { ptr, ptr } %6, !dbg !4433
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !4434 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4438, !DIExpression(), !4439)
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !4440
  %_0 = icmp eq i64 %_2, 0, !dbg !4440
  ret i1 %_0, !dbg !4441
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17hbf9dcf7185d94eb6E(ptr align 8 %self) unnamed_addr #1 !dbg !4442 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4449, !DIExpression(), !4450)
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h8f7b268f3d5c7a66E"(ptr align 8 %self) #19, !dbg !4451
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !4451
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !4451
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h586e219a711934d3E(ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !4452
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !4452
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !4452
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4453
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !4453
  ret { ptr, i64 } %3, !dbg !4453
}

; core::str::error::Utf8Error::valid_up_to
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core3str5error9Utf8Error11valid_up_to17h8bc2250ad0907e27E(ptr align 8 %self) unnamed_addr #1 !dbg !4454 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4461, !DIExpression(), !4462)
  %_0 = load i64, ptr %self, align 8, !dbg !4463
  ret i64 %_0, !dbg !4464
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFull>::index
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h4b496ea6cbc74f3bE"(ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #1 !dbg !4465 {
start:
  %self.dbg.spill = alloca [0 x i8], align 1
  %slice.dbg.spill = alloca [16 x i8], align 8
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !4475, !DIExpression(), !4476)
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %1, align 8
    #dbg_declare(ptr %slice.dbg.spill, !4474, !DIExpression(), !4477)
    #dbg_declare(ptr %self.dbg.spill, !4473, !DIExpression(), !4476)
  %2 = insertvalue { ptr, i64 } poison, ptr %slice.0, 0, !dbg !4478
  %3 = insertvalue { ptr, i64 } %2, i64 %slice.1, 1, !dbg !4478
  ret { ptr, i64 } %3, !dbg !4478
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h586e219a711934d3E(ptr align 1 %v.0, i64 %v.1) unnamed_addr #1 !dbg !4479 {
start:
  %v.dbg.spill = alloca [16 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !4485, !DIExpression(), !4486)
  %1 = insertvalue { ptr, i64 } poison, ptr %v.0, 0, !dbg !4487
  %2 = insertvalue { ptr, i64 } %1, i64 %v.1, 1, !dbg !4487
  ret { ptr, i64 } %2, !dbg !4487
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hc8acc460f02bdb05E(ptr align 1 %v.0, i64 %v.1) unnamed_addr #1 !dbg !4488 {
start:
  %v.dbg.spill = alloca [16 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !4500, !DIExpression(), !4501)
  %1 = insertvalue { ptr, i64 } poison, ptr %v.0, 0, !dbg !4502
  %2 = insertvalue { ptr, i64 } %1, i64 %v.1, 1, !dbg !4502
  ret { ptr, i64 } %2, !dbg !4502
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h0b47d97373ff380fE(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4503 {
start:
  %_3 = alloca [4 x i8], align 2
  %_2 = alloca [32 x i8], align 8
    #dbg_declare(ptr %iter, !4508, !DIExpression(), !4509)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcb18632616c492a7E"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %iter) #19, !dbg !4510
  store i16 0, ptr %_3, align 2, !dbg !4511
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false), !dbg !4512
  %0 = load i16, ptr %_3, align 2, !dbg !4512
  %1 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !4512
  %2 = load i16, ptr %1, align 2, !dbg !4512
  %3 = getelementptr inbounds i8, ptr %_0, i64 32, !dbg !4512
  store i16 %0, ptr %3, align 8, !dbg !4512
  %4 = getelementptr inbounds i8, ptr %3, i64 2, !dbg !4512
  store i16 %2, ptr %4, align 2, !dbg !4512
  ret void, !dbg !4513
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h1703b70183967a11E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4514 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [4 x i8], align 2
  store ptr %iter, ptr %iter.dbg.spill, align 8
    #dbg_declare(ptr %iter.dbg.spill, !4518, !DIExpression(), !4519)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_2 = call align 8 ptr @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc75f2a826e335443E"(ptr align 8 %iter) #19, !dbg !4520
  store i16 0, ptr %_3, align 2, !dbg !4521
  store ptr %_2, ptr %_0, align 8, !dbg !4522
  %0 = load i16, ptr %_3, align 2, !dbg !4522
  %1 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !4522
  %2 = load i16, ptr %1, align 2, !dbg !4522
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !4522
  store i16 %0, ptr %3, align 8, !dbg !4522
  %4 = getelementptr inbounds i8, ptr %3, i64 2, !dbg !4522
  store i16 %2, ptr %4, align 2, !dbg !4522
  ret void, !dbg !4523
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h3028414e3463fb59E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4524 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [4 x i8], align 2
  store ptr %iter, ptr %iter.dbg.spill, align 8
    #dbg_declare(ptr %iter.dbg.spill, !4528, !DIExpression(), !4529)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_2 = call align 8 ptr @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc789a84abc003cf2E"(ptr align 8 %iter) #19, !dbg !4530
  store i16 0, ptr %_3, align 2, !dbg !4531
  store ptr %_2, ptr %_0, align 8, !dbg !4532
  %0 = load i16, ptr %_3, align 2, !dbg !4532
  %1 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !4532
  %2 = load i16, ptr %1, align 2, !dbg !4532
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !4532
  store i16 %0, ptr %3, align 8, !dbg !4532
  %4 = getelementptr inbounds i8, ptr %3, i64 2, !dbg !4532
  store i16 %2, ptr %4, align 2, !dbg !4532
  ret void, !dbg !4533
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h91a339d79c3e52fbE(ptr sret([24 x i8]) align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !4534 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [4 x i8], align 2
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !4538, !DIExpression(), !4539)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h68c3a53d85d4d4b4E"(ptr %iter.0, ptr %iter.1) #19, !dbg !4540
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4540
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4540
  store i16 0, ptr %_3, align 2, !dbg !4541
  store ptr %_2.0, ptr %_0, align 8, !dbg !4542
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !4542
  store ptr %_2.1, ptr %2, align 8, !dbg !4542
  %3 = load i16, ptr %_3, align 2, !dbg !4542
  %4 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !4542
  %5 = load i16, ptr %4, align 2, !dbg !4542
  %6 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !4542
  store i16 %3, ptr %6, align 8, !dbg !4542
  %7 = getelementptr inbounds i8, ptr %6, i64 2, !dbg !4542
  store i16 %5, ptr %7, align 2, !dbg !4542
  ret void, !dbg !4543
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617hcad077c67ae8a70aE(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4544 {
start:
  %_3 = alloca [4 x i8], align 2
  %_2 = alloca [32 x i8], align 8
    #dbg_declare(ptr %iter, !4548, !DIExpression(), !4549)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd81c89e6dcc041a7E"(ptr sret([32 x i8]) align 8 %_2, ptr align 8 %iter) #19, !dbg !4550
  store i16 0, ptr %_3, align 2, !dbg !4551
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false), !dbg !4552
  %0 = load i16, ptr %_3, align 2, !dbg !4552
  %1 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !4552
  %2 = load i16, ptr %1, align 2, !dbg !4552
  %3 = getelementptr inbounds i8, ptr %_0, i64 32, !dbg !4552
  store i16 %0, ptr %3, align 8, !dbg !4552
  %4 = getelementptr inbounds i8, ptr %3, i64 2, !dbg !4552
  store i16 %2, ptr %4, align 2, !dbg !4552
  ret void, !dbg !4553
}

; core::char::convert::char_try_from_u32
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core4char7convert17char_try_from_u3217h162de07bac142c13E(i32 signext %i) unnamed_addr #1 !dbg !4554 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !4578, !DIExpression(), !4579)
  %_4 = xor i32 %i, 55296, !dbg !4580
  store i32 %_4, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4581, !DIExpression(), !4588)
  store i32 2048, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !4587, !DIExpression(), !4590)
  %_0.i = sub i32 %_4, 2048, !dbg !4591
  %_2 = icmp uge i32 %_0.i, 1112064, !dbg !4580
  br i1 %_2, label %bb3, label %bb4, !dbg !4580

bb4:                                              ; preds = %start
  store i32 %i, ptr %_0, align 4, !dbg !4592
  br label %bb5, !dbg !4593

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !4594
  br label %bb5, !dbg !4593

bb5:                                              ; preds = %bb3, %bb4
  %0 = load i32, ptr %_0, align 4, !dbg !4595
  ret i32 %0, !dbg !4595
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17hbc43b081bf89d100E(i32 signext %i) unnamed_addr #1 !dbg !4596 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !4600, !DIExpression(), !4601)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !4602
  br i1 %_2, label %bb2, label %bb3, !dbg !4602

bb3:                                              ; preds = %bb2, %start
  ret i32 %i, !dbg !4604

bb2:                                              ; preds = %start
; call core::char::convert::from_u32_unchecked::precondition_check
  call void @_ZN4core4char7convert18from_u32_unchecked18precondition_check17he1ca9fbbaedd9952E(i32 signext %i) #19, !dbg !4605
  br label %bb3, !dbg !4605
}

; core::char::convert::from_u32_unchecked::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core4char7convert18from_u32_unchecked18precondition_check17he1ca9fbbaedd9952E(i32 signext %i) unnamed_addr #1 !dbg !4606 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !4611, !DIExpression(), !4612)
; call core::char::convert::char_try_from_u32
  %0 = call i32 @_ZN4core4char7convert17char_try_from_u3217h162de07bac142c13E(i32 signext %i) #19, !dbg !4613
  store i32 %0, ptr %_4, align 4, !dbg !4613
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h8291b39f222ede87E"(ptr align 4 %_4) #19, !dbg !4613
  br i1 %_2, label %bb3, label %bb4, !dbg !4613

bb4:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_38d865ee598848532cbd764e0d6298fc, i64 57) #20, !dbg !4615
  unreachable, !dbg !4615

bb3:                                              ; preds = %start
  ret void, !dbg !4616
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17h01bc9f5882b54548E(i32 signext %code, ptr align 1 %dst.0, i64 %dst.1) unnamed_addr #1 !dbg !4617 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %dst_len.dbg.spill.i = alloca [8 x i8], align 8
  %len.dbg.spill.i = alloca [8 x i8], align 8
  %code.dbg.spill.i = alloca [4 x i8], align 4
  %_4.i = alloca [24 x i8], align 8
  %d.dbg.spill = alloca [8 x i8], align 8
  %c.dbg.spill12 = alloca [8 x i8], align 8
  %b.dbg.spill10 = alloca [8 x i8], align 8
  %a.dbg.spill8 = alloca [8 x i8], align 8
  %c.dbg.spill = alloca [8 x i8], align 8
  %b.dbg.spill6 = alloca [8 x i8], align 8
  %a.dbg.spill4 = alloca [8 x i8], align 8
  %b.dbg.spill = alloca [8 x i8], align 8
  %a.dbg.spill2 = alloca [8 x i8], align 8
  %a.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %dst.dbg.spill = alloca [16 x i8], align 8
  %code.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [24 x i8], align 8
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !4623, !DIExpression(), !4642)
  store ptr %dst.0, ptr %dst.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %dst.dbg.spill, i64 8
  store i64 %dst.1, ptr %0, align 8
    #dbg_declare(ptr %dst.dbg.spill, !4624, !DIExpression(), !4643)
; call core::char::methods::len_utf8
  %len = call i64 @_ZN4core4char7methods8len_utf817h9e59d66ee1377312E(i32 signext %code) #19, !dbg !4644
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !4644
    #dbg_declare(ptr %len.dbg.spill, !4625, !DIExpression(), !4645)
  store i64 %len, ptr %_4, align 8, !dbg !4646
  %1 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4646
  store ptr %dst.0, ptr %1, align 8, !dbg !4646
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !4646
  store i64 %dst.1, ptr %2, align 8, !dbg !4646
  %3 = load i64, ptr %_4, align 8, !dbg !4647
  switch i64 %3, label %bb2 [
    i64 1, label %bb3
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !4647

bb2:                                              ; preds = %bb6, %bb5, %bb4, %bb3, %start
  store i32 %code, ptr %code.dbg.spill.i, align 4
    #dbg_declare(ptr %code.dbg.spill.i, !4648, !DIExpression(), !4657)
  store i64 %len, ptr %len.dbg.spill.i, align 8
    #dbg_declare(ptr %len.dbg.spill.i, !4655, !DIExpression(), !4657)
  store i64 %dst.1, ptr %dst_len.dbg.spill.i, align 8
    #dbg_declare(ptr %dst_len.dbg.spill.i, !4656, !DIExpression(), !4657)
  %4 = getelementptr inbounds i8, ptr %_4.i, i64 8, !dbg !4660
  store i32 %code, ptr %4, align 8, !dbg !4660
  store i64 %len, ptr %_4.i, align 8, !dbg !4660
  %5 = getelementptr inbounds i8, ptr %_4.i, i64 16, !dbg !4660
  store i64 %dst.1, ptr %5, align 8, !dbg !4660
  %6 = getelementptr inbounds i8, ptr %_4.i, i64 8, !dbg !4662
  %7 = load i32, ptr %6, align 8, !dbg !4662
  %8 = load i64, ptr %_4.i, align 8, !dbg !4662
  %9 = getelementptr inbounds i8, ptr %_4.i, i64 16, !dbg !4662
  %10 = load i64, ptr %9, align 8, !dbg !4662
; call core::char::methods::encode_utf8_raw::do_panic::runtime
  call void @_ZN4core4char7methods15encode_utf8_raw8do_panic7runtime17h2a2ebb6386513b4dE(i32 signext %7, i64 %8, i64 %10, ptr align 8 @alloc_e454375bd4e2d7bf3d2181f3182870b2) #20, !dbg !4662
  unreachable, !dbg !4662

_ZN4core4char7methods15encode_utf8_raw8do_panic17h5b12becac0c7b519E.exit: ; No predecessors!
  unreachable, !dbg !4663

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4664
  %_63.0 = load ptr, ptr %11, align 8, !dbg !4664
  %12 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !4664
  %_63.1 = load i64, ptr %12, align 8, !dbg !4664
  %_6 = icmp uge i64 %_63.1, 1, !dbg !4664
  br i1 %_6, label %bb10, label %bb2, !dbg !4664

bb4:                                              ; preds = %start
  %13 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4665
  %_64.0 = load ptr, ptr %13, align 8, !dbg !4665
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !4665
  %_64.1 = load i64, ptr %14, align 8, !dbg !4665
  %_8 = icmp uge i64 %_64.1, 2, !dbg !4665
  br i1 %_8, label %bb9, label %bb2, !dbg !4665

bb5:                                              ; preds = %start
  %15 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4666
  %_65.0 = load ptr, ptr %15, align 8, !dbg !4666
  %16 = getelementptr inbounds i8, ptr %15, i64 8, !dbg !4666
  %_65.1 = load i64, ptr %16, align 8, !dbg !4666
  %_10 = icmp uge i64 %_65.1, 3, !dbg !4666
  br i1 %_10, label %bb8, label %bb2, !dbg !4666

bb6:                                              ; preds = %start
  %17 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4667
  %_66.0 = load ptr, ptr %17, align 8, !dbg !4667
  %18 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !4667
  %_66.1 = load i64, ptr %18, align 8, !dbg !4667
  %_12 = icmp uge i64 %_66.1, 4, !dbg !4667
  br i1 %_12, label %bb7, label %bb2, !dbg !4667

bb10:                                             ; preds = %bb3
  %19 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4668
  %_76.0 = load ptr, ptr %19, align 8, !dbg !4668
  %20 = getelementptr inbounds i8, ptr %19, i64 8, !dbg !4668
  %_76.1 = load i64, ptr %20, align 8, !dbg !4668
  %a = getelementptr inbounds i8, ptr %_76.0, i64 0, !dbg !4668
  store ptr %a, ptr %a.dbg.spill, align 8, !dbg !4668
    #dbg_declare(ptr %a.dbg.spill, !4627, !DIExpression(), !4669)
  %21 = trunc i32 %code to i8, !dbg !4670
  store i8 %21, ptr %a, align 1, !dbg !4670
  br label %bb17, !dbg !4671

bb17:                                             ; preds = %bb7, %bb8, %bb9, %bb10
  store ptr %dst.0, ptr %self.dbg.spill.i, align 8
  %22 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %dst.1, ptr %22, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4672, !DIExpression(), !4677)
; call core::slice::raw::from_raw_parts_mut
  %23 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h86439c6721016fafE(ptr %dst.0, i64 %len) #19, !dbg !4679
  %_0.0 = extractvalue { ptr, i64 } %23, 0, !dbg !4679
  %_0.1 = extractvalue { ptr, i64 } %23, 1, !dbg !4679
  %24 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4680
  %25 = insertvalue { ptr, i64 } %24, i64 %_0.1, 1, !dbg !4680
  ret { ptr, i64 } %25, !dbg !4680

bb9:                                              ; preds = %bb4
  %26 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4681
  %_74.0 = load ptr, ptr %26, align 8, !dbg !4681
  %27 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !4681
  %_74.1 = load i64, ptr %27, align 8, !dbg !4681
  %a1 = getelementptr inbounds i8, ptr %_74.0, i64 0, !dbg !4681
  store ptr %a1, ptr %a.dbg.spill2, align 8, !dbg !4681
    #dbg_declare(ptr %a.dbg.spill2, !4630, !DIExpression(), !4682)
  %28 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4683
  %_75.0 = load ptr, ptr %28, align 8, !dbg !4683
  %29 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !4683
  %_75.1 = load i64, ptr %29, align 8, !dbg !4683
  %b = getelementptr inbounds i8, ptr %_75.0, i64 1, !dbg !4683
  store ptr %b, ptr %b.dbg.spill, align 8, !dbg !4683
    #dbg_declare(ptr %b.dbg.spill, !4632, !DIExpression(), !4684)
  %_18 = lshr i32 %code, 6, !dbg !4685
  %_17 = and i32 %_18, 31, !dbg !4686
  %_16 = trunc i32 %_17 to i8, !dbg !4686
  %30 = or i8 %_16, -64, !dbg !4687
  store i8 %30, ptr %a1, align 1, !dbg !4687
  %_22 = and i32 %code, 63, !dbg !4688
  %_21 = trunc i32 %_22 to i8, !dbg !4688
  %31 = or i8 %_21, -128, !dbg !4689
  store i8 %31, ptr %b, align 1, !dbg !4689
  br label %bb17, !dbg !4690

bb8:                                              ; preds = %bb5
  %32 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4691
  %_71.0 = load ptr, ptr %32, align 8, !dbg !4691
  %33 = getelementptr inbounds i8, ptr %32, i64 8, !dbg !4691
  %_71.1 = load i64, ptr %33, align 8, !dbg !4691
  %a3 = getelementptr inbounds i8, ptr %_71.0, i64 0, !dbg !4691
  store ptr %a3, ptr %a.dbg.spill4, align 8, !dbg !4691
    #dbg_declare(ptr %a.dbg.spill4, !4633, !DIExpression(), !4692)
  %34 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4693
  %_72.0 = load ptr, ptr %34, align 8, !dbg !4693
  %35 = getelementptr inbounds i8, ptr %34, i64 8, !dbg !4693
  %_72.1 = load i64, ptr %35, align 8, !dbg !4693
  %b5 = getelementptr inbounds i8, ptr %_72.0, i64 1, !dbg !4693
  store ptr %b5, ptr %b.dbg.spill6, align 8, !dbg !4693
    #dbg_declare(ptr %b.dbg.spill6, !4635, !DIExpression(), !4694)
  %36 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4695
  %_73.0 = load ptr, ptr %36, align 8, !dbg !4695
  %37 = getelementptr inbounds i8, ptr %36, i64 8, !dbg !4695
  %_73.1 = load i64, ptr %37, align 8, !dbg !4695
  %c = getelementptr inbounds i8, ptr %_73.0, i64 2, !dbg !4695
  store ptr %c, ptr %c.dbg.spill, align 8, !dbg !4695
    #dbg_declare(ptr %c.dbg.spill, !4636, !DIExpression(), !4696)
  %_28 = lshr i32 %code, 12, !dbg !4697
  %_27 = and i32 %_28, 15, !dbg !4698
  %_26 = trunc i32 %_27 to i8, !dbg !4698
  %38 = or i8 %_26, -32, !dbg !4699
  store i8 %38, ptr %a3, align 1, !dbg !4699
  %_33 = lshr i32 %code, 6, !dbg !4700
  %_32 = and i32 %_33, 63, !dbg !4701
  %_31 = trunc i32 %_32 to i8, !dbg !4701
  %39 = or i8 %_31, -128, !dbg !4702
  store i8 %39, ptr %b5, align 1, !dbg !4702
  %_37 = and i32 %code, 63, !dbg !4703
  %_36 = trunc i32 %_37 to i8, !dbg !4703
  %40 = or i8 %_36, -128, !dbg !4704
  store i8 %40, ptr %c, align 1, !dbg !4704
  br label %bb17, !dbg !4705

bb7:                                              ; preds = %bb6
  %41 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4706
  %_67.0 = load ptr, ptr %41, align 8, !dbg !4706
  %42 = getelementptr inbounds i8, ptr %41, i64 8, !dbg !4706
  %_67.1 = load i64, ptr %42, align 8, !dbg !4706
  %a7 = getelementptr inbounds i8, ptr %_67.0, i64 0, !dbg !4706
  store ptr %a7, ptr %a.dbg.spill8, align 8, !dbg !4706
    #dbg_declare(ptr %a.dbg.spill8, !4637, !DIExpression(), !4707)
  %43 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4708
  %_68.0 = load ptr, ptr %43, align 8, !dbg !4708
  %44 = getelementptr inbounds i8, ptr %43, i64 8, !dbg !4708
  %_68.1 = load i64, ptr %44, align 8, !dbg !4708
  %b9 = getelementptr inbounds i8, ptr %_68.0, i64 1, !dbg !4708
  store ptr %b9, ptr %b.dbg.spill10, align 8, !dbg !4708
    #dbg_declare(ptr %b.dbg.spill10, !4639, !DIExpression(), !4709)
  %45 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4710
  %_69.0 = load ptr, ptr %45, align 8, !dbg !4710
  %46 = getelementptr inbounds i8, ptr %45, i64 8, !dbg !4710
  %_69.1 = load i64, ptr %46, align 8, !dbg !4710
  %c11 = getelementptr inbounds i8, ptr %_69.0, i64 2, !dbg !4710
  store ptr %c11, ptr %c.dbg.spill12, align 8, !dbg !4710
    #dbg_declare(ptr %c.dbg.spill12, !4640, !DIExpression(), !4711)
  %47 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !4712
  %_70.0 = load ptr, ptr %47, align 8, !dbg !4712
  %48 = getelementptr inbounds i8, ptr %47, i64 8, !dbg !4712
  %_70.1 = load i64, ptr %48, align 8, !dbg !4712
  %d = getelementptr inbounds i8, ptr %_70.0, i64 3, !dbg !4712
  store ptr %d, ptr %d.dbg.spill, align 8, !dbg !4712
    #dbg_declare(ptr %d.dbg.spill, !4641, !DIExpression(), !4713)
  %_44 = lshr i32 %code, 18, !dbg !4714
  %_43 = and i32 %_44, 7, !dbg !4715
  %_42 = trunc i32 %_43 to i8, !dbg !4715
  %49 = or i8 %_42, -16, !dbg !4716
  store i8 %49, ptr %a7, align 1, !dbg !4716
  %_49 = lshr i32 %code, 12, !dbg !4717
  %_48 = and i32 %_49, 63, !dbg !4718
  %_47 = trunc i32 %_48 to i8, !dbg !4718
  %50 = or i8 %_47, -128, !dbg !4719
  store i8 %50, ptr %b9, align 1, !dbg !4719
  %_54 = lshr i32 %code, 6, !dbg !4720
  %_53 = and i32 %_54, 63, !dbg !4721
  %_52 = trunc i32 %_53 to i8, !dbg !4721
  %51 = or i8 %_52, -128, !dbg !4722
  store i8 %51, ptr %c11, align 1, !dbg !4722
  %_58 = and i32 %code, 63, !dbg !4723
  %_57 = trunc i32 %_58 to i8, !dbg !4723
  %52 = or i8 %_57, -128, !dbg !4724
  store i8 %52, ptr %d, align 1, !dbg !4724
  br label %bb17, !dbg !4725
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h60efe6d0691b73e0E"(i32 signext %self, ptr align 1 %dst.0, i64 %dst.1) unnamed_addr #1 !dbg !4726 {
start:
  %dst.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4731, !DIExpression(), !4733)
  store ptr %dst.0, ptr %dst.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %dst.dbg.spill, i64 8
  store i64 %dst.1, ptr %0, align 8
    #dbg_declare(ptr %dst.dbg.spill, !4732, !DIExpression(), !4734)
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17h01bc9f5882b54548E(i32 signext %self, ptr align 1 %dst.0, i64 %dst.1) #19, !dbg !4735
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !4735
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !4735
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { ptr, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hc8acc460f02bdb05E(ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !4736
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !4736
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !4736
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !4737
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !4737
  ret { ptr, i64 } %4, !dbg !4737
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h12b41fdca0170b9cE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4738 {
start:
    #dbg_declare(ptr %iter, !4740, !DIExpression(), !4741)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617hcad077c67ae8a70aE(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %iter) #19, !dbg !4742
  ret void, !dbg !4743
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h283c6ab00d45c069E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4744 {
start:
    #dbg_declare(ptr %iter, !4746, !DIExpression(), !4747)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h0b47d97373ff380fE(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %iter) #19, !dbg !4748
  ret void, !dbg !4749
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h47d56a1480061c49E"(ptr sret([24 x i8]) align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !4750 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !4752, !DIExpression(), !4753)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h91a339d79c3e52fbE(ptr sret([24 x i8]) align 8 %_0, ptr %iter.0, ptr %iter.1) #19, !dbg !4754
  ret void, !dbg !4755
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617ha7f27074dfcbfff2E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4756 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 8
  store ptr %iter, ptr %iter.dbg.spill, align 8
    #dbg_declare(ptr %iter.dbg.spill, !4758, !DIExpression(), !4759)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h3028414e3463fb59E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) #19, !dbg !4760
  ret void, !dbg !4761
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hbb124aef0346177bE"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #1 !dbg !4762 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 8
  store ptr %iter, ptr %iter.dbg.spill, align 8
    #dbg_declare(ptr %iter.dbg.spill, !4764, !DIExpression(), !4765)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h1703b70183967a11E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) #19, !dbg !4766
  ret void, !dbg !4767
}

; core::char::methods::<impl char>::from_u32_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %i) unnamed_addr #1 !dbg !4768 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !4770, !DIExpression(), !4771)
; call core::char::convert::from_u32_unchecked
  %_0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17hbc43b081bf89d100E(i32 signext %i) #19, !dbg !4772
  ret i32 %_0, !dbg !4773
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hae25e11b0f9236eaE"(i32 signext %self) unnamed_addr #1 !dbg !4774 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4778, !DIExpression(), !4779)
; call core::char::methods::len_utf8
  %_0 = call i64 @_ZN4core4char7methods8len_utf817h9e59d66ee1377312E(i32 signext %self) #19, !dbg !4780
  ret i64 %_0, !dbg !4781
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core4char7methods8len_utf817h9e59d66ee1377312E(i32 signext %code) unnamed_addr #1 !dbg !4782 {
start:
  %code.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 8
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !4786, !DIExpression(), !4787)
  %_2 = icmp ult i32 %code, 128, !dbg !4788
  br i1 %_2, label %bb6, label %bb1, !dbg !4788

bb1:                                              ; preds = %start
  %_3 = icmp ult i32 %code, 2048, !dbg !4789
  br i1 %_3, label %bb5, label %bb2, !dbg !4789

bb6:                                              ; preds = %start
  store i64 1, ptr %_0, align 8, !dbg !4790
  br label %bb7, !dbg !4790

bb2:                                              ; preds = %bb1
  %_4 = icmp ult i32 %code, 65536, !dbg !4791
  br i1 %_4, label %bb4, label %bb3, !dbg !4791

bb5:                                              ; preds = %bb1
  store i64 2, ptr %_0, align 8, !dbg !4792
  br label %bb7, !dbg !4792

bb3:                                              ; preds = %bb2
  store i64 4, ptr %_0, align 8, !dbg !4793
  br label %bb7, !dbg !4793

bb4:                                              ; preds = %bb2
  store i64 3, ptr %_0, align 8, !dbg !4794
  br label %bb7, !dbg !4794

bb7:                                              ; preds = %bb6, %bb5, %bb4, %bb3
  %0 = load i64, ptr %_0, align 8, !dbg !4795
  ret i64 %0, !dbg !4795
}

; core::hint::assert_unchecked::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %cond) unnamed_addr #1 !dbg !4796 {
start:
  %cond.dbg.spill = alloca [1 x i8], align 1
  %0 = zext i1 %cond to i8
  store i8 %0, ptr %cond.dbg.spill, align 1
    #dbg_declare(ptr %cond.dbg.spill, !4802, !DIExpression(), !4803)
  br i1 %cond, label %bb2, label %bb1, !dbg !4804

bb1:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_ab14703751a9eb3585c49b2e55e9a9e5, i64 104) #20, !dbg !4807
  unreachable, !dbg !4807

bb2:                                              ; preds = %start
  ret void, !dbg !4808
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17h2da5168dd0ac4589E(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !4809 {
start:
  %predicate.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4817, !DIExpression(), !4822)
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i64 8
  store ptr %predicate.1, ptr %0, align 8
    #dbg_declare(ptr %predicate.dbg.spill, !4818, !DIExpression(), !4823)
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind::check
  %1 = call { ptr, ptr } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17hfe9393dd7e939bf1E(ptr align 1 %predicate.0, ptr align 1 %predicate.1) #19, !dbg !4824
  %_4.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4824
  %_4.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4824
; call core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %_3 = call i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h396b0b9a45fcbd56E(ptr align 8 %self, ptr align 1 %_4.0, ptr align 1 %_4.1) #19, !dbg !4825
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %_0 = call i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h931e6ead3df1050fE"(i32 signext %_3) #19, !dbg !4825
  ret i32 %_0, !dbg !4826
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17hfe9393dd7e939bf1E(ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !4827 {
start:
  %predicate.dbg.spill = alloca [16 x i8], align 8
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i64 8
  store ptr %predicate.1, ptr %0, align 8
    #dbg_declare(ptr %predicate.dbg.spill, !4836, !DIExpression(), !4839)
  %1 = insertvalue { ptr, ptr } poison, ptr %predicate.0, 0, !dbg !4840
  %2 = insertvalue { ptr, ptr } %1, ptr %predicate.1, 1, !dbg !4840
  ret { ptr, ptr } %2, !dbg !4840
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h3a8fd10beb12bdceE"(ptr align 8 %_1, i32 signext %0) unnamed_addr #1 !dbg !4841 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %x = alloca [4 x i8], align 4
  store i32 %0, ptr %x, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !4847, !DIExpression(DW_OP_deref), !4849)
    #dbg_declare(ptr %_2.dbg.spill, !4848, !DIExpression(), !4850)
    #dbg_declare(ptr %x, !4846, !DIExpression(), !4851)
  store i8 0, ptr %_9, align 1, !dbg !4852
  store i8 1, ptr %_9, align 1, !dbg !4852
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
  %_4 = call zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17he21767f430dc75b6E"(ptr align 8 %_1, ptr align 4 %x) #19, !dbg !4852
  br i1 %_4, label %bb2, label %bb3, !dbg !4852

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !4853
  br label %bb4, !dbg !4854

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !4855
  %_8 = load i32, ptr %x, align 4, !dbg !4855
  store i32 %_8, ptr %_0, align 4, !dbg !4856
  br label %bb4, !dbg !4854

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i8, ptr %_9, align 1, !dbg !4857
  %2 = trunc i8 %1 to i1, !dbg !4857
  br i1 %2, label %bb6, label %bb5, !dbg !4857

bb5:                                              ; preds = %bb6, %bb4
  %3 = load i32, ptr %_0, align 4, !dbg !4858
  ret i32 %3, !dbg !4858

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !4857
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h396b0b9a45fcbd56E(ptr align 8 %self, ptr align 1 %0, ptr align 1 %1) unnamed_addr #1 !dbg !4859 {
start:
  %residual.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [4 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %f = alloca [16 x i8], align 8
  store ptr %0, ptr %f, align 8
  %2 = getelementptr inbounds i8, ptr %f, i64 8
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4863, !DIExpression(), !4877)
    #dbg_declare(ptr %init.dbg.spill, !4864, !DIExpression(), !4878)
    #dbg_declare(ptr %f, !4865, !DIExpression(), !4879)
    #dbg_declare(ptr %accum.dbg.spill, !4866, !DIExpression(), !4880)
    #dbg_declare(ptr %val.dbg.spill, !4872, !DIExpression(), !4881)
  br label %bb1, !dbg !4882

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %3 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h874cb16815dfc479E"(ptr align 8 %self) #19, !dbg !4883
  store i32 %3, ptr %_5, align 4, !dbg !4883
  %4 = load i32, ptr %_5, align 4, !dbg !4883
  %5 = icmp eq i32 %4, 1114112, !dbg !4883
  %_6 = select i1 %5, i64 0, i64 1, !dbg !4883
  %6 = icmp eq i64 %_6, 1, !dbg !4884
  br i1 %6, label %bb3, label %bb10, !dbg !4884

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !4885
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !4885
    #dbg_declare(ptr %x.dbg.spill, !4868, !DIExpression(), !4885)
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
  %_9 = call i32 @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h3a8fd10beb12bdceE"(ptr align 8 %f, i32 signext %x) #19, !dbg !4886
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %7 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h02a6b053bffacecaE"(i32 signext %_9) #19, !dbg !4886
  store i32 %7, ptr %_8, align 4, !dbg !4886
  %8 = load i32, ptr %_8, align 4, !dbg !4886
  %9 = icmp eq i32 %8, 1114112, !dbg !4886
  %_13 = select i1 %9, i64 0, i64 1, !dbg !4886
  %10 = icmp eq i64 %_13, 0, !dbg !4886
  br i1 %10, label %bb7, label %bb8, !dbg !4886

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %11 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hc22dfb2cda7df1e6E"() #19, !dbg !4887
  store i32 %11, ptr %_0, align 4, !dbg !4887
  br label %bb13, !dbg !4888

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !4882

bb8:                                              ; preds = %bb3
  %residual = load i32, ptr %_8, align 4, !dbg !4889
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !4889
    #dbg_declare(ptr %residual.dbg.spill, !4870, !DIExpression(), !4890)
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %12 = call i32 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h877cb5f984e65f0cE"(i32 signext %residual) #19, !dbg !4891
  store i32 %12, ptr %_0, align 4, !dbg !4891
  br label %bb13, !dbg !4888

bb13:                                             ; preds = %bb10, %bb8
  %13 = load i32, ptr %_0, align 4, !dbg !4892
  ret i32 %13, !dbg !4892

bb6:                                              ; No predecessors!
  unreachable, !dbg !4886
}

; core::iter::traits::iterator::Iterator::skip_while
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator10skip_while17h6c8fe23524f7a929E(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4893 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4898, !DIExpression(), !4902)
    #dbg_declare(ptr %predicate.dbg.spill, !4899, !DIExpression(), !4903)
; call core::iter::adapters::skip_while::SkipWhile<I,P>::new
  call void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h8f1878d7415a7576E"(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) #19, !dbg !4904
  ret void, !dbg !4905
}

; core::iter::traits::iterator::Iterator::skip_while
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator10skip_while17ha8f7b67b0c9d095cE(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4906 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4910, !DIExpression(), !4913)
    #dbg_declare(ptr %predicate.dbg.spill, !4911, !DIExpression(), !4914)
; call core::iter::adapters::skip_while::SkipWhile<I,P>::new
  call void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3ae06481c80f4fe4E"(ptr sret([24 x i8]) align 8 %_0, ptr %self.0, ptr %self.1) #19, !dbg !4915
  ret void, !dbg !4916
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h0488d6703bae2120E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4917 {
start:
    #dbg_declare(ptr %self, !4921, !DIExpression(), !4925)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !4922, !DIExpression(), !4926)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h754aeb3a8ba5ed99E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !4927
  ret void, !dbg !4928
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h2b793ebf5abc8fb7E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4929 {
start:
    #dbg_declare(ptr %self, !4933, !DIExpression(), !4935)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !4934, !DIExpression(), !4936)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf3fd9eaa5277d941E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !4937
  ret void, !dbg !4938
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h4102d12a4a4a27b0E(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !4939 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !4943, !DIExpression(), !4947)
    #dbg_declare(ptr %f.dbg.spill, !4944, !DIExpression(), !4948)
; call core::iter::adapters::map::Map<I,F>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h98019a832000c72aE"(ptr %self.0, ptr %self.1) #19, !dbg !4949
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4949
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4949
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !4950
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !4950
  ret { ptr, ptr } %3, !dbg !4950
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h7e93eb40b89a0ba1E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4951 {
start:
    #dbg_declare(ptr %self, !4955, !DIExpression(), !4959)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !4956, !DIExpression(), !4960)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb3ea21499cc52787E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !4961
  ret void, !dbg !4962
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator3map17h832a46cb60f3481fE(ptr align 8 %self) unnamed_addr #1 !dbg !4963 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4967, !DIExpression(), !4971)
    #dbg_declare(ptr %f.dbg.spill, !4968, !DIExpression(), !4972)
; call core::iter::adapters::map::Map<I,F>::new
  %_0 = call align 8 ptr @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h841871c4dbd96cb9E"(ptr align 8 %self) #19, !dbg !4973
  ret ptr %_0, !dbg !4974
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator3map17h98616424182e2e07E(ptr align 8 %self) unnamed_addr #1 !dbg !4975 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !4979, !DIExpression(), !4981)
    #dbg_declare(ptr %f.dbg.spill, !4980, !DIExpression(), !4982)
; call core::iter::adapters::map::Map<I,F>::new
  %_0 = call align 8 ptr @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h935911006130b1f1E"(ptr align 8 %self) #19, !dbg !4983
  ret ptr %_0, !dbg !4984
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h9fcd208123266eb4E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4985 {
start:
    #dbg_declare(ptr %self, !4989, !DIExpression(), !4993)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !4990, !DIExpression(), !4994)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1625ede945fe242cE"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !4995
  ret void, !dbg !4996
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17ha571727d7e3dd24dE(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !4997 {
start:
    #dbg_declare(ptr %self, !5001, !DIExpression(), !5005)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5002, !DIExpression(), !5006)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h0fac4006151a53c1E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5007
  ret void, !dbg !5008
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hf470657c387e232dE(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5009 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !5013, !DIExpression(), !5017)
    #dbg_declare(ptr %f.dbg.spill, !5014, !DIExpression(), !5018)
; call core::iter::adapters::map::Map<I,F>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h71a4ef8cde1a10baE"(ptr %self.0, ptr %self.1) #19, !dbg !5019
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5019
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5019
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5020
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5020
  ret { ptr, ptr } %3, !dbg !5020
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3rev17h6b1e1e52c97eb7afE(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5021 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !5025, !DIExpression(), !5027)
; call core::iter::adapters::rev::Rev<T>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he30a3776cb2021a3E"(ptr %self.0, ptr %self.1) #19, !dbg !5028
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5028
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5028
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5029
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5029
  ret { ptr, ptr } %3, !dbg !5029
}

; core::iter::traits::iterator::Iterator::sum
; Function Attrs: noredzone nounwind
define dso_local i64 @_ZN4core4iter6traits8iterator8Iterator3sum17h162802470fc82891E(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !5030 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !5034, !DIExpression(), !5038)
; call <usize as core::iter::traits::accum::Sum>::sum
  %_0 = call i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h46162fdf073132abE"(ptr %self.0, ptr %self.1) #19, !dbg !5039
  ret i64 %_0, !dbg !5040
}

; core::iter::traits::iterator::Iterator::sum
; Function Attrs: noredzone nounwind
define dso_local i8 @_ZN4core4iter6traits8iterator8Iterator3sum17hca7ec4e879e11fecE(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !5041 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !5045, !DIExpression(), !5049)
; call <u8 as core::iter::traits::accum::Sum>::sum
  %_0 = call i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17hd860a52c79cd2e9cE"(ptr %self.0, ptr %self.1) #19, !dbg !5050
  ret i8 %_0, !dbg !5051
}

; core::iter::traits::iterator::Iterator::find
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @_ZN4core4iter6traits8iterator8Iterator4find17hd106590b1f58c5e2E(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !5052 {
start:
  %predicate.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5056, !DIExpression(), !5060)
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i64 8
  store ptr %predicate.1, ptr %0, align 8
    #dbg_declare(ptr %predicate.dbg.spill, !5057, !DIExpression(), !5061)
; call core::iter::traits::iterator::Iterator::find::check
  %1 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator4find5check17h0ea9d97f9c01bdc7E(ptr align 1 %predicate.0, ptr align 1 %predicate.1) #19, !dbg !5062
  %_4.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5062
  %_4.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5062
; call core::iter::traits::iterator::Iterator::try_fold
  %_3 = call i32 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hdfbd6ecb3e6954beE(ptr align 8 %self, ptr align 1 %_4.0, ptr align 1 %_4.1) #19, !dbg !5063
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %_0 = call i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h931e6ead3df1050fE"(i32 signext %_3) #19, !dbg !5063
  ret i32 %_0, !dbg !5064
}

; core::iter::traits::iterator::Iterator::find::check
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator4find5check17h0ea9d97f9c01bdc7E(ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !5065 {
start:
  %predicate.dbg.spill = alloca [16 x i8], align 8
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i64 8
  store ptr %predicate.1, ptr %0, align 8
    #dbg_declare(ptr %predicate.dbg.spill, !5074, !DIExpression(), !5077)
  %1 = insertvalue { ptr, ptr } poison, ptr %predicate.0, 0, !dbg !5078
  %2 = insertvalue { ptr, ptr } %1, ptr %predicate.1, 1, !dbg !5078
  ret { ptr, ptr } %2, !dbg !5078
}

; core::iter::traits::iterator::Iterator::find::check::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h00c5e5577752e0a0E"(ptr align 8 %_1, i32 signext %0) unnamed_addr #1 !dbg !5079 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %x = alloca [4 x i8], align 4
  store i32 %0, ptr %x, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5085, !DIExpression(DW_OP_deref), !5087)
    #dbg_declare(ptr %_2.dbg.spill, !5086, !DIExpression(), !5088)
    #dbg_declare(ptr %x, !5084, !DIExpression(), !5089)
  store i8 0, ptr %_9, align 1, !dbg !5090
  store i8 1, ptr %_9, align 1, !dbg !5090
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
  %_4 = call zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h921f5f98988e8e66E"(ptr align 8 %_1, ptr align 4 %x) #19, !dbg !5090
  br i1 %_4, label %bb2, label %bb3, !dbg !5090

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !5091
  br label %bb4, !dbg !5092

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !5093
  %_8 = load i32, ptr %x, align 4, !dbg !5093
  store i32 %_8, ptr %_0, align 4, !dbg !5094
  br label %bb4, !dbg !5092

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i8, ptr %_9, align 1, !dbg !5095
  %2 = trunc i8 %1 to i1, !dbg !5095
  br i1 %2, label %bb6, label %bb5, !dbg !5095

bb5:                                              ; preds = %bb6, %bb4
  %3 = load i32, ptr %_0, align 4, !dbg !5096
  ret i32 %3, !dbg !5096

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !5095
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4fold17h0da292ef89c16011E(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !5097 {
start:
  %1 = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %_11 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
    #dbg_declare(ptr %self, !5106, !DIExpression(), !5115)
    #dbg_declare(ptr %init.dbg.spill, !5107, !DIExpression(), !5116)
    #dbg_declare(ptr %f, !5108, !DIExpression(), !5117)
    #dbg_declare(ptr %accum.dbg.spill, !5109, !DIExpression(), !5118)
    #dbg_declare(ptr %x, !5111, !DIExpression(), !5119)
  br label %bb1, !dbg !5120

bb1:                                              ; preds = %bb3, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %3 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h85da2e5b468c94bcE"(ptr align 8 %self) #19, !dbg !5121
  store i64 %3, ptr %2, align 8, !dbg !5121
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 8 %2, i64 8, i1 false), !dbg !5121
  %4 = load i16, ptr %_5, align 4, !dbg !5121
  %5 = icmp eq i16 %4, 2, !dbg !5121
  %_7 = select i1 %5, i64 0, i64 1, !dbg !5121
  %6 = icmp eq i64 %_7, 1, !dbg !5122
  br i1 %6, label %bb3, label %bb5, !dbg !5122

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 4 %_5, i64 8, i1 false), !dbg !5119
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_11, ptr align 4 %x, i64 8, i1 false), !dbg !5123
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_11, i64 8, i1 false), !dbg !5123
  %7 = load i64, ptr %1, align 8, !dbg !5123
; call core::iter::adapters::map::map_fold::{{closure}}
  call void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he6070893438acd21E"(ptr align 8 %f, i64 %7) #19, !dbg !5123
  br label %bb1, !dbg !5120

bb5:                                              ; preds = %bb1
  ret void, !dbg !5124

bb9:                                              ; No predecessors!
  unreachable, !dbg !5125
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4fold17h12fe053263c9c7d0E(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !5126 {
start:
  %1 = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %_11 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
    #dbg_declare(ptr %self, !5134, !DIExpression(), !5143)
    #dbg_declare(ptr %init.dbg.spill, !5135, !DIExpression(), !5144)
    #dbg_declare(ptr %f, !5136, !DIExpression(), !5145)
    #dbg_declare(ptr %accum.dbg.spill, !5137, !DIExpression(), !5146)
    #dbg_declare(ptr %x, !5139, !DIExpression(), !5147)
  br label %bb1, !dbg !5148

bb1:                                              ; preds = %bb3, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %3 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68e5aa64755c806bE"(ptr align 8 %self) #19, !dbg !5149
  store i64 %3, ptr %2, align 8, !dbg !5149
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 8 %2, i64 8, i1 false), !dbg !5149
  %4 = load i16, ptr %_5, align 4, !dbg !5149
  %5 = icmp eq i16 %4, 2, !dbg !5149
  %_7 = select i1 %5, i64 0, i64 1, !dbg !5149
  %6 = icmp eq i64 %_7, 1, !dbg !5150
  br i1 %6, label %bb3, label %bb5, !dbg !5150

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 4 %_5, i64 8, i1 false), !dbg !5147
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_11, ptr align 4 %x, i64 8, i1 false), !dbg !5151
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_11, i64 8, i1 false), !dbg !5151
  %7 = load i64, ptr %1, align 8, !dbg !5151
; call core::iter::adapters::map::map_fold::{{closure}}
  call void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h3536803cec0d2751E"(ptr align 8 %f, i64 %7) #19, !dbg !5151
  br label %bb1, !dbg !5148

bb5:                                              ; preds = %bb1
  ret void, !dbg !5152

bb9:                                              ; No predecessors!
  unreachable, !dbg !5153
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4fold17h3912cac9188d7787E(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !5154 {
start:
  %1 = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %_11 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f = alloca [8 x i8], align 8
  store ptr %0, ptr %f, align 8
    #dbg_declare(ptr %self, !5162, !DIExpression(), !5171)
    #dbg_declare(ptr %init.dbg.spill, !5163, !DIExpression(), !5172)
    #dbg_declare(ptr %f, !5164, !DIExpression(), !5173)
    #dbg_declare(ptr %accum.dbg.spill, !5165, !DIExpression(), !5174)
    #dbg_declare(ptr %x, !5167, !DIExpression(), !5175)
  br label %bb1, !dbg !5176

bb1:                                              ; preds = %bb3, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %3 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heab9c9c8e7a9e07dE"(ptr align 8 %self) #19, !dbg !5177
  store i64 %3, ptr %2, align 8, !dbg !5177
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 8 %2, i64 8, i1 false), !dbg !5177
  %4 = load i16, ptr %_5, align 4, !dbg !5177
  %5 = icmp eq i16 %4, 2, !dbg !5177
  %_7 = select i1 %5, i64 0, i64 1, !dbg !5177
  %6 = icmp eq i64 %_7, 1, !dbg !5178
  br i1 %6, label %bb3, label %bb5, !dbg !5178

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 4 %_5, i64 8, i1 false), !dbg !5175
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_11, ptr align 4 %x, i64 8, i1 false), !dbg !5179
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_11, i64 8, i1 false), !dbg !5179
  %7 = load i64, ptr %1, align 8, !dbg !5179
; call core::iter::adapters::map::map_fold::{{closure}}
  call void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hc9a52ef0f09c24d4E"(ptr align 8 %f, i64 %7) #19, !dbg !5179
  br label %bb1, !dbg !5176

bb5:                                              ; preds = %bb1
  ret void, !dbg !5180

bb9:                                              ; No predecessors!
  unreachable, !dbg !5181
}

; core::iter::traits::iterator::Iterator::by_ref
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator6by_ref17h08950ff8578bebedE(ptr align 8 %self) unnamed_addr #0 !dbg !5182 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5186, !DIExpression(), !5189)
  ret ptr %self, !dbg !5190
}

; core::iter::traits::iterator::Iterator::cloned
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17h4d577e09594f2dceE(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !5191 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !5195, !DIExpression(), !5198)
; call core::iter::adapters::cloned::Cloned<I>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hed732f4e603e1508E"(ptr %self.0, ptr %self.1) #19, !dbg !5199
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5199
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5199
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5200
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5200
  ret { ptr, ptr } %3, !dbg !5200
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator6copied17h2d2b7320ee875f1aE(ptr align 8 %self) unnamed_addr #0 !dbg !5201 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5205, !DIExpression(), !5208)
; call core::iter::adapters::copied::Copied<I>::new
  %_0 = call align 8 ptr @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hbf72fb8115fb1bacE"(ptr align 8 %self) #19, !dbg !5209
  ret ptr %_0, !dbg !5210
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator6copied17h3e969b455cdafb99E(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !5211 {
start:
    #dbg_declare(ptr %self, !5215, !DIExpression(), !5217)
; call core::iter::adapters::copied::Copied<I>::new
  call void @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h428e49e4fb4c4251E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5218
  ret void, !dbg !5219
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h2befd31383be27e3E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5220 {
start:
    #dbg_declare(ptr %self, !5224, !DIExpression(), !5228)
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17he1c630a156a6adb6E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5229
  ret void, !dbg !5230
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h4372d49cc1f3cbd3E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5231 {
start:
    #dbg_declare(ptr %self, !5235, !DIExpression(), !5238)
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hb36d9acdf1cd8878E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5239
  ret void, !dbg !5240
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h8c452d31131578e9E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5241 {
start:
    #dbg_declare(ptr %self, !5245, !DIExpression(), !5248)
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h1377f77d17d8a0e5E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5249
  ret void, !dbg !5250
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17hc4c9fc8e9539358fE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5251 {
start:
    #dbg_declare(ptr %self, !5253, !DIExpression(), !5257)
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h35457f419b514e9dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5258
  ret void, !dbg !5259
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17hcabe6276b7c8417fE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5260 {
start:
    #dbg_declare(ptr %self, !5262, !DIExpression(), !5265)
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h25f7d85e5ccf0ff4E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5266
  ret void, !dbg !5267
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17he04e4d310b13a522E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5268 {
start:
    #dbg_declare(ptr %self, !5272, !DIExpression(), !5275)
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hc1d0b6299887d162E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5276
  ret void, !dbg !5277
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17hfa840492b54743baE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !5278 {
start:
    #dbg_declare(ptr %self, !5282, !DIExpression(), !5285)
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17ha1dce803413e712dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !5286
  ret void, !dbg !5287
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17h0f7f73cc7291a65fE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !5288 {
start:
    #dbg_declare(ptr %self, !5292, !DIExpression(), !5296)
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5293, !DIExpression(), !5297)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h2471487740743592E(ptr align 8 %f) #19, !dbg !5298
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0479151a0823b3f7E"(ptr align 8 %self, ptr align 8 %_4) #19, !dbg !5299
  ret void, !dbg !5300
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17h17b97303bd1a315bE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !5301 {
start:
    #dbg_declare(ptr %self, !5305, !DIExpression(), !5309)
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5306, !DIExpression(), !5310)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h0b617551f0eee1a1E(ptr align 8 %f) #19, !dbg !5311
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h003b1cf887d8a7f1E"(ptr align 8 %self, ptr align 8 %_4) #19, !dbg !5312
  ret void, !dbg !5313
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17h4b5968fd9e3fccaeE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !5314 {
start:
    #dbg_declare(ptr %self, !5318, !DIExpression(), !5322)
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5319, !DIExpression(), !5323)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hf352eb8bffab4aacE(ptr align 8 %f) #19, !dbg !5324
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hd354c25741e129f9E"(ptr align 8 %self, ptr align 8 %_4) #19, !dbg !5325
  ret void, !dbg !5326
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17had574af78bd97fe3E(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !5327 {
start:
    #dbg_declare(ptr %self, !5331, !DIExpression(), !5335)
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5332, !DIExpression(), !5336)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h2c0d79f555afc9efE(ptr align 8 %f) #19, !dbg !5337
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9531550f4ac50ad4E"(ptr align 8 %self, ptr align 8 %_4) #19, !dbg !5338
  ret void, !dbg !5339
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17hc76f61ea01929b3aE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !5340 {
start:
    #dbg_declare(ptr %self, !5344, !DIExpression(), !5348)
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5345, !DIExpression(), !5349)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h159987c5aeed0ea9E(ptr align 8 %f) #19, !dbg !5350
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0bc16a9aaaea1196E"(ptr align 8 %self, ptr align 8 %_4) #19, !dbg !5351
  ret void, !dbg !5352
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h0b617551f0eee1a1E(ptr align 8 %f) unnamed_addr #1 !dbg !5353 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5357, !DIExpression(), !5360)
  ret ptr %f, !dbg !5361
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h159987c5aeed0ea9E(ptr align 8 %f) unnamed_addr #1 !dbg !5362 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5366, !DIExpression(), !5369)
  ret ptr %f, !dbg !5370
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h2471487740743592E(ptr align 8 %f) unnamed_addr #1 !dbg !5371 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5375, !DIExpression(), !5378)
  ret ptr %f, !dbg !5379
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h2c0d79f555afc9efE(ptr align 8 %f) unnamed_addr #1 !dbg !5380 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5384, !DIExpression(), !5387)
  ret ptr %f, !dbg !5388
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hf352eb8bffab4aacE(ptr align 8 %f) unnamed_addr #1 !dbg !5389 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !5393, !DIExpression(), !5396)
  ret ptr %f, !dbg !5397
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h2b128d7671aea31cE"(ptr align 8 %_1, i32 signext %item) unnamed_addr #1 !dbg !5398 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5404, !DIExpression(DW_OP_deref), !5406)
    #dbg_declare(ptr %_2.dbg.spill, !5405, !DIExpression(), !5407)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !5403, !DIExpression(), !5408)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hc22b9a5f5cbf9e43E"(ptr align 8 %_1, i32 signext %item) #19, !dbg !5409
  ret void, !dbg !5410
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h504178873d095020E"(ptr align 8 %_1, i32 signext %item) unnamed_addr #1 !dbg !5411 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5417, !DIExpression(DW_OP_deref), !5419)
    #dbg_declare(ptr %_2.dbg.spill, !5418, !DIExpression(), !5420)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !5416, !DIExpression(), !5421)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h64c8678e89c969fbE"(ptr align 8 %_1, i32 signext %item) #19, !dbg !5422
  ret void, !dbg !5423
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h62f5d3aa93029042E"(ptr align 8 %_1, i32 signext %item) unnamed_addr #1 !dbg !5424 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5430, !DIExpression(DW_OP_deref), !5432)
    #dbg_declare(ptr %_2.dbg.spill, !5431, !DIExpression(), !5433)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !5429, !DIExpression(), !5434)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h85427d273adde416E"(ptr align 8 %_1, i32 signext %item) #19, !dbg !5435
  ret void, !dbg !5436
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h7e73bc34fe40e5a7E"(ptr align 8 %_1, i32 signext %item) unnamed_addr #1 !dbg !5437 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5443, !DIExpression(DW_OP_deref), !5445)
    #dbg_declare(ptr %_2.dbg.spill, !5444, !DIExpression(), !5446)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !5442, !DIExpression(), !5447)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h1cd7c7d8df82a2caE"(ptr align 8 %_1, i32 signext %item) #19, !dbg !5448
  ret void, !dbg !5449
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd2deb29a61801fd2E"(ptr align 8 %_1, i32 signext %item) unnamed_addr #1 !dbg !5450 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5456, !DIExpression(DW_OP_deref), !5458)
    #dbg_declare(ptr %_2.dbg.spill, !5457, !DIExpression(), !5459)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !5455, !DIExpression(), !5460)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h5426d63641e7abbcE"(ptr align 8 %_1, i32 signext %item) #19, !dbg !5461
  ret void, !dbg !5462
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h0f9f1a459c628c4dE(ptr align 8 %self, ptr align 8 %0, ptr align 2 %1) unnamed_addr #1 !dbg !5463 {
start:
  %2 = alloca [8 x i8], align 8
  %3 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_11 = alloca [8 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [16 x i8], align 8
  store ptr %0, ptr %f, align 8
  %4 = getelementptr inbounds i8, ptr %f, i64 8
  store ptr %1, ptr %4, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5468, !DIExpression(), !5482)
    #dbg_declare(ptr %init.dbg.spill, !5469, !DIExpression(), !5483)
    #dbg_declare(ptr %f, !5470, !DIExpression(), !5484)
    #dbg_declare(ptr %accum.dbg.spill, !5471, !DIExpression(), !5485)
    #dbg_declare(ptr %x, !5473, !DIExpression(), !5486)
    #dbg_declare(ptr %residual.dbg.spill, !5475, !DIExpression(), !5487)
    #dbg_declare(ptr %val.dbg.spill, !5477, !DIExpression(), !5488)
  br label %bb1, !dbg !5489

bb1:                                              ; preds = %bb7, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %5 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h63e0e77e2cfa378fE"(ptr align 8 %self) #19, !dbg !5490
  store i64 %5, ptr %3, align 8, !dbg !5490
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 8 %3, i64 8, i1 false), !dbg !5490
  %6 = load i16, ptr %_5, align 4, !dbg !5490
  %7 = icmp eq i16 %6, 2, !dbg !5490
  %_6 = select i1 %7, i64 0, i64 1, !dbg !5490
  %8 = icmp eq i64 %_6, 1, !dbg !5491
  br i1 %8, label %bb3, label %bb10, !dbg !5491

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 4 %_5, i64 8, i1 false), !dbg !5486
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_11, ptr align 4 %x, i64 8, i1 false), !dbg !5492
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 4 %_11, i64 8, i1 false), !dbg !5492
  %9 = load i64, ptr %2, align 8, !dbg !5492
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
  %_9 = call zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h894d65eb4fc12f09E"(ptr align 8 %f, i64 %9) #19, !dbg !5492
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %10 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6207c75bb14ed308E"(i1 zeroext %_9) #19, !dbg !5492
  %11 = zext i1 %10 to i8, !dbg !5492
  store i8 %11, ptr %_8, align 1, !dbg !5492
  %12 = load i8, ptr %_8, align 1, !dbg !5492
  %13 = trunc i8 %12 to i1, !dbg !5492
  %_13 = zext i1 %13 to i64, !dbg !5492
  %14 = icmp eq i64 %_13, 0, !dbg !5492
  br i1 %14, label %bb7, label %bb8, !dbg !5492

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %15 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1e73e2f1e9b6831bE"() #19, !dbg !5493
  %16 = zext i1 %15 to i8, !dbg !5493
  store i8 %16, ptr %_0, align 1, !dbg !5493
  br label %bb13, !dbg !5494

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !5489

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %17 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h0ddc44c50adc7e18E"() #19, !dbg !5495
  %18 = zext i1 %17 to i8, !dbg !5495
  store i8 %18, ptr %_0, align 1, !dbg !5495
  br label %bb13, !dbg !5494

bb13:                                             ; preds = %bb10, %bb8
  %19 = load i8, ptr %_0, align 1, !dbg !5496
  %20 = trunc i8 %19 to i1, !dbg !5496
  ret i1 %20, !dbg !5496

bb6:                                              ; No predecessors!
  unreachable, !dbg !5492
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6b75e17449d59d0cE(ptr align 8 %self, ptr align 8 %0, ptr align 2 %1) unnamed_addr #1 !dbg !5497 {
start:
  %2 = alloca [8 x i8], align 8
  %3 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_11 = alloca [8 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [16 x i8], align 8
  store ptr %0, ptr %f, align 8
  %4 = getelementptr inbounds i8, ptr %f, i64 8
  store ptr %1, ptr %4, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5502, !DIExpression(), !5515)
    #dbg_declare(ptr %init.dbg.spill, !5503, !DIExpression(), !5516)
    #dbg_declare(ptr %f, !5504, !DIExpression(), !5517)
    #dbg_declare(ptr %accum.dbg.spill, !5505, !DIExpression(), !5518)
    #dbg_declare(ptr %x, !5507, !DIExpression(), !5519)
    #dbg_declare(ptr %residual.dbg.spill, !5509, !DIExpression(), !5520)
    #dbg_declare(ptr %val.dbg.spill, !5511, !DIExpression(), !5521)
  br label %bb1, !dbg !5522

bb1:                                              ; preds = %bb7, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %5 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd57608f6e2430588E"(ptr align 8 %self) #19, !dbg !5523
  store i64 %5, ptr %3, align 8, !dbg !5523
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_5, ptr align 8 %3, i64 8, i1 false), !dbg !5523
  %6 = load i16, ptr %_5, align 4, !dbg !5523
  %7 = icmp eq i16 %6, 2, !dbg !5523
  %_6 = select i1 %7, i64 0, i64 1, !dbg !5523
  %8 = icmp eq i64 %_6, 1, !dbg !5524
  br i1 %8, label %bb3, label %bb10, !dbg !5524

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %x, ptr align 4 %_5, i64 8, i1 false), !dbg !5519
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_11, ptr align 4 %x, i64 8, i1 false), !dbg !5525
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 4 %_11, i64 8, i1 false), !dbg !5525
  %9 = load i64, ptr %2, align 8, !dbg !5525
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
  %_9 = call zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h1187b641496e956bE"(ptr align 8 %f, i64 %9) #19, !dbg !5525
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %10 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6207c75bb14ed308E"(i1 zeroext %_9) #19, !dbg !5525
  %11 = zext i1 %10 to i8, !dbg !5525
  store i8 %11, ptr %_8, align 1, !dbg !5525
  %12 = load i8, ptr %_8, align 1, !dbg !5525
  %13 = trunc i8 %12 to i1, !dbg !5525
  %_13 = zext i1 %13 to i64, !dbg !5525
  %14 = icmp eq i64 %_13, 0, !dbg !5525
  br i1 %14, label %bb7, label %bb8, !dbg !5525

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %15 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1e73e2f1e9b6831bE"() #19, !dbg !5526
  %16 = zext i1 %15 to i8, !dbg !5526
  store i8 %16, ptr %_0, align 1, !dbg !5526
  br label %bb13, !dbg !5527

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !5522

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %17 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h0ddc44c50adc7e18E"() #19, !dbg !5528
  %18 = zext i1 %17 to i8, !dbg !5528
  store i8 %18, ptr %_0, align 1, !dbg !5528
  br label %bb13, !dbg !5527

bb13:                                             ; preds = %bb10, %bb8
  %19 = load i8, ptr %_0, align 1, !dbg !5529
  %20 = trunc i8 %19 to i1, !dbg !5529
  ret i1 %20, !dbg !5529

bb6:                                              ; No predecessors!
  unreachable, !dbg !5525
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hdfbd6ecb3e6954beE(ptr align 8 %self, ptr align 1 %0, ptr align 1 %1) unnamed_addr #1 !dbg !5530 {
start:
  %residual.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [4 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %f = alloca [16 x i8], align 8
  store ptr %0, ptr %f, align 8
  %2 = getelementptr inbounds i8, ptr %f, i64 8
  store ptr %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5534, !DIExpression(), !5547)
    #dbg_declare(ptr %init.dbg.spill, !5535, !DIExpression(), !5548)
    #dbg_declare(ptr %f, !5536, !DIExpression(), !5549)
    #dbg_declare(ptr %accum.dbg.spill, !5537, !DIExpression(), !5550)
    #dbg_declare(ptr %val.dbg.spill, !5543, !DIExpression(), !5551)
  br label %bb1, !dbg !5552

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %3 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7d4ca64fd8e14bdbE"(ptr align 8 %self) #19, !dbg !5553
  store i32 %3, ptr %_5, align 4, !dbg !5553
  %4 = load i32, ptr %_5, align 4, !dbg !5553
  %5 = icmp eq i32 %4, 1114112, !dbg !5553
  %_6 = select i1 %5, i64 0, i64 1, !dbg !5553
  %6 = icmp eq i64 %_6, 1, !dbg !5554
  br i1 %6, label %bb3, label %bb10, !dbg !5554

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !5555
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !5555
    #dbg_declare(ptr %x.dbg.spill, !5539, !DIExpression(), !5555)
; call core::iter::traits::iterator::Iterator::find::check::{{closure}}
  %_9 = call i32 @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h00c5e5577752e0a0E"(ptr align 8 %f, i32 signext %x) #19, !dbg !5556
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %7 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h02a6b053bffacecaE"(i32 signext %_9) #19, !dbg !5556
  store i32 %7, ptr %_8, align 4, !dbg !5556
  %8 = load i32, ptr %_8, align 4, !dbg !5556
  %9 = icmp eq i32 %8, 1114112, !dbg !5556
  %_13 = select i1 %9, i64 0, i64 1, !dbg !5556
  %10 = icmp eq i64 %_13, 0, !dbg !5556
  br i1 %10, label %bb7, label %bb8, !dbg !5556

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %11 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hc22dfb2cda7df1e6E"() #19, !dbg !5557
  store i32 %11, ptr %_0, align 4, !dbg !5557
  br label %bb13, !dbg !5558

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !5552

bb8:                                              ; preds = %bb3
  %residual = load i32, ptr %_8, align 4, !dbg !5559
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !5559
    #dbg_declare(ptr %residual.dbg.spill, !5541, !DIExpression(), !5560)
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %12 = call i32 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h877cb5f984e65f0cE"(i32 signext %residual) #19, !dbg !5561
  store i32 %12, ptr %_0, align 4, !dbg !5561
  br label %bb13, !dbg !5558

bb13:                                             ; preds = %bb10, %bb8
  %13 = load i32, ptr %_0, align 4, !dbg !5562
  ret i32 %13, !dbg !5562

bb6:                                              ; No predecessors!
  unreachable, !dbg !5556
}

; core::iter::adapters::skip_while::SkipWhile<I,P>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3ae06481c80f4fe4E"(ptr sret([24 x i8]) align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !5563 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5566, !DIExpression(), !5568)
    #dbg_declare(ptr %predicate.dbg.spill, !5567, !DIExpression(), !5569)
  store ptr %iter.0, ptr %_0, align 8, !dbg !5570
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !5570
  store ptr %iter.1, ptr %1, align 8, !dbg !5570
  %2 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !5570
  store i8 0, ptr %2, align 8, !dbg !5570
  ret void, !dbg !5571
}

; core::iter::adapters::skip_while::SkipWhile<I,P>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h8f1878d7415a7576E"(ptr sret([24 x i8]) align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !5572 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5575, !DIExpression(), !5577)
    #dbg_declare(ptr %predicate.dbg.spill, !5576, !DIExpression(), !5578)
  store ptr %iter.0, ptr %_0, align 8, !dbg !5579
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !5579
  store ptr %iter.1, ptr %1, align 8, !dbg !5579
  %2 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !5579
  store i8 0, ptr %2, align 8, !dbg !5579
  ret void, !dbg !5580
}

; core::iter::adapters::try_process
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core4iter8adapters11try_process17hbcfc53cefae4d526E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5581 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %_12 = alloca [1 x i8], align 1
  %_11 = alloca [24 x i8], align 8
  %_8 = alloca [48 x i8], align 8
  %value = alloca [24 x i8], align 8
  %shunt = alloca [48 x i8], align 8
  %residual = alloca [4 x i8], align 2
  %f = alloca [0 x i8], align 1
    #dbg_declare(ptr %iter, !5585, !DIExpression(), !5598)
    #dbg_declare(ptr %f, !5586, !DIExpression(), !5599)
    #dbg_declare(ptr %residual, !5587, !DIExpression(), !5600)
    #dbg_declare(ptr %shunt, !5589, !DIExpression(), !5601)
    #dbg_declare(ptr %value, !5591, !DIExpression(), !5602)
  store i8 0, ptr %_12, align 1, !dbg !5603
  store i16 0, ptr %residual, align 2, !dbg !5604
  %0 = getelementptr inbounds i8, ptr %shunt, i64 8, !dbg !5605
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %iter, i64 40, i1 false), !dbg !5605
  store ptr %residual, ptr %shunt, align 8, !dbg !5605
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %shunt, i64 48, i1 false), !dbg !5606
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h97273b0d57d9a248E"(ptr sret([24 x i8]) align 8 %value, ptr align 1 %f, ptr align 8 %_8) #19, !dbg !5606
  store i8 1, ptr %_12, align 1, !dbg !5607
  %1 = load i16, ptr %residual, align 2, !dbg !5608
  %_9 = zext i16 %1 to i64, !dbg !5608
  %2 = icmp eq i64 %_9, 0, !dbg !5609
  br i1 %2, label %bb3, label %bb4, !dbg !5609

bb3:                                              ; preds = %start
  store i8 0, ptr %_12, align 1, !dbg !5610
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %value, i64 24, i1 false), !dbg !5610
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::from_output
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hef41afcac3370099E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_11) #19, !dbg !5611
  br label %bb8, !dbg !5611

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %residual, i64 2, !dbg !5612
  %r = load i16, ptr %3, align 2, !dbg !5612
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !5612
    #dbg_declare(ptr %r.dbg.spill, !5593, !DIExpression(), !5613)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb909015815a5ee67E"(ptr sret([24 x i8]) align 8 %_0, i16 zeroext %r, ptr align 8 @alloc_a24dbebe50c7330ea9e880a90209de3e) #19, !dbg !5614
  br label %bb8, !dbg !5614

bb8:                                              ; preds = %bb4, %bb3
  %4 = load i8, ptr %_12, align 1, !dbg !5615
  %5 = trunc i8 %4 to i1, !dbg !5615
  br i1 %5, label %bb7, label %bb5, !dbg !5615

bb5:                                              ; preds = %bb7, %bb8
  store i8 0, ptr %_12, align 1, !dbg !5615
  ret void, !dbg !5616

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %value) #19, !dbg !5615
  br label %bb5, !dbg !5615

bb2:                                              ; No predecessors!
  unreachable, !dbg !5608
}

; core::iter::adapters::try_process
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core4iter8adapters11try_process17hec6061fc37721b99E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5617 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %_12 = alloca [1 x i8], align 1
  %_11 = alloca [24 x i8], align 8
  %_8 = alloca [48 x i8], align 8
  %value = alloca [24 x i8], align 8
  %shunt = alloca [48 x i8], align 8
  %residual = alloca [4 x i8], align 2
  %f = alloca [0 x i8], align 1
    #dbg_declare(ptr %iter, !5621, !DIExpression(), !5633)
    #dbg_declare(ptr %f, !5622, !DIExpression(), !5634)
    #dbg_declare(ptr %residual, !5623, !DIExpression(), !5635)
    #dbg_declare(ptr %shunt, !5625, !DIExpression(), !5636)
    #dbg_declare(ptr %value, !5627, !DIExpression(), !5637)
  store i8 0, ptr %_12, align 1, !dbg !5638
  store i16 0, ptr %residual, align 2, !dbg !5639
  %0 = getelementptr inbounds i8, ptr %shunt, i64 8, !dbg !5640
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %iter, i64 40, i1 false), !dbg !5640
  store ptr %residual, ptr %shunt, align 8, !dbg !5640
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %shunt, i64 48, i1 false), !dbg !5641
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h0461c4832ad24d56E"(ptr sret([24 x i8]) align 8 %value, ptr align 1 %f, ptr align 8 %_8) #19, !dbg !5641
  store i8 1, ptr %_12, align 1, !dbg !5642
  %1 = load i16, ptr %residual, align 2, !dbg !5643
  %_9 = zext i16 %1 to i64, !dbg !5643
  %2 = icmp eq i64 %_9, 0, !dbg !5644
  br i1 %2, label %bb3, label %bb4, !dbg !5644

bb3:                                              ; preds = %start
  store i8 0, ptr %_12, align 1, !dbg !5645
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %value, i64 24, i1 false), !dbg !5645
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::from_output
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hef41afcac3370099E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_11) #19, !dbg !5646
  br label %bb8, !dbg !5646

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %residual, i64 2, !dbg !5647
  %r = load i16, ptr %3, align 2, !dbg !5647
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !5647
    #dbg_declare(ptr %r.dbg.spill, !5629, !DIExpression(), !5648)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb909015815a5ee67E"(ptr sret([24 x i8]) align 8 %_0, i16 zeroext %r, ptr align 8 @alloc_a24dbebe50c7330ea9e880a90209de3e) #19, !dbg !5649
  br label %bb8, !dbg !5649

bb8:                                              ; preds = %bb4, %bb3
  %4 = load i8, ptr %_12, align 1, !dbg !5650
  %5 = trunc i8 %4 to i1, !dbg !5650
  br i1 %5, label %bb7, label %bb5, !dbg !5650

bb5:                                              ; preds = %bb7, %bb8
  store i8 0, ptr %_12, align 1, !dbg !5650
  ret void, !dbg !5651

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %value) #19, !dbg !5650
  br label %bb5, !dbg !5650

bb2:                                              ; No predecessors!
  unreachable, !dbg !5643
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h0fac4006151a53c1E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5652 {
start:
    #dbg_declare(ptr %iter, !5655, !DIExpression(), !5657)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5656, !DIExpression(), !5658)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %iter, i64 16, i1 false), !dbg !5659
  ret void, !dbg !5660
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1625ede945fe242cE"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5661 {
start:
    #dbg_declare(ptr %iter, !5664, !DIExpression(), !5666)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5665, !DIExpression(), !5667)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %iter, i64 16, i1 false), !dbg !5668
  ret void, !dbg !5669
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h71a4ef8cde1a10baE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !5670 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5673, !DIExpression(), !5675)
    #dbg_declare(ptr %f.dbg.spill, !5674, !DIExpression(), !5676)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !5677
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !5677
  ret { ptr, ptr } %2, !dbg !5677
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h754aeb3a8ba5ed99E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5678 {
start:
    #dbg_declare(ptr %iter, !5681, !DIExpression(), !5683)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5682, !DIExpression(), !5684)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %iter, i64 32, i1 false), !dbg !5685
  ret void, !dbg !5686
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h841871c4dbd96cb9E"(ptr align 8 %iter) unnamed_addr #0 !dbg !5687 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 8
  store ptr %iter, ptr %iter.dbg.spill, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5690, !DIExpression(), !5692)
    #dbg_declare(ptr %f.dbg.spill, !5691, !DIExpression(), !5693)
  ret ptr %iter, !dbg !5694
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h935911006130b1f1E"(ptr align 8 %iter) unnamed_addr #0 !dbg !5695 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 8
  store ptr %iter, ptr %iter.dbg.spill, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5698, !DIExpression(), !5700)
    #dbg_declare(ptr %f.dbg.spill, !5699, !DIExpression(), !5701)
  ret ptr %iter, !dbg !5702
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h98019a832000c72aE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !5703 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5706, !DIExpression(), !5708)
    #dbg_declare(ptr %f.dbg.spill, !5707, !DIExpression(), !5709)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !5710
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !5710
  ret { ptr, ptr } %2, !dbg !5710
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb3ea21499cc52787E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5711 {
start:
    #dbg_declare(ptr %iter, !5714, !DIExpression(), !5716)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5715, !DIExpression(), !5717)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %iter, i64 24, i1 false), !dbg !5718
  ret void, !dbg !5719
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf3fd9eaa5277d941E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !5720 {
start:
    #dbg_declare(ptr %iter, !5723, !DIExpression(), !5725)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5724, !DIExpression(), !5726)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %iter, i64 32, i1 false), !dbg !5727
  ret void, !dbg !5728
}

; core::iter::adapters::map::map_fold
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core4iter8adapters3map8map_fold17h0debb8688aedadfbE() unnamed_addr #0 !dbg !5729 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5733, !DIExpression(), !5738)
    #dbg_declare(ptr %g.dbg.spill, !5734, !DIExpression(), !5739)
  ret void, !dbg !5740
}

; core::iter::adapters::map::map_fold
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter8adapters3map8map_fold17hb832041a4efbc5a4E(ptr align 8 %g) unnamed_addr #0 !dbg !5741 {
start:
  %g.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5745, !DIExpression(), !5750)
  store ptr %g, ptr %g.dbg.spill, align 8
    #dbg_declare(ptr %g.dbg.spill, !5746, !DIExpression(), !5751)
  ret ptr %g, !dbg !5752
}

; core::iter::adapters::map::map_fold
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter8adapters3map8map_fold17hc2e7bfde55dd6f3bE(ptr align 8 %g) unnamed_addr #0 !dbg !5753 {
start:
  %g.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5757, !DIExpression(), !5762)
  store ptr %g, ptr %g.dbg.spill, align 8
    #dbg_declare(ptr %g.dbg.spill, !5758, !DIExpression(), !5763)
  ret ptr %g, !dbg !5764
}

; core::iter::adapters::map::map_fold
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @_ZN4core4iter8adapters3map8map_fold17he407e15938df864bE(ptr align 8 %g) unnamed_addr #0 !dbg !5765 {
start:
  %g.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5769, !DIExpression(), !5774)
  store ptr %g, ptr %g.dbg.spill, align 8
    #dbg_declare(ptr %g.dbg.spill, !5770, !DIExpression(), !5775)
  ret ptr %g, !dbg !5776
}

; core::iter::adapters::map::map_fold
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core4iter8adapters3map8map_fold17he58b8026ff44e7ecE() unnamed_addr #0 !dbg !5777 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5781, !DIExpression(), !5786)
    #dbg_declare(ptr %g.dbg.spill, !5782, !DIExpression(), !5787)
  ret void, !dbg !5788
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h3536803cec0d2751E"(ptr align 8 %_1, i64 %0) unnamed_addr #1 !dbg !5789 {
start:
  %1 = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [8 x i8], align 4
  %2 = alloca [8 x i8], align 8
  %elt = alloca [8 x i8], align 4
  store i64 %0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %elt, ptr align 8 %2, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5796, !DIExpression(DW_OP_deref), !5798)
    #dbg_declare(ptr %_1.dbg.spill, !5797, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8), !5799)
    #dbg_declare(ptr %acc.dbg.spill, !5794, !DIExpression(), !5800)
    #dbg_declare(ptr %elt, !5795, !DIExpression(), !5801)
  %_7 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !5802
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_8, ptr align 4 %elt, i64 8, i1 false), !dbg !5802
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_8, i64 8, i1 false), !dbg !5802
  %3 = load i64, ptr %1, align 8, !dbg !5802
; call alloc::string::String::from_utf16le_lossy::{{closure}}
  %_6 = call i32 @"_ZN5alloc6string6String18from_utf16le_lossy28_$u7b$$u7b$closure$u7d$$u7d$17haa8260feb9b9657cE"(ptr align 1 %_7, i64 %3) #19, !dbg !5802
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h7e73bc34fe40e5a7E"(ptr align 8 %_1, i32 signext %_6) #19, !dbg !5803
  ret void, !dbg !5804
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hc9a52ef0f09c24d4E"(ptr align 8 %_1, i64 %0) unnamed_addr #1 !dbg !5805 {
start:
  %1 = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [8 x i8], align 4
  %2 = alloca [8 x i8], align 8
  %elt = alloca [8 x i8], align 4
  store i64 %0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %elt, ptr align 8 %2, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5812, !DIExpression(DW_OP_deref), !5814)
    #dbg_declare(ptr %_1.dbg.spill, !5813, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8), !5815)
    #dbg_declare(ptr %acc.dbg.spill, !5810, !DIExpression(), !5816)
    #dbg_declare(ptr %elt, !5811, !DIExpression(), !5817)
  %_7 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !5818
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_8, ptr align 4 %elt, i64 8, i1 false), !dbg !5818
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_8, i64 8, i1 false), !dbg !5818
  %3 = load i64, ptr %1, align 8, !dbg !5818
; call alloc::string::String::from_utf16be_lossy::{{closure}}
  %_6 = call i32 @"_ZN5alloc6string6String18from_utf16be_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h3ad59939c93a76a4E"(ptr align 1 %_7, i64 %3) #19, !dbg !5818
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h504178873d095020E"(ptr align 8 %_1, i32 signext %_6) #19, !dbg !5819
  ret void, !dbg !5820
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i8 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd0380c8633060cd6E"(ptr align 1 %_1, i8 zeroext %acc, ptr align 1 %elt) unnamed_addr #1 !dbg !5821 {
start:
  %elt.dbg.spill = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5832, !DIExpression(DW_OP_deref), !5834)
    #dbg_declare(ptr %_1.dbg.spill, !5833, !DIExpression(DW_OP_deref), !5835)
  store i8 %acc, ptr %acc.dbg.spill, align 1
    #dbg_declare(ptr %acc.dbg.spill, !5830, !DIExpression(), !5836)
  store ptr %elt, ptr %elt.dbg.spill, align 8
    #dbg_declare(ptr %elt.dbg.spill, !5831, !DIExpression(), !5837)
; call alloc::str::convert_while_ascii::{{closure}}
  %_6 = call i8 @"_ZN5alloc3str19convert_while_ascii28_$u7b$$u7b$closure$u7d$$u7d$17hd5bea76adf3287d2E"(ptr align 1 %_1, ptr align 1 %elt) #19, !dbg !5838
; call <u8 as core::iter::traits::accum::Sum>::sum::{{closure}}
  %_0 = call i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17hf95e447c3162ca0dE"(ptr align 1 %_1, i8 zeroext %acc, i8 zeroext %_6) #19, !dbg !5839
  ret i8 %_0, !dbg !5840
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he6070893438acd21E"(ptr align 8 %_1, i64 %0) unnamed_addr #1 !dbg !5841 {
start:
  %1 = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [8 x i8], align 4
  %2 = alloca [8 x i8], align 8
  %elt = alloca [8 x i8], align 4
  store i64 %0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %elt, ptr align 8 %2, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5848, !DIExpression(DW_OP_deref), !5850)
    #dbg_declare(ptr %_1.dbg.spill, !5849, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 8), !5851)
    #dbg_declare(ptr %acc.dbg.spill, !5846, !DIExpression(), !5852)
    #dbg_declare(ptr %elt, !5847, !DIExpression(), !5853)
  %_7 = getelementptr inbounds i8, ptr %_1, i64 8, !dbg !5854
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_8, ptr align 4 %elt, i64 8, i1 false), !dbg !5854
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %_8, i64 8, i1 false), !dbg !5854
  %3 = load i64, ptr %1, align 8, !dbg !5854
; call alloc::string::String::from_utf16_lossy::{{closure}}
  %_6 = call i32 @"_ZN5alloc6string6String16from_utf16_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h3e11a0c3a8d0b8b3E"(ptr align 1 %_7, i64 %3) #19, !dbg !5854
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd2deb29a61801fd2E"(ptr align 8 %_1, i32 signext %_6) #19, !dbg !5855
  ret void, !dbg !5856
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hebb157982b8f5c41E"(ptr align 1 %_1, i64 %acc, ptr align 8 %elt) unnamed_addr #1 !dbg !5857 {
start:
  %elt.dbg.spill = alloca [8 x i8], align 8
  %acc.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !5868, !DIExpression(DW_OP_deref), !5870)
    #dbg_declare(ptr %_1.dbg.spill, !5869, !DIExpression(DW_OP_deref), !5871)
  store i64 %acc, ptr %acc.dbg.spill, align 8
    #dbg_declare(ptr %acc.dbg.spill, !5866, !DIExpression(), !5872)
  store ptr %elt, ptr %elt.dbg.spill, align 8
    #dbg_declare(ptr %elt.dbg.spill, !5867, !DIExpression(), !5873)
; call core::fmt::Arguments::estimated_capacity::{{closure}}
  %_6 = call i64 @"_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17h84118b2ebfb16d0bE"(ptr align 1 %_1, ptr align 8 %elt) #19, !dbg !5874
; call <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
  %_0 = call i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h88c6b626375dafc2E"(ptr align 1 %_1, i64 %acc, i64 %_6) #19, !dbg !5875
  ret i64 %_0, !dbg !5876
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he30a3776cb2021a3E"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !5877 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !5881, !DIExpression(), !5882)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !5883
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !5883
  ret { ptr, ptr } %2, !dbg !5883
}

; core::iter::adapters::cloned::Cloned<I>::new
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hed732f4e603e1508E"(ptr %it.0, ptr %it.1) unnamed_addr #0 !dbg !5884 {
start:
  %it.dbg.spill = alloca [16 x i8], align 8
  store ptr %it.0, ptr %it.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %it.dbg.spill, i64 8
  store ptr %it.1, ptr %0, align 8
    #dbg_declare(ptr %it.dbg.spill, !5887, !DIExpression(), !5888)
  %1 = insertvalue { ptr, ptr } poison, ptr %it.0, 0, !dbg !5889
  %2 = insertvalue { ptr, ptr } %1, ptr %it.1, 1, !dbg !5889
  ret { ptr, ptr } %2, !dbg !5889
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h428e49e4fb4c4251E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %it) unnamed_addr #0 !dbg !5890 {
start:
    #dbg_declare(ptr %it, !5893, !DIExpression(), !5894)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %it, i64 32, i1 false), !dbg !5895
  ret void, !dbg !5896
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hbf72fb8115fb1bacE"(ptr align 8 %it) unnamed_addr #0 !dbg !5897 {
start:
  %it.dbg.spill = alloca [8 x i8], align 8
  store ptr %it, ptr %it.dbg.spill, align 8
    #dbg_declare(ptr %it.dbg.spill, !5900, !DIExpression(), !5901)
  ret ptr %it, !dbg !5902
}

; core::alloc::layout::size_align
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5alloc6layout10size_align17h530d53d4e42b6cb0E() unnamed_addr #0 !dbg !5903 {
start:
  %0 = insertvalue { i64, i64 } poison, i64 16, 0, !dbg !5918
  %1 = insertvalue { i64, i64 } %0, i64 8, 1, !dbg !5918
  ret { i64, i64 } %1, !dbg !5918
}

; core::alloc::layout::size_align
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5alloc6layout10size_align17hc0293ae046553639E() unnamed_addr #0 !dbg !5919 {
start:
  %0 = insertvalue { i64, i64 } poison, i64 16, 0, !dbg !5931
  %1 = insertvalue { i64, i64 } %0, i64 8, 1, !dbg !5931
  ret { i64, i64 } %1, !dbg !5931
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h2bc6557b92255774E(ptr align 8 %self) unnamed_addr #1 !dbg !5932 {
start:
  %new_size.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5938, !DIExpression(), !5941)
  %_3 = load i64, ptr %self, align 8, !dbg !5942
; call core::alloc::layout::Layout::size_rounded_up_to_custom_align
  %new_size = call i64 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17hede49b9f315463a2E(ptr align 8 %self, i64 %_3) #19, !dbg !5943
  store i64 %new_size, ptr %new_size.dbg.spill, align 8, !dbg !5943
    #dbg_declare(ptr %new_size.dbg.spill, !5939, !DIExpression(), !5944)
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %self) #19, !dbg !5945
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %new_size, i64 %_4) #19, !dbg !5946
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !5946
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !5946
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !5947
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !5947
  ret { i64, i64 } %2, !dbg !5947
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h2de37cf2c8fb55ebE(ptr %t.0, i64 %t.1) unnamed_addr #0 !dbg !5948 {
start:
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %t.dbg.spill = alloca [16 x i8], align 8
  store ptr %t.0, ptr %t.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %t.dbg.spill, i64 8
  store i64 %t.1, ptr %0, align 8
    #dbg_declare(ptr %t.dbg.spill, !5953, !DIExpression(), !5957)
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17hfc037130fcee5e8fE(ptr %t.0, i64 %t.1) #19, !dbg !5958
; call core::mem::align_of_val_raw
  %_6 = call i64 @_ZN4core3mem16align_of_val_raw17he49e2e6348a68ebfE(ptr %t.0, i64 %t.1) #19, !dbg !5959
  store i64 %_5, ptr %size.dbg.spill, align 8, !dbg !5960
    #dbg_declare(ptr %size.dbg.spill, !5954, !DIExpression(), !5961)
  store i64 %_6, ptr %align.dbg.spill, align 8, !dbg !5962
    #dbg_declare(ptr %align.dbg.spill, !5956, !DIExpression(), !5963)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %_5, i64 %_6) #19, !dbg !5964
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !5964
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !5964
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !5965
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !5965
  ret { i64, i64 } %3, !dbg !5965
}

; core::alloc::layout::Layout::repeat_packed
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout13repeat_packed17hb2d991fa66886af7E(ptr align 8 %self, i64 %n) unnamed_addr #1 !dbg !5966 {
start:
  %size.dbg.spill = alloca [8 x i8], align 8
  %n.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !5987, !DIExpression(), !5991)
  store i64 %n, ptr %n.dbg.spill, align 8
    #dbg_declare(ptr %n.dbg.spill, !5988, !DIExpression(), !5992)
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !5993
  %_4 = load i64, ptr %0, align 8, !dbg !5993
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE"(i64 %_4, i64 %n) #19, !dbg !5993
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !5993
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !5993
  store i64 %2, ptr %_3, align 8, !dbg !5993
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !5993
  store i64 %3, ptr %4, align 8, !dbg !5993
  %_5 = load i64, ptr %_3, align 8, !dbg !5993
  %5 = icmp eq i64 %_5, 1, !dbg !5994
  br i1 %5, label %bb2, label %bb3, !dbg !5994

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !5995
  %size = load i64, ptr %6, align 8, !dbg !5995
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !5995
    #dbg_declare(ptr %size.dbg.spill, !5989, !DIExpression(), !5995)
  %_7 = load i64, ptr %self, align 8, !dbg !5996
; call core::alloc::layout::Layout::from_size_alignment
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hf12aeb5dff84feb1E(i64 %size, i64 %_7) #19, !dbg !5997
  %8 = extractvalue { i64, i64 } %7, 0, !dbg !5997
  %9 = extractvalue { i64, i64 } %7, 1, !dbg !5997
  store i64 %8, ptr %_0, align 8, !dbg !5997
  %10 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !5997
  store i64 %9, ptr %10, align 8, !dbg !5997
  br label %bb4, !dbg !5997

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !5998
  br label %bb4, !dbg !5999

bb4:                                              ; preds = %bb3, %bb2
  %11 = load i64, ptr %_0, align 8, !dbg !6000
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6000
  %13 = load i64, ptr %12, align 8, !dbg !6000
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0, !dbg !6000
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6000
  ret { i64, i64 } %15, !dbg !6000

bb5:                                              ; No predecessors!
  unreachable, !dbg !6001
}

; core::alloc::layout::Layout::from_size_alignment
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hf12aeb5dff84feb1E(i64 %size, i64 %align) unnamed_addr #1 !dbg !6002 {
start:
  %align.dbg.spill.i = alloca [8 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !6007, !DIExpression(), !6009)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !6008, !DIExpression(), !6010)
  store i64 %align, ptr %align.dbg.spill.i, align 8
    #dbg_declare(ptr %align.dbg.spill.i, !6011, !DIExpression(), !6015)
; call core::ptr::alignment::Alignment::as_usize
  %_5.i = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h577df9ed10743be2E(i64 %align) #19, !dbg !6017
  %_0.i = sub nuw i64 -9223372036854775808, %_5.i, !dbg !6018
  %_3 = icmp ugt i64 %size, %_0.i, !dbg !6019
  br i1 %_3, label %bb2, label %bb3, !dbg !6019

bb3:                                              ; preds = %start
  store i64 %align, ptr %_0, align 8, !dbg !6020
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6020
  store i64 %size, ptr %0, align 8, !dbg !6020
  br label %bb4, !dbg !6021

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !6022
  br label %bb4, !dbg !6021

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i64, ptr %_0, align 8, !dbg !6021
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6021
  %3 = load i64, ptr %2, align 8, !dbg !6021
  %4 = insertvalue { i64, i64 } poison, i64 %1, 0, !dbg !6021
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !6021
  ret { i64, i64 } %5, !dbg !6021
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %size, i64 %align) unnamed_addr #1 !dbg !6023 {
start:
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !6028, !DIExpression(), !6030)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !6029, !DIExpression(), !6031)
  br label %bb1, !dbg !6032

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked::precondition_check
  call void @_ZN4core5alloc6layout6Layout25from_size_align_unchecked18precondition_check17h4a2721cca0ce6adaE(i64 %size, i64 %align) #19, !dbg !6034
  br label %bb2, !dbg !6034

bb2:                                              ; preds = %bb1
  %0 = insertvalue { i64, i64 } poison, i64 %align, 0, !dbg !6035
  %1 = insertvalue { i64, i64 } %0, i64 %size, 1, !dbg !6035
  ret { i64, i64 } %1, !dbg !6035
}

; core::alloc::layout::Layout::from_size_align_unchecked::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core5alloc6layout6Layout25from_size_align_unchecked18precondition_check17h4a2721cca0ce6adaE(i64 %size, i64 %align) unnamed_addr #1 !dbg !6036 {
start:
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !6040, !DIExpression(), !6042)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !6041, !DIExpression(), !6042)
; call core::alloc::layout::Layout::is_size_align_valid
  %_3 = call zeroext i1 @_ZN4core5alloc6layout6Layout19is_size_align_valid17h6a649d2c15e763c8E(i64 %size, i64 %align) #19, !dbg !6043
  br i1 %_3, label %bb2, label %bb3, !dbg !6043

bb3:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_cd1513ae8d1ae22acf9342b8dfa1561d, i64 164) #20, !dbg !6045
  unreachable, !dbg !6045

bb2:                                              ; preds = %start
  ret void, !dbg !6046
}

; core::alloc::layout::Layout::size_rounded_up_to_custom_align
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17hede49b9f315463a2E(ptr align 8 %self, i64 %align) unnamed_addr #1 !dbg !6047 {
start:
  %size_rounded_up.dbg.spill = alloca [8 x i8], align 8
  %align_m1.dbg.spill = alloca [8 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6052, !DIExpression(), !6058)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !6053, !DIExpression(), !6059)
; call core::ptr::alignment::Alignment::as_usize
  %_4 = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h577df9ed10743be2E(i64 %align) #19, !dbg !6060
  %align_m1 = sub nuw i64 %_4, 1, !dbg !6061
  store i64 %align_m1, ptr %align_m1.dbg.spill, align 8, !dbg !6061
    #dbg_declare(ptr %align_m1.dbg.spill, !6054, !DIExpression(), !6062)
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !6063
  %_6 = load i64, ptr %0, align 8, !dbg !6063
  %_5 = add nuw i64 %_6, %align_m1, !dbg !6064
  %_7 = xor i64 %align_m1, -1, !dbg !6065
  %size_rounded_up = and i64 %_5, %_7, !dbg !6064
  store i64 %size_rounded_up, ptr %size_rounded_up.dbg.spill, align 8, !dbg !6064
    #dbg_declare(ptr %size_rounded_up.dbg.spill, !6056, !DIExpression(), !6066)
  ret i64 %size_rounded_up, !dbg !6067
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h7a35f6b498e7089bE() unnamed_addr #1 !dbg !6068 {
start:
  %align.dbg.spill = alloca [8 x i8], align 8, !dbg !6076
  %size.dbg.spill = alloca [8 x i8], align 8, !dbg !6076
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h530d53d4e42b6cb0E() #19, !dbg !6076
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !6076
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !6076
  store i64 %_3.0, ptr %size.dbg.spill, align 8, !dbg !6077
    #dbg_declare(ptr %size.dbg.spill, !6073, !DIExpression(), !6078)
  store i64 %_3.1, ptr %align.dbg.spill, align 8, !dbg !6079
    #dbg_declare(ptr %align.dbg.spill, !6075, !DIExpression(), !6080)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %_3.0, i64 %_3.1) #19, !dbg !6081
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !6081
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !6081
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !6082
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !6082
  ret { i64, i64 } %3, !dbg !6082
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h7a5860340e5ecdd2E() unnamed_addr #1 !dbg !6083 {
start:
  %align.dbg.spill = alloca [8 x i8], align 8, !dbg !6089
  %size.dbg.spill = alloca [8 x i8], align 8, !dbg !6089
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17hc0293ae046553639E() #19, !dbg !6089
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !6089
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !6089
  store i64 %_3.0, ptr %size.dbg.spill, align 8, !dbg !6090
    #dbg_declare(ptr %size.dbg.spill, !6086, !DIExpression(), !6091)
  store i64 %_3.1, ptr %align.dbg.spill, align 8, !dbg !6092
    #dbg_declare(ptr %align.dbg.spill, !6088, !DIExpression(), !6093)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %_3.0, i64 %_3.1) #19, !dbg !6094
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !6094
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !6094
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !6095
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !6095
  ret { i64, i64 } %3, !dbg !6095
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %self) unnamed_addr #1 !dbg !6096 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6101, !DIExpression(), !6102)
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !6103
  %_0 = load i64, ptr %0, align 8, !dbg !6103
  ret i64 %_0, !dbg !6104
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %self) unnamed_addr #1 !dbg !6105 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6108, !DIExpression(), !6109)
  %_2 = load i64, ptr %self, align 8, !dbg !6110
; call core::ptr::alignment::Alignment::as_usize
  %_0 = call i64 @_ZN4core3ptr9alignment9Alignment8as_usize17h577df9ed10743be2E(i64 %_2) #19, !dbg !6110
  ret i64 %_0, !dbg !6111
}

; core::alloc::layout::Layout::extend
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core5alloc6layout6Layout6extend17h60352684f0eebe17E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, i64 %next.0, i64 %next.1) unnamed_addr #1 !dbg !6112 {
start:
  %layout.dbg.spill = alloca [16 x i8], align 8
  %new_size.dbg.spill = alloca [8 x i8], align 8
  %offset.dbg.spill = alloca [8 x i8], align 8
  %new_align.dbg.spill = alloca [8 x i8], align 8
  %next.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_13 = alloca [24 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6136, !DIExpression(), !6146)
  store i64 %next.0, ptr %next.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %next.dbg.spill, i64 8
  store i64 %next.1, ptr %0, align 8
    #dbg_declare(ptr %next.dbg.spill, !6137, !DIExpression(), !6147)
  %_4 = load i64, ptr %self, align 8, !dbg !6148
; call core::ptr::alignment::Alignment::max
  %new_align = call i64 @_ZN4core3ptr9alignment9Alignment3max17he844b410c894fddbE(i64 %_4, i64 %next.0) #19, !dbg !6149
  store i64 %new_align, ptr %new_align.dbg.spill, align 8, !dbg !6149
    #dbg_declare(ptr %new_align.dbg.spill, !6138, !DIExpression(), !6150)
; call core::alloc::layout::Layout::size_rounded_up_to_custom_align
  %offset = call i64 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17hede49b9f315463a2E(ptr align 8 %self, i64 %next.0) #19, !dbg !6151
  store i64 %offset, ptr %offset.dbg.spill, align 8, !dbg !6151
    #dbg_declare(ptr %offset.dbg.spill, !6140, !DIExpression(), !6152)
  %new_size = add nuw i64 %offset, %next.1, !dbg !6153
  store i64 %new_size, ptr %new_size.dbg.spill, align 8, !dbg !6153
    #dbg_declare(ptr %new_size.dbg.spill, !6142, !DIExpression(), !6154)
; call core::alloc::layout::Layout::from_size_alignment
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hf12aeb5dff84feb1E(i64 %new_size, i64 %new_align) #19, !dbg !6155
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !6155
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !6155
  store i64 %2, ptr %_10, align 8, !dbg !6155
  %4 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !6155
  store i64 %3, ptr %4, align 8, !dbg !6155
  %5 = load i64, ptr %_10, align 8, !dbg !6155
  %6 = icmp eq i64 %5, 0, !dbg !6155
  %_11 = select i1 %6, i64 1, i64 0, !dbg !6155
  %7 = icmp eq i64 %_11, 0, !dbg !6156
  br i1 %7, label %bb4, label %bb5, !dbg !6156

bb4:                                              ; preds = %start
  %layout.0 = load i64, ptr %_10, align 8, !dbg !6157
  %8 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !6157
  %layout.1 = load i64, ptr %8, align 8, !dbg !6157
  store i64 %layout.0, ptr %layout.dbg.spill, align 8, !dbg !6157
  %9 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8, !dbg !6157
  store i64 %layout.1, ptr %9, align 8, !dbg !6157
    #dbg_declare(ptr %layout.dbg.spill, !6144, !DIExpression(), !6157)
  store i64 %layout.0, ptr %_13, align 8, !dbg !6158
  %10 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !6158
  store i64 %layout.1, ptr %10, align 8, !dbg !6158
  %11 = getelementptr inbounds i8, ptr %_13, i64 16, !dbg !6158
  store i64 %offset, ptr %11, align 8, !dbg !6158
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_13, i64 24, i1 false), !dbg !6159
  br label %bb6, !dbg !6160

bb5:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !6161
  br label %bb6, !dbg !6160

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !6162

bb7:                                              ; No predecessors!
  unreachable, !dbg !6163
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core5alloc6layout6Layout6repeat17h381bafd7c3735bf9E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, i64 %n) unnamed_addr #1 !dbg !6164 {
start:
  %repeated.dbg.spill = alloca [16 x i8], align 8
  %n.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [24 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %padded = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6169, !DIExpression(), !6175)
  store i64 %n, ptr %n.dbg.spill, align 8
    #dbg_declare(ptr %n.dbg.spill, !6170, !DIExpression(), !6176)
    #dbg_declare(ptr %padded, !6171, !DIExpression(), !6177)
; call core::alloc::layout::Layout::pad_to_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h2bc6557b92255774E(ptr align 8 %self) #19, !dbg !6178
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !6178
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !6178
  store i64 %1, ptr %padded, align 8, !dbg !6178
  %3 = getelementptr inbounds i8, ptr %padded, i64 8, !dbg !6178
  store i64 %2, ptr %3, align 8, !dbg !6178
; call core::alloc::layout::Layout::repeat_packed
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13repeat_packed17hb2d991fa66886af7E(ptr align 8 %padded, i64 %n) #19, !dbg !6179
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !6179
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !6179
  store i64 %5, ptr %_4, align 8, !dbg !6179
  %7 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !6179
  store i64 %6, ptr %7, align 8, !dbg !6179
  %8 = load i64, ptr %_4, align 8, !dbg !6179
  %9 = icmp eq i64 %8, 0, !dbg !6179
  %_6 = select i1 %9, i64 1, i64 0, !dbg !6179
  %10 = icmp eq i64 %_6, 0, !dbg !6180
  br i1 %10, label %bb3, label %bb5, !dbg !6180

bb3:                                              ; preds = %start
  %repeated.0 = load i64, ptr %_4, align 8, !dbg !6181
  %11 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !6181
  %repeated.1 = load i64, ptr %11, align 8, !dbg !6181
  store i64 %repeated.0, ptr %repeated.dbg.spill, align 8, !dbg !6181
  %12 = getelementptr inbounds i8, ptr %repeated.dbg.spill, i64 8, !dbg !6181
  store i64 %repeated.1, ptr %12, align 8, !dbg !6181
    #dbg_declare(ptr %repeated.dbg.spill, !6173, !DIExpression(), !6181)
; call core::alloc::layout::Layout::size
  %_9 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %padded) #19, !dbg !6182
  store i64 %repeated.0, ptr %_8, align 8, !dbg !6183
  %13 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !6183
  store i64 %repeated.1, ptr %13, align 8, !dbg !6183
  %14 = getelementptr inbounds i8, ptr %_8, i64 16, !dbg !6183
  store i64 %_9, ptr %14, align 8, !dbg !6183
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_8, i64 24, i1 false), !dbg !6184
  br label %bb6, !dbg !6185

bb5:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !6186
  br label %bb6, !dbg !6185

bb6:                                              ; preds = %bb5, %bb3
  ret void, !dbg !6187

bb7:                                              ; No predecessors!
  unreachable, !dbg !6188
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN4core5alloc6layout6Layout8dangling17h4a1fd527cdeb0e2fE(ptr align 8 %self) unnamed_addr #1 !dbg !6189 {
start:
  %addr.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6194, !DIExpression(), !6195)
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %self) #19, !dbg !6196
  store i64 %_3, ptr %addr.dbg.spill.i, align 8
    #dbg_declare(ptr %addr.dbg.spill.i, !6197, !DIExpression(), !6202)
  %_0.i = getelementptr i8, ptr null, i64 %_3, !dbg !6204
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdd2dd5e2574d3004E"(ptr %_0.i) #19, !dbg !6205
  ret ptr %_0, !dbg !6206
}

; core::error::Error::cause
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error5cause17h82cae8f6d2cc9637E(ptr align 8 %self) unnamed_addr #0 !dbg !6207 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6238, !DIExpression(), !6241)
; call core::error::Error::source
  %0 = call { ptr, ptr } @_ZN4core5error5Error6source17h0bdb0b5a76915a11E(ptr align 8 %self) #19, !dbg !6242
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !6242
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !6242
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !6243
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !6243
  ret { ptr, ptr } %2, !dbg !6243
}

; core::error::Error::cause
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error5cause17hfc560bb7f7dbe947E(ptr align 8 %self) unnamed_addr #0 !dbg !6244 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6248, !DIExpression(), !6251)
; call core::error::Error::source
  %0 = call { ptr, ptr } @_ZN4core5error5Error6source17h81941f4639b1e47dE(ptr align 8 %self) #19, !dbg !6252
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !6252
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !6252
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !6253
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !6253
  ret { ptr, ptr } %2, !dbg !6253
}

; core::error::Error::source
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error6source17h0bdb0b5a76915a11E(ptr align 8 %self) unnamed_addr #0 !dbg !6254 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6256, !DIExpression(), !6257)
  store ptr null, ptr %_0, align 8, !dbg !6258
  %0 = load ptr, ptr %_0, align 8, !dbg !6259
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6259
  %2 = load ptr, ptr %1, align 8, !dbg !6259
  %3 = insertvalue { ptr, ptr } poison, ptr %0, 0, !dbg !6259
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !6259
  ret { ptr, ptr } %4, !dbg !6259
}

; core::error::Error::source
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error6source17h81941f4639b1e47dE(ptr align 8 %self) unnamed_addr #0 !dbg !6260 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6262, !DIExpression(), !6263)
  store ptr null, ptr %_0, align 8, !dbg !6264
  %0 = load ptr, ptr %_0, align 8, !dbg !6265
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6265
  %2 = load ptr, ptr %1, align 8, !dbg !6265
  %3 = insertvalue { ptr, ptr } poison, ptr %0, 0, !dbg !6265
  %4 = insertvalue { ptr, ptr } %3, ptr %2, 1, !dbg !6265
  ret { ptr, ptr } %4, !dbg !6265
}

; core::error::Error::provide
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core5error5Error7provide17h91b26135a66ff8baE(ptr align 8 %self, ptr align 8 %request.0, ptr align 8 %request.1) unnamed_addr #0 !dbg !6266 {
start:
  %request.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6289, !DIExpression(), !6291)
  store ptr %request.0, ptr %request.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %request.dbg.spill, i64 8
  store ptr %request.1, ptr %0, align 8
    #dbg_declare(ptr %request.dbg.spill, !6290, !DIExpression(), !6292)
  ret void, !dbg !6293
}

; core::error::Error::provide
; Function Attrs: noredzone nounwind
define dso_local void @_ZN4core5error5Error7provide17hf3cab819f04860fdE(ptr align 8 %self, ptr align 8 %request.0, ptr align 8 %request.1) unnamed_addr #0 !dbg !6294 {
start:
  %request.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6298, !DIExpression(), !6300)
  store ptr %request.0, ptr %request.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %request.dbg.spill, i64 8
  store ptr %request.1, ptr %0, align 8
    #dbg_declare(ptr %request.dbg.spill, !6299, !DIExpression(), !6301)
  ret void, !dbg !6302
}

; core::error::Error::type_id
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5error5Error7type_id17h3ba4ed2a179b14a4E(ptr align 8 %self) unnamed_addr #0 !dbg !6303 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6309, !DIExpression(), !6311)
    #dbg_declare(ptr %_2.dbg.spill, !6310, !DIExpression(), !6312)
; call core::any::TypeId::of
  %0 = call { i64, i64 } @_ZN4core3any6TypeId2of17h800f12e433303fc0E() #19, !dbg !6313
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !6313
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !6313
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !6314
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !6314
  ret { i64, i64 } %2, !dbg !6314
}

; core::error::Error::type_id
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5error5Error7type_id17hf803431a91448a39E(ptr align 8 %self) unnamed_addr #0 !dbg !6315 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6319, !DIExpression(), !6321)
    #dbg_declare(ptr %_2.dbg.spill, !6320, !DIExpression(), !6322)
; call core::any::TypeId::of
  %0 = call { i64, i64 } @_ZN4core3any6TypeId2of17hb25573cdebddc43eE() #19, !dbg !6323
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !6323
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !6323
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !6324
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !6324
  ret { i64, i64 } %2, !dbg !6324
}

; core::slice::<impl [T]>::array_chunks
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12array_chunks17h83611f2c5aee7a38E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 !dbg !6325 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill, !6329, !DIExpression(), !6330)
  br label %bb3, !dbg !6331

bb3:                                              ; preds = %start
; call core::slice::iter::ArrayChunks<T,_>::new
  call void @"_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$3new17h24a3ff88d9e749e8E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !6332
  ret void, !dbg !6333

bb1:                                              ; No predecessors!
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_2cdbb89777c912da09e05e08ed401368) #19, !dbg !6334
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_4, ptr align 8 %0) #20, !dbg !6334
  unreachable, !dbg !6334
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hd1d01c16f281a5e0E"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !6335 {
start:
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6339, !DIExpression(), !6343)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !6340, !DIExpression(), !6344)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6c98ee10c640cd3cE"(i64 %index, ptr %self.0, i64 %self.1) #19, !dbg !6345
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !6345
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !6345
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !6346
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !6346
  ret { ptr, i64 } %3, !dbg !6346
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17he116466d7d04cd9fE"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !6347 {
start:
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6351, !DIExpression(), !6355)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !6352, !DIExpression(), !6356)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h131bfb384e61a5beE"(i64 %index, ptr %self.0, i64 %self.1) #19, !dbg !6357
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !6357
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !6357
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !6358
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !6358
  ret { ptr, i64 } %3, !dbg !6358
}

; core::slice::<impl [T]>::align_to_offsets
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16align_to_offsets17hefbad6a2a35690acE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !6359 {
start:
  %ts_len.dbg.spill = alloca [8 x i8], align 8
  %us_len.dbg.spill = alloca [8 x i8], align 8
  %us.dbg.spill = alloca [8 x i8], align 8
  %ts.dbg.spill = alloca [8 x i8], align 8
  %gcd.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6363, !DIExpression(), !6376)
  store i64 1, ptr %gcd.dbg.spill, align 8, !dbg !6377
    #dbg_declare(ptr %gcd.dbg.spill, !6364, !DIExpression(), !6378)
  %ts = udiv i64 2, 1, !dbg !6379
  store i64 %ts, ptr %ts.dbg.spill, align 8, !dbg !6379
    #dbg_declare(ptr %ts.dbg.spill, !6366, !DIExpression(), !6380)
  %us = udiv i64 1, 1, !dbg !6381
  store i64 %us, ptr %us.dbg.spill, align 8, !dbg !6381
    #dbg_declare(ptr %us.dbg.spill, !6368, !DIExpression(), !6382)
  %_12 = icmp eq i64 %ts, 0, !dbg !6383
  br i1 %_12, label %panic, label %bb5, !dbg !6383

bb5:                                              ; preds = %start
  %_10 = udiv i64 %self.1, %ts, !dbg !6383
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_10, i64 %us), !dbg !6383
  %_13.0 = extractvalue { i64, i1 } %1, 0, !dbg !6383
  %_13.1 = extractvalue { i64, i1 } %1, 1, !dbg !6383
  br i1 %_13.1, label %panic1, label %bb6, !dbg !6383

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h9baa8b25c99cffa1E(ptr align 8 @alloc_871f925ed96b531f7787060e3d510a9e) #20, !dbg !6383
  unreachable, !dbg !6383

bb6:                                              ; preds = %bb5
  store i64 %_13.0, ptr %us_len.dbg.spill, align 8, !dbg !6383
    #dbg_declare(ptr %us_len.dbg.spill, !6370, !DIExpression(), !6384)
  %_16 = icmp eq i64 %ts, 0, !dbg !6385
  br i1 %_16, label %panic2, label %bb7, !dbg !6385

panic1:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8 @alloc_871f925ed96b531f7787060e3d510a9e) #20, !dbg !6383
  unreachable, !dbg !6383

bb7:                                              ; preds = %bb6
  %ts_len = urem i64 %self.1, %ts, !dbg !6385
  store i64 %ts_len, ptr %ts_len.dbg.spill, align 8, !dbg !6385
    #dbg_declare(ptr %ts_len.dbg.spill, !6372, !DIExpression(), !6386)
  %2 = insertvalue { i64, i64 } poison, i64 %_13.0, 0, !dbg !6387
  %3 = insertvalue { i64, i64 } %2, i64 %ts_len, 1, !dbg !6387
  ret { i64, i64 } %3, !dbg !6387

panic2:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h33ec7c25b61c77dbE(ptr align 8 @alloc_c27e56c692e13311a7048470a9bf5a0c) #20, !dbg !6385
  unreachable, !dbg !6385
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h14560758a93dd05cE"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !6388 {
start:
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6397, !DIExpression(), !6401)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !6398, !DIExpression(), !6402)
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc3642c91affc8678E"(i64 %index, ptr %self.0, i64 %self.1) #19, !dbg !6403
  ret ptr %_3, !dbg !6404
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d516fed878b15f8E"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !6405 {
start:
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6409, !DIExpression(), !6412)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !6410, !DIExpression(), !6413)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { ptr, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he5773afdf4580b36E"(i64 %index, ptr %self.0, i64 %self.1) #19, !dbg !6414
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !6414
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !6414
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !6415
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !6415
  ret { ptr, i64 } %3, !dbg !6415
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h70c16926b97fd5e8E"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 !dbg !6416 {
start:
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6420, !DIExpression(), !6423)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !6421, !DIExpression(), !6424)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha0f5a8aed2ce91e5E"(i64 %index, ptr %self.0, i64 %self.1) #19, !dbg !6425
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !6425
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !6425
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !6426
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !6426
  ret { ptr, i64 } %3, !dbg !6426
}

; core::slice::<impl [T]>::as_chunks_unchecked
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked17hef672f46fd437087E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6427 {
start:
  %self.dbg.spill.i1 = alloca [16 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %new_len.dbg.spill = alloca [8 x i8], align 8
  %0 = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill, !6431, !DIExpression(), !6434)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6435
  br i1 %_2, label %bb2, label %bb3, !dbg !6435

bb3:                                              ; preds = %bb2, %start
  %2 = udiv exact i64 %self.1, 2, !dbg !6437
  store i64 %2, ptr %0, align 8, !dbg !6437
  %new_len = load i64, ptr %0, align 8, !dbg !6437
  store i64 %new_len, ptr %new_len.dbg.spill, align 8, !dbg !6437
    #dbg_declare(ptr %new_len.dbg.spill, !6432, !DIExpression(), !6438)
  store ptr %self.0, ptr %self.dbg.spill.i1, align 8
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i64 8
  store i64 %self.1, ptr %3, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !2260, !DIExpression(), !6439)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !6441, !DIExpression(), !6447)
; call core::slice::raw::from_raw_parts
  %4 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h789cca0a0f71fea6E(ptr %self.0, i64 %new_len) #19, !dbg !6449
  %_0.0 = extractvalue { ptr, i64 } %4, 0, !dbg !6449
  %_0.1 = extractvalue { ptr, i64 } %4, 1, !dbg !6449
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !6450
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1, 1, !dbg !6450
  ret { ptr, i64 } %6, !dbg !6450

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::as_chunks_unchecked::precondition_check
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked18precondition_check17h77f91161cdfbd463E"(i64 2, i64 %self.1) #19, !dbg !6451
  br label %bb3, !dbg !6451
}

; core::slice::<impl [T]>::as_chunks_unchecked::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked18precondition_check17h77f91161cdfbd463E"(i64 %n, i64 %len) unnamed_addr #1 !dbg !6452 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %n.dbg.spill = alloca [8 x i8], align 8
  store i64 %n, ptr %n.dbg.spill, align 8
    #dbg_declare(ptr %n.dbg.spill, !6455, !DIExpression(), !6457)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !6456, !DIExpression(), !6457)
  %0 = icmp eq i64 %n, 0, !dbg !6458
  br i1 %0, label %bb4, label %bb1, !dbg !6458

bb4:                                              ; preds = %bb2, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_0ef375a3ad611d5d326bb0a0e87c29b8, i64 132) #20, !dbg !6460
  unreachable, !dbg !6460

bb1:                                              ; preds = %start
  %_4 = icmp eq i64 %n, 0, !dbg !6461
  br i1 %_4, label %panic, label %bb2, !dbg !6461

bb2:                                              ; preds = %bb1
  %_3 = urem i64 %len, %n, !dbg !6461
  %1 = icmp eq i64 %_3, 0, !dbg !6461
  br i1 %1, label %bb3, label %bb4, !dbg !6461

panic:                                            ; preds = %bb1
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h33ec7c25b61c77dbE(ptr align 8 @alloc_acbb8b2e1996f2ad5ddbda55c6bd461e) #20, !dbg !6461
  unreachable, !dbg !6461

bb3:                                              ; preds = %bb2
  ret void, !dbg !6462
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h07c0c5433600ce9bE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6463 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6467, !DIExpression(), !6468)
; call core::slice::iter::Iter<T>::new
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h94d6f48f5311a854E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !6469
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !6469
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !6469
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !6470
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !6470
  ret { ptr, ptr } %3, !dbg !6470
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h67482b2ffbe482fbE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6471 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6475, !DIExpression(), !6476)
; call core::slice::iter::Iter<T>::new
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb8b33c8c8b6d4c94E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !6477
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !6477
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !6477
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !6478
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !6478
  ret { ptr, ptr } %3, !dbg !6478
}

; core::slice::<impl [T]>::align_to
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17h3b6984de3bf70dd0E"(ptr sret([48 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !6479 {
start:
  %self.dbg.spill.i3 = alloca [16 x i8], align 8
  %self.dbg.spill.i2 = alloca [16 x i8], align 8
  %self.dbg.spill.i1 = alloca [16 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %ts_len.dbg.spill = alloca [8 x i8], align 8
  %us_len.dbg.spill = alloca [8 x i8], align 8
  %rest.dbg.spill = alloca [16 x i8], align 8
  %left.dbg.spill = alloca [16 x i8], align 8
  %offset.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_17 = alloca [32 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6492, !DIExpression(), !6503)
  br label %bb1, !dbg !6504

bb1:                                              ; preds = %start
  br label %bb3, !dbg !6505

bb3:                                              ; preds = %bb1
  store ptr %self.0, ptr %self.dbg.spill.i3, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i3, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i3, !2260, !DIExpression(), !6506)
  store ptr %self.0, ptr %ptr.dbg.spill, align 8, !dbg !6508
    #dbg_declare(ptr %ptr.dbg.spill, !6493, !DIExpression(), !6509)
; call core::ptr::align_offset
  %offset = call i64 @_ZN4core3ptr12align_offset17hfd89719bbb2bcfceE(ptr %self.0, i64 2) #19, !dbg !6510
  store i64 %offset, ptr %offset.dbg.spill, align 8, !dbg !6510
    #dbg_declare(ptr %offset.dbg.spill, !6495, !DIExpression(), !6511)
  %_9 = icmp ugt i64 %offset, %self.1, !dbg !6512
  br i1 %_9, label %bb7, label %bb8, !dbg !6512

bb8:                                              ; preds = %bb3
; call core::slice::<impl [T]>::split_at
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17he8420eb640a4d96bE"(ptr sret([32 x i8]) align 8 %_17, ptr align 1 %self.0, i64 %self.1, i64 %offset, ptr align 8 @alloc_7b0b40b257267a6d829753c9eb3d4ab1) #19, !dbg !6513
  %left.0 = load ptr, ptr %_17, align 8, !dbg !6514
  %2 = getelementptr inbounds i8, ptr %_17, i64 8, !dbg !6514
  %left.1 = load i64, ptr %2, align 8, !dbg !6514
  store ptr %left.0, ptr %left.dbg.spill, align 8, !dbg !6514
  %3 = getelementptr inbounds i8, ptr %left.dbg.spill, i64 8, !dbg !6514
  store i64 %left.1, ptr %3, align 8, !dbg !6514
    #dbg_declare(ptr %left.dbg.spill, !6497, !DIExpression(), !6515)
  %4 = getelementptr inbounds i8, ptr %_17, i64 16, !dbg !6516
  %rest.0 = load ptr, ptr %4, align 8, !dbg !6516
  %5 = getelementptr inbounds i8, ptr %4, i64 8, !dbg !6516
  %rest.1 = load i64, ptr %5, align 8, !dbg !6516
  store ptr %rest.0, ptr %rest.dbg.spill, align 8, !dbg !6516
  %6 = getelementptr inbounds i8, ptr %rest.dbg.spill, i64 8, !dbg !6516
  store i64 %rest.1, ptr %6, align 8, !dbg !6516
    #dbg_declare(ptr %rest.dbg.spill, !6499, !DIExpression(), !6517)
; call core::slice::<impl [T]>::align_to_offsets
  %7 = call { i64, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16align_to_offsets17hefbad6a2a35690acE"(ptr align 1 %rest.0, i64 %rest.1) #19, !dbg !6518
  %_20.0 = extractvalue { i64, i64 } %7, 0, !dbg !6518
  %_20.1 = extractvalue { i64, i64 } %7, 1, !dbg !6518
  store i64 %_20.0, ptr %us_len.dbg.spill, align 8, !dbg !6519
    #dbg_declare(ptr %us_len.dbg.spill, !6500, !DIExpression(), !6520)
  store i64 %_20.1, ptr %ts_len.dbg.spill, align 8, !dbg !6521
    #dbg_declare(ptr %ts_len.dbg.spill, !6502, !DIExpression(), !6522)
  store ptr %rest.0, ptr %self.dbg.spill.i2, align 8
  %8 = getelementptr inbounds i8, ptr %self.dbg.spill.i2, i64 8
  store i64 %rest.1, ptr %8, align 8
    #dbg_declare(ptr %self.dbg.spill.i2, !2260, !DIExpression(), !6523)
; call core::slice::raw::from_raw_parts
  %9 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17hb4edb9946c9325baE(ptr %rest.0, i64 %_20.0) #19, !dbg !6525
  %_21.0 = extractvalue { ptr, i64 } %9, 0, !dbg !6525
  %_21.1 = extractvalue { ptr, i64 } %9, 1, !dbg !6525
  store ptr %rest.0, ptr %self.dbg.spill.i1, align 8
  %10 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i64 8
  store i64 %rest.1, ptr %10, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !2260, !DIExpression(), !6526)
  %_29.0 = sub i64 %rest.1, %_20.1, !dbg !6528
  %_29.1 = icmp ult i64 %rest.1, %_20.1, !dbg !6528
  br i1 %_29.1, label %panic, label %bb14, !dbg !6528

bb7:                                              ; preds = %bb3
  store ptr %self.0, ptr %_0, align 8, !dbg !6529
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6529
  store i64 %self.1, ptr %11, align 8, !dbg !6529
  %12 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !6529
  store ptr inttoptr (i64 2 to ptr), ptr %12, align 8, !dbg !6529
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !6529
  store i64 0, ptr %13, align 8, !dbg !6529
  %14 = getelementptr inbounds i8, ptr %_0, i64 32, !dbg !6529
  store ptr inttoptr (i64 1 to ptr), ptr %14, align 8, !dbg !6529
  %15 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !6529
  store i64 0, ptr %15, align 8, !dbg !6529
  br label %bb17, !dbg !6530

bb14:                                             ; preds = %bb8
  store ptr %rest.0, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !6531, !DIExpression(), !6537)
  store i64 %_29.0, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !6536, !DIExpression(), !6539)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6540
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !6540

bb2.i:                                            ; preds = %bb14
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E"(ptr %rest.0, i64 %_29.0, i64 1) #19, !dbg !6542
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !6542

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit": ; preds = %bb14, %bb2.i
  %_0.i = getelementptr inbounds i8, ptr %rest.0, i64 %_29.0, !dbg !6543
; call core::slice::raw::from_raw_parts
  %16 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h42c262a59a518897E(ptr %_0.i, i64 %_20.1) #19, !dbg !6544
  %_24.0 = extractvalue { ptr, i64 } %16, 0, !dbg !6544
  %_24.1 = extractvalue { ptr, i64 } %16, 1, !dbg !6544
  store ptr %left.0, ptr %_0, align 8, !dbg !6545
  %17 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6545
  store i64 %left.1, ptr %17, align 8, !dbg !6545
  %18 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !6545
  store ptr %_21.0, ptr %18, align 8, !dbg !6545
  %19 = getelementptr inbounds i8, ptr %18, i64 8, !dbg !6545
  store i64 %_21.1, ptr %19, align 8, !dbg !6545
  %20 = getelementptr inbounds i8, ptr %_0, i64 32, !dbg !6545
  store ptr %_24.0, ptr %20, align 8, !dbg !6545
  %21 = getelementptr inbounds i8, ptr %20, i64 8, !dbg !6545
  store i64 %_24.1, ptr %21, align 8, !dbg !6545
  br label %bb17, !dbg !6530

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_d3f03b9e9b21b575b3a2fed9191139a5) #20, !dbg !6528
  unreachable, !dbg !6528

bb17:                                             ; preds = %bb7, %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit"
  ret void, !dbg !6546

bb2:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hb4a3073d01c98febE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6547 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6551, !DIExpression(), !6552)
  %_0 = icmp eq i64 %self.1, 0, !dbg !6553
  ret i1 %_0, !dbg !6554
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hde578c486e02b392E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6555 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !6559, !DIExpression(), !6562)
  %_0 = icmp eq i64 %self.1, 0, !dbg !6563
  ret i1 %_0, !dbg !6564
}

; core::slice::<impl [T]>::as_chunks
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17h0e8ab4fb3546d19fE"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 !dbg !6565 {
start:
  %array_slice.dbg.spill = alloca [16 x i8], align 8
  %remainder.dbg.spill = alloca [16 x i8], align 8
  %multiple_of_n.dbg.spill = alloca [16 x i8], align 8
  %len_rounded_down.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_13 = alloca [32 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill, !6573, !DIExpression(), !6581)
  br label %bb3, !dbg !6582

bb3:                                              ; preds = %start
  %_7 = udiv i64 %self.1, 2, !dbg !6583
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_7, i64 2), !dbg !6583
  %_10.0 = extractvalue { i64, i1 } %2, 0, !dbg !6583
  %_10.1 = extractvalue { i64, i1 } %2, 1, !dbg !6583
  br i1 %_10.1, label %panic, label %bb5, !dbg !6583

bb1:                                              ; No predecessors!
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_2cdbb89777c912da09e05e08ed401368) #19, !dbg !6584
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_4, ptr align 8 %0) #20, !dbg !6584
  unreachable, !dbg !6584

bb5:                                              ; preds = %bb3
  store i64 %_10.0, ptr %len_rounded_down.dbg.spill, align 8, !dbg !6583
    #dbg_declare(ptr %len_rounded_down.dbg.spill, !6574, !DIExpression(), !6585)
; call core::slice::<impl [T]>::split_at_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h85f8cfc9f7d798cfE"(ptr sret([32 x i8]) align 8 %_13, ptr align 1 %self.0, i64 %self.1, i64 %_10.0) #19, !dbg !6586
  %multiple_of_n.0 = load ptr, ptr %_13, align 8, !dbg !6587
  %3 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !6587
  %multiple_of_n.1 = load i64, ptr %3, align 8, !dbg !6587
  store ptr %multiple_of_n.0, ptr %multiple_of_n.dbg.spill, align 8, !dbg !6587
  %4 = getelementptr inbounds i8, ptr %multiple_of_n.dbg.spill, i64 8, !dbg !6587
  store i64 %multiple_of_n.1, ptr %4, align 8, !dbg !6587
    #dbg_declare(ptr %multiple_of_n.dbg.spill, !6576, !DIExpression(), !6588)
  %5 = getelementptr inbounds i8, ptr %_13, i64 16, !dbg !6589
  %remainder.0 = load ptr, ptr %5, align 8, !dbg !6589
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !6589
  %remainder.1 = load i64, ptr %6, align 8, !dbg !6589
  store ptr %remainder.0, ptr %remainder.dbg.spill, align 8, !dbg !6589
  %7 = getelementptr inbounds i8, ptr %remainder.dbg.spill, i64 8, !dbg !6589
  store i64 %remainder.1, ptr %7, align 8, !dbg !6589
    #dbg_declare(ptr %remainder.dbg.spill, !6578, !DIExpression(), !6590)
; call core::slice::<impl [T]>::as_chunks_unchecked
  %8 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked17hef672f46fd437087E"(ptr align 1 %multiple_of_n.0, i64 %multiple_of_n.1) #19, !dbg !6591
  %array_slice.0 = extractvalue { ptr, i64 } %8, 0, !dbg !6591
  %array_slice.1 = extractvalue { ptr, i64 } %8, 1, !dbg !6591
  store ptr %array_slice.0, ptr %array_slice.dbg.spill, align 8, !dbg !6591
  %9 = getelementptr inbounds i8, ptr %array_slice.dbg.spill, i64 8, !dbg !6591
  store i64 %array_slice.1, ptr %9, align 8, !dbg !6591
    #dbg_declare(ptr %array_slice.dbg.spill, !6579, !DIExpression(), !6592)
  store ptr %array_slice.0, ptr %_0, align 8, !dbg !6593
  %10 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6593
  store i64 %array_slice.1, ptr %10, align 8, !dbg !6593
  %11 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !6593
  store ptr %remainder.0, ptr %11, align 8, !dbg !6593
  %12 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !6593
  store i64 %remainder.1, ptr %12, align 8, !dbg !6593
  ret void, !dbg !6594

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8 %0) #20, !dbg !6583
  unreachable, !dbg !6583
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h789cca0a0f71fea6E(ptr %data, i64 %len) unnamed_addr #1 !dbg !6595 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !6601, !DIExpression(), !6603)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !6602, !DIExpression(), !6604)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6605
  br i1 %_3, label %bb2, label %bb5, !dbg !6605

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17h93ab6bc7c634651bE(ptr %data, i64 %len) #19, !dbg !6607
  %_8.0 = extractvalue { ptr, i64 } %0, 0, !dbg !6607
  %_8.1 = extractvalue { ptr, i64 } %0, 1, !dbg !6607
  %1 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0, !dbg !6608
  %2 = insertvalue { ptr, i64 } %1, i64 %_8.1, 1, !dbg !6608
  ret { ptr, i64 } %2, !dbg !6608

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts::precondition_check
  call void @_ZN4core5slice3raw14from_raw_parts18precondition_check17h39476cec35534311E(ptr %data, i64 2, i64 1, i64 %len) #19, !dbg !6609
  br label %bb5, !dbg !6609
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17hb4edb9946c9325baE(ptr %data, i64 %len) unnamed_addr #1 !dbg !6610 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !6614, !DIExpression(), !6616)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !6615, !DIExpression(), !6617)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6618
  br i1 %_3, label %bb2, label %bb5, !dbg !6618

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts
  %0 = call { ptr, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc2637c05955ff3d5E(ptr %data, i64 %len) #19, !dbg !6620
  %_8.0 = extractvalue { ptr, i64 } %0, 0, !dbg !6620
  %_8.1 = extractvalue { ptr, i64 } %0, 1, !dbg !6620
  %1 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0, !dbg !6621
  %2 = insertvalue { ptr, i64 } %1, i64 %_8.1, 1, !dbg !6621
  ret { ptr, i64 } %2, !dbg !6621

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts::precondition_check
  call void @_ZN4core5slice3raw14from_raw_parts18precondition_check17h39476cec35534311E(ptr %data, i64 2, i64 2, i64 %len) #19, !dbg !6622
  br label %bb5, !dbg !6622
}

; core::slice::raw::from_raw_parts::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core5slice3raw14from_raw_parts18precondition_check17h39476cec35534311E(ptr %data, i64 %size, i64 %align, i64 %len) unnamed_addr #1 !dbg !6623 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !6628, !DIExpression(), !6632)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !6629, !DIExpression(), !6632)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !6630, !DIExpression(), !6632)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !6631, !DIExpression(), !6632)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %data, i64 %align, i1 zeroext false) #19, !dbg !6633
  br i1 %_5, label %bb2, label %bb5, !dbg !6633

bb5:                                              ; preds = %bb2, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_11195730e5236cfdc15ea13be1c301f9, i64 162) #20, !dbg !6635
  unreachable, !dbg !6635

bb2:                                              ; preds = %start
; call core::ub_checks::is_valid_allocation_size
  %_7 = call zeroext i1 @_ZN4core9ub_checks24is_valid_allocation_size17h0e4b400c44a810f0E(i64 %size, i64 %len) #19, !dbg !6636
  br i1 %_7, label %bb4, label %bb5, !dbg !6636

bb4:                                              ; preds = %bb2
  ret void, !dbg !6637
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hc041fc96cb8d80d6E(ptr %data, i64 %len) unnamed_addr #1 !dbg !6638 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !6642, !DIExpression(), !6644)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !6643, !DIExpression(), !6645)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6646
  br i1 %_3, label %bb2, label %bb5, !dbg !6646

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h6d5a020ae49863f9E(ptr %data, i64 %len) #19, !dbg !6648
  %_8.0 = extractvalue { ptr, i64 } %0, 0, !dbg !6648
  %_8.1 = extractvalue { ptr, i64 } %0, 1, !dbg !6648
  %1 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0, !dbg !6649
  %2 = insertvalue { ptr, i64 } %1, i64 %_8.1, 1, !dbg !6649
  ret { ptr, i64 } %2, !dbg !6649

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut::precondition_check
  call void @_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h29419e1598bdfea7E(ptr %data, i64 1, i64 1, i64 %len) #19, !dbg !6650
  br label %bb5, !dbg !6650
}

; core::slice::raw::from_raw_parts_mut::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h29419e1598bdfea7E(ptr %data, i64 %size, i64 %align, i64 %len) unnamed_addr #1 !dbg !6651 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %data.dbg.spill = alloca [8 x i8], align 8
  store ptr %data, ptr %data.dbg.spill, align 8
    #dbg_declare(ptr %data.dbg.spill, !6654, !DIExpression(), !6658)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !6655, !DIExpression(), !6658)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !6656, !DIExpression(), !6658)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !6657, !DIExpression(), !6658)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %data, i64 %align, i1 zeroext false) #19, !dbg !6659
  br i1 %_5, label %bb2, label %bb5, !dbg !6659

bb5:                                              ; preds = %bb2, %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_d685bb4d9a1abf4f5af46d1af0d9ef8a, i64 166) #20, !dbg !6661
  unreachable, !dbg !6661

bb2:                                              ; preds = %start
; call core::ub_checks::is_valid_allocation_size
  %_7 = call zeroext i1 @_ZN4core9ub_checks24is_valid_allocation_size17h0e4b400c44a810f0E(i64 %size, i64 %len) #19, !dbg !6662
  br i1 %_7, label %bb4, label %bb5, !dbg !6662

bb4:                                              ; preds = %bb2
  ret void, !dbg !6663
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h94d6f48f5311a854E"(ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !6664 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %end_or_len = alloca [8 x i8], align 8
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !6667, !DIExpression(), !6674)
    #dbg_declare(ptr %end_or_len, !6672, !DIExpression(), !6675)
  store i64 %slice.1, ptr %len.dbg.spill, align 8, !dbg !6676
    #dbg_declare(ptr %len.dbg.spill, !6668, !DIExpression(), !6677)
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&T>>::from
  %1 = call { ptr, i64 } @"_ZN90_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hcdebf8941a0d2022E"(ptr align 1 %slice.0, i64 %slice.1) #19, !dbg !6678
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !6678
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !6678
; call core::ptr::non_null::NonNull<T>::cast
  %ptr = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haa995a3a05901304E"(ptr %_4.0, i64 %_4.1) #19, !dbg !6678
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !6678
    #dbg_declare(ptr %ptr.dbg.spill, !6670, !DIExpression(), !6679)
  br label %bb4, !dbg !6680

bb4:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !1341, !DIExpression(), !6681)
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !6683, !DIExpression(), !6689)
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !6688, !DIExpression(), !6691)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6692
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd80a08e1271f4b25E.exit", !dbg !6692

bb2.i:                                            ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %ptr, i64 %slice.1, i64 2) #19, !dbg !6694
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd80a08e1271f4b25E.exit", !dbg !6694

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd80a08e1271f4b25E.exit": ; preds = %bb4, %bb2.i
  %_0.i = getelementptr inbounds [2 x i8], ptr %ptr, i64 %slice.1, !dbg !6695
  store ptr %_0.i, ptr %end_or_len, align 8, !dbg !6696
  br label %bb7, !dbg !6697

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd80a08e1271f4b25E.exit"
  %_8 = load ptr, ptr %end_or_len, align 8, !dbg !6698
  %2 = insertvalue { ptr, ptr } poison, ptr %ptr, 0, !dbg !6699
  %3 = insertvalue { ptr, ptr } %2, ptr %_8, 1, !dbg !6699
  ret { ptr, ptr } %3, !dbg !6699

bb3:                                              ; No predecessors!
  unreachable
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb8b33c8c8b6d4c94E"(ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !6700 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %end_or_len = alloca [8 x i8], align 8
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !6703, !DIExpression(), !6710)
    #dbg_declare(ptr %end_or_len, !6708, !DIExpression(), !6711)
  store i64 %slice.1, ptr %len.dbg.spill, align 8, !dbg !6712
    #dbg_declare(ptr %len.dbg.spill, !6704, !DIExpression(), !6713)
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&T>>::from
  %1 = call { ptr, i64 } @"_ZN90_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17h311ad2ec743dfa74E"(ptr align 1 %slice.0, i64 %slice.1) #19, !dbg !6714
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !6714
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !6714
; call core::ptr::non_null::NonNull<T>::cast
  %ptr = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5f80deec9184cfdeE"(ptr %_4.0, i64 %_4.1) #19, !dbg !6714
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !6714
    #dbg_declare(ptr %ptr.dbg.spill, !6706, !DIExpression(), !6715)
  br label %bb4, !dbg !6716

bb4:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !3934, !DIExpression(), !6717)
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !6719, !DIExpression(), !6725)
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !6724, !DIExpression(), !6727)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !6728
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7daf2a5796cd906eE.exit", !dbg !6728

bb2.i:                                            ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %ptr, i64 %slice.1, i64 1) #19, !dbg !6730
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7daf2a5796cd906eE.exit", !dbg !6730

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7daf2a5796cd906eE.exit": ; preds = %bb4, %bb2.i
  %_0.i = getelementptr inbounds i8, ptr %ptr, i64 %slice.1, !dbg !6731
  store ptr %_0.i, ptr %end_or_len, align 8, !dbg !6732
  br label %bb7, !dbg !6733

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7daf2a5796cd906eE.exit"
  %_8 = load ptr, ptr %end_or_len, align 8, !dbg !6734
  %2 = insertvalue { ptr, ptr } poison, ptr %ptr, 0, !dbg !6735
  %3 = insertvalue { ptr, ptr } %2, ptr %_8, 1, !dbg !6735
  ret { ptr, ptr } %3, !dbg !6735

bb3:                                              ; No predecessors!
  unreachable
}

; core::slice::iter::ArrayChunks<T,_>::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$3new17h24a3ff88d9e749e8E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !6736 {
start:
  %rem.dbg.spill = alloca [16 x i8], align 8
  %array_slice.dbg.spill = alloca [16 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %_4 = alloca [32 x i8], align 8
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !6741, !DIExpression(), !6745)
; call core::slice::<impl [T]>::as_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17h0e8ab4fb3546d19fE"(ptr sret([32 x i8]) align 8 %_4, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 @alloc_1daec6da96277ea3a68e8e91b870bb85) #19, !dbg !6746
  %array_slice.0 = load ptr, ptr %_4, align 8, !dbg !6747
  %1 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !6747
  %array_slice.1 = load i64, ptr %1, align 8, !dbg !6747
  store ptr %array_slice.0, ptr %array_slice.dbg.spill, align 8, !dbg !6747
  %2 = getelementptr inbounds i8, ptr %array_slice.dbg.spill, i64 8, !dbg !6747
  store i64 %array_slice.1, ptr %2, align 8, !dbg !6747
    #dbg_declare(ptr %array_slice.dbg.spill, !6742, !DIExpression(), !6748)
  %3 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !6749
  %rem.0 = load ptr, ptr %3, align 8, !dbg !6749
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !6749
  %rem.1 = load i64, ptr %4, align 8, !dbg !6749
  store ptr %rem.0, ptr %rem.dbg.spill, align 8, !dbg !6749
  %5 = getelementptr inbounds i8, ptr %rem.dbg.spill, i64 8, !dbg !6749
  store i64 %rem.1, ptr %5, align 8, !dbg !6749
    #dbg_declare(ptr %rem.dbg.spill, !6744, !DIExpression(), !6750)
; call core::slice::<impl [T]>::iter
  %6 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h07c0c5433600ce9bE"(ptr align 1 %array_slice.0, i64 %array_slice.1) #19, !dbg !6751
  %_5.0 = extractvalue { ptr, ptr } %6, 0, !dbg !6751
  %_5.1 = extractvalue { ptr, ptr } %6, 1, !dbg !6751
  store ptr %_5.0, ptr %_0, align 8, !dbg !6752
  %7 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6752
  store ptr %_5.1, ptr %7, align 8, !dbg !6752
  %8 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !6752
  store ptr %rem.0, ptr %8, align 8, !dbg !6752
  %9 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !6752
  store i64 %rem.1, ptr %9, align 8, !dbg !6752
  ret void, !dbg !6753
}

; core::slice::iter::ArrayChunks<T,_>::remainder
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$9remainder17ha5e87bf7e7f163c8E"(ptr align 8 %self) unnamed_addr #0 !dbg !6754 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6759, !DIExpression(), !6760)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !6761
  %_0.0 = load ptr, ptr %0, align 8, !dbg !6761
  %1 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !6761
  %_0.1 = load i64, ptr %1, align 8, !dbg !6761
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !6762
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !6762
  ret { ptr, i64 } %3, !dbg !6762
}

; core::slice::index::range
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN4core5slice5index5range17he60eca797cb2ab12E(i64 %0, i64 %1, i64 %bounds, ptr align 8 %2) unnamed_addr #0 !dbg !6763 {
start:
  %end.dbg.spill7 = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %start.dbg.spill4 = alloca [8 x i8], align 8
  %start.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %bounds.dbg.spill = alloca [8 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  %start1 = alloca [8 x i8], align 8
  %range = alloca [16 x i8], align 8
  store i64 %0, ptr %range, align 8
  %3 = getelementptr inbounds i8, ptr %range, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %range, !6767, !DIExpression(), !6785)
  store i64 %bounds, ptr %bounds.dbg.spill, align 8
    #dbg_declare(ptr %bounds.dbg.spill, !6768, !DIExpression(), !6786)
    #dbg_declare(ptr %start1, !6771, !DIExpression(), !6787)
    #dbg_declare(ptr %end, !6777, !DIExpression(), !6788)
  store i64 %bounds, ptr %len.dbg.spill, align 8, !dbg !6789
    #dbg_declare(ptr %len.dbg.spill, !6769, !DIExpression(), !6790)
; call <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound
  %4 = call { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17hcbc0262d8bbed73eE"(ptr align 8 %range) #19, !dbg !6791
  %5 = extractvalue { i64, ptr } %4, 0, !dbg !6791
  %6 = extractvalue { i64, ptr } %4, 1, !dbg !6791
  store i64 %5, ptr %_5, align 8, !dbg !6791
  %7 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !6791
  store ptr %6, ptr %7, align 8, !dbg !6791
  %_7 = load i64, ptr %_5, align 8, !dbg !6791
  switch i64 %_7, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb4
    i64 2, label %bb3
  ], !dbg !6792

bb2:                                              ; preds = %bb7, %start
  unreachable, !dbg !6793

bb5:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !6795
  %_32 = load ptr, ptr %8, align 8, !dbg !6795
  %start2 = load i64, ptr %_32, align 8, !dbg !6795
  store i64 %start2, ptr %start.dbg.spill, align 8, !dbg !6795
    #dbg_declare(ptr %start.dbg.spill, !6773, !DIExpression(), !6796)
  store i64 %start2, ptr %start1, align 8, !dbg !6797
  br label %bb7, !dbg !6798

bb4:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !6799
  %start3 = load ptr, ptr %9, align 8, !dbg !6799
  store ptr %start3, ptr %start.dbg.spill4, align 8, !dbg !6799
    #dbg_declare(ptr %start.dbg.spill4, !6775, !DIExpression(), !6800)
  %_11 = load i64, ptr %start3, align 8, !dbg !6801
; call core::num::<impl usize>::checked_add
  %10 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %_11, i64 1) #19, !dbg !6801
  %_10.0 = extractvalue { i64, i64 } %10, 0, !dbg !6801
  %_10.1 = extractvalue { i64, i64 } %10, 1, !dbg !6801
; call core::option::Option<T>::unwrap_or_else
  %11 = call i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hae61759adca3726aE"(i64 %_10.0, i64 %_10.1, ptr align 8 %2) #19, !dbg !6801
  store i64 %11, ptr %start1, align 8, !dbg !6801
  br label %bb7, !dbg !6801

bb3:                                              ; preds = %start
  store i64 0, ptr %start1, align 8, !dbg !6802
  br label %bb7, !dbg !6802

bb7:                                              ; preds = %bb3, %bb4, %bb5
; call <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound
  %12 = call { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17he67463925f07313eE"(ptr align 8 %range) #19, !dbg !6803
  %13 = extractvalue { i64, ptr } %12, 0, !dbg !6803
  %14 = extractvalue { i64, ptr } %12, 1, !dbg !6803
  store i64 %13, ptr %_13, align 8, !dbg !6803
  %15 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !6803
  store ptr %14, ptr %15, align 8, !dbg !6803
  %_15 = load i64, ptr %_13, align 8, !dbg !6803
  switch i64 %_15, label %bb2 [
    i64 0, label %bb11
    i64 1, label %bb10
    i64 2, label %bb9
  ], !dbg !6804

bb11:                                             ; preds = %bb7
  %16 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !6805
  %end5 = load ptr, ptr %16, align 8, !dbg !6805
  store ptr %end5, ptr %end.dbg.spill, align 8, !dbg !6805
    #dbg_declare(ptr %end.dbg.spill, !6779, !DIExpression(), !6806)
  %_18 = load i64, ptr %end5, align 8, !dbg !6807
; call core::num::<impl usize>::checked_add
  %17 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %_18, i64 1) #19, !dbg !6807
  %_17.0 = extractvalue { i64, i64 } %17, 0, !dbg !6807
  %_17.1 = extractvalue { i64, i64 } %17, 1, !dbg !6807
; call core::option::Option<T>::unwrap_or_else
  %18 = call i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hf09621581b4b66f5E"(i64 %_17.0, i64 %_17.1, ptr align 8 %2) #19, !dbg !6807
  store i64 %18, ptr %end, align 8, !dbg !6807
  br label %bb13, !dbg !6807

bb10:                                             ; preds = %bb7
  %19 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !6808
  %_33 = load ptr, ptr %19, align 8, !dbg !6808
  %end6 = load i64, ptr %_33, align 8, !dbg !6808
  store i64 %end6, ptr %end.dbg.spill7, align 8, !dbg !6808
    #dbg_declare(ptr %end.dbg.spill7, !6781, !DIExpression(), !6809)
  store i64 %end6, ptr %end, align 8, !dbg !6810
  br label %bb13, !dbg !6811

bb9:                                              ; preds = %bb7
  store i64 %bounds, ptr %end, align 8, !dbg !6812
  br label %bb13, !dbg !6812

bb13:                                             ; preds = %bb9, %bb10, %bb11
  %_21 = load i64, ptr %start1, align 8, !dbg !6813
  %_22 = load i64, ptr %end, align 8, !dbg !6814
  %_20 = icmp ugt i64 %_21, %_22, !dbg !6813
  br i1 %_20, label %bb14, label %bb15, !dbg !6813

bb15:                                             ; preds = %bb13
  %_27 = load i64, ptr %end, align 8, !dbg !6815
  %_26 = icmp ugt i64 %_27, %bounds, !dbg !6815
  br i1 %_26, label %bb16, label %bb17, !dbg !6815

bb14:                                             ; preds = %bb13
  %_24 = load i64, ptr %start1, align 8, !dbg !6816
  %_25 = load i64, ptr %end, align 8, !dbg !6817
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hbd20032dde04b2c9E(i64 %_24, i64 %_25, ptr align 8 %2) #20, !dbg !6818
  unreachable, !dbg !6818

bb17:                                             ; preds = %bb15
  %_30 = load i64, ptr %start1, align 8, !dbg !6819
  %_31 = load i64, ptr %end, align 8, !dbg !6820
  %20 = insertvalue { i64, i64 } poison, i64 %_30, 0, !dbg !6821
  %21 = insertvalue { i64, i64 } %20, i64 %_31, 1, !dbg !6821
  ret { i64, i64 } %21, !dbg !6821

bb16:                                             ; preds = %bb15
  %_29 = load i64, ptr %end, align 8, !dbg !6822
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h32a5160b7d4ab128E(i64 %_29, i64 %bounds, ptr align 8 %2) #20, !dbg !6823
  unreachable, !dbg !6823
}

; core::slice::index::range::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h9428914fb497a7f5E"() unnamed_addr #1 !dbg !6824 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !6830, !DIExpression(), !6831)
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17ha5867147dece32e1E(ptr align 8 @alloc_ffa744ba3383c2926c1004bae723738a) #20, !dbg !6832
  unreachable, !dbg !6832
}

; core::slice::index::range::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hbf5d17156c35e1c4E"() unnamed_addr #1 !dbg !6833 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !6838, !DIExpression(), !6839)
; call core::slice::index::slice_start_index_overflow_fail
  call void @_ZN4core5slice5index31slice_start_index_overflow_fail17hc2e48938c05b76a0E(ptr align 8 @alloc_3cee366dba514cb0c18c40b06fd3b2da) #20, !dbg !6840
  unreachable, !dbg !6840
}

; core::slice::memchr::memchr_naive
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h7fa02eb67be222c1E(i8 zeroext %x, ptr align 1 %text.0, i64 %text.1) unnamed_addr #1 !dbg !6841 {
start:
  %text.dbg.spill = alloca [16 x i8], align 8
  %x.dbg.spill = alloca [1 x i8], align 1
  %i = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !6847, !DIExpression(), !6851)
  store ptr %text.0, ptr %text.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %text.dbg.spill, i64 8
  store i64 %text.1, ptr %0, align 8
    #dbg_declare(ptr %text.dbg.spill, !6848, !DIExpression(), !6852)
    #dbg_declare(ptr %i, !6849, !DIExpression(), !6853)
  store i64 0, ptr %i, align 8, !dbg !6854
  br label %bb1, !dbg !6855

bb1:                                              ; preds = %bb6, %start
  %_5 = load i64, ptr %i, align 8, !dbg !6856
  %_4 = icmp ult i64 %_5, %text.1, !dbg !6856
  br i1 %_4, label %bb2, label %bb7, !dbg !6856

bb7:                                              ; preds = %bb1
  store i64 0, ptr %_0, align 8, !dbg !6857
  br label %bb8, !dbg !6858

bb2:                                              ; preds = %bb1
  %_9 = load i64, ptr %i, align 8, !dbg !6859
  %_11 = icmp ult i64 %_9, %text.1, !dbg !6860
  br i1 %_11, label %bb3, label %panic, !dbg !6860

bb8:                                              ; preds = %bb4, %bb7
  %1 = load i64, ptr %_0, align 8, !dbg !6858
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6858
  %3 = load i64, ptr %2, align 8, !dbg !6858
  %4 = insertvalue { i64, i64 } poison, i64 %1, 0, !dbg !6858
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !6858
  ret { i64, i64 } %5, !dbg !6858

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds i8, ptr %text.0, i64 %_9, !dbg !6860
  %_8 = load i8, ptr %6, align 1, !dbg !6860
  %_7 = icmp eq i8 %_8, %x, !dbg !6860
  br i1 %_7, label %bb4, label %bb5, !dbg !6860

panic:                                            ; preds = %bb2
  %_9.lcssa = phi i64 [ %_9, %bb2 ], !dbg !6859
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 %_9.lcssa, i64 %text.1, ptr align 8 @alloc_e468df286ae29d94cc1abcc60a58d9b2) #20, !dbg !6860
  unreachable, !dbg !6860

bb5:                                              ; preds = %bb3
  %7 = load i64, ptr %i, align 8, !dbg !6861
  %8 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %7, i64 1), !dbg !6861
  %_13.0 = extractvalue { i64, i1 } %8, 0, !dbg !6861
  %_13.1 = extractvalue { i64, i1 } %8, 1, !dbg !6861
  br i1 %_13.1, label %panic1, label %bb6, !dbg !6861

bb4:                                              ; preds = %bb3
  %_12 = load i64, ptr %i, align 8, !dbg !6862
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6863
  store i64 %_12, ptr %9, align 8, !dbg !6863
  store i64 1, ptr %_0, align 8, !dbg !6863
  br label %bb8, !dbg !6858

bb6:                                              ; preds = %bb5
  store i64 %_13.0, ptr %i, align 8, !dbg !6861
  br label %bb1, !dbg !6855

panic1:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_6c5b35390ec72a1d8429c4c7b102f354) #20, !dbg !6861
  unreachable, !dbg !6861
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext %x, ptr align 1 %text.0, i64 %text.1) unnamed_addr #1 !dbg !6864 {
start:
  %text.dbg.spill = alloca [16 x i8], align 8
  %x.dbg.spill = alloca [1 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !6866, !DIExpression(), !6868)
  store ptr %text.0, ptr %text.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %text.dbg.spill, i64 8
  store i64 %text.1, ptr %0, align 8
    #dbg_declare(ptr %text.dbg.spill, !6867, !DIExpression(), !6869)
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 2, i64 8), !dbg !6870
  %_6.0 = extractvalue { i64, i1 } %1, 0, !dbg !6870
  %_6.1 = extractvalue { i64, i1 } %1, 1, !dbg !6870
  br i1 %_6.1, label %panic, label %bb1, !dbg !6870

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %text.1, %_6.0, !dbg !6871
  br i1 %_3, label %bb2, label %bb3, !dbg !6871

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8 @alloc_4bbfdd898298471f08a38e188ddbe855) #20, !dbg !6870
  unreachable, !dbg !6870

bb3:                                              ; preds = %bb1
; call core::slice::memchr::memchr_aligned
  %2 = call { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h6b734f4507e90976E(i8 zeroext %x, ptr align 1 %text.0, i64 %text.1) #19, !dbg !6872
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !6872
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !6872
  store i64 %3, ptr %_0, align 8, !dbg !6872
  %5 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6872
  store i64 %4, ptr %5, align 8, !dbg !6872
  br label %bb4, !dbg !6872

bb2:                                              ; preds = %bb1
; call core::slice::memchr::memchr_naive
  %6 = call { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h7fa02eb67be222c1E(i8 zeroext %x, ptr align 1 %text.0, i64 %text.1) #19, !dbg !6873
  %7 = extractvalue { i64, i64 } %6, 0, !dbg !6873
  %8 = extractvalue { i64, i64 } %6, 1, !dbg !6873
  store i64 %7, ptr %_0, align 8, !dbg !6873
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6873
  store i64 %8, ptr %9, align 8, !dbg !6873
  br label %bb4, !dbg !6873

bb4:                                              ; preds = %bb2, %bb3
  %10 = load i64, ptr %_0, align 8, !dbg !6874
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !6874
  %12 = load i64, ptr %11, align 8, !dbg !6874
  %13 = insertvalue { i64, i64 } poison, i64 %10, 0, !dbg !6874
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1, !dbg !6874
  ret { i64, i64 } %14, !dbg !6874
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hae61759adca3726aE"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !6875 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %self, !6882, !DIExpression(), !6886)
    #dbg_declare(ptr %f.dbg.spill, !6883, !DIExpression(), !6887)
  store i8 0, ptr %_6, align 1, !dbg !6888
  store i8 1, ptr %_6, align 1, !dbg !6888
  %_3 = load i64, ptr %self, align 8, !dbg !6888
  %4 = icmp eq i64 %_3, 0, !dbg !6889
  br i1 %4, label %bb2, label %bb3, !dbg !6889

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !6890
; call core::slice::index::range::{{closure}}
  %5 = call i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hbf5d17156c35e1c4E"() #19, !dbg !6890
  store i64 %5, ptr %_0, align 8, !dbg !6890
  br label %bb6, !dbg !6890

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !6891
  %x = load i64, ptr %6, align 8, !dbg !6891
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !6891
    #dbg_declare(ptr %x.dbg.spill, !6884, !DIExpression(), !6892)
  store i64 %x, ptr %_0, align 8, !dbg !6893
  br label %bb6, !dbg !6894

bb6:                                              ; preds = %bb3, %bb2
  %7 = load i8, ptr %_6, align 1, !dbg !6895
  %8 = trunc i8 %7 to i1, !dbg !6895
  br i1 %8, label %bb5, label %bb4, !dbg !6895

bb4:                                              ; preds = %bb5, %bb6
  %9 = load i64, ptr %_0, align 8, !dbg !6896
  ret i64 %9, !dbg !6896

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6895

bb1:                                              ; No predecessors!
  unreachable, !dbg !6888
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hf09621581b4b66f5E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #1 !dbg !6897 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %self, !6904, !DIExpression(), !6908)
    #dbg_declare(ptr %f.dbg.spill, !6905, !DIExpression(), !6909)
  store i8 0, ptr %_6, align 1, !dbg !6910
  store i8 1, ptr %_6, align 1, !dbg !6910
  %_3 = load i64, ptr %self, align 8, !dbg !6910
  %4 = icmp eq i64 %_3, 0, !dbg !6911
  br i1 %4, label %bb2, label %bb3, !dbg !6911

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !6912
; call core::slice::index::range::{{closure}}
  %5 = call i64 @"_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h9428914fb497a7f5E"() #19, !dbg !6912
  store i64 %5, ptr %_0, align 8, !dbg !6912
  br label %bb6, !dbg !6912

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !6913
  %x = load i64, ptr %6, align 8, !dbg !6913
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !6913
    #dbg_declare(ptr %x.dbg.spill, !6906, !DIExpression(), !6914)
  store i64 %x, ptr %_0, align 8, !dbg !6915
  br label %bb6, !dbg !6916

bb6:                                              ; preds = %bb3, %bb2
  %7 = load i8, ptr %_6, align 1, !dbg !6917
  %8 = trunc i8 %7 to i1, !dbg !6917
  br i1 %8, label %bb5, label %bb4, !dbg !6917

bb4:                                              ; preds = %bb5, %bb6
  %9 = load i64, ptr %_0, align 8, !dbg !6918
  ret i64 %9, !dbg !6918

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6917

bb1:                                              ; No predecessors!
  unreachable, !dbg !6910
}

; core::option::Option<T>::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17h420c33d78b51a426E"(i24 %0, ptr align 1 %f) unnamed_addr #1 !dbg !6919 {
start:
  %1 = alloca [2 x i8], align 2
  %f.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [2 x i8], align 1
  %x = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 2
  %2 = alloca [4 x i8], align 4
  %self = alloca [3 x i8], align 1
  store i24 %0, ptr %2, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self, ptr align 4 %2, i64 3, i1 false)
    #dbg_declare(ptr %self, !6926, !DIExpression(), !6930)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !6927, !DIExpression(), !6931)
    #dbg_declare(ptr %x, !6928, !DIExpression(), !6932)
  store i8 0, ptr %_8, align 1, !dbg !6933
  store i8 1, ptr %_8, align 1, !dbg !6933
  %3 = load i8, ptr %self, align 1, !dbg !6933
  %4 = trunc i8 %3 to i1, !dbg !6933
  %_3 = zext i1 %4 to i64, !dbg !6933
  %5 = icmp eq i64 %_3, 0, !dbg !6934
  br i1 %5, label %bb2, label %bb3, !dbg !6934

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !6935
  br label %bb7, !dbg !6935

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 1, !dbg !6936
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %x, ptr align 1 %6, i64 2, i1 false), !dbg !6936
  store i8 0, ptr %_8, align 1, !dbg !6937
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_7, ptr align 1 %x, i64 2, i1 false), !dbg !6937
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %_7, i64 2, i1 false), !dbg !6937
  %7 = load i16, ptr %1, align 2, !dbg !6937
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h2f73320d6fb7f6d0E"(ptr align 1 %f, i16 %7) #19, !dbg !6937
  %8 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !6938
  store i16 %_5, ptr %8, align 2, !dbg !6938
  store i16 1, ptr %_0, align 2, !dbg !6938
  br label %bb7, !dbg !6939

bb7:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_8, align 1, !dbg !6940
  %10 = trunc i8 %9 to i1, !dbg !6940
  br i1 %10, label %bb6, label %bb5, !dbg !6940

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i16, ptr %_0, align 2, !dbg !6941
  %12 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !6941
  %13 = load i16, ptr %12, align 2, !dbg !6941
  %14 = insertvalue { i16, i16 } poison, i16 %11, 0, !dbg !6941
  %15 = insertvalue { i16, i16 } %14, i16 %13, 1, !dbg !6941
  ret { i16, i16 } %15, !dbg !6941

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6940

bb1:                                              ; No predecessors!
  unreachable, !dbg !6933
}

; core::option::Option<T>::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17h6da2db0481086ae8E"(i24 %0, ptr align 1 %f) unnamed_addr #1 !dbg !6942 {
start:
  %1 = alloca [2 x i8], align 2
  %f.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [2 x i8], align 1
  %x = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 2
  %2 = alloca [4 x i8], align 4
  %self = alloca [3 x i8], align 1
  store i24 %0, ptr %2, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self, ptr align 4 %2, i64 3, i1 false)
    #dbg_declare(ptr %self, !6945, !DIExpression(), !6949)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !6946, !DIExpression(), !6950)
    #dbg_declare(ptr %x, !6947, !DIExpression(), !6951)
  store i8 0, ptr %_8, align 1, !dbg !6952
  store i8 1, ptr %_8, align 1, !dbg !6952
  %3 = load i8, ptr %self, align 1, !dbg !6952
  %4 = trunc i8 %3 to i1, !dbg !6952
  %_3 = zext i1 %4 to i64, !dbg !6952
  %5 = icmp eq i64 %_3, 0, !dbg !6953
  br i1 %5, label %bb2, label %bb3, !dbg !6953

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !6954
  br label %bb7, !dbg !6954

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 1, !dbg !6955
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %x, ptr align 1 %6, i64 2, i1 false), !dbg !6955
  store i8 0, ptr %_8, align 1, !dbg !6956
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_7, ptr align 1 %x, i64 2, i1 false), !dbg !6956
  call void @llvm.memcpy.p0.p0.i64(ptr align 2 %1, ptr align 1 %_7, i64 2, i1 false), !dbg !6956
  %7 = load i16, ptr %1, align 2, !dbg !6956
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17he49726397a5040ccE"(ptr align 1 %f, i16 %7) #19, !dbg !6956
  %8 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !6957
  store i16 %_5, ptr %8, align 2, !dbg !6957
  store i16 1, ptr %_0, align 2, !dbg !6957
  br label %bb7, !dbg !6958

bb7:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_8, align 1, !dbg !6959
  %10 = trunc i8 %9 to i1, !dbg !6959
  br i1 %10, label %bb6, label %bb5, !dbg !6959

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i16, ptr %_0, align 2, !dbg !6960
  %12 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !6960
  %13 = load i16, ptr %12, align 2, !dbg !6960
  %14 = insertvalue { i16, i16 } poison, i16 %11, 0, !dbg !6960
  %15 = insertvalue { i16, i16 } %14, i16 %13, 1, !dbg !6960
  ret { i16, i16 } %15, !dbg !6960

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6959

bb1:                                              ; No predecessors!
  unreachable, !dbg !6952
}

; core::option::Option<T>::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17hb29b5a62bf7c8d46E"(i32 %0, i32 %1) unnamed_addr #1 !dbg !6961 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i64 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !6972, !DIExpression(), !6976)
    #dbg_declare(ptr %f.dbg.spill, !6973, !DIExpression(), !6977)
  store i8 0, ptr %_8, align 1, !dbg !6978
  store i8 1, ptr %_8, align 1, !dbg !6978
  %3 = load i32, ptr %self, align 4, !dbg !6978
  %_3 = zext i32 %3 to i64, !dbg !6978
  %4 = icmp eq i64 %_3, 0, !dbg !6979
  br i1 %4, label %bb2, label %bb3, !dbg !6979

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !6980
  br label %bb7, !dbg !6980

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 4, !dbg !6981
  %x = load i32, ptr %5, align 4, !dbg !6981
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !6981
    #dbg_declare(ptr %x.dbg.spill, !6974, !DIExpression(), !6982)
  store i8 0, ptr %_8, align 1, !dbg !6983
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %_5 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h11cc03365ab57869E"(i32 signext %x) #19, !dbg !6983
  store i32 %_5, ptr %_0, align 4, !dbg !6984
  br label %bb7, !dbg !6985

bb7:                                              ; preds = %bb3, %bb2
  %6 = load i8, ptr %_8, align 1, !dbg !6986
  %7 = trunc i8 %6 to i1, !dbg !6986
  br i1 %7, label %bb6, label %bb5, !dbg !6986

bb5:                                              ; preds = %bb6, %bb7
  %8 = load i32, ptr %_0, align 4, !dbg !6987
  ret i32 %8, !dbg !6987

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6986

bb1:                                              ; No predecessors!
  unreachable, !dbg !6978
}

; core::option::Option<T>::take
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E"(ptr align 2 %self) unnamed_addr #1 !dbg !6988 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [4 x i8], align 2
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !6993, !DIExpression(), !6994)
  store i16 0, ptr %_2, align 2, !dbg !6995
  %0 = load i16, ptr %_2, align 2, !dbg !6996
  %1 = getelementptr inbounds i8, ptr %_2, i64 2, !dbg !6996
  %2 = load i16, ptr %1, align 2, !dbg !6996
; call core::mem::replace
  %3 = call { i16, i16 } @_ZN4core3mem7replace17h4ac15aa4e8b140cfE(ptr align 2 %self, i16 %0, i16 %2) #19, !dbg !6996
  %_0.0 = extractvalue { i16, i16 } %3, 0, !dbg !6996
  %_0.1 = extractvalue { i16, i16 } %3, 1, !dbg !6996
  %4 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !6997
  %5 = insertvalue { i16, i16 } %4, i16 %_0.1, 1, !dbg !6997
  ret { i16, i16 } %5, !dbg !6997
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h42e8827b172396c2E"(ptr sret([16 x i8]) align 8 %_0, i64 %0, i64 %1, i64 %err.0, i64 %err.1) unnamed_addr #1 !dbg !6998 {
start:
  %v.dbg.spill = alloca [8 x i8], align 8
  %err.dbg.spill = alloca [16 x i8], align 8
  %_6 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7017, !DIExpression(), !7021)
  store i64 %err.0, ptr %err.dbg.spill, align 8
  %3 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8
  store i64 %err.1, ptr %3, align 8
    #dbg_declare(ptr %err.dbg.spill, !7018, !DIExpression(), !7022)
  store i8 0, ptr %_6, align 1, !dbg !7023
  store i8 1, ptr %_6, align 1, !dbg !7023
  %_3 = load i64, ptr %self, align 8, !dbg !7023
  %4 = icmp eq i64 %_3, 0, !dbg !7024
  br i1 %4, label %bb2, label %bb3, !dbg !7024

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !7025
  store i64 %err.0, ptr %_0, align 8, !dbg !7026
  %5 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7026
  store i64 %err.1, ptr %5, align 8, !dbg !7026
  br label %bb6, !dbg !7027

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7028
  %v = load i64, ptr %6, align 8, !dbg !7028
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !7028
    #dbg_declare(ptr %v.dbg.spill, !7019, !DIExpression(), !7029)
  %7 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7030
  store i64 %v, ptr %7, align 8, !dbg !7030
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !7030
  br label %bb6, !dbg !7031

bb6:                                              ; preds = %bb3, %bb2
  %8 = load i8, ptr %_6, align 1, !dbg !7032
  %9 = trunc i8 %8 to i1, !dbg !7032
  br i1 %9, label %bb5, label %bb4, !dbg !7032

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !7033

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7032

bb1:                                              ; No predecessors!
  unreachable, !dbg !7023
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17he08d66db6591ba09E"(ptr %0) unnamed_addr #1 !dbg !7034 {
start:
  %v.dbg.spill = alloca [8 x i8], align 8
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !7053, !DIExpression(), !7057)
    #dbg_declare(ptr %err.dbg.spill, !7054, !DIExpression(), !7058)
  store i8 0, ptr %_6, align 1, !dbg !7059
  store i8 1, ptr %_6, align 1, !dbg !7059
  %1 = load ptr, ptr %self, align 8, !dbg !7059
  %2 = ptrtoint ptr %1 to i64, !dbg !7059
  %3 = icmp eq i64 %2, 0, !dbg !7059
  %_3 = select i1 %3, i64 0, i64 1, !dbg !7059
  %4 = icmp eq i64 %_3, 0, !dbg !7060
  br i1 %4, label %bb2, label %bb3, !dbg !7060

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !7061
  store ptr null, ptr %_0, align 8, !dbg !7062
  br label %bb6, !dbg !7063

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 8, !dbg !7064
  store ptr %v, ptr %v.dbg.spill, align 8, !dbg !7064
    #dbg_declare(ptr %v.dbg.spill, !7055, !DIExpression(), !7065)
  store ptr %v, ptr %_0, align 8, !dbg !7066
  br label %bb6, !dbg !7067

bb6:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_6, align 1, !dbg !7068
  %6 = trunc i8 %5 to i1, !dbg !7068
  br i1 %6, label %bb5, label %bb4, !dbg !7068

bb4:                                              ; preds = %bb5, %bb6
  %7 = load ptr, ptr %_0, align 8, !dbg !7069
  ret ptr %7, !dbg !7069

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7068

bb1:                                              ; No predecessors!
  unreachable, !dbg !7059
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h2f8e984a5c096097E"(ptr align 2 %self) unnamed_addr #1 !dbg !7070 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7076, !DIExpression(), !7077)
  %0 = load i16, ptr %self, align 2, !dbg !7078
  %_2 = zext i16 %0 to i64, !dbg !7078
  %1 = icmp eq i64 %_2, 1, !dbg !7079
  br i1 %1, label %bb2, label %bb1, !dbg !7079

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !7081
  br label %bb3, !dbg !7081

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !7082
  br label %bb3, !dbg !7082

bb3:                                              ; preds = %bb1, %bb2
  %2 = load i8, ptr %_0, align 1, !dbg !7083
  %3 = trunc i8 %2 to i1, !dbg !7083
  ret i1 %3, !dbg !7083

bb4:                                              ; No predecessors!
  unreachable, !dbg !7084
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h1c60e8398fa148feE"(i64 %0, i64 %1, ptr align 8 %f) unnamed_addr #1 !dbg !7085 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7098, !DIExpression(), !7102)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !7099, !DIExpression(), !7103)
  store i8 0, ptr %_7, align 1, !dbg !7104
  store i8 1, ptr %_7, align 1, !dbg !7104
  %_3 = load i64, ptr %self, align 8, !dbg !7104
  %3 = icmp eq i64 %_3, 0, !dbg !7105
  br i1 %3, label %bb2, label %bb3, !dbg !7105

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7106
  br label %bb6, !dbg !7106

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7107
  %x = load i64, ptr %4, align 8, !dbg !7107
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !7107
    #dbg_declare(ptr %x.dbg.spill, !7100, !DIExpression(), !7108)
  store i8 0, ptr %_7, align 1, !dbg !7109
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %5 = call { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17hb4feb60f0b9940f5E"(ptr align 8 %f, i64 %x) #19, !dbg !7109
  %6 = extractvalue { i64, i64 } %5, 0, !dbg !7109
  %7 = extractvalue { i64, i64 } %5, 1, !dbg !7109
  store i64 %6, ptr %_0, align 8, !dbg !7109
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7109
  store i64 %7, ptr %8, align 8, !dbg !7109
  br label %bb6, !dbg !7109

bb6:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_7, align 1, !dbg !7110
  %10 = trunc i8 %9 to i1, !dbg !7110
  br i1 %10, label %bb5, label %bb4, !dbg !7110

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i64, ptr %_0, align 8, !dbg !7111
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7111
  %13 = load i64, ptr %12, align 8, !dbg !7111
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0, !dbg !7111
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7111
  ret { i64, i64 } %15, !dbg !7111

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7110

bb1:                                              ; No predecessors!
  unreachable, !dbg !7104
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h543cc0c855f87572E"(i64 %0, i64 %1, ptr align 8 %f) unnamed_addr #1 !dbg !7112 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7122, !DIExpression(), !7126)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !7123, !DIExpression(), !7127)
  store i8 0, ptr %_7, align 1, !dbg !7128
  store i8 1, ptr %_7, align 1, !dbg !7128
  %_3 = load i64, ptr %self, align 8, !dbg !7128
  %3 = icmp eq i64 %_3, 0, !dbg !7129
  br i1 %3, label %bb2, label %bb3, !dbg !7129

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7130
  br label %bb6, !dbg !7130

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7131
  %x = load i64, ptr %4, align 8, !dbg !7131
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !7131
    #dbg_declare(ptr %x.dbg.spill, !7124, !DIExpression(), !7132)
  store i8 0, ptr %_7, align 1, !dbg !7133
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %5 = call { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h75f89146eef50ff0E"(ptr align 8 %f, i64 %x) #19, !dbg !7133
  %6 = extractvalue { i64, i64 } %5, 0, !dbg !7133
  %7 = extractvalue { i64, i64 } %5, 1, !dbg !7133
  store i64 %6, ptr %_0, align 8, !dbg !7133
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7133
  store i64 %7, ptr %8, align 8, !dbg !7133
  br label %bb6, !dbg !7133

bb6:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_7, align 1, !dbg !7134
  %10 = trunc i8 %9 to i1, !dbg !7134
  br i1 %10, label %bb5, label %bb4, !dbg !7134

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i64, ptr %_0, align 8, !dbg !7135
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7135
  %13 = load i64, ptr %12, align 8, !dbg !7135
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0, !dbg !7135
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7135
  ret { i64, i64 } %15, !dbg !7135

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7134

bb1:                                              ; No predecessors!
  unreachable, !dbg !7128
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hc666df8f06b3a2b2E"(i64 %0, i64 %1, ptr align 8 %f) unnamed_addr #1 !dbg !7136 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7146, !DIExpression(), !7150)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !7147, !DIExpression(), !7151)
  store i8 0, ptr %_7, align 1, !dbg !7152
  store i8 1, ptr %_7, align 1, !dbg !7152
  %_3 = load i64, ptr %self, align 8, !dbg !7152
  %3 = icmp eq i64 %_3, 0, !dbg !7153
  br i1 %3, label %bb2, label %bb3, !dbg !7153

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7154
  br label %bb6, !dbg !7154

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7155
  %x = load i64, ptr %4, align 8, !dbg !7155
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !7155
    #dbg_declare(ptr %x.dbg.spill, !7148, !DIExpression(), !7156)
  store i8 0, ptr %_7, align 1, !dbg !7157
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %5 = call { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17hc81ae4410c8bd3c4E"(ptr align 8 %f, i64 %x) #19, !dbg !7157
  %6 = extractvalue { i64, i64 } %5, 0, !dbg !7157
  %7 = extractvalue { i64, i64 } %5, 1, !dbg !7157
  store i64 %6, ptr %_0, align 8, !dbg !7157
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7157
  store i64 %7, ptr %8, align 8, !dbg !7157
  br label %bb6, !dbg !7157

bb6:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_7, align 1, !dbg !7158
  %10 = trunc i8 %9 to i1, !dbg !7158
  br i1 %10, label %bb5, label %bb4, !dbg !7158

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i64, ptr %_0, align 8, !dbg !7159
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7159
  %13 = load i64, ptr %12, align 8, !dbg !7159
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0, !dbg !7159
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7159
  ret { i64, i64 } %15, !dbg !7159

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7158

bb1:                                              ; No predecessors!
  unreachable, !dbg !7152
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hd40d2fada271dc15E"(i64 %0, i64 %1, ptr align 8 %f) unnamed_addr #1 !dbg !7160 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7170, !DIExpression(), !7174)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !7171, !DIExpression(), !7175)
  store i8 0, ptr %_7, align 1, !dbg !7176
  store i8 1, ptr %_7, align 1, !dbg !7176
  %_3 = load i64, ptr %self, align 8, !dbg !7176
  %3 = icmp eq i64 %_3, 0, !dbg !7177
  br i1 %3, label %bb2, label %bb3, !dbg !7177

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7178
  br label %bb6, !dbg !7178

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7179
  %x = load i64, ptr %4, align 8, !dbg !7179
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !7179
    #dbg_declare(ptr %x.dbg.spill, !7172, !DIExpression(), !7180)
  store i8 0, ptr %_7, align 1, !dbg !7181
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %5 = call { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h64121ca5b9a986adE"(ptr align 8 %f, i64 %x) #19, !dbg !7181
  %6 = extractvalue { i64, i64 } %5, 0, !dbg !7181
  %7 = extractvalue { i64, i64 } %5, 1, !dbg !7181
  store i64 %6, ptr %_0, align 8, !dbg !7181
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7181
  store i64 %7, ptr %8, align 8, !dbg !7181
  br label %bb6, !dbg !7181

bb6:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_7, align 1, !dbg !7182
  %10 = trunc i8 %9 to i1, !dbg !7182
  br i1 %10, label %bb5, label %bb4, !dbg !7182

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i64, ptr %_0, align 8, !dbg !7183
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7183
  %13 = load i64, ptr %12, align 8, !dbg !7183
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0, !dbg !7183
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7183
  ret { i64, i64 } %15, !dbg !7183

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7182

bb1:                                              ; No predecessors!
  unreachable, !dbg !7176
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hf76144ed688c6ecbE"(i64 %0, i64 %1, ptr align 8 %f) unnamed_addr #1 !dbg !7184 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7194, !DIExpression(), !7198)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !7195, !DIExpression(), !7199)
  store i8 0, ptr %_7, align 1, !dbg !7200
  store i8 1, ptr %_7, align 1, !dbg !7200
  %_3 = load i64, ptr %self, align 8, !dbg !7200
  %3 = icmp eq i64 %_3, 0, !dbg !7201
  br i1 %3, label %bb2, label %bb3, !dbg !7201

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7202
  br label %bb6, !dbg !7202

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7203
  %x = load i64, ptr %4, align 8, !dbg !7203
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !7203
    #dbg_declare(ptr %x.dbg.spill, !7196, !DIExpression(), !7204)
  store i8 0, ptr %_7, align 1, !dbg !7205
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %5 = call { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h1e9d1ece3c4aa634E"(ptr align 8 %f, i64 %x) #19, !dbg !7205
  %6 = extractvalue { i64, i64 } %5, 0, !dbg !7205
  %7 = extractvalue { i64, i64 } %5, 1, !dbg !7205
  store i64 %6, ptr %_0, align 8, !dbg !7205
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7205
  store i64 %7, ptr %8, align 8, !dbg !7205
  br label %bb6, !dbg !7205

bb6:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_7, align 1, !dbg !7206
  %10 = trunc i8 %9 to i1, !dbg !7206
  br i1 %10, label %bb5, label %bb4, !dbg !7206

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i64, ptr %_0, align 8, !dbg !7207
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7207
  %13 = load i64, ptr %12, align 8, !dbg !7207
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0, !dbg !7207
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7207
  ret { i64, i64 } %15, !dbg !7207

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7206

bb1:                                              ; No predecessors!
  unreachable, !dbg !7200
}

; core::option::Option<&T>::cloned
; Function Attrs: noredzone nounwind
define dso_local { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hffd608ba647f43afE"(ptr align 2 %0) unnamed_addr #0 !dbg !7208 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %t.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [4 x i8], align 2
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !7224, !DIExpression(), !7227)
  %1 = load ptr, ptr %self, align 8, !dbg !7228
  %2 = ptrtoint ptr %1 to i64, !dbg !7228
  %3 = icmp eq i64 %2, 0, !dbg !7228
  %_2 = select i1 %3, i64 0, i64 1, !dbg !7228
  %4 = icmp eq i64 %_2, 0, !dbg !7229
  br i1 %4, label %bb2, label %bb3, !dbg !7229

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !7230
  br label %bb5, !dbg !7230

bb3:                                              ; preds = %start
  %t = load ptr, ptr %self, align 8, !dbg !7231
  store ptr %t, ptr %t.dbg.spill, align 8, !dbg !7231
    #dbg_declare(ptr %t.dbg.spill, !7225, !DIExpression(), !7232)
  store ptr %t, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !7233, !DIExpression(), !7242)
  %_0.i = load i16, ptr %t, align 2, !dbg !7244
  %5 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !7245
  store i16 %_0.i, ptr %5, align 2, !dbg !7245
  store i16 1, ptr %_0, align 2, !dbg !7245
  br label %bb5, !dbg !7246

bb5:                                              ; preds = %bb3, %bb2
  %6 = load i16, ptr %_0, align 2, !dbg !7247
  %7 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !7247
  %8 = load i16, ptr %7, align 2, !dbg !7247
  %9 = insertvalue { i16, i16 } poison, i16 %6, 0, !dbg !7247
  %10 = insertvalue { i16, i16 } %9, i16 %8, 1, !dbg !7247
  ret { i16, i16 } %10, !dbg !7247

bb1:                                              ; No predecessors!
  unreachable, !dbg !7228
}

; core::option::Option<&T>::copied
; Function Attrs: noredzone nounwind
define dso_local i24 @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h55368225e46eda0aE"(ptr align 1 %0) unnamed_addr #0 !dbg !7248 {
start:
  %v = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 1
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !7253, !DIExpression(), !7256)
    #dbg_declare(ptr %v, !7254, !DIExpression(), !7257)
  %1 = load ptr, ptr %self, align 8, !dbg !7258
  %2 = ptrtoint ptr %1 to i64, !dbg !7258
  %3 = icmp eq i64 %2, 0, !dbg !7258
  %_2 = select i1 %3, i64 0, i64 1, !dbg !7258
  %4 = icmp eq i64 %_2, 0, !dbg !7259
  br i1 %4, label %bb2, label %bb3, !dbg !7259

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !7260
  br label %bb4, !dbg !7260

bb3:                                              ; preds = %start
  %_4 = load ptr, ptr %self, align 8, !dbg !7261
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %v, ptr align 1 %_4, i64 2, i1 false), !dbg !7261
  %5 = getelementptr inbounds i8, ptr %_0, i64 1, !dbg !7262
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %5, ptr align 1 %v, i64 2, i1 false), !dbg !7262
  store i8 1, ptr %_0, align 1, !dbg !7262
  br label %bb4, !dbg !7263

bb4:                                              ; preds = %bb3, %bb2
  %6 = load i24, ptr %_0, align 1, !dbg !7264
  ret i24 %6, !dbg !7264

bb1:                                              ; No predecessors!
  unreachable, !dbg !7258
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h48bda17d4b2b960cE"(ptr align 8 %self) unnamed_addr #1 !dbg !7265 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_7 = alloca [24 x i8], align 8
  %t = alloca [24 x i8], align 8
  %_0 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !7275, !DIExpression(), !7281)
    #dbg_declare(ptr %op.dbg.spill, !7276, !DIExpression(), !7282)
    #dbg_declare(ptr %t, !7277, !DIExpression(), !7283)
    #dbg_declare(ptr %e.dbg.spill, !7279, !DIExpression(), !7284)
  store i8 0, ptr %_9, align 1, !dbg !7285
  store i8 1, ptr %_9, align 1, !dbg !7285
  %0 = load i64, ptr %self, align 8, !dbg !7285
  %1 = icmp eq i64 %0, 0, !dbg !7285
  %_3 = select i1 %1, i64 1, i64 0, !dbg !7285
  %2 = icmp eq i64 %_3, 0, !dbg !7286
  br i1 %2, label %bb3, label %bb2, !dbg !7286

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 24, i1 false), !dbg !7287
  store i8 0, ptr %_9, align 1, !dbg !7288
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %t, i64 24, i1 false), !dbg !7288
; call alloc::raw_vec::layout_array::{{closure}}
  %3 = call { i64, i64 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17h1aa03a9512b3776fE"(ptr align 8 %_7) #19, !dbg !7288
  %_5.0 = extractvalue { i64, i64 } %3, 0, !dbg !7288
  %_5.1 = extractvalue { i64, i64 } %3, 1, !dbg !7288
  store i64 %_5.0, ptr %_0, align 8, !dbg !7289
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7289
  store i64 %_5.1, ptr %4, align 8, !dbg !7289
  br label %bb7, !dbg !7290

bb2:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7291
  br label %bb7, !dbg !7292

bb7:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_9, align 1, !dbg !7293
  %6 = trunc i8 %5 to i1, !dbg !7293
  br i1 %6, label %bb6, label %bb5, !dbg !7293

bb5:                                              ; preds = %bb6, %bb7
  %7 = load i64, ptr %_0, align 8, !dbg !7294
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7294
  %9 = load i64, ptr %8, align 8, !dbg !7294
  %10 = insertvalue { i64, i64 } poison, i64 %7, 0, !dbg !7294
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !7294
  ret { i64, i64 } %11, !dbg !7294

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7293

bb1:                                              ; No predecessors!
  unreachable, !dbg !7285
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3811244cd94293caE"(i1 zeroext %0, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %1) unnamed_addr #1 !dbg !7295 {
start:
  %msg.dbg.spill = alloca [16 x i8], align 8
  %t.dbg.spill = alloca [0 x i8], align 1
  %e = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
    #dbg_declare(ptr %t.dbg.spill, !7302, !DIExpression(), !7306)
    #dbg_declare(ptr %self, !7300, !DIExpression(), !7307)
  store ptr %msg.0, ptr %msg.dbg.spill, align 8
  %3 = getelementptr inbounds i8, ptr %msg.dbg.spill, i64 8
  store i64 %msg.1, ptr %3, align 8
    #dbg_declare(ptr %msg.dbg.spill, !7301, !DIExpression(), !7308)
    #dbg_declare(ptr %e, !7304, !DIExpression(), !7309)
  %4 = load i8, ptr %self, align 1, !dbg !7310
  %5 = trunc i8 %4 to i1, !dbg !7310
  %_3 = zext i1 %5 to i64, !dbg !7310
  %6 = icmp eq i64 %_3, 0, !dbg !7311
  br i1 %6, label %bb3, label %bb2, !dbg !7311

bb3:                                              ; preds = %start
  ret void, !dbg !7312

bb2:                                              ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h32e9195b123d06eeE(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.0, ptr align 8 %1) #20, !dbg !7313
  unreachable, !dbg !7313

bb1:                                              ; No predecessors!
  unreachable, !dbg !7310
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0d83318b72780e5aE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7314 {
start:
  %e.dbg.spill = alloca [2 x i8], align 2
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %t = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !7342, !DIExpression(), !7348)
    #dbg_declare(ptr %op.dbg.spill, !7343, !DIExpression(), !7349)
    #dbg_declare(ptr %t, !7344, !DIExpression(), !7350)
  store i8 0, ptr %_9, align 1, !dbg !7351
  store i8 1, ptr %_9, align 1, !dbg !7351
  %0 = load i64, ptr %self, align 8, !dbg !7351
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !7351
  %_3 = select i1 %1, i64 1, i64 0, !dbg !7351
  %2 = icmp eq i64 %_3, 0, !dbg !7352
  br i1 %2, label %bb3, label %bb2, !dbg !7352

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 24, i1 false), !dbg !7353
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 24, i1 false), !dbg !7354
  br label %bb7, !dbg !7355

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7356
  %e = load i16, ptr %3, align 8, !dbg !7356
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !7356
    #dbg_declare(ptr %e.dbg.spill, !7346, !DIExpression(), !7357)
  store i8 0, ptr %_9, align 1, !dbg !7358
; call alloc::string::String::from_utf16le::{{closure}}
  call void @"_ZN5alloc6string6String12from_utf16le28_$u7b$$u7b$closure$u7d$$u7d$17haa7a00f08f5c7eb8E"(i16 zeroext %e) #19, !dbg !7358
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !7359
  br label %bb7, !dbg !7360

bb7:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_9, align 1, !dbg !7361
  %5 = trunc i8 %4 to i1, !dbg !7361
  br i1 %5, label %bb6, label %bb5, !dbg !7361

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7362

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7361

bb1:                                              ; No predecessors!
  unreachable, !dbg !7351
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5455b7410ad09c45E"(ptr sret([24 x i8]) align 8 %_0, i64 %0, i64 %1) unnamed_addr #1 !dbg !7363 {
start:
  %t.dbg.spill = alloca [16 x i8], align 8
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7385, !DIExpression(), !7391)
    #dbg_declare(ptr %op.dbg.spill, !7386, !DIExpression(), !7392)
    #dbg_declare(ptr %e.dbg.spill, !7389, !DIExpression(), !7393)
  store i8 0, ptr %_9, align 1, !dbg !7394
  store i8 1, ptr %_9, align 1, !dbg !7394
  %3 = load i64, ptr %self, align 8, !dbg !7394
  %4 = icmp eq i64 %3, 0, !dbg !7394
  %_3 = select i1 %4, i64 1, i64 0, !dbg !7394
  %5 = icmp eq i64 %_3, 0, !dbg !7395
  br i1 %5, label %bb3, label %bb2, !dbg !7395

bb3:                                              ; preds = %start
  %t.0 = load i64, ptr %self, align 8, !dbg !7396
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7396
  %t.1 = load i64, ptr %6, align 8, !dbg !7396
  store i64 %t.0, ptr %t.dbg.spill, align 8, !dbg !7396
  %7 = getelementptr inbounds i8, ptr %t.dbg.spill, i64 8, !dbg !7396
  store i64 %t.1, ptr %7, align 8, !dbg !7396
    #dbg_declare(ptr %t.dbg.spill, !7387, !DIExpression(), !7397)
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7398
  store i64 %t.0, ptr %8, align 8, !dbg !7398
  %9 = getelementptr inbounds i8, ptr %8, i64 8, !dbg !7398
  store i64 %t.1, ptr %9, align 8, !dbg !7398
  store i64 0, ptr %_0, align 8, !dbg !7398
  br label %bb7, !dbg !7399

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !7400
; call alloc::raw_vec::layout_array::{{closure}}
  %10 = call { i64, i64 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17he3993737c547ff05E"() #19, !dbg !7400
  %_6.0 = extractvalue { i64, i64 } %10, 0, !dbg !7400
  %_6.1 = extractvalue { i64, i64 } %10, 1, !dbg !7400
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7401
  store i64 %_6.0, ptr %11, align 8, !dbg !7401
  %12 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !7401
  store i64 %_6.1, ptr %12, align 8, !dbg !7401
  store i64 1, ptr %_0, align 8, !dbg !7401
  br label %bb7, !dbg !7402

bb7:                                              ; preds = %bb2, %bb3
  %13 = load i8, ptr %_9, align 1, !dbg !7403
  %14 = trunc i8 %13 to i1, !dbg !7403
  br i1 %14, label %bb6, label %bb5, !dbg !7403

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7404

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7403

bb1:                                              ; No predecessors!
  unreachable, !dbg !7394
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h68b23e03dcfea68bE"(ptr sret([24 x i8]) align 8 %_0, ptr %0, i64 %1, ptr align 8 %op) unnamed_addr #1 !dbg !7405 {
start:
  %t.dbg.spill = alloca [16 x i8], align 8
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7416, !DIExpression(), !7422)
  store ptr %op, ptr %op.dbg.spill, align 8
    #dbg_declare(ptr %op.dbg.spill, !7417, !DIExpression(), !7423)
    #dbg_declare(ptr %e.dbg.spill, !7420, !DIExpression(), !7424)
  store i8 0, ptr %_9, align 1, !dbg !7425
  store i8 1, ptr %_9, align 1, !dbg !7425
  %3 = load ptr, ptr %self, align 8, !dbg !7425
  %4 = ptrtoint ptr %3 to i64, !dbg !7425
  %5 = icmp eq i64 %4, 0, !dbg !7425
  %_3 = select i1 %5, i64 1, i64 0, !dbg !7425
  %6 = icmp eq i64 %_3, 0, !dbg !7426
  br i1 %6, label %bb3, label %bb2, !dbg !7426

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 8, !dbg !7427
  %7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7427
  %t.1 = load i64, ptr %7, align 8, !dbg !7427
  store ptr %t.0, ptr %t.dbg.spill, align 8, !dbg !7427
  %8 = getelementptr inbounds i8, ptr %t.dbg.spill, i64 8, !dbg !7427
  store i64 %t.1, ptr %8, align 8, !dbg !7427
    #dbg_declare(ptr %t.dbg.spill, !7418, !DIExpression(), !7428)
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7429
  store ptr %t.0, ptr %9, align 8, !dbg !7429
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !7429
  store i64 %t.1, ptr %10, align 8, !dbg !7429
  store i64 0, ptr %_0, align 8, !dbg !7429
  br label %bb7, !dbg !7430

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !7431
; call alloc::raw_vec::finish_grow::{{closure}}
  %11 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h65541403ff8832abE"(ptr align 8 %op) #19, !dbg !7431
  %_6.0 = extractvalue { i64, i64 } %11, 0, !dbg !7431
  %_6.1 = extractvalue { i64, i64 } %11, 1, !dbg !7431
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7432
  store i64 %_6.0, ptr %12, align 8, !dbg !7432
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !7432
  store i64 %_6.1, ptr %13, align 8, !dbg !7432
  store i64 1, ptr %_0, align 8, !dbg !7432
  br label %bb7, !dbg !7433

bb7:                                              ; preds = %bb2, %bb3
  %14 = load i8, ptr %_9, align 1, !dbg !7434
  %15 = trunc i8 %14 to i1, !dbg !7434
  br i1 %15, label %bb6, label %bb5, !dbg !7434

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7435

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7434

bb1:                                              ; No predecessors!
  unreachable, !dbg !7425
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96b119ef350d9df1E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7436 {
start:
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [40 x i8], align 8
  %_6 = alloca [32 x i8], align 8
  %e = alloca [40 x i8], align 8
  %t = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !7486, !DIExpression(), !7492)
    #dbg_declare(ptr %op.dbg.spill, !7487, !DIExpression(), !7493)
    #dbg_declare(ptr %t, !7488, !DIExpression(), !7494)
    #dbg_declare(ptr %e, !7490, !DIExpression(), !7495)
  store i8 0, ptr %_9, align 1, !dbg !7496
  store i8 1, ptr %_9, align 1, !dbg !7496
  %0 = load i64, ptr %self, align 8, !dbg !7496
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !7496
  %_3 = select i1 %1, i64 0, i64 1, !dbg !7496
  %2 = icmp eq i64 %_3, 0, !dbg !7497
  br i1 %2, label %bb3, label %bb2, !dbg !7497

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7498
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %3, i64 24, i1 false), !dbg !7498
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 24, i1 false), !dbg !7499
  %4 = getelementptr inbounds i8, ptr %_0, i64 24, !dbg !7499
  store i8 2, ptr %4, align 8, !dbg !7499
  br label %bb7, !dbg !7500

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %self, i64 40, i1 false), !dbg !7501
  store i8 0, ptr %_9, align 1, !dbg !7502
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %e, i64 40, i1 false), !dbg !7502
; call alloc::ffi::c_str::CString::into_string::{{closure}}
  call void @"_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17h6d6702930b05347dE"(ptr sret([32 x i8]) align 8 %_6, ptr align 8 %_8) #19, !dbg !7502
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 32, i1 false), !dbg !7503
  br label %bb7, !dbg !7504

bb7:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_9, align 1, !dbg !7505
  %6 = trunc i8 %5 to i1, !dbg !7505
  br i1 %6, label %bb6, label %bb5, !dbg !7505

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7506

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7505

bb1:                                              ; No predecessors!
  unreachable, !dbg !7496
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc4397bbb12d5a250E"(ptr sret([24 x i8]) align 8 %_0, ptr %0, i64 %1, ptr align 8 %op) unnamed_addr #1 !dbg !7507 {
start:
  %t.dbg.spill = alloca [16 x i8], align 8
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !7534, !DIExpression(), !7540)
  store ptr %op, ptr %op.dbg.spill, align 8
    #dbg_declare(ptr %op.dbg.spill, !7535, !DIExpression(), !7541)
    #dbg_declare(ptr %e.dbg.spill, !7538, !DIExpression(), !7542)
  store i8 0, ptr %_9, align 1, !dbg !7543
  store i8 1, ptr %_9, align 1, !dbg !7543
  %3 = load ptr, ptr %self, align 8, !dbg !7543
  %4 = ptrtoint ptr %3 to i64, !dbg !7543
  %5 = icmp eq i64 %4, 0, !dbg !7543
  %_3 = select i1 %5, i64 1, i64 0, !dbg !7543
  %6 = icmp eq i64 %_3, 0, !dbg !7544
  br i1 %6, label %bb3, label %bb2, !dbg !7544

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 8, !dbg !7545
  %7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7545
  %t.1 = load i64, ptr %7, align 8, !dbg !7545
  store ptr %t.0, ptr %t.dbg.spill, align 8, !dbg !7545
  %8 = getelementptr inbounds i8, ptr %t.dbg.spill, i64 8, !dbg !7545
  store i64 %t.1, ptr %8, align 8, !dbg !7545
    #dbg_declare(ptr %t.dbg.spill, !7536, !DIExpression(), !7546)
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7547
  store ptr %t.0, ptr %9, align 8, !dbg !7547
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !7547
  store i64 %t.1, ptr %10, align 8, !dbg !7547
  store i64 0, ptr %_0, align 8, !dbg !7547
  br label %bb7, !dbg !7548

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !7549
; call alloc::raw_vec::RawVecInner<A>::shrink_unchecked::{{closure}}
  %11 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hc12c04f3282927dbE"(ptr align 8 %op) #19, !dbg !7549
  %_6.0 = extractvalue { i64, i64 } %11, 0, !dbg !7549
  %_6.1 = extractvalue { i64, i64 } %11, 1, !dbg !7549
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !7550
  store i64 %_6.0, ptr %12, align 8, !dbg !7550
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !7550
  store i64 %_6.1, ptr %13, align 8, !dbg !7550
  store i64 1, ptr %_0, align 8, !dbg !7550
  br label %bb7, !dbg !7551

bb7:                                              ; preds = %bb2, %bb3
  %14 = load i8, ptr %_9, align 1, !dbg !7552
  %15 = trunc i8 %14 to i1, !dbg !7552
  br i1 %15, label %bb6, label %bb5, !dbg !7552

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7553

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7552

bb1:                                              ; No predecessors!
  unreachable, !dbg !7543
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd5438ebee1e7cff8E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7554 {
start:
  %e.dbg.spill = alloca [2 x i8], align 2
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %t = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !7563, !DIExpression(), !7569)
    #dbg_declare(ptr %op.dbg.spill, !7564, !DIExpression(), !7570)
    #dbg_declare(ptr %t, !7565, !DIExpression(), !7571)
  store i8 0, ptr %_9, align 1, !dbg !7572
  store i8 1, ptr %_9, align 1, !dbg !7572
  %0 = load i64, ptr %self, align 8, !dbg !7572
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !7572
  %_3 = select i1 %1, i64 1, i64 0, !dbg !7572
  %2 = icmp eq i64 %_3, 0, !dbg !7573
  br i1 %2, label %bb3, label %bb2, !dbg !7573

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 24, i1 false), !dbg !7574
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 24, i1 false), !dbg !7575
  br label %bb7, !dbg !7576

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !7577
  %e = load i16, ptr %3, align 8, !dbg !7577
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !7577
    #dbg_declare(ptr %e.dbg.spill, !7567, !DIExpression(), !7578)
  store i8 0, ptr %_9, align 1, !dbg !7579
; call alloc::string::String::from_utf16be::{{closure}}
  call void @"_ZN5alloc6string6String12from_utf16be28_$u7b$$u7b$closure$u7d$$u7d$17hff31191c53916e37E"(i16 zeroext %e) #19, !dbg !7579
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !7580
  br label %bb7, !dbg !7581

bb7:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_9, align 1, !dbg !7582
  %5 = trunc i8 %4 to i1, !dbg !7582
  br i1 %5, label %bb6, label %bb5, !dbg !7582

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7583

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7582

bb1:                                              ; No predecessors!
  unreachable, !dbg !7572
}

; core::result::Result<T,E>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h0a63d98d03a6edf3E"(i64 %0, i32 signext %default) unnamed_addr #1 !dbg !7584 {
start:
  %t.dbg.spill = alloca [4 x i8], align 4
  %default.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %1 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 4
  store i64 %0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self, ptr align 8 %1, i64 8, i1 false)
    #dbg_declare(ptr %self, !7589, !DIExpression(), !7593)
  store i32 %default, ptr %default.dbg.spill, align 4
    #dbg_declare(ptr %default.dbg.spill, !7590, !DIExpression(), !7594)
  store i8 0, ptr %_5, align 1, !dbg !7595
  store i8 1, ptr %_5, align 1, !dbg !7595
  %2 = load i16, ptr %self, align 4, !dbg !7595
  %_3 = zext i16 %2 to i64, !dbg !7595
  %3 = icmp eq i64 %_3, 0, !dbg !7596
  br i1 %3, label %bb3, label %bb2, !dbg !7596

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 4, !dbg !7597
  %t = load i32, ptr %4, align 4, !dbg !7597
  store i32 %t, ptr %t.dbg.spill, align 4, !dbg !7597
    #dbg_declare(ptr %t.dbg.spill, !7591, !DIExpression(), !7598)
  store i32 %t, ptr %_0, align 4, !dbg !7599
  br label %bb6, !dbg !7600

bb2:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !7601
  store i32 %default, ptr %_0, align 4, !dbg !7601
  br label %bb6, !dbg !7601

bb6:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_5, align 1, !dbg !7602
  %6 = trunc i8 %5 to i1, !dbg !7602
  br i1 %6, label %bb5, label %bb4, !dbg !7602

bb4:                                              ; preds = %bb5, %bb6
  %7 = load i16, ptr %self, align 4, !dbg !7602
  %_6 = zext i16 %7 to i64, !dbg !7602
  %8 = icmp eq i64 %_6, 0, !dbg !7602
  br i1 %8, label %bb7, label %bb8, !dbg !7602

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7602

bb7:                                              ; preds = %bb8, %bb4
  %9 = load i32, ptr %_0, align 4, !dbg !7603
  ret i32 %9, !dbg !7603

bb8:                                              ; preds = %bb4
  br label %bb7, !dbg !7602

bb1:                                              ; No predecessors!
  unreachable, !dbg !7595
}

; core::panicking::assert_failed
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
define dso_local void @_ZN4core9panicking13assert_failed17h3afa9d80748d587aE(i8 zeroext %kind, ptr align 1 %0, ptr align 1 %1, ptr align 8 %args, ptr align 8 %2) unnamed_addr #3 !dbg !7604 {
start:
  %3 = alloca [48 x i8], align 8
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right = alloca [8 x i8], align 8
  %left = alloca [8 x i8], align 8
  store ptr %0, ptr %left, align 8
  store ptr %1, ptr %right, align 8
  store i8 %kind, ptr %kind.dbg.spill, align 1
    #dbg_declare(ptr %kind.dbg.spill, !7622, !DIExpression(), !7628)
    #dbg_declare(ptr %left, !7623, !DIExpression(), !7629)
    #dbg_declare(ptr %right, !7624, !DIExpression(), !7630)
    #dbg_declare(ptr %args, !7625, !DIExpression(), !7631)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %args, i64 48, i1 false), !dbg !7632
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h0daed3fa3cd6b090E(i8 zeroext %kind, ptr align 1 %left, ptr align 8 @vtable.2, ptr align 1 %right, ptr align 8 @vtable.2, ptr align 8 %3, ptr align 8 %2) #20, !dbg !7632
  unreachable, !dbg !7632
}

; core::ub_checks::check_language_ub
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() unnamed_addr #1 !dbg !7633 {
start:
  %_0 = alloca [1 x i8], align 1
  br label %bb1, !dbg !7637

bb1:                                              ; preds = %start
; call core::ub_checks::check_language_ub::runtime
  %0 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17ha4e5f4453e66aeeaE() #19, !dbg !7638
  %1 = zext i1 %0 to i8, !dbg !7638
  store i8 %1, ptr %_0, align 1, !dbg !7638
  br label %bb3, !dbg !7638

bb3:                                              ; preds = %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !7640
  %3 = trunc i8 %2 to i1, !dbg !7640
  ret i1 %3, !dbg !7640

bb2:                                              ; No predecessors!
  unreachable
}

; core::ub_checks::check_language_ub::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17ha4e5f4453e66aeeaE() unnamed_addr #1 !dbg !7641 {
start:
  ret i1 true, !dbg !7643
}

; core::ub_checks::maybe_is_nonoverlapping
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping17h52b29ba9de20a021E(ptr %src, ptr %dst, i64 %size, i64 %count) unnamed_addr #1 !dbg !7644 {
start:
  %count.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %dst.dbg.spill = alloca [8 x i8], align 8
  %src.dbg.spill = alloca [8 x i8], align 8
  %_5 = alloca [32 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !7648, !DIExpression(), !7652)
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !7649, !DIExpression(), !7653)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !7650, !DIExpression(), !7654)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !7651, !DIExpression(), !7655)
  store ptr %src, ptr %_5, align 8, !dbg !7656
  %0 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !7656
  store ptr %dst, ptr %0, align 8, !dbg !7656
  %1 = getelementptr inbounds i8, ptr %_5, i64 16, !dbg !7656
  store i64 %size, ptr %1, align 8, !dbg !7656
  %2 = getelementptr inbounds i8, ptr %_5, i64 24, !dbg !7656
  store i64 %count, ptr %2, align 8, !dbg !7656
  %3 = load ptr, ptr %_5, align 8, !dbg !7658
  %4 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !7658
  %5 = load ptr, ptr %4, align 8, !dbg !7658
  %6 = getelementptr inbounds i8, ptr %_5, i64 16, !dbg !7658
  %7 = load i64, ptr %6, align 8, !dbg !7658
  %8 = getelementptr inbounds i8, ptr %_5, i64 24, !dbg !7658
  %9 = load i64, ptr %8, align 8, !dbg !7658
; call core::ub_checks::maybe_is_nonoverlapping::runtime
  %_0 = call zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping7runtime17h3761324217cbff39E(ptr %3, ptr %5, i64 %7, i64 %9) #19, !dbg !7658
  ret i1 %_0, !dbg !7659
}

; core::ub_checks::maybe_is_nonoverlapping::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping7runtime17h3761324217cbff39E(ptr %src, ptr %dst, i64 %size, i64 %count) unnamed_addr #1 !dbg !7660 {
start:
  %self.dbg.spill.i7 = alloca [8 x i8], align 8
  %self.dbg.spill.i6 = alloca [8 x i8], align 8
  %self.dbg.spill.i3 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %diff.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill2 = alloca [8 x i8], align 8
  %dst_usize.dbg.spill = alloca [8 x i8], align 8
  %src_usize.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %dst.dbg.spill = alloca [8 x i8], align 8
  %src.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  store ptr %src, ptr %src.dbg.spill, align 8
    #dbg_declare(ptr %src.dbg.spill, !7663, !DIExpression(), !7675)
  store ptr %dst, ptr %dst.dbg.spill, align 8
    #dbg_declare(ptr %dst.dbg.spill, !7664, !DIExpression(), !7675)
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !7665, !DIExpression(), !7675)
  store i64 %count, ptr %count.dbg.spill, align 8
    #dbg_declare(ptr %count.dbg.spill, !7666, !DIExpression(), !7675)
  store ptr %src, ptr %self.dbg.spill.i3, align 8
    #dbg_declare(ptr %self.dbg.spill.i3, !3620, !DIExpression(), !7676)
  store ptr %src, ptr %self.dbg.spill.i6, align 8
    #dbg_declare(ptr %self.dbg.spill.i6, !3627, !DIExpression(), !7679)
  %_0.i5 = ptrtoint ptr %src to i64, !dbg !7681
  store i64 %_0.i5, ptr %src_usize.dbg.spill, align 8, !dbg !7682
    #dbg_declare(ptr %src_usize.dbg.spill, !7667, !DIExpression(), !7683)
  store ptr %dst, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3620, !DIExpression(), !7684)
  store ptr %dst, ptr %self.dbg.spill.i7, align 8
    #dbg_declare(ptr %self.dbg.spill.i7, !3627, !DIExpression(), !7686)
  %_0.i = ptrtoint ptr %dst to i64, !dbg !7688
  store i64 %_0.i, ptr %dst_usize.dbg.spill, align 8, !dbg !7689
    #dbg_declare(ptr %dst_usize.dbg.spill, !7669, !DIExpression(), !7690)
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE"(i64 %size, i64 %count) #19, !dbg !7691
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !7691
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !7691
  store i64 %1, ptr %_9, align 8, !dbg !7691
  %3 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !7691
  store i64 %2, ptr %3, align 8, !dbg !7691
  %_10 = load i64, ptr %_9, align 8, !dbg !7691
  %4 = icmp eq i64 %_10, 1, !dbg !7692
  br i1 %4, label %bb4, label %bb5, !dbg !7692

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !7693
  %size1 = load i64, ptr %5, align 8, !dbg !7693
  store i64 %size1, ptr %size.dbg.spill2, align 8, !dbg !7693
    #dbg_declare(ptr %size.dbg.spill2, !7671, !DIExpression(), !7694)
; call core::num::<impl usize>::abs_diff
  %diff = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha9257a7921bb32bdE"(i64 %_0.i5, i64 %_0.i) #19, !dbg !7695
  store i64 %diff, ptr %diff.dbg.spill, align 8, !dbg !7695
    #dbg_declare(ptr %diff.dbg.spill, !7673, !DIExpression(), !7696)
  %_0 = icmp uge i64 %diff, %size1, !dbg !7697
  ret i1 %_0, !dbg !7698

bb5:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61) #20, !dbg !7699
  unreachable, !dbg !7699

bb7:                                              ; No predecessors!
  unreachable, !dbg !7700
}

; core::ub_checks::is_valid_allocation_size
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks24is_valid_allocation_size17h0e4b400c44a810f0E(i64 %size, i64 %len) unnamed_addr #1 !dbg !7701 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %max_len = alloca [8 x i8], align 8
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !7705, !DIExpression(), !7709)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !7706, !DIExpression(), !7710)
    #dbg_declare(ptr %max_len, !7707, !DIExpression(), !7711)
  %0 = icmp eq i64 %size, 0, !dbg !7712
  br i1 %0, label %bb1, label %bb2, !dbg !7712

bb1:                                              ; preds = %start
  store i64 -1, ptr %max_len, align 8, !dbg !7713
  br label %bb4, !dbg !7714

bb2:                                              ; preds = %start
  %_5 = icmp eq i64 %size, 0, !dbg !7715
  br i1 %_5, label %panic, label %bb3, !dbg !7715

bb4:                                              ; preds = %bb3, %bb1
  %_6 = load i64, ptr %max_len, align 8, !dbg !7716
  %_0 = icmp ule i64 %len, %_6, !dbg !7717
  ret i1 %_0, !dbg !7718

bb3:                                              ; preds = %bb2
  %1 = udiv i64 9223372036854775807, %size, !dbg !7715
  store i64 %1, ptr %max_len, align 8, !dbg !7715
  br label %bb4, !dbg !7714

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h9baa8b25c99cffa1E(ptr align 8 @alloc_5e69183382d227f934d9b2ef3c182205) #20, !dbg !7715
  unreachable, !dbg !7715
}

; core::ub_checks::maybe_is_aligned_and_not_null
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E(ptr %ptr, i64 %align, i1 zeroext %is_zst) unnamed_addr #1 !dbg !7719 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !7723, !DIExpression(), !7726)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !7724, !DIExpression(), !7727)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !7725, !DIExpression(), !7728)
  store ptr %ptr, ptr %_4, align 8, !dbg !7729
  %1 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !7729
  store i64 %align, ptr %1, align 8, !dbg !7729
  %2 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !7729
  %3 = zext i1 %is_zst to i8, !dbg !7729
  store i8 %3, ptr %2, align 8, !dbg !7729
  %4 = load ptr, ptr %_4, align 8, !dbg !7731
  %5 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !7731
  %6 = load i64, ptr %5, align 8, !dbg !7731
  %7 = getelementptr inbounds i8, ptr %_4, i64 16, !dbg !7731
  %8 = load i8, ptr %7, align 8, !dbg !7731
  %9 = trunc i8 %8 to i1, !dbg !7731
; call core::ub_checks::maybe_is_aligned_and_not_null::runtime
  %_0 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null7runtime17h8c47f670ddc3bf48E(ptr %4, i64 %6, i1 zeroext %9) #19, !dbg !7731
  ret i1 %_0, !dbg !7732
}

; core::ub_checks::maybe_is_aligned_and_not_null::runtime
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null7runtime17h8c47f670ddc3bf48E(ptr %ptr, i64 %align, i1 zeroext %is_zst) unnamed_addr #1 !dbg !7733 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !7736, !DIExpression(), !7739)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !7737, !DIExpression(), !7739)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !7738, !DIExpression(), !7739)
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hb2e2a778e79e2314E"(ptr %ptr, i64 %align) #19, !dbg !7740
  br i1 %_4, label %bb2, label %bb3, !dbg !7740

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !7740
  br label %bb7, !dbg !7740

bb2:                                              ; preds = %start
  br i1 %is_zst, label %bb4, label %bb5, !dbg !7742

bb7:                                              ; preds = %bb4, %bb5, %bb3
  %1 = load i8, ptr %_0, align 1, !dbg !7743
  %2 = trunc i8 %1 to i1, !dbg !7743
  ret i1 %2, !dbg !7743

bb5:                                              ; preds = %bb2
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h55bba6fb1b551a04E"(ptr %ptr) #19, !dbg !7744
  %3 = xor i1 %_5, true, !dbg !7745
  %4 = zext i1 %3 to i8, !dbg !7745
  store i8 %4, ptr %_0, align 1, !dbg !7745
  br label %bb7, !dbg !7746

bb4:                                              ; preds = %bb2
  store i8 1, ptr %_0, align 1, !dbg !7746
  br label %bb7, !dbg !7746
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h38af6a215d324b80E"(ptr %self, ptr align 8 %0) unnamed_addr #1 !dbg !7747 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7752, !DIExpression(), !7756)
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_0 = call ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hffaef22b86024aceE"(ptr %self) #19, !dbg !7757
  ret ptr %_0, !dbg !7758
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 !dbg !7759 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store i64 %self.0, ptr %self.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill, !7763, !DIExpression(), !7767)
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf2f6d2c9f90567a2E"(i64 %self.0, i64 %self.1) #19, !dbg !7768
  %_0.0 = extractvalue { i64, i64 } %2, 0, !dbg !7768
  %_0.1 = extractvalue { i64, i64 } %2, 1, !dbg !7768
  %3 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !7769
  %4 = insertvalue { i64, i64 } %3, i64 %_0.1, 1, !dbg !7769
  ret { i64, i64 } %4, !dbg !7769
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hca5904ee56a6374fE"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 !dbg !7770 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill, !7774, !DIExpression(), !7778)
; call alloc::boxed::convert::<impl core::convert::From<&[T]> for alloc::boxed::Box<[T]>>::from
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17hca9842cba6e06ba6E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !7779
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !7779
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !7779
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !7780
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !7780
  ret { ptr, i64 } %4, !dbg !7780
}

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h20bd182c5c54c60eE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 !dbg !7781 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7787, !DIExpression(), !7789)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !7788, !DIExpression(), !7789)
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h7692d295d2a10118E(ptr align 8 %f, ptr align 1 @alloc_99ac8a81a24cac863217ce4a5cbfabea, i64 5) #19, !dbg !7789
  ret i1 %_0, !dbg !7790
}

; <u8 as core::iter::traits::accum::Sum>::sum
; Function Attrs: noredzone nounwind
define dso_local i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17hd860a52c79cd2e9cE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !7791 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !7794, !DIExpression(), !7797)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i8 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hbae18a08927bccfcE"(ptr %iter.0, ptr %iter.1, i8 zeroext 0) #19, !dbg !7798
  ret i8 %_0, !dbg !7799
}

; <u8 as core::iter::traits::accum::Sum>::sum::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17hf95e447c3162ca0dE"(ptr align 1 %_1, i8 zeroext %a, i8 zeroext %b) unnamed_addr #1 !dbg !7800 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !7807, !DIExpression(), !7808)
  store i8 %a, ptr %a.dbg.spill, align 1
    #dbg_declare(ptr %a.dbg.spill, !7805, !DIExpression(), !7809)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !7806, !DIExpression(), !7810)
  %0 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 %a, i8 %b), !dbg !7811
  %_4.0 = extractvalue { i8, i1 } %0, 0, !dbg !7811
  %_4.1 = extractvalue { i8, i1 } %0, 1, !dbg !7811
  br i1 %_4.1, label %panic, label %bb1, !dbg !7811

bb1:                                              ; preds = %start
  ret i8 %_4.0, !dbg !7812

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_94ac45f841eeb3b83140452cd3cd917d) #20, !dbg !7811
  unreachable, !dbg !7811
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd2bd8ab69edc9fd1E"(ptr sret([104 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 !dbg !7813 {
start:
  %haystack.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !7855, !DIExpression(), !7857)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i64 8
  store i64 %haystack.1, ptr %1, align 8
    #dbg_declare(ptr %haystack.dbg.spill, !7856, !DIExpression(), !7858)
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h1e1bd3b48e5e7882E(ptr sret([104 x i8]) align 8 %_0, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %self.0, i64 %self.1) #19, !dbg !7859
  ret void, !dbg !7860
}

; <usize as core::iter::traits::accum::Sum>::sum
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h46162fdf073132abE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !7861 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !7863, !DIExpression(), !7866)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i64 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hdbff830f5d3b66aaE"(ptr %iter.0, ptr %iter.1, i64 0) #19, !dbg !7867
  ret i64 %_0, !dbg !7868
}

; <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h88c6b626375dafc2E"(ptr align 1 %_1, i64 %a, i64 %b) unnamed_addr #1 !dbg !7869 {
start:
  %b.dbg.spill = alloca [8 x i8], align 8
  %a.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !7876, !DIExpression(), !7877)
  store i64 %a, ptr %a.dbg.spill, align 8
    #dbg_declare(ptr %a.dbg.spill, !7874, !DIExpression(), !7878)
  store i64 %b, ptr %b.dbg.spill, align 8
    #dbg_declare(ptr %b.dbg.spill, !7875, !DIExpression(), !7879)
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %a, i64 %b), !dbg !7880
  %_4.0 = extractvalue { i64, i1 } %0, 0, !dbg !7880
  %_4.1 = extractvalue { i64, i1 } %0, 1, !dbg !7880
  br i1 %_4.1, label %panic, label %bb1, !dbg !7880

bb1:                                              ; preds = %start
  ret i64 %_4.0, !dbg !7881

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_94ac45f841eeb3b83140452cd3cd917d) #20, !dbg !7880
  unreachable, !dbg !7880
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2154cb9d0fbded29E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7882 {
start:
    #dbg_declare(ptr %self, !7889, !DIExpression(), !7891)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 40, i1 false), !dbg !7892
  ret void, !dbg !7893
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h68c3a53d85d4d4b4E"(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !7894 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store ptr %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !7898, !DIExpression(), !7899)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !7900
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !7900
  ret { ptr, ptr } %2, !dbg !7900
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7a720c0ebbf447f9E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7901 {
start:
    #dbg_declare(ptr %self, !7905, !DIExpression(), !7908)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 16, i1 false), !dbg !7909
  ret void, !dbg !7910
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9fb2051d3400fd15E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7911 {
start:
    #dbg_declare(ptr %self, !7915, !DIExpression(), !7918)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 16, i1 false), !dbg !7919
  ret void, !dbg !7920
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha51080fc84ce996fE"(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7921 {
start:
    #dbg_declare(ptr %self, !7925, !DIExpression(), !7928)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 48, i1 false), !dbg !7929
  ret void, !dbg !7930
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc75f2a826e335443E"(ptr align 8 %self) unnamed_addr #1 !dbg !7931 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7935, !DIExpression(), !7936)
  ret ptr %self, !dbg !7937
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 8 ptr @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc789a84abc003cf2E"(ptr align 8 %self) unnamed_addr #1 !dbg !7938 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7942, !DIExpression(), !7943)
  ret ptr %self, !dbg !7944
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcb18632616c492a7E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7945 {
start:
    #dbg_declare(ptr %self, !7949, !DIExpression(), !7950)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 32, i1 false), !dbg !7951
  ret void, !dbg !7952
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd81c89e6dcc041a7E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7953 {
start:
    #dbg_declare(ptr %self, !7957, !DIExpression(), !7958)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 32, i1 false), !dbg !7959
  ret void, !dbg !7960
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd98a58555276bde9E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7961 {
start:
    #dbg_declare(ptr %self, !7965, !DIExpression(), !7968)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false), !dbg !7969
  ret void, !dbg !7970
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hecb9f3243fc764d6E"(ptr sret([48 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7971 {
start:
    #dbg_declare(ptr %self, !7975, !DIExpression(), !7978)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 48, i1 false), !dbg !7979
  ret void, !dbg !7980
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf011668e8a7276adE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7981 {
start:
    #dbg_declare(ptr %self, !7985, !DIExpression(), !7987)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false), !dbg !7988
  ret void, !dbg !7989
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfa8d03b5b32e6b82E"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !7990 {
start:
    #dbg_declare(ptr %self, !7994, !DIExpression(), !7996)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 40, i1 false), !dbg !7997
  ret void, !dbg !7998
}

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17he57a55edfbb947feE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !7999 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8004, !DIExpression(), !8006)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !8005, !DIExpression(), !8006)
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8007
  store ptr %0, ptr %_10, align 8, !dbg !8007
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h47b966ff4803c6f6E(ptr align 8 %f, ptr align 1 @alloc_8e685ef482aec04a2d7a8ed5ef1228a3, i64 9, ptr align 1 @alloc_f34017a1538f19bf68b6d6294eec0bb3, i64 11, ptr align 1 %self, ptr align 8 @vtable.3, ptr align 1 @alloc_91eca80c47235190e5fbed3d6d8be36c, i64 9, ptr align 1 %_10, ptr align 8 @vtable.2) #19, !dbg !8006
  ret i1 %_0, !dbg !8008
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h1712cafb487c0813E"(ptr align 8 %self) unnamed_addr #1 !dbg !8009 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8012, !DIExpression(), !8013)
  %_0.0 = load i64, ptr %self, align 8, !dbg !8013
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8013
  %_0.1 = load i64, ptr %0, align 8, !dbg !8013
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !8014
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !8014
  ret { i64, i64 } %2, !dbg !8014
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h477141b2a8c92ce7E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 !dbg !8015 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %__self_0 = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8020, !DIExpression(), !8024)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !8021, !DIExpression(), !8024)
    #dbg_declare(ptr %__self_0, !8022, !DIExpression(), !8025)
  %0 = load i8, ptr %self, align 1, !dbg !8024
  %1 = trunc i8 %0 to i1, !dbg !8024
  %_3 = zext i1 %1 to i64, !dbg !8024
  %2 = icmp eq i64 %_3, 0, !dbg !8024
  br i1 %2, label %bb3, label %bb2, !dbg !8024

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h7692d295d2a10118E(ptr align 8 %f, ptr align 1 @alloc_37d2e53432a03a1f90b3e7253015eaf9, i64 4) #19, !dbg !8024
  %4 = zext i1 %3 to i8, !dbg !8024
  store i8 %4, ptr %_0, align 1, !dbg !8024
  br label %bb4, !dbg !8024

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 1, !dbg !8026
  store ptr %5, ptr %__self_0, align 8, !dbg !8026
; call core::fmt::Formatter::debug_tuple_field1_finish
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h726b5c23733a7025E(ptr align 8 %f, ptr align 1 @alloc_9535bf4c204f3eb9b19ec2c83e446e52, i64 4, ptr align 1 %__self_0, ptr align 8 @vtable.4) #19, !dbg !8027
  %7 = zext i1 %6 to i8, !dbg !8027
  store i8 %7, ptr %_0, align 1, !dbg !8027
  br label %bb4, !dbg !8027

bb4:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %_0, align 1, !dbg !8028
  %9 = trunc i8 %8 to i1, !dbg !8028
  ret i1 %9, !dbg !8028

bb1:                                              ; No predecessors!
  unreachable, !dbg !8024
}

; <&core::ffi::c_str::CStr as core::default::Default>::default
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h7e52163d12fc97c8E"() unnamed_addr #1 !dbg !8029 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  store ptr @alloc_914b2c69d7eca30497b9feaf15ac92f1, ptr %self.dbg.spill.i, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2260, !DIExpression(), !8033)
; call core::ffi::c_str::CStr::from_ptr
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17heec05a6e074ea783E(ptr @alloc_914b2c69d7eca30497b9feaf15ac92f1) #19, !dbg !8035
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !8035
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !8035
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !8036
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !8036
  ret { ptr, i64 } %3, !dbg !8036
}

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hae95477830e486b2E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #1 !dbg !8037 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8043, !DIExpression(), !8045)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !8044, !DIExpression(), !8045)
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h7692d295d2a10118E(ptr align 8 %f, ptr align 1 @alloc_477d6fd19596379e27b9bd4358550877, i64 11) #19, !dbg !8045
  ret i1 %_0, !dbg !8046
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !8047 {
start:
  %r.dbg.spill = alloca [8 x i8], align 8
  %l.dbg.spill = alloca [8 x i8], align 8
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8053, !DIExpression(), !8058)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !8054, !DIExpression(), !8059)
  store ptr %self, ptr %_3, align 8, !dbg !8060
  %0 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8060
  store ptr %other, ptr %0, align 8, !dbg !8060
  %_9 = load ptr, ptr %_3, align 8, !dbg !8060
  %_6 = load i64, ptr %_9, align 8, !dbg !8060
  %1 = icmp eq i64 %_6, 0, !dbg !8061
  br i1 %1, label %bb3, label %bb2, !dbg !8061

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8060
  %_11 = load ptr, ptr %2, align 8, !dbg !8060
  %_5 = load i64, ptr %_11, align 8, !dbg !8060
  %3 = icmp eq i64 %_5, 0, !dbg !8061
  br i1 %3, label %bb4, label %bb5, !dbg !8061

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8060
  %_10 = load ptr, ptr %4, align 8, !dbg !8060
  %_4 = load i64, ptr %_10, align 8, !dbg !8060
  %5 = icmp eq i64 %_4, 0, !dbg !8061
  br i1 %5, label %bb6, label %bb7, !dbg !8061

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1, !dbg !8062
  br label %bb8, !dbg !8062

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1, !dbg !8063
  br label %bb8, !dbg !8063

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  %6 = load i8, ptr %_0, align 1, !dbg !8064
  %7 = trunc i8 %6 to i1, !dbg !8064
  ret i1 %7, !dbg !8064

bb6:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !8065
  br label %bb8, !dbg !8065

bb7:                                              ; preds = %bb2
  %_12 = load ptr, ptr %_3, align 8, !dbg !8066
  %l = getelementptr inbounds i8, ptr %_12, i64 8, !dbg !8066
  store ptr %l, ptr %l.dbg.spill, align 8, !dbg !8066
    #dbg_declare(ptr %l.dbg.spill, !8055, !DIExpression(), !8067)
  %8 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8068
  %_13 = load ptr, ptr %8, align 8, !dbg !8068
  %r = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !8068
  store ptr %r, ptr %r.dbg.spill, align 8, !dbg !8068
    #dbg_declare(ptr %r.dbg.spill, !8057, !DIExpression(), !8069)
; call core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
  %9 = call zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h614f779dfc56329fE"(ptr align 8 %l, ptr align 8 %r) #19, !dbg !8070
  %10 = zext i1 %9 to i8, !dbg !8070
  store i8 %10, ptr %_0, align 1, !dbg !8070
  br label %bb8, !dbg !8070

bb1:                                              ; No predecessors!
  unreachable, !dbg !8060
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hcb1184b3e526b36cE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #1 !dbg !8071 {
start:
  %r.dbg.spill = alloca [8 x i8], align 8
  %l.dbg.spill = alloca [8 x i8], align 8
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8075, !DIExpression(), !8080)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !8076, !DIExpression(), !8081)
  store ptr %self, ptr %_3, align 8, !dbg !8082
  %0 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8082
  store ptr %other, ptr %0, align 8, !dbg !8082
  %_9 = load ptr, ptr %_3, align 8, !dbg !8082
  %1 = load i8, ptr %_9, align 1, !dbg !8082
  %2 = trunc i8 %1 to i1, !dbg !8082
  %_6 = zext i1 %2 to i64, !dbg !8082
  %3 = icmp eq i64 %_6, 0, !dbg !8083
  br i1 %3, label %bb3, label %bb2, !dbg !8083

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8082
  %_11 = load ptr, ptr %4, align 8, !dbg !8082
  %5 = load i8, ptr %_11, align 1, !dbg !8082
  %6 = trunc i8 %5 to i1, !dbg !8082
  %_5 = zext i1 %6 to i64, !dbg !8082
  %7 = icmp eq i64 %_5, 0, !dbg !8083
  br i1 %7, label %bb4, label %bb5, !dbg !8083

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8082
  %_10 = load ptr, ptr %8, align 8, !dbg !8082
  %9 = load i8, ptr %_10, align 1, !dbg !8082
  %10 = trunc i8 %9 to i1, !dbg !8082
  %_4 = zext i1 %10 to i64, !dbg !8082
  %11 = icmp eq i64 %_4, 0, !dbg !8083
  br i1 %11, label %bb6, label %bb7, !dbg !8083

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1, !dbg !8084
  br label %bb8, !dbg !8084

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1, !dbg !8085
  br label %bb8, !dbg !8085

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  %12 = load i8, ptr %_0, align 1, !dbg !8086
  %13 = trunc i8 %12 to i1, !dbg !8086
  ret i1 %13, !dbg !8086

bb6:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !8087
  br label %bb8, !dbg !8087

bb7:                                              ; preds = %bb2
  %_12 = load ptr, ptr %_3, align 8, !dbg !8088
  %l = getelementptr inbounds i8, ptr %_12, i64 1, !dbg !8088
  store ptr %l, ptr %l.dbg.spill, align 8, !dbg !8088
    #dbg_declare(ptr %l.dbg.spill, !8077, !DIExpression(), !8089)
  %14 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8090
  %_13 = load ptr, ptr %14, align 8, !dbg !8090
  %r = getelementptr inbounds i8, ptr %_13, i64 1, !dbg !8090
  store ptr %r, ptr %r.dbg.spill, align 8, !dbg !8090
    #dbg_declare(ptr %r.dbg.spill, !8079, !DIExpression(), !8091)
; call core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
  %15 = call zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h32b2d2bf6c473d80E"(ptr align 1 %l, ptr align 1 %r) #19, !dbg !8092
  %16 = zext i1 %15 to i8, !dbg !8092
  store i8 %16, ptr %_0, align 1, !dbg !8092
  br label %bb8, !dbg !8092

bb1:                                              ; No predecessors!
  unreachable, !dbg !8082
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01da7c7a3271c7d8E"(ptr align 8 %self) unnamed_addr #1 !dbg !8093 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8099, !DIExpression(), !8100)
  %_2 = load ptr, ptr %self, align 8, !dbg !8101
; call <core::slice::iter::ArrayChunks<T,_> as core::iter::traits::iterator::Iterator>::next
  %_0 = call align 1 ptr @"_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e993169ed0301a1E"(ptr align 8 %_2) #19, !dbg !8101
  ret ptr %_0, !dbg !8102
}

; <&mut I as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4a215a4537c6396fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !8103 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8108, !DIExpression(), !8109)
  %_3 = load ptr, ptr %self, align 8, !dbg !8110
; call <core::slice::iter::ArrayChunks<T,_> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4f47c3f8dfce9377E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_3) #19, !dbg !8110
  ret void, !dbg !8111
}

; <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h339dd32b174ea071E"(ptr align 8 %self, ptr align 8 %args) unnamed_addr #1 !dbg !8112 {
start:
  %0 = alloca [48 x i8], align 8
  %s.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8116, !DIExpression(), !8122)
    #dbg_declare(ptr %args, !8117, !DIExpression(), !8123)
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i64 } @_ZN4core3fmt9Arguments23as_statically_known_str17h798a4b7fe9c92c9eE(ptr align 8 %args) #19, !dbg !8124
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !8124
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !8124
  store ptr %2, ptr %_3, align 8, !dbg !8124
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8124
  store i64 %3, ptr %4, align 8, !dbg !8124
  %5 = load ptr, ptr %_3, align 8, !dbg !8124
  %6 = ptrtoint ptr %5 to i64, !dbg !8124
  %7 = icmp eq i64 %6, 0, !dbg !8124
  %_5 = select i1 %7, i64 0, i64 1, !dbg !8124
  %8 = icmp eq i64 %_5, 1, !dbg !8125
  br i1 %8, label %bb2, label %bb3, !dbg !8125

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 8, !dbg !8126
  %9 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !8126
  %s.1 = load i64, ptr %9, align 8, !dbg !8126
  store ptr %s.0, ptr %s.dbg.spill, align 8, !dbg !8126
  %10 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8, !dbg !8126
  store i64 %s.1, ptr %10, align 8, !dbg !8126
    #dbg_declare(ptr %s.dbg.spill, !8118, !DIExpression(), !8126)
; call <alloc::string::String as core::fmt::Write>::write_str
  %11 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h6e6ff1aa33bbb4faE"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) #19, !dbg !8127
  %12 = zext i1 %11 to i8, !dbg !8127
  store i8 %12, ptr %_0, align 1, !dbg !8127
  br label %bb4, !dbg !8127

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %args, i64 48, i1 false), !dbg !8128
; call core::fmt::write
  %13 = call zeroext i1 @_ZN4core3fmt5write17h09f3fe8c6b03e28fE(ptr align 1 %self, ptr align 8 @vtable.5, ptr align 8 %0) #19, !dbg !8128
  %14 = zext i1 %13 to i8, !dbg !8128
  store i8 %14, ptr %_0, align 1, !dbg !8128
  br label %bb4, !dbg !8128

bb4:                                              ; preds = %bb3, %bb2
  %15 = load i8, ptr %_0, align 1, !dbg !8129
  %16 = trunc i8 %15 to i1, !dbg !8129
  ret i1 %16, !dbg !8129

bb5:                                              ; No predecessors!
  unreachable, !dbg !8130
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc3642c91affc8678E"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !8131 {
start:
  %ptr.dbg.spill1.i = alloca [8 x i8], align 8
  %index.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8136, !DIExpression(), !8138)
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !8137, !DIExpression(), !8139)
  br label %bb1, !dbg !8140

bb1:                                              ; preds = %start
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %slice.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !1178, !DIExpression(), !8142)
; call core::ptr::metadata::metadata
  %_0.i = call i64 @_ZN4core3ptr8metadata8metadata17h4d1dda34fb850d52E(ptr %slice.0, i64 %slice.1) #19, !dbg !8144
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check
  call void @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut18precondition_check17h613064db87a97d51E"(i64 %self, i64 %_0.i) #19, !dbg !8145
  br label %bb3, !dbg !8145

bb3:                                              ; preds = %bb1
  store ptr %slice.0, ptr %ptr.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i, i64 8
  store i64 %slice.1, ptr %2, align 8
    #dbg_declare(ptr %ptr.dbg.spill.i, !1206, !DIExpression(), !8146)
  store i64 %self, ptr %index.dbg.spill.i, align 8
    #dbg_declare(ptr %index.dbg.spill.i, !1211, !DIExpression(), !8148)
  store ptr %slice.0, ptr %ptr.dbg.spill1.i, align 8, !dbg !8149
    #dbg_declare(ptr %ptr.dbg.spill1.i, !1212, !DIExpression(), !8150)
  %_0.i1 = getelementptr inbounds i8, ptr %slice.0, i64 %self, !dbg !8151
  ret ptr %_0.i1, !dbg !8152
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut18precondition_check17h613064db87a97d51E"(i64 %this, i64 %len) unnamed_addr #1 !dbg !8153 {
start:
  %len.dbg.spill = alloca [8 x i8], align 8
  %this.dbg.spill = alloca [8 x i8], align 8
  store i64 %this, ptr %this.dbg.spill, align 8
    #dbg_declare(ptr %this.dbg.spill, !8156, !DIExpression(), !8158)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !8157, !DIExpression(), !8158)
  %_3 = icmp ult i64 %this, %len, !dbg !8159
  br i1 %_3, label %bb1, label %bb2, !dbg !8159

bb2:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1 @alloc_e96fb6e25c55edb0aec8b24d111f5d7f, i64 101) #20, !dbg !8161
  unreachable, !dbg !8161

bb1:                                              ; preds = %start
  ret void, !dbg !8162
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc3d86356b1301045E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !8163 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8169, !DIExpression(), !8171)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !8170, !DIExpression(), !8172)
  %_4 = load ptr, ptr %self, align 8, !dbg !8173
  store ptr %_4, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !8174, !DIExpression(), !8180)
  %_6 = load ptr, ptr %other, align 8, !dbg !8182
  store ptr %_6, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8174, !DIExpression(), !8183)
  %_0 = icmp eq ptr %_4, %_6, !dbg !8173
  ret i1 %_0, !dbg !8185
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf6d9364f72e8fa61E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !8186 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8191, !DIExpression(), !8193)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !8192, !DIExpression(), !8194)
  %_4 = load ptr, ptr %self, align 8, !dbg !8195
  store ptr %_4, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !3934, !DIExpression(), !8196)
  %_6 = load ptr, ptr %other, align 8, !dbg !8198
  store ptr %_6, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3934, !DIExpression(), !8199)
  %_0 = icmp eq ptr %_4, %_6, !dbg !8195
  ret i1 %_0, !dbg !8201
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf861ab500d54d4d9E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #1 !dbg !8202 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %other.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8206, !DIExpression(), !8208)
  store ptr %other, ptr %other.dbg.spill, align 8
    #dbg_declare(ptr %other.dbg.spill, !8207, !DIExpression(), !8209)
  %_4 = load ptr, ptr %self, align 8, !dbg !8210
  store ptr %_4, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !1341, !DIExpression(), !8211)
  %_6 = load ptr, ptr %other, align 8, !dbg !8213
  store ptr %_6, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !1341, !DIExpression(), !8214)
  %_0 = icmp eq ptr %_4, %_6, !dbg !8210
  ret i1 %_0, !dbg !8216
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hef41afcac3370099E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %output) unnamed_addr #1 !dbg !8217 {
start:
    #dbg_declare(ptr %output, !8222, !DIExpression(), !8223)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %output, i64 24, i1 false), !dbg !8224
  ret void, !dbg !8225
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18c5bbc23a0b879bE"(i64 %0) unnamed_addr #1 !dbg !8226 {
start:
  %e.dbg.spill = alloca [2 x i8], align 2
  %v.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [2 x i8], align 2
  %_0 = alloca [8 x i8], align 4
  %1 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 4
  store i64 %0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %self, ptr align 8 %1, i64 8, i1 false)
    #dbg_declare(ptr %self, !8246, !DIExpression(), !8251)
  %2 = load i16, ptr %self, align 4, !dbg !8252
  %_2 = zext i16 %2 to i64, !dbg !8252
  %3 = icmp eq i64 %_2, 0, !dbg !8253
  br i1 %3, label %bb3, label %bb2, !dbg !8253

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 4, !dbg !8254
  %v = load i32, ptr %4, align 4, !dbg !8254
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !8254
    #dbg_declare(ptr %v.dbg.spill, !8247, !DIExpression(), !8255)
  %5 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !8256
  store i32 %v, ptr %5, align 4, !dbg !8256
  store i16 0, ptr %_0, align 4, !dbg !8256
  br label %bb4, !dbg !8257

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 2, !dbg !8258
  %e = load i16, ptr %6, align 2, !dbg !8258
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !8258
    #dbg_declare(ptr %e.dbg.spill, !8249, !DIExpression(), !8259)
  store i16 %e, ptr %_5, align 2, !dbg !8260
  %7 = load i16, ptr %_5, align 2, !dbg !8261
  %8 = getelementptr inbounds i8, ptr %_0, i64 2, !dbg !8261
  store i16 %7, ptr %8, align 2, !dbg !8261
  store i16 1, ptr %_0, align 4, !dbg !8261
  br label %bb4, !dbg !8262

bb4:                                              ; preds = %bb2, %bb3
  %9 = load i64, ptr %_0, align 4, !dbg !8263
  ret i64 %9, !dbg !8263

bb1:                                              ; No predecessors!
  unreachable, !dbg !8252
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18fb6e52d80cd6e1E"(i64 %0, i64 %1) unnamed_addr #1 !dbg !8264 {
start:
  %e.dbg.spill = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [0 x i8], align 1
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !8283, !DIExpression(), !8288)
    #dbg_declare(ptr %v.dbg.spill, !8284, !DIExpression(), !8289)
  %3 = load i64, ptr %self, align 8, !dbg !8290
  %4 = icmp eq i64 %3, -9223372036854775807, !dbg !8290
  %_2 = select i1 %4, i64 0, i64 1, !dbg !8290
  %5 = icmp eq i64 %_2, 0, !dbg !8291
  br i1 %5, label %bb3, label %bb2, !dbg !8291

bb3:                                              ; preds = %start
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !8292
  br label %bb4, !dbg !8293

bb2:                                              ; preds = %start
  %e.0 = load i64, ptr %self, align 8, !dbg !8294
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8294
  %e.1 = load i64, ptr %6, align 8, !dbg !8294
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !8294
  %7 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !8294
  store i64 %e.1, ptr %7, align 8, !dbg !8294
    #dbg_declare(ptr %e.dbg.spill, !8286, !DIExpression(), !8295)
  store i64 %e.0, ptr %_5, align 8, !dbg !8296
  %8 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8296
  store i64 %e.1, ptr %8, align 8, !dbg !8296
  %9 = load i64, ptr %_5, align 8, !dbg !8297
  %10 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8297
  %11 = load i64, ptr %10, align 8, !dbg !8297
  store i64 %9, ptr %_0, align 8, !dbg !8297
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8297
  store i64 %11, ptr %12, align 8, !dbg !8297
  br label %bb4, !dbg !8298

bb4:                                              ; preds = %bb2, %bb3
  %13 = load i64, ptr %_0, align 8, !dbg !8299
  %14 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8299
  %15 = load i64, ptr %14, align 8, !dbg !8299
  %16 = insertvalue { i64, i64 } poison, i64 %13, 0, !dbg !8299
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !8299
  ret { i64, i64 } %17, !dbg !8299

bb1:                                              ; No predecessors!
  unreachable, !dbg !8290
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h540b4559420cf42fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8300 {
start:
  %e.dbg.spill = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !8319, !DIExpression(), !8324)
  %_2 = load i64, ptr %self, align 8, !dbg !8325
  %0 = icmp eq i64 %_2, 0, !dbg !8326
  br i1 %0, label %bb3, label %bb2, !dbg !8326

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8327
  %v.0 = load ptr, ptr %1, align 8, !dbg !8327
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !8327
  %v.1 = load i64, ptr %2, align 8, !dbg !8327
  store ptr %v.0, ptr %v.dbg.spill, align 8, !dbg !8327
  %3 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8, !dbg !8327
  store i64 %v.1, ptr %3, align 8, !dbg !8327
    #dbg_declare(ptr %v.dbg.spill, !8320, !DIExpression(), !8328)
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8329
  store ptr %v.0, ptr %4, align 8, !dbg !8329
  %5 = getelementptr inbounds i8, ptr %4, i64 8, !dbg !8329
  store i64 %v.1, ptr %5, align 8, !dbg !8329
  store i64 0, ptr %_0, align 8, !dbg !8329
  br label %bb4, !dbg !8330

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8331
  %e.0 = load i64, ptr %6, align 8, !dbg !8331
  %7 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !8331
  %e.1 = load i64, ptr %7, align 8, !dbg !8331
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !8331
  %8 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !8331
  store i64 %e.1, ptr %8, align 8, !dbg !8331
    #dbg_declare(ptr %e.dbg.spill, !8322, !DIExpression(), !8332)
  store i64 %e.0, ptr %_5, align 8, !dbg !8333
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8333
  store i64 %e.1, ptr %9, align 8, !dbg !8333
  %10 = load i64, ptr %_5, align 8, !dbg !8334
  %11 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8334
  %12 = load i64, ptr %11, align 8, !dbg !8334
  %13 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8334
  store i64 %10, ptr %13, align 8, !dbg !8334
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !8334
  store i64 %12, ptr %14, align 8, !dbg !8334
  store i64 1, ptr %_0, align 8, !dbg !8334
  br label %bb4, !dbg !8335

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !8336

bb1:                                              ; No predecessors!
  unreachable, !dbg !8325
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha6abec15a9835463E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8337 {
start:
  %e.dbg.spill = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !8356, !DIExpression(), !8361)
  %_2 = load i64, ptr %self, align 8, !dbg !8362
  %0 = icmp eq i64 %_2, 0, !dbg !8363
  br i1 %0, label %bb3, label %bb2, !dbg !8363

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8364
  %v.0 = load ptr, ptr %1, align 8, !dbg !8364
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !8364
  %v.1 = load i64, ptr %2, align 8, !dbg !8364
  store ptr %v.0, ptr %v.dbg.spill, align 8, !dbg !8364
  %3 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8, !dbg !8364
  store i64 %v.1, ptr %3, align 8, !dbg !8364
    #dbg_declare(ptr %v.dbg.spill, !8357, !DIExpression(), !8365)
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8366
  store ptr %v.0, ptr %4, align 8, !dbg !8366
  %5 = getelementptr inbounds i8, ptr %4, i64 8, !dbg !8366
  store i64 %v.1, ptr %5, align 8, !dbg !8366
  store i64 0, ptr %_0, align 8, !dbg !8366
  br label %bb4, !dbg !8367

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8368
  %e.0 = load i64, ptr %6, align 8, !dbg !8368
  %7 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !8368
  %e.1 = load i64, ptr %7, align 8, !dbg !8368
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !8368
  %8 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !8368
  store i64 %e.1, ptr %8, align 8, !dbg !8368
    #dbg_declare(ptr %e.dbg.spill, !8359, !DIExpression(), !8369)
  store i64 %e.0, ptr %_5, align 8, !dbg !8370
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8370
  store i64 %e.1, ptr %9, align 8, !dbg !8370
  %10 = load i64, ptr %_5, align 8, !dbg !8371
  %11 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8371
  %12 = load i64, ptr %11, align 8, !dbg !8371
  %13 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8371
  store i64 %10, ptr %13, align 8, !dbg !8371
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !8371
  store i64 %12, ptr %14, align 8, !dbg !8371
  store i64 1, ptr %_0, align 8, !dbg !8371
  br label %bb4, !dbg !8372

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !8373

bb1:                                              ; No predecessors!
  unreachable, !dbg !8362
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb510057ff3f0e937E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8374 {
start:
  %e.dbg.spill = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !8393, !DIExpression(), !8398)
  %0 = load i64, ptr %self, align 8, !dbg !8399
  %1 = icmp eq i64 %0, -9223372036854775807, !dbg !8399
  %_2 = select i1 %1, i64 0, i64 1, !dbg !8399
  %2 = icmp eq i64 %_2, 0, !dbg !8400
  br i1 %2, label %bb3, label %bb2, !dbg !8400

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8401
  %v = load i64, ptr %3, align 8, !dbg !8401
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !8401
    #dbg_declare(ptr %v.dbg.spill, !8394, !DIExpression(), !8402)
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8403
  store i64 %v, ptr %4, align 8, !dbg !8403
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !8403
  br label %bb4, !dbg !8404

bb2:                                              ; preds = %start
  %e.0 = load i64, ptr %self, align 8, !dbg !8405
  %5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8405
  %e.1 = load i64, ptr %5, align 8, !dbg !8405
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !8405
  %6 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !8405
  store i64 %e.1, ptr %6, align 8, !dbg !8405
    #dbg_declare(ptr %e.dbg.spill, !8396, !DIExpression(), !8406)
  store i64 %e.0, ptr %_5, align 8, !dbg !8407
  %7 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8407
  store i64 %e.1, ptr %7, align 8, !dbg !8407
  %8 = load i64, ptr %_5, align 8, !dbg !8408
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8408
  %10 = load i64, ptr %9, align 8, !dbg !8408
  store i64 %8, ptr %_0, align 8, !dbg !8408
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8408
  store i64 %10, ptr %11, align 8, !dbg !8408
  br label %bb4, !dbg !8409

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !8410

bb1:                                              ; No predecessors!
  unreachable, !dbg !8399
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb9c86ab250b103fbE"(ptr %0, i64 %1) unnamed_addr #1 !dbg !8411 {
start:
  %v.dbg.spill = alloca [16 x i8], align 8
  %e.dbg.spill = alloca [0 x i8], align 1
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !8430, !DIExpression(), !8435)
    #dbg_declare(ptr %e.dbg.spill, !8433, !DIExpression(), !8436)
  %3 = load ptr, ptr %self, align 8, !dbg !8437
  %4 = ptrtoint ptr %3 to i64, !dbg !8437
  %5 = icmp eq i64 %4, 0, !dbg !8437
  %_2 = select i1 %5, i64 1, i64 0, !dbg !8437
  %6 = icmp eq i64 %_2, 0, !dbg !8438
  br i1 %6, label %bb3, label %bb2, !dbg !8438

bb3:                                              ; preds = %start
  %v.0 = load ptr, ptr %self, align 8, !dbg !8439
  %7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8439
  %v.1 = load i64, ptr %7, align 8, !dbg !8439
  store ptr %v.0, ptr %v.dbg.spill, align 8, !dbg !8439
  %8 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8, !dbg !8439
  store i64 %v.1, ptr %8, align 8, !dbg !8439
    #dbg_declare(ptr %v.dbg.spill, !8431, !DIExpression(), !8440)
  store ptr %v.0, ptr %_0, align 8, !dbg !8441
  %9 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8441
  store i64 %v.1, ptr %9, align 8, !dbg !8441
  br label %bb4, !dbg !8442

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8, !dbg !8443
  br label %bb4, !dbg !8444

bb4:                                              ; preds = %bb2, %bb3
  %10 = load ptr, ptr %_0, align 8, !dbg !8445
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8445
  %12 = load i64, ptr %11, align 8, !dbg !8445
  %13 = insertvalue { ptr, i64 } poison, ptr %10, 0, !dbg !8445
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1, !dbg !8445
  ret { ptr, i64 } %14, !dbg !8445

bb1:                                              ; No predecessors!
  unreachable, !dbg !8437
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc11776b59597b879E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8446 {
start:
  %e.dbg.spill = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
    #dbg_declare(ptr %self, !8465, !DIExpression(), !8470)
  %_2 = load i64, ptr %self, align 8, !dbg !8471
  %0 = icmp eq i64 %_2, 0, !dbg !8472
  br i1 %0, label %bb3, label %bb2, !dbg !8472

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8473
  %v.0 = load i64, ptr %1, align 8, !dbg !8473
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !8473
  %v.1 = load i64, ptr %2, align 8, !dbg !8473
  store i64 %v.0, ptr %v.dbg.spill, align 8, !dbg !8473
  %3 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8, !dbg !8473
  store i64 %v.1, ptr %3, align 8, !dbg !8473
    #dbg_declare(ptr %v.dbg.spill, !8466, !DIExpression(), !8474)
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8475
  store i64 %v.0, ptr %4, align 8, !dbg !8475
  %5 = getelementptr inbounds i8, ptr %4, i64 8, !dbg !8475
  store i64 %v.1, ptr %5, align 8, !dbg !8475
  store i64 0, ptr %_0, align 8, !dbg !8475
  br label %bb4, !dbg !8476

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8477
  %e.0 = load i64, ptr %6, align 8, !dbg !8477
  %7 = getelementptr inbounds i8, ptr %6, i64 8, !dbg !8477
  %e.1 = load i64, ptr %7, align 8, !dbg !8477
  store i64 %e.0, ptr %e.dbg.spill, align 8, !dbg !8477
  %8 = getelementptr inbounds i8, ptr %e.dbg.spill, i64 8, !dbg !8477
  store i64 %e.1, ptr %8, align 8, !dbg !8477
    #dbg_declare(ptr %e.dbg.spill, !8468, !DIExpression(), !8478)
  store i64 %e.0, ptr %_5, align 8, !dbg !8479
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8479
  store i64 %e.1, ptr %9, align 8, !dbg !8479
  %10 = load i64, ptr %_5, align 8, !dbg !8480
  %11 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !8480
  %12 = load i64, ptr %11, align 8, !dbg !8480
  %13 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8480
  store i64 %10, ptr %13, align 8, !dbg !8480
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !8480
  store i64 %12, ptr %14, align 8, !dbg !8480
  store i64 1, ptr %_0, align 8, !dbg !8480
  br label %bb4, !dbg !8481

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !8482

bb1:                                              ; No predecessors!
  unreachable, !dbg !8471
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd0fa82c3a1e0f0c2E"(ptr %0) unnamed_addr #1 !dbg !8483 {
start:
  %v.dbg.spill = alloca [8 x i8], align 8
  %e.dbg.spill = alloca [0 x i8], align 1
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %self = alloca [8 x i8], align 8
  store ptr %0, ptr %self, align 8
    #dbg_declare(ptr %self, !8502, !DIExpression(), !8507)
    #dbg_declare(ptr %e.dbg.spill, !8505, !DIExpression(), !8508)
  %1 = load ptr, ptr %self, align 8, !dbg !8509
  %2 = ptrtoint ptr %1 to i64, !dbg !8509
  %3 = icmp eq i64 %2, 0, !dbg !8509
  %_2 = select i1 %3, i64 1, i64 0, !dbg !8509
  %4 = icmp eq i64 %_2, 0, !dbg !8510
  br i1 %4, label %bb3, label %bb2, !dbg !8510

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 8, !dbg !8511
  store ptr %v, ptr %v.dbg.spill, align 8, !dbg !8511
    #dbg_declare(ptr %v.dbg.spill, !8503, !DIExpression(), !8512)
  store ptr %v, ptr %_0, align 8, !dbg !8513
  br label %bb4, !dbg !8514

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8, !dbg !8515
  br label %bb4, !dbg !8516

bb4:                                              ; preds = %bb2, %bb3
  %5 = load ptr, ptr %_0, align 8, !dbg !8517
  ret ptr %5, !dbg !8517

bb1:                                              ; No predecessors!
  unreachable, !dbg !8509
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7d4ca64fd8e14bdbE"(ptr align 8 %self) unnamed_addr #1 !dbg !8518 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8523, !DIExpression(), !8524)
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hd2852aacb5e6ed22E(ptr align 8 %self) #19, !dbg !8525
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !8525
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !8525
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h55013ac97e6ade84E"(i32 %_2.0, i32 %_2.1) #19, !dbg !8525
  ret i32 %_0, !dbg !8526
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbd90cf42bfbc2474E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8527 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %end.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %_0.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8531, !DIExpression(), !8534)
  store ptr %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8535, !DIExpression(), !8546)
  %_6.i = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8548
  store ptr %_6.i, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !8549, !DIExpression(), !8558)
  %end.i = load ptr, ptr %_6.i, align 8, !dbg !8560
  store ptr %end.i, ptr %end.dbg.spill.i, align 8, !dbg !8560
    #dbg_declare(ptr %end.dbg.spill.i, !8544, !DIExpression(), !8561)
  %_7.i = load ptr, ptr %self, align 8, !dbg !8562
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hbdfc1a1cb4709f58E"(ptr %end.i, ptr %_7.i) #19, !dbg !8563
  store i64 %0, ptr %_0.i, align 8, !dbg !8563
  %1 = load i64, ptr %_0.i, align 8, !dbg !8564
  store i64 %1, ptr %len.dbg.spill, align 8, !dbg !8565
    #dbg_declare(ptr %len.dbg.spill, !8532, !DIExpression(), !8566)
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1, i64 3), !dbg !8567
  %_6.0 = extractvalue { i64, i1 } %2, 0, !dbg !8567
  %_6.1 = extractvalue { i64, i1 } %2, 1, !dbg !8567
  br i1 %_6.1, label %panic, label %bb2, !dbg !8567

bb2:                                              ; preds = %start
  %_4 = udiv i64 %_6.0, 4, !dbg !8567
  %3 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !8568
  store i64 %1, ptr %3, align 8, !dbg !8568
  store i64 1, ptr %_8, align 8, !dbg !8568
  store i64 %_4, ptr %_0, align 8, !dbg !8569
  %4 = load i64, ptr %_8, align 8, !dbg !8569
  %5 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !8569
  %6 = load i64, ptr %5, align 8, !dbg !8569
  %7 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8569
  store i64 %4, ptr %7, align 8, !dbg !8569
  %8 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !8569
  store i64 %6, ptr %8, align 8, !dbg !8569
  ret void, !dbg !8570

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_ecd8f61dc9800309a27d18ff5093cd34) #20, !dbg !8567
  unreachable, !dbg !8567
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc89fef062066f653E"(ptr align 8 %self) unnamed_addr #1 !dbg !8571 {
start:
  %self.dbg.spill.i10 = alloca [8 x i8], align 8
  %self.dbg.spill.i9 = alloca [8 x i8], align 8
  %end.dbg.spill.i2 = alloca [8 x i8], align 8
  %self.dbg.spill.i3 = alloca [8 x i8], align 8
  %_0.i4 = alloca [8 x i8], align 8
  %end.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %_0.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %index.dbg.spill = alloca [8 x i8], align 8
  %ch.dbg.spill = alloca [4 x i8], align 4
  %pre_len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [4 x i8], align 4
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8594, !DIExpression(), !8603)
  store ptr %self, ptr %self.dbg.spill.i3, align 8
    #dbg_declare(ptr %self.dbg.spill.i3, !8535, !DIExpression(), !8604)
  %_6.i5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8606
  store ptr %_6.i5, ptr %self.dbg.spill.i9, align 8
    #dbg_declare(ptr %self.dbg.spill.i9, !8549, !DIExpression(), !8607)
  %end.i7 = load ptr, ptr %_6.i5, align 8, !dbg !8609
  store ptr %end.i7, ptr %end.dbg.spill.i2, align 8, !dbg !8609
    #dbg_declare(ptr %end.dbg.spill.i2, !8544, !DIExpression(), !8610)
  %_7.i8 = load ptr, ptr %self, align 8, !dbg !8611
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hbdfc1a1cb4709f58E"(ptr %end.i7, ptr %_7.i8) #19, !dbg !8612
  store i64 %0, ptr %_0.i4, align 8, !dbg !8612
  %1 = load i64, ptr %_0.i4, align 8, !dbg !8613
  store i64 %1, ptr %pre_len.dbg.spill, align 8, !dbg !8614
    #dbg_declare(ptr %pre_len.dbg.spill, !8595, !DIExpression(), !8615)
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %2 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7d4ca64fd8e14bdbE"(ptr align 8 %self) #19, !dbg !8616
  store i32 %2, ptr %_4, align 4, !dbg !8616
  %3 = load i32, ptr %_4, align 4, !dbg !8616
  %4 = icmp eq i32 %3, 1114112, !dbg !8616
  %_6 = select i1 %4, i64 0, i64 1, !dbg !8616
  %5 = icmp eq i64 %_6, 0, !dbg !8617
  br i1 %5, label %bb5, label %bb4, !dbg !8617

bb5:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8618
  store i32 1114112, ptr %6, align 8, !dbg !8618
  br label %bb9, !dbg !8618

bb4:                                              ; preds = %start
  %ch = load i32, ptr %_4, align 4, !dbg !8619
  store i32 %ch, ptr %ch.dbg.spill, align 4, !dbg !8619
    #dbg_declare(ptr %ch.dbg.spill, !8597, !DIExpression(), !8620)
  %7 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !8621
  %index = load i64, ptr %7, align 8, !dbg !8621
  store i64 %index, ptr %index.dbg.spill, align 8, !dbg !8621
    #dbg_declare(ptr %index.dbg.spill, !8599, !DIExpression(), !8622)
  store ptr %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8535, !DIExpression(), !8623)
  %_6.i = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8625
  store ptr %_6.i, ptr %self.dbg.spill.i10, align 8
    #dbg_declare(ptr %self.dbg.spill.i10, !8549, !DIExpression(), !8626)
  %end.i = load ptr, ptr %_6.i, align 8, !dbg !8628
  store ptr %end.i, ptr %end.dbg.spill.i, align 8, !dbg !8628
    #dbg_declare(ptr %end.dbg.spill.i, !8544, !DIExpression(), !8629)
  %_7.i = load ptr, ptr %self, align 8, !dbg !8630
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %8 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hbdfc1a1cb4709f58E"(ptr %end.i, ptr %_7.i) #19, !dbg !8631
  store i64 %8, ptr %_0.i, align 8, !dbg !8631
  %9 = load i64, ptr %_0.i, align 8, !dbg !8632
  store i64 %9, ptr %len.dbg.spill, align 8, !dbg !8633
    #dbg_declare(ptr %len.dbg.spill, !8601, !DIExpression(), !8634)
  %_12.0 = sub i64 %1, %9, !dbg !8635
  %_12.1 = icmp ult i64 %1, %9, !dbg !8635
  br i1 %_12.1, label %panic, label %bb7, !dbg !8635

bb9:                                              ; preds = %bb8, %bb5
  %10 = load i64, ptr %_0, align 8, !dbg !8636
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8636
  %12 = load i32, ptr %11, align 8, !dbg !8636
  %13 = insertvalue { i64, i32 } poison, i64 %10, 0, !dbg !8636
  %14 = insertvalue { i64, i32 } %13, i32 %12, 1, !dbg !8636
  ret { i64, i32 } %14, !dbg !8636

bb7:                                              ; preds = %bb4
  %15 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !8637
  %16 = load i64, ptr %15, align 8, !dbg !8637
  %17 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %16, i64 %_12.0), !dbg !8637
  %_13.0 = extractvalue { i64, i1 } %17, 0, !dbg !8637
  %_13.1 = extractvalue { i64, i1 } %17, 1, !dbg !8637
  br i1 %_13.1, label %panic1, label %bb8, !dbg !8637

panic:                                            ; preds = %bb4
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_1aa971d962b1dc94cbc372b55496a1bd) #20, !dbg !8635
  unreachable, !dbg !8635

bb8:                                              ; preds = %bb7
  %18 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !8637
  store i64 %_13.0, ptr %18, align 8, !dbg !8637
  store i64 %index, ptr %_0, align 8, !dbg !8638
  %19 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8638
  store i32 %ch, ptr %19, align 8, !dbg !8638
  br label %bb9, !dbg !8639

panic1:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_a65110618077034d15ace85ff0e4cec7) #20, !dbg !8637
  unreachable, !dbg !8637

bb3:                                              ; No predecessors!
  unreachable, !dbg !8616
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&T>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN90_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17h311ad2ec743dfa74E"(ptr align 1 %r.0, i64 %r.1) unnamed_addr #1 !dbg !8640 {
start:
  %r.dbg.spill = alloca [16 x i8], align 8
  store ptr %r.0, ptr %r.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i64 8
  store i64 %r.1, ptr %0, align 8
    #dbg_declare(ptr %r.dbg.spill, !8643, !DIExpression(), !8644)
; call core::ptr::non_null::NonNull<T>::from_ref
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17ha943e422435483a1E"(ptr align 1 %r.0, i64 %r.1) #19, !dbg !8645
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !8645
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !8645
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !8646
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !8646
  ret { ptr, i64 } %3, !dbg !8646
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&T>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN90_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hcdebf8941a0d2022E"(ptr align 1 %r.0, i64 %r.1) unnamed_addr #1 !dbg !8647 {
start:
  %r.dbg.spill = alloca [16 x i8], align 8
  store ptr %r.0, ptr %r.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i64 8
  store i64 %r.1, ptr %0, align 8
    #dbg_declare(ptr %r.dbg.spill, !8649, !DIExpression(), !8650)
; call core::ptr::non_null::NonNull<T>::from_ref
  %1 = call { ptr, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h77f7fcff4f678f3eE"(ptr align 1 %r.0, i64 %r.1) #19, !dbg !8651
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !8651
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !8651
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !8652
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !8652
  ret { ptr, i64 } %3, !dbg !8652
}

; <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound
; Function Attrs: noredzone nounwind
define dso_local { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17hcbc0262d8bbed73eE"(ptr align 8 %self) unnamed_addr #0 !dbg !8653 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8677, !DIExpression(), !8678)
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8679
  store ptr %self, ptr %0, align 8, !dbg !8679
  store i64 0, ptr %_0, align 8, !dbg !8679
  %1 = load i64, ptr %_0, align 8, !dbg !8680
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8680
  %3 = load ptr, ptr %2, align 8, !dbg !8680
  %4 = insertvalue { i64, ptr } poison, i64 %1, 0, !dbg !8680
  %5 = insertvalue { i64, ptr } %4, ptr %3, 1, !dbg !8680
  ret { i64, ptr } %5, !dbg !8680
}

; <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound
; Function Attrs: noredzone nounwind
define dso_local { i64, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17he67463925f07313eE"(ptr align 8 %self) unnamed_addr #0 !dbg !8681 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8683, !DIExpression(), !8684)
  %_2 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8685
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8686
  store ptr %_2, ptr %0, align 8, !dbg !8686
  store i64 1, ptr %_0, align 8, !dbg !8686
  %1 = load i64, ptr %_0, align 8, !dbg !8687
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8687
  %3 = load ptr, ptr %2, align 8, !dbg !8687
  %4 = insertvalue { i64, ptr } poison, i64 %1, 0, !dbg !8687
  %5 = insertvalue { i64, ptr } %4, ptr %3, 1, !dbg !8687
  ret { i64, ptr } %5, !dbg !8687
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9fbe9567f08afa6bE"(ptr %0, ptr %1, i64 %init) unnamed_addr #1 !dbg !8688 {
start:
  %self.dbg.spill.i7 = alloca [8 x i8], align 8
  %self.dbg.spill.i6 = alloca [8 x i8], align 8
  %self.dbg.spill.i5 = alloca [8 x i8], align 8
  %self.dbg.spill.i4 = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i2 = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %init.dbg.spill = alloca [8 x i8], align 8
  %len = alloca [8 x i8], align 8
  %i = alloca [8 x i8], align 8
  %acc = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  %f = alloca [0 x i8], align 1
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %2, align 8
    #dbg_declare(ptr %self, !8693, !DIExpression(), !8712)
  store i64 %init, ptr %init.dbg.spill, align 8
    #dbg_declare(ptr %init.dbg.spill, !8694, !DIExpression(), !8713)
    #dbg_declare(ptr %f, !8695, !DIExpression(), !8714)
    #dbg_declare(ptr %end, !8698, !DIExpression(), !8715)
    #dbg_declare(ptr %acc, !8700, !DIExpression(), !8716)
    #dbg_declare(ptr %i, !8702, !DIExpression(), !8717)
    #dbg_declare(ptr %len, !8704, !DIExpression(), !8718)
  br label %bb3, !dbg !8719

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8720
  store ptr %_9, ptr %self.dbg.spill.i7, align 8
    #dbg_declare(ptr %self.dbg.spill.i7, !8721, !DIExpression(), !8731)
  %3 = load ptr, ptr %_9, align 8, !dbg !8733
  store ptr %3, ptr %end, align 8, !dbg !8733
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %4 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc3d86356b1301045E"(ptr align 8 %self, ptr align 8 %end) #19, !dbg !8734
  %5 = zext i1 %4 to i8, !dbg !8734
  store i8 %5, ptr %_4, align 1, !dbg !8734
  br label %bb5, !dbg !8734

bb5:                                              ; preds = %bb3
  %6 = load i8, ptr %_4, align 1, !dbg !8735
  %7 = trunc i8 %6 to i1, !dbg !8735
  br i1 %7, label %bb6, label %bb7, !dbg !8735

bb7:                                              ; preds = %bb5
  store i64 %init, ptr %acc, align 8, !dbg !8736
  store i64 0, ptr %i, align 8, !dbg !8737
  br label %bb9, !dbg !8738

bb6:                                              ; preds = %bb5
  store i64 %init, ptr %_0, align 8, !dbg !8739
  br label %bb18, !dbg !8740

bb9:                                              ; preds = %bb7
  %_19 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8741
  store ptr %_19, ptr %self.dbg.spill.i6, align 8
    #dbg_declare(ptr %self.dbg.spill.i6, !8721, !DIExpression(), !8742)
  %end1 = load ptr, ptr %_19, align 8, !dbg !8744
  store ptr %end1, ptr %end.dbg.spill, align 8, !dbg !8744
    #dbg_declare(ptr %end.dbg.spill, !8708, !DIExpression(), !8745)
  %_20 = load ptr, ptr %self, align 8, !dbg !8746
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %8 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h184b0c10dbb2f6e5E"(ptr %end1, ptr %_20) #19, !dbg !8747
  store i64 %8, ptr %len, align 8, !dbg !8747
  br label %bb12, !dbg !8747

bb12:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit", %bb9
  %_24 = load i64, ptr %acc, align 8, !dbg !8748
  %_28 = load ptr, ptr %self, align 8, !dbg !8749
  %_29 = load i64, ptr %i, align 8, !dbg !8750
  store ptr %_28, ptr %self.dbg.spill.i2, align 8
    #dbg_declare(ptr %self.dbg.spill.i2, !8751, !DIExpression(), !8758)
  store i64 %_29, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !8757, !DIExpression(), !8760)
  store ptr %_28, ptr %self.dbg.spill.i4, align 8
    #dbg_declare(ptr %self.dbg.spill.i4, !8174, !DIExpression(), !8761)
  %_3.i3 = getelementptr inbounds { ptr, i64 }, ptr %_28, i64 %_29, !dbg !8763
  store ptr %_3.i3, ptr %self.dbg.spill.i5, align 8
    #dbg_declare(ptr %self.dbg.spill.i5, !8174, !DIExpression(), !8764)
; call core::iter::adapters::map::map_fold::{{closure}}
  %_21 = call i64 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hebb157982b8f5c41E"(ptr align 1 %f, i64 %_24, ptr align 8 %_3.i3) #19, !dbg !8766
  store i64 %_21, ptr %acc, align 8, !dbg !8767
  %_31 = load i64, ptr %i, align 8, !dbg !8768
  store i64 %_31, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8769, !DIExpression(), !8773)
  store i64 1, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !8772, !DIExpression(), !8775)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !8776
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit", !dbg !8776

bb2.i:                                            ; preds = %bb12
; call core::num::<impl usize>::unchecked_add::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h90ef0525d3a3b7c6E"(i64 %_31, i64 1) #19, !dbg !8778
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit", !dbg !8778

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit": ; preds = %bb12, %bb2.i
  %_0.i = add nuw i64 %_31, 1, !dbg !8779
  store i64 %_0.i, ptr %i, align 8, !dbg !8780
  %_33 = load i64, ptr %i, align 8, !dbg !8781
  %_34 = load i64, ptr %len, align 8, !dbg !8782
  %_32 = icmp eq i64 %_33, %_34, !dbg !8781
  br i1 %_32, label %bb17, label %bb12, !dbg !8781

bb17:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit"
  %9 = load i64, ptr %acc, align 8, !dbg !8783
  store i64 %9, ptr %_0, align 8, !dbg !8783
  br label %bb18, !dbg !8740

bb18:                                             ; preds = %bb6, %bb17
  %10 = load i64, ptr %_0, align 8, !dbg !8784
  ret i64 %10, !dbg !8784

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable

bb10:                                             ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint noredzone nounwind
define dso_local i8 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17ha17c27d0cf9e4d87E"(ptr %0, ptr %1, i8 zeroext %init) unnamed_addr #1 !dbg !8785 {
start:
  %self.dbg.spill.i7 = alloca [8 x i8], align 8
  %self.dbg.spill.i6 = alloca [8 x i8], align 8
  %self.dbg.spill.i5 = alloca [8 x i8], align 8
  %self.dbg.spill.i4 = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i2 = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %init.dbg.spill = alloca [1 x i8], align 1
  %len = alloca [8 x i8], align 8
  %i = alloca [8 x i8], align 8
  %acc = alloca [1 x i8], align 1
  %end = alloca [8 x i8], align 8
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  %self = alloca [16 x i8], align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %2, align 8
    #dbg_declare(ptr %self, !8789, !DIExpression(), !8808)
  store i8 %init, ptr %init.dbg.spill, align 1
    #dbg_declare(ptr %init.dbg.spill, !8790, !DIExpression(), !8809)
    #dbg_declare(ptr %f, !8791, !DIExpression(), !8810)
    #dbg_declare(ptr %end, !8794, !DIExpression(), !8811)
    #dbg_declare(ptr %acc, !8796, !DIExpression(), !8812)
    #dbg_declare(ptr %i, !8798, !DIExpression(), !8813)
    #dbg_declare(ptr %len, !8800, !DIExpression(), !8814)
  br label %bb3, !dbg !8815

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8816
  store ptr %_9, ptr %self.dbg.spill.i7, align 8
    #dbg_declare(ptr %self.dbg.spill.i7, !8817, !DIExpression(), !8827)
  %3 = load ptr, ptr %_9, align 8, !dbg !8829
  store ptr %3, ptr %end, align 8, !dbg !8829
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %4 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf6d9364f72e8fa61E"(ptr align 8 %self, ptr align 8 %end) #19, !dbg !8830
  %5 = zext i1 %4 to i8, !dbg !8830
  store i8 %5, ptr %_4, align 1, !dbg !8830
  br label %bb5, !dbg !8830

bb5:                                              ; preds = %bb3
  %6 = load i8, ptr %_4, align 1, !dbg !8831
  %7 = trunc i8 %6 to i1, !dbg !8831
  br i1 %7, label %bb6, label %bb7, !dbg !8831

bb7:                                              ; preds = %bb5
  store i8 %init, ptr %acc, align 1, !dbg !8832
  store i64 0, ptr %i, align 8, !dbg !8833
  br label %bb9, !dbg !8834

bb6:                                              ; preds = %bb5
  store i8 %init, ptr %_0, align 1, !dbg !8835
  br label %bb18, !dbg !8836

bb9:                                              ; preds = %bb7
  %_19 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8837
  store ptr %_19, ptr %self.dbg.spill.i6, align 8
    #dbg_declare(ptr %self.dbg.spill.i6, !8817, !DIExpression(), !8838)
  %end1 = load ptr, ptr %_19, align 8, !dbg !8840
  store ptr %end1, ptr %end.dbg.spill, align 8, !dbg !8840
    #dbg_declare(ptr %end.dbg.spill, !8804, !DIExpression(), !8841)
  %_20 = load ptr, ptr %self, align 8, !dbg !8842
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %8 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h468fa7823ca4adccE"(ptr %end1, ptr %_20) #19, !dbg !8843
  store i64 %8, ptr %len, align 8, !dbg !8843
  br label %bb12, !dbg !8843

bb12:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit", %bb9
  %_24 = load i8, ptr %acc, align 1, !dbg !8844
  %_28 = load ptr, ptr %self, align 8, !dbg !8845
  %_29 = load i64, ptr %i, align 8, !dbg !8846
  store ptr %_28, ptr %self.dbg.spill.i2, align 8
    #dbg_declare(ptr %self.dbg.spill.i2, !8847, !DIExpression(), !8854)
  store i64 %_29, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !8853, !DIExpression(), !8856)
  store ptr %_28, ptr %self.dbg.spill.i4, align 8
    #dbg_declare(ptr %self.dbg.spill.i4, !3934, !DIExpression(), !8857)
  %_3.i3 = getelementptr inbounds i8, ptr %_28, i64 %_29, !dbg !8859
  store ptr %_3.i3, ptr %self.dbg.spill.i5, align 8
    #dbg_declare(ptr %self.dbg.spill.i5, !3934, !DIExpression(), !8860)
; call core::iter::adapters::map::map_fold::{{closure}}
  %_21 = call i8 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd0380c8633060cd6E"(ptr align 1 %f, i8 zeroext %_24, ptr align 1 %_3.i3) #19, !dbg !8862
  store i8 %_21, ptr %acc, align 1, !dbg !8863
  %_31 = load i64, ptr %i, align 8, !dbg !8864
  store i64 %_31, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8769, !DIExpression(), !8865)
  store i64 1, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !8772, !DIExpression(), !8867)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !8868
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit", !dbg !8868

bb2.i:                                            ; preds = %bb12
; call core::num::<impl usize>::unchecked_add::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h90ef0525d3a3b7c6E"(i64 %_31, i64 1) #19, !dbg !8869
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit", !dbg !8869

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit": ; preds = %bb12, %bb2.i
  %_0.i = add nuw i64 %_31, 1, !dbg !8870
  store i64 %_0.i, ptr %i, align 8, !dbg !8871
  %_33 = load i64, ptr %i, align 8, !dbg !8872
  %_34 = load i64, ptr %len, align 8, !dbg !8873
  %_32 = icmp eq i64 %_33, %_34, !dbg !8872
  br i1 %_32, label %bb17, label %bb12, !dbg !8872

bb17:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E.exit"
  %9 = load i8, ptr %acc, align 1, !dbg !8874
  store i8 %9, ptr %_0, align 1, !dbg !8874
  br label %bb18, !dbg !8836

bb18:                                             ; preds = %bb6, %bb17
  %10 = load i8, ptr %_0, align 1, !dbg !8875
  ret i8 %10, !dbg !8875

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable

bb10:                                             ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf7a8722f0f1b4dd7E"(ptr align 8 %self) unnamed_addr #1 !dbg !8876 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %end = alloca [8 x i8], align 8
  %_2 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8880, !DIExpression(), !8885)
    #dbg_declare(ptr %end, !8883, !DIExpression(), !8886)
  br label %bb3, !dbg !8887

bb3:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8888
  store ptr %_7, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8889, !DIExpression(), !8896)
  %0 = load ptr, ptr %_7, align 8, !dbg !8898
  store ptr %0, ptr %end, align 8, !dbg !8898
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %1 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf861ab500d54d4d9E"(ptr align 8 %self, ptr align 8 %end) #19, !dbg !8899
  %2 = zext i1 %1 to i8, !dbg !8899
  store i8 %2, ptr %_2, align 1, !dbg !8899
  br label %bb5, !dbg !8899

bb5:                                              ; preds = %bb3
  %3 = load i8, ptr %_2, align 1, !dbg !8900
  %4 = trunc i8 %3 to i1, !dbg !8900
  br i1 %4, label %bb6, label %bb7, !dbg !8900

bb7:                                              ; preds = %bb5
; call <core::slice::iter::Iter<T> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked
  %_10 = call align 1 ptr @"_ZN110_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..unchecked_iterator..UncheckedIterator$GT$14next_unchecked17h9bac6f3dfbf9c5adE"(ptr align 8 %self) #19, !dbg !8901
  store ptr %_10, ptr %_0, align 8, !dbg !8902
  br label %bb9, !dbg !8903

bb6:                                              ; preds = %bb5
  store ptr null, ptr %_0, align 8, !dbg !8904
  br label %bb9, !dbg !8903

bb9:                                              ; preds = %bb6, %bb7
  %5 = load ptr, ptr %_0, align 8, !dbg !8905
  ret ptr %5, !dbg !8905

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h65e994da2a282a9dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8906 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %exact = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8911, !DIExpression(), !8918)
    #dbg_declare(ptr %exact, !8912, !DIExpression(), !8919)
  br label %bb3, !dbg !8920

bb3:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8921
  store ptr %_7, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8889, !DIExpression(), !8922)
  %end = load ptr, ptr %_7, align 8, !dbg !8924
  store ptr %end, ptr %end.dbg.spill, align 8, !dbg !8924
    #dbg_declare(ptr %end.dbg.spill, !8916, !DIExpression(), !8925)
  %_8 = load ptr, ptr %self, align 8, !dbg !8926
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hcd8796171527ec9bE"(ptr %end, ptr %_8) #19, !dbg !8927
  store i64 %0, ptr %exact, align 8, !dbg !8927
  br label %bb5, !dbg !8927

bb5:                                              ; preds = %bb3
  %_9 = load i64, ptr %exact, align 8, !dbg !8928
  %_11 = load i64, ptr %exact, align 8, !dbg !8929
  %1 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !8930
  store i64 %_11, ptr %1, align 8, !dbg !8930
  store i64 1, ptr %_10, align 8, !dbg !8930
  store i64 %_9, ptr %_0, align 8, !dbg !8931
  %2 = load i64, ptr %_10, align 8, !dbg !8931
  %3 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !8931
  %4 = load i64, ptr %3, align 8, !dbg !8931
  %5 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8931
  store i64 %2, ptr %5, align 8, !dbg !8931
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !8931
  store i64 %4, ptr %6, align 8, !dbg !8931
  ret void, !dbg !8932

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hcfdc20b34ffd9102E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !8933 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %exact = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !8938, !DIExpression(), !8945)
    #dbg_declare(ptr %exact, !8939, !DIExpression(), !8946)
  br label %bb3, !dbg !8947

bb3:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !8948
  store ptr %_7, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8949, !DIExpression(), !8959)
  %end = load ptr, ptr %_7, align 8, !dbg !8961
  store ptr %end, ptr %end.dbg.spill, align 8, !dbg !8961
    #dbg_declare(ptr %end.dbg.spill, !8943, !DIExpression(), !8962)
  %_8 = load ptr, ptr %self, align 8, !dbg !8963
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %0 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h4dfe548463abd778E"(ptr %end, ptr %_8) #19, !dbg !8964
  store i64 %0, ptr %exact, align 8, !dbg !8964
  br label %bb5, !dbg !8964

bb5:                                              ; preds = %bb3
  %_9 = load i64, ptr %exact, align 8, !dbg !8965
  %_11 = load i64, ptr %exact, align 8, !dbg !8966
  %1 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !8967
  store i64 %_11, ptr %1, align 8, !dbg !8967
  store i64 1, ptr %_10, align 8, !dbg !8967
  store i64 %_9, ptr %_0, align 8, !dbg !8968
  %2 = load i64, ptr %_10, align 8, !dbg !8968
  %3 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !8968
  %4 = load i64, ptr %3, align 8, !dbg !8968
  %5 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !8968
  store i64 %2, ptr %5, align 8, !dbg !8968
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !8968
  store i64 %4, ptr %6, align 8, !dbg !8968
  ret void, !dbg !8969

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17he735945b32468a36E"() unnamed_addr #1 !dbg !8970 {
start:
  %x.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %x.dbg.spill, !8975, !DIExpression(), !8976)
  ret void, !dbg !8977
}

; <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h80636d330e2d6154E"() unnamed_addr #1 !dbg !8978 {
start:
  %self.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [0 x i8], align 1
    #dbg_declare(ptr %self.dbg.spill, !8982, !DIExpression(), !8983)
  ret void, !dbg !8984
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1e73e2f1e9b6831bE"() unnamed_addr #1 !dbg !8985 {
start:
  %output.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
    #dbg_declare(ptr %output.dbg.spill, !8990, !DIExpression(), !8991)
  store i8 0, ptr %_0, align 1, !dbg !8992
  %0 = load i8, ptr %_0, align 1, !dbg !8993
  %1 = trunc i8 %0 to i1, !dbg !8993
  ret i1 %1, !dbg !8993
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hc22dfb2cda7df1e6E"() unnamed_addr #1 !dbg !8994 {
start:
  %output.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [4 x i8], align 4
    #dbg_declare(ptr %output.dbg.spill, !8998, !DIExpression(), !8999)
  store i32 1114112, ptr %_0, align 4, !dbg !9000
  %0 = load i32, ptr %_0, align 4, !dbg !9001
  ret i32 %0, !dbg !9001
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h02a6b053bffacecaE"(i32 signext %0) unnamed_addr #1 !dbg !9002 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [0 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !9021, !DIExpression(), !9026)
    #dbg_declare(ptr %c.dbg.spill, !9022, !DIExpression(), !9027)
  %1 = load i32, ptr %self, align 4, !dbg !9028
  %2 = icmp eq i32 %1, 1114112, !dbg !9028
  %_2 = select i1 %2, i64 0, i64 1, !dbg !9028
  %3 = icmp eq i64 %_2, 0, !dbg !9029
  br i1 %3, label %bb3, label %bb2, !dbg !9029

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !9030
  br label %bb4, !dbg !9031

bb2:                                              ; preds = %start
  %b = load i32, ptr %self, align 4, !dbg !9032
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !9032
    #dbg_declare(ptr %b.dbg.spill, !9024, !DIExpression(), !9033)
  store i32 %b, ptr %_5, align 4, !dbg !9034
  %4 = load i32, ptr %_5, align 4, !dbg !9035
  store i32 %4, ptr %_0, align 4, !dbg !9035
  br label %bb4, !dbg !9036

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i32, ptr %_0, align 4, !dbg !9037
  ret i32 %5, !dbg !9037

bb1:                                              ; No predecessors!
  unreachable, !dbg !9028
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6207c75bb14ed308E"(i1 zeroext %0) unnamed_addr #1 !dbg !9038 {
start:
  %b.dbg.spill = alloca [0 x i8], align 1
  %c.dbg.spill = alloca [0 x i8], align 1
  %_5 = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
    #dbg_declare(ptr %self, !9057, !DIExpression(), !9062)
    #dbg_declare(ptr %c.dbg.spill, !9058, !DIExpression(), !9063)
    #dbg_declare(ptr %b.dbg.spill, !9060, !DIExpression(), !9064)
  %2 = load i8, ptr %self, align 1, !dbg !9065
  %3 = trunc i8 %2 to i1, !dbg !9065
  %_2 = zext i1 %3 to i64, !dbg !9065
  %4 = icmp eq i64 %_2, 0, !dbg !9066
  br i1 %4, label %bb3, label %bb2, !dbg !9066

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !9067
  br label %bb4, !dbg !9068

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !9069
  br label %bb4, !dbg !9070

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1, !dbg !9071
  %6 = trunc i8 %5 to i1, !dbg !9071
  ret i1 %6, !dbg !9071

bb1:                                              ; No predecessors!
  unreachable, !dbg !9065
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h874cb16815dfc479E"(ptr align 8 %self) unnamed_addr #1 !dbg !9072 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9074, !DIExpression(), !9075)
; call core::str::validations::next_code_point_reverse
  %0 = call { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h6940c3b67ca13fe1E(ptr align 8 %self) #19, !dbg !9076
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !9076
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !9076
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hb29b5a62bf7c8d46E"(i32 %_2.0, i32 %_2.1) #19, !dbg !9076
  ret i32 %_0, !dbg !9077
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h11cc03365ab57869E"(i32 signext %ch) unnamed_addr #1 !dbg !9078 {
start:
  %ch.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !9083, !DIExpression(), !9084)
  store i32 %ch, ptr %ch.dbg.spill, align 4
    #dbg_declare(ptr %ch.dbg.spill, !9082, !DIExpression(), !9085)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_0 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %ch) #19, !dbg !9086
  ret i32 %_0, !dbg !9087
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::find
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hcb6973d7cab9c285E"(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #1 !dbg !9088 {
start:
  %predicate.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9094, !DIExpression(), !9097)
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i64 8
  store ptr %predicate.1, ptr %0, align 8
    #dbg_declare(ptr %predicate.dbg.spill, !9095, !DIExpression(), !9098)
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind
  %_0 = call i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17h2da5168dd0ac4589E(ptr align 8 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) #19, !dbg !9099
  ret i32 %_0, !dbg !9100
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17he9510f36408a336bE"(ptr align 8 %r) unnamed_addr #1 !dbg !9101 {
start:
  %r.dbg.spill = alloca [8 x i8], align 8
  store ptr %r, ptr %r.dbg.spill, align 8
    #dbg_declare(ptr %r.dbg.spill, !9104, !DIExpression(), !9105)
; call core::ptr::non_null::NonNull<T>::from_mut
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h244efbe8644ce377E"(ptr align 8 %r) #19, !dbg !9106
  ret ptr %_0, !dbg !9107
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h63e0e77e2cfa378fE"(ptr align 8 %self) unnamed_addr #0 !dbg !9108 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_32 = alloca [4 x i8], align 2
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9112, !DIExpression(), !9127)
    #dbg_declare(ptr %u, !9113, !DIExpression(), !9128)
    #dbg_declare(ptr %residual.dbg.spill, !9117, !DIExpression(), !9129)
  %_4 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9130
; call core::option::Option<T>::take
  %1 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E"(ptr align 2 %_4) #19, !dbg !9130
  %2 = extractvalue { i16, i16 } %1, 0, !dbg !9130
  %3 = extractvalue { i16, i16 } %1, 1, !dbg !9130
  store i16 %2, ptr %_3, align 2, !dbg !9130
  %4 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9130
  store i16 %3, ptr %4, align 2, !dbg !9130
  %5 = load i16, ptr %_3, align 2, !dbg !9130
  %_5 = zext i16 %5 to i64, !dbg !9130
  %6 = icmp eq i64 %_5, 0, !dbg !9131
  br i1 %6, label %bb3, label %bb4, !dbg !9131

bb3:                                              ; preds = %start
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb76c32654efa819eE"(ptr align 8 %self) #19, !dbg !9132
  %_8.0 = extractvalue { i16, i16 } %7, 0, !dbg !9132
  %_8.1 = extractvalue { i16, i16 } %7, 1, !dbg !9132
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h69a9823995497ce2E"(i16 %_8.0, i16 %_8.1) #19, !dbg !9132
  %9 = extractvalue { i16, i16 } %8, 0, !dbg !9132
  %10 = extractvalue { i16, i16 } %8, 1, !dbg !9132
  store i16 %9, ptr %_7, align 2, !dbg !9132
  %11 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9132
  store i16 %10, ptr %11, align 2, !dbg !9132
  %12 = load i16, ptr %_7, align 2, !dbg !9132
  %_10 = zext i16 %12 to i64, !dbg !9132
  %13 = icmp eq i64 %_10, 0, !dbg !9132
  br i1 %13, label %bb7, label %bb8, !dbg !9132

bb4:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9133
  %buf = load i16, ptr %14, align 2, !dbg !9133
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !9133
    #dbg_declare(ptr %buf.dbg.spill, !9115, !DIExpression(), !9134)
  store i16 %buf, ptr %u, align 2, !dbg !9135
  br label %bb9, !dbg !9136

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9132
  %val = load i16, ptr %15, align 2, !dbg !9132
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !9132
    #dbg_declare(ptr %val.dbg.spill, !9119, !DIExpression(), !9137)
  store i16 %val, ptr %u, align 2, !dbg !9137
  br label %bb9, !dbg !9138

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %16 = call i64 @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E"() #19, !dbg !9139
  store i64 %16, ptr %0, align 8, !dbg !9139
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %0, i64 8, i1 false), !dbg !9139
  br label %bb25, !dbg !9139

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !9140
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9140
  br i1 %_12, label %bb11, label %bb12, !dbg !9140

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  %17 = load i64, ptr %_0, align 4, !dbg !9141
  ret i64 %17, !dbg !9141

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !9142
  %_16 = zext i16 %_17 to i32, !dbg !9142
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_16) #19, !dbg !9143
  %18 = getelementptr inbounds i8, ptr %_14, i64 4, !dbg !9144
  store i32 %_15, ptr %18, align 4, !dbg !9144
  store i16 0, ptr %_14, align 4, !dbg !9144
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_14, i64 8, i1 false), !dbg !9145
  br label %bb25, !dbg !9146

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !9147
  %_18 = icmp uge i16 %_19, -9216, !dbg !9147
  br i1 %_18, label %bb14, label %bb15, !dbg !9147

bb15:                                             ; preds = %bb11
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %19 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb76c32654efa819eE"(ptr align 8 %self) #19, !dbg !9148
  %20 = extractvalue { i16, i16 } %19, 0, !dbg !9148
  %21 = extractvalue { i16, i16 } %19, 1, !dbg !9148
  store i16 %20, ptr %_23, align 2, !dbg !9148
  %22 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9148
  store i16 %21, ptr %22, align 2, !dbg !9148
  %23 = load i16, ptr %_23, align 2, !dbg !9148
  %_25 = zext i16 %23 to i64, !dbg !9148
  %24 = icmp eq i64 %_25, 0, !dbg !9149
  br i1 %24, label %bb17, label %bb18, !dbg !9149

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !9150
  %25 = getelementptr inbounds i8, ptr %_20, i64 2, !dbg !9151
  store i16 %_22, ptr %25, align 2, !dbg !9151
  store i16 1, ptr %_20, align 4, !dbg !9151
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_20, i64 8, i1 false), !dbg !9152
  br label %bb25, !dbg !9153

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !9154
  %26 = getelementptr inbounds i8, ptr %_27, i64 2, !dbg !9155
  store i16 %_29, ptr %26, align 2, !dbg !9155
  store i16 1, ptr %_27, align 4, !dbg !9155
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_27, i64 8, i1 false), !dbg !9156
  br label %bb25, !dbg !9157

bb18:                                             ; preds = %bb15
  %27 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9159
  %u2 = load i16, ptr %27, align 2, !dbg !9159
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !9159
    #dbg_declare(ptr %u2.dbg.spill, !9121, !DIExpression(), !9160)
    #dbg_declare(ptr %u2.dbg.spill, !9123, !DIExpression(), !9161)
  %_30 = icmp ult i16 %u2, -9216, !dbg !9162
  br i1 %_30, label %bb21, label %bb19, !dbg !9162

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !9163
  br i1 %_31, label %bb21, label %bb20, !dbg !9163

bb21:                                             ; preds = %bb19, %bb18
  %28 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9164
  store i16 %u2, ptr %28, align 2, !dbg !9164
  store i16 1, ptr %_32, align 2, !dbg !9164
  %29 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9165
  %30 = load i16, ptr %_32, align 2, !dbg !9165
  %31 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9165
  %32 = load i16, ptr %31, align 2, !dbg !9165
  store i16 %30, ptr %29, align 8, !dbg !9165
  %33 = getelementptr inbounds i8, ptr %29, i64 2, !dbg !9165
  store i16 %32, ptr %33, align 2, !dbg !9165
  %_35 = load i16, ptr %u, align 2, !dbg !9166
  %34 = getelementptr inbounds i8, ptr %_33, i64 2, !dbg !9167
  store i16 %_35, ptr %34, align 2, !dbg !9167
  store i16 1, ptr %_33, align 4, !dbg !9167
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_33, i64 8, i1 false), !dbg !9168
  br label %bb25, !dbg !9169

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !9171
  %_40 = and i16 %_41, 1023, !dbg !9172
  %_39 = zext i16 %_40 to i32, !dbg !9173
  %_38 = shl i32 %_39, 10, !dbg !9173
  %_45 = and i16 %u2, 1023, !dbg !9174
  %_44 = zext i16 %_45 to i32, !dbg !9174
  %_37 = or i32 %_38, %_44, !dbg !9175
  %35 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_37, i32 65536), !dbg !9175
  %_46.0 = extractvalue { i32, i1 } %35, 0, !dbg !9175
  %_46.1 = extractvalue { i32, i1 } %35, 1, !dbg !9175
  br i1 %_46.1, label %panic, label %bb23, !dbg !9175

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !9175
    #dbg_declare(ptr %c.dbg.spill, !9125, !DIExpression(), !9176)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_46.0) #19, !dbg !9177
  %36 = getelementptr inbounds i8, ptr %_47, i64 4, !dbg !9178
  store i32 %_48, ptr %36, align 4, !dbg !9178
  store i16 0, ptr %_47, align 4, !dbg !9178
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_47, i64 8, i1 false), !dbg !9179
  br label %bb25, !dbg !9153

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d91ec9bed56fa96a16a893dd1a70684e) #20, !dbg !9175
  unreachable, !dbg !9175

bb2:                                              ; No predecessors!
  unreachable, !dbg !9180
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68e5aa64755c806bE"(ptr align 8 %self) unnamed_addr #0 !dbg !9182 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_32 = alloca [4 x i8], align 2
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9187, !DIExpression(), !9202)
    #dbg_declare(ptr %u, !9188, !DIExpression(), !9203)
    #dbg_declare(ptr %residual.dbg.spill, !9192, !DIExpression(), !9204)
  %_4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9205
; call core::option::Option<T>::take
  %1 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E"(ptr align 2 %_4) #19, !dbg !9205
  %2 = extractvalue { i16, i16 } %1, 0, !dbg !9205
  %3 = extractvalue { i16, i16 } %1, 1, !dbg !9205
  store i16 %2, ptr %_3, align 2, !dbg !9205
  %4 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9205
  store i16 %3, ptr %4, align 2, !dbg !9205
  %5 = load i16, ptr %_3, align 2, !dbg !9205
  %_5 = zext i16 %5 to i64, !dbg !9205
  %6 = icmp eq i64 %_5, 0, !dbg !9206
  br i1 %6, label %bb3, label %bb4, !dbg !9206

bb3:                                              ; preds = %start
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcece374a8b7cd35fE"(ptr align 8 %self) #19, !dbg !9207
  %_8.0 = extractvalue { i16, i16 } %7, 0, !dbg !9207
  %_8.1 = extractvalue { i16, i16 } %7, 1, !dbg !9207
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h69a9823995497ce2E"(i16 %_8.0, i16 %_8.1) #19, !dbg !9207
  %9 = extractvalue { i16, i16 } %8, 0, !dbg !9207
  %10 = extractvalue { i16, i16 } %8, 1, !dbg !9207
  store i16 %9, ptr %_7, align 2, !dbg !9207
  %11 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9207
  store i16 %10, ptr %11, align 2, !dbg !9207
  %12 = load i16, ptr %_7, align 2, !dbg !9207
  %_10 = zext i16 %12 to i64, !dbg !9207
  %13 = icmp eq i64 %_10, 0, !dbg !9207
  br i1 %13, label %bb7, label %bb8, !dbg !9207

bb4:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9208
  %buf = load i16, ptr %14, align 2, !dbg !9208
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !9208
    #dbg_declare(ptr %buf.dbg.spill, !9190, !DIExpression(), !9209)
  store i16 %buf, ptr %u, align 2, !dbg !9210
  br label %bb9, !dbg !9211

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9207
  %val = load i16, ptr %15, align 2, !dbg !9207
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !9207
    #dbg_declare(ptr %val.dbg.spill, !9194, !DIExpression(), !9212)
  store i16 %val, ptr %u, align 2, !dbg !9212
  br label %bb9, !dbg !9213

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %16 = call i64 @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E"() #19, !dbg !9214
  store i64 %16, ptr %0, align 8, !dbg !9214
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %0, i64 8, i1 false), !dbg !9214
  br label %bb25, !dbg !9214

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !9215
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9215
  br i1 %_12, label %bb11, label %bb12, !dbg !9215

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  %17 = load i64, ptr %_0, align 4, !dbg !9216
  ret i64 %17, !dbg !9216

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !9217
  %_16 = zext i16 %_17 to i32, !dbg !9217
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_16) #19, !dbg !9218
  %18 = getelementptr inbounds i8, ptr %_14, i64 4, !dbg !9219
  store i32 %_15, ptr %18, align 4, !dbg !9219
  store i16 0, ptr %_14, align 4, !dbg !9219
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_14, i64 8, i1 false), !dbg !9220
  br label %bb25, !dbg !9221

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !9222
  %_18 = icmp uge i16 %_19, -9216, !dbg !9222
  br i1 %_18, label %bb14, label %bb15, !dbg !9222

bb15:                                             ; preds = %bb11
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %19 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcece374a8b7cd35fE"(ptr align 8 %self) #19, !dbg !9223
  %20 = extractvalue { i16, i16 } %19, 0, !dbg !9223
  %21 = extractvalue { i16, i16 } %19, 1, !dbg !9223
  store i16 %20, ptr %_23, align 2, !dbg !9223
  %22 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9223
  store i16 %21, ptr %22, align 2, !dbg !9223
  %23 = load i16, ptr %_23, align 2, !dbg !9223
  %_25 = zext i16 %23 to i64, !dbg !9223
  %24 = icmp eq i64 %_25, 0, !dbg !9224
  br i1 %24, label %bb17, label %bb18, !dbg !9224

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !9225
  %25 = getelementptr inbounds i8, ptr %_20, i64 2, !dbg !9226
  store i16 %_22, ptr %25, align 2, !dbg !9226
  store i16 1, ptr %_20, align 4, !dbg !9226
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_20, i64 8, i1 false), !dbg !9227
  br label %bb25, !dbg !9228

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !9229
  %26 = getelementptr inbounds i8, ptr %_27, i64 2, !dbg !9230
  store i16 %_29, ptr %26, align 2, !dbg !9230
  store i16 1, ptr %_27, align 4, !dbg !9230
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_27, i64 8, i1 false), !dbg !9231
  br label %bb25, !dbg !9232

bb18:                                             ; preds = %bb15
  %27 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9234
  %u2 = load i16, ptr %27, align 2, !dbg !9234
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !9234
    #dbg_declare(ptr %u2.dbg.spill, !9196, !DIExpression(), !9235)
    #dbg_declare(ptr %u2.dbg.spill, !9198, !DIExpression(), !9236)
  %_30 = icmp ult i16 %u2, -9216, !dbg !9237
  br i1 %_30, label %bb21, label %bb19, !dbg !9237

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !9238
  br i1 %_31, label %bb21, label %bb20, !dbg !9238

bb21:                                             ; preds = %bb19, %bb18
  %28 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9239
  store i16 %u2, ptr %28, align 2, !dbg !9239
  store i16 1, ptr %_32, align 2, !dbg !9239
  %29 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9240
  %30 = load i16, ptr %_32, align 2, !dbg !9240
  %31 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9240
  %32 = load i16, ptr %31, align 2, !dbg !9240
  store i16 %30, ptr %29, align 8, !dbg !9240
  %33 = getelementptr inbounds i8, ptr %29, i64 2, !dbg !9240
  store i16 %32, ptr %33, align 2, !dbg !9240
  %_35 = load i16, ptr %u, align 2, !dbg !9241
  %34 = getelementptr inbounds i8, ptr %_33, i64 2, !dbg !9242
  store i16 %_35, ptr %34, align 2, !dbg !9242
  store i16 1, ptr %_33, align 4, !dbg !9242
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_33, i64 8, i1 false), !dbg !9243
  br label %bb25, !dbg !9244

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !9246
  %_40 = and i16 %_41, 1023, !dbg !9247
  %_39 = zext i16 %_40 to i32, !dbg !9248
  %_38 = shl i32 %_39, 10, !dbg !9248
  %_45 = and i16 %u2, 1023, !dbg !9249
  %_44 = zext i16 %_45 to i32, !dbg !9249
  %_37 = or i32 %_38, %_44, !dbg !9250
  %35 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_37, i32 65536), !dbg !9250
  %_46.0 = extractvalue { i32, i1 } %35, 0, !dbg !9250
  %_46.1 = extractvalue { i32, i1 } %35, 1, !dbg !9250
  br i1 %_46.1, label %panic, label %bb23, !dbg !9250

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !9250
    #dbg_declare(ptr %c.dbg.spill, !9200, !DIExpression(), !9251)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_46.0) #19, !dbg !9252
  %36 = getelementptr inbounds i8, ptr %_47, i64 4, !dbg !9253
  store i32 %_48, ptr %36, align 4, !dbg !9253
  store i16 0, ptr %_47, align 4, !dbg !9253
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_47, i64 8, i1 false), !dbg !9254
  br label %bb25, !dbg !9228

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d91ec9bed56fa96a16a893dd1a70684e) #20, !dbg !9250
  unreachable, !dbg !9250

bb2:                                              ; No predecessors!
  unreachable, !dbg !9255
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h85da2e5b468c94bcE"(ptr align 8 %self) unnamed_addr #0 !dbg !9257 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_32 = alloca [4 x i8], align 2
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9262, !DIExpression(), !9277)
    #dbg_declare(ptr %u, !9263, !DIExpression(), !9278)
    #dbg_declare(ptr %residual.dbg.spill, !9267, !DIExpression(), !9279)
  %_4 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9280
; call core::option::Option<T>::take
  %1 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E"(ptr align 2 %_4) #19, !dbg !9280
  %2 = extractvalue { i16, i16 } %1, 0, !dbg !9280
  %3 = extractvalue { i16, i16 } %1, 1, !dbg !9280
  store i16 %2, ptr %_3, align 2, !dbg !9280
  %4 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9280
  store i16 %3, ptr %4, align 2, !dbg !9280
  %5 = load i16, ptr %_3, align 2, !dbg !9280
  %_5 = zext i16 %5 to i64, !dbg !9280
  %6 = icmp eq i64 %_5, 0, !dbg !9281
  br i1 %6, label %bb3, label %bb4, !dbg !9281

bb3:                                              ; preds = %start
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hff3ac44154215173E"(ptr align 8 %self) #19, !dbg !9282
  %_8.0 = extractvalue { i16, i16 } %7, 0, !dbg !9282
  %_8.1 = extractvalue { i16, i16 } %7, 1, !dbg !9282
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h69a9823995497ce2E"(i16 %_8.0, i16 %_8.1) #19, !dbg !9282
  %9 = extractvalue { i16, i16 } %8, 0, !dbg !9282
  %10 = extractvalue { i16, i16 } %8, 1, !dbg !9282
  store i16 %9, ptr %_7, align 2, !dbg !9282
  %11 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9282
  store i16 %10, ptr %11, align 2, !dbg !9282
  %12 = load i16, ptr %_7, align 2, !dbg !9282
  %_10 = zext i16 %12 to i64, !dbg !9282
  %13 = icmp eq i64 %_10, 0, !dbg !9282
  br i1 %13, label %bb7, label %bb8, !dbg !9282

bb4:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9283
  %buf = load i16, ptr %14, align 2, !dbg !9283
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !9283
    #dbg_declare(ptr %buf.dbg.spill, !9265, !DIExpression(), !9284)
  store i16 %buf, ptr %u, align 2, !dbg !9285
  br label %bb9, !dbg !9286

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9282
  %val = load i16, ptr %15, align 2, !dbg !9282
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !9282
    #dbg_declare(ptr %val.dbg.spill, !9269, !DIExpression(), !9287)
  store i16 %val, ptr %u, align 2, !dbg !9287
  br label %bb9, !dbg !9288

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %16 = call i64 @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E"() #19, !dbg !9289
  store i64 %16, ptr %0, align 8, !dbg !9289
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %0, i64 8, i1 false), !dbg !9289
  br label %bb25, !dbg !9289

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !9290
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9290
  br i1 %_12, label %bb11, label %bb12, !dbg !9290

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  %17 = load i64, ptr %_0, align 4, !dbg !9291
  ret i64 %17, !dbg !9291

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !9292
  %_16 = zext i16 %_17 to i32, !dbg !9292
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_16) #19, !dbg !9293
  %18 = getelementptr inbounds i8, ptr %_14, i64 4, !dbg !9294
  store i32 %_15, ptr %18, align 4, !dbg !9294
  store i16 0, ptr %_14, align 4, !dbg !9294
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_14, i64 8, i1 false), !dbg !9295
  br label %bb25, !dbg !9296

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !9297
  %_18 = icmp uge i16 %_19, -9216, !dbg !9297
  br i1 %_18, label %bb14, label %bb15, !dbg !9297

bb15:                                             ; preds = %bb11
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
  %19 = call { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hff3ac44154215173E"(ptr align 8 %self) #19, !dbg !9298
  %20 = extractvalue { i16, i16 } %19, 0, !dbg !9298
  %21 = extractvalue { i16, i16 } %19, 1, !dbg !9298
  store i16 %20, ptr %_23, align 2, !dbg !9298
  %22 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9298
  store i16 %21, ptr %22, align 2, !dbg !9298
  %23 = load i16, ptr %_23, align 2, !dbg !9298
  %_25 = zext i16 %23 to i64, !dbg !9298
  %24 = icmp eq i64 %_25, 0, !dbg !9299
  br i1 %24, label %bb17, label %bb18, !dbg !9299

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !9300
  %25 = getelementptr inbounds i8, ptr %_20, i64 2, !dbg !9301
  store i16 %_22, ptr %25, align 2, !dbg !9301
  store i16 1, ptr %_20, align 4, !dbg !9301
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_20, i64 8, i1 false), !dbg !9302
  br label %bb25, !dbg !9303

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !9304
  %26 = getelementptr inbounds i8, ptr %_27, i64 2, !dbg !9305
  store i16 %_29, ptr %26, align 2, !dbg !9305
  store i16 1, ptr %_27, align 4, !dbg !9305
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_27, i64 8, i1 false), !dbg !9306
  br label %bb25, !dbg !9307

bb18:                                             ; preds = %bb15
  %27 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9309
  %u2 = load i16, ptr %27, align 2, !dbg !9309
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !9309
    #dbg_declare(ptr %u2.dbg.spill, !9271, !DIExpression(), !9310)
    #dbg_declare(ptr %u2.dbg.spill, !9273, !DIExpression(), !9311)
  %_30 = icmp ult i16 %u2, -9216, !dbg !9312
  br i1 %_30, label %bb21, label %bb19, !dbg !9312

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !9313
  br i1 %_31, label %bb21, label %bb20, !dbg !9313

bb21:                                             ; preds = %bb19, %bb18
  %28 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9314
  store i16 %u2, ptr %28, align 2, !dbg !9314
  store i16 1, ptr %_32, align 2, !dbg !9314
  %29 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9315
  %30 = load i16, ptr %_32, align 2, !dbg !9315
  %31 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9315
  %32 = load i16, ptr %31, align 2, !dbg !9315
  store i16 %30, ptr %29, align 8, !dbg !9315
  %33 = getelementptr inbounds i8, ptr %29, i64 2, !dbg !9315
  store i16 %32, ptr %33, align 2, !dbg !9315
  %_35 = load i16, ptr %u, align 2, !dbg !9316
  %34 = getelementptr inbounds i8, ptr %_33, i64 2, !dbg !9317
  store i16 %_35, ptr %34, align 2, !dbg !9317
  store i16 1, ptr %_33, align 4, !dbg !9317
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_33, i64 8, i1 false), !dbg !9318
  br label %bb25, !dbg !9319

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !9321
  %_40 = and i16 %_41, 1023, !dbg !9322
  %_39 = zext i16 %_40 to i32, !dbg !9323
  %_38 = shl i32 %_39, 10, !dbg !9323
  %_45 = and i16 %u2, 1023, !dbg !9324
  %_44 = zext i16 %_45 to i32, !dbg !9324
  %_37 = or i32 %_38, %_44, !dbg !9325
  %35 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_37, i32 65536), !dbg !9325
  %_46.0 = extractvalue { i32, i1 } %35, 0, !dbg !9325
  %_46.1 = extractvalue { i32, i1 } %35, 1, !dbg !9325
  br i1 %_46.1, label %panic, label %bb23, !dbg !9325

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !9325
    #dbg_declare(ptr %c.dbg.spill, !9275, !DIExpression(), !9326)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_46.0) #19, !dbg !9327
  %36 = getelementptr inbounds i8, ptr %_47, i64 4, !dbg !9328
  store i32 %_48, ptr %36, align 4, !dbg !9328
  store i16 0, ptr %_47, align 4, !dbg !9328
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_47, i64 8, i1 false), !dbg !9329
  br label %bb25, !dbg !9303

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d91ec9bed56fa96a16a893dd1a70684e) #20, !dbg !9325
  unreachable, !dbg !9325

bb2:                                              ; No predecessors!
  unreachable, !dbg !9330
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd57608f6e2430588E"(ptr align 8 %self) unnamed_addr #0 !dbg !9332 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_32 = alloca [4 x i8], align 2
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9336, !DIExpression(), !9351)
    #dbg_declare(ptr %u, !9337, !DIExpression(), !9352)
    #dbg_declare(ptr %residual.dbg.spill, !9341, !DIExpression(), !9353)
  %_4 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9354
; call core::option::Option<T>::take
  %1 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E"(ptr align 2 %_4) #19, !dbg !9354
  %2 = extractvalue { i16, i16 } %1, 0, !dbg !9354
  %3 = extractvalue { i16, i16 } %1, 1, !dbg !9354
  store i16 %2, ptr %_3, align 2, !dbg !9354
  %4 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9354
  store i16 %3, ptr %4, align 2, !dbg !9354
  %5 = load i16, ptr %_3, align 2, !dbg !9354
  %_5 = zext i16 %5 to i64, !dbg !9354
  %6 = icmp eq i64 %_5, 0, !dbg !9355
  br i1 %6, label %bb3, label %bb4, !dbg !9355

bb3:                                              ; preds = %start
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcc9d1d3d9e012ba6E"(ptr align 8 %self) #19, !dbg !9356
  %_8.0 = extractvalue { i16, i16 } %7, 0, !dbg !9356
  %_8.1 = extractvalue { i16, i16 } %7, 1, !dbg !9356
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h69a9823995497ce2E"(i16 %_8.0, i16 %_8.1) #19, !dbg !9356
  %9 = extractvalue { i16, i16 } %8, 0, !dbg !9356
  %10 = extractvalue { i16, i16 } %8, 1, !dbg !9356
  store i16 %9, ptr %_7, align 2, !dbg !9356
  %11 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9356
  store i16 %10, ptr %11, align 2, !dbg !9356
  %12 = load i16, ptr %_7, align 2, !dbg !9356
  %_10 = zext i16 %12 to i64, !dbg !9356
  %13 = icmp eq i64 %_10, 0, !dbg !9356
  br i1 %13, label %bb7, label %bb8, !dbg !9356

bb4:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9357
  %buf = load i16, ptr %14, align 2, !dbg !9357
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !9357
    #dbg_declare(ptr %buf.dbg.spill, !9339, !DIExpression(), !9358)
  store i16 %buf, ptr %u, align 2, !dbg !9359
  br label %bb9, !dbg !9360

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9356
  %val = load i16, ptr %15, align 2, !dbg !9356
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !9356
    #dbg_declare(ptr %val.dbg.spill, !9343, !DIExpression(), !9361)
  store i16 %val, ptr %u, align 2, !dbg !9361
  br label %bb9, !dbg !9362

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %16 = call i64 @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E"() #19, !dbg !9363
  store i64 %16, ptr %0, align 8, !dbg !9363
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %0, i64 8, i1 false), !dbg !9363
  br label %bb25, !dbg !9363

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !9364
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9364
  br i1 %_12, label %bb11, label %bb12, !dbg !9364

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  %17 = load i64, ptr %_0, align 4, !dbg !9365
  ret i64 %17, !dbg !9365

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !9366
  %_16 = zext i16 %_17 to i32, !dbg !9366
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_16) #19, !dbg !9367
  %18 = getelementptr inbounds i8, ptr %_14, i64 4, !dbg !9368
  store i32 %_15, ptr %18, align 4, !dbg !9368
  store i16 0, ptr %_14, align 4, !dbg !9368
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_14, i64 8, i1 false), !dbg !9369
  br label %bb25, !dbg !9370

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !9371
  %_18 = icmp uge i16 %_19, -9216, !dbg !9371
  br i1 %_18, label %bb14, label %bb15, !dbg !9371

bb15:                                             ; preds = %bb11
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %19 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcc9d1d3d9e012ba6E"(ptr align 8 %self) #19, !dbg !9372
  %20 = extractvalue { i16, i16 } %19, 0, !dbg !9372
  %21 = extractvalue { i16, i16 } %19, 1, !dbg !9372
  store i16 %20, ptr %_23, align 2, !dbg !9372
  %22 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9372
  store i16 %21, ptr %22, align 2, !dbg !9372
  %23 = load i16, ptr %_23, align 2, !dbg !9372
  %_25 = zext i16 %23 to i64, !dbg !9372
  %24 = icmp eq i64 %_25, 0, !dbg !9373
  br i1 %24, label %bb17, label %bb18, !dbg !9373

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !9374
  %25 = getelementptr inbounds i8, ptr %_20, i64 2, !dbg !9375
  store i16 %_22, ptr %25, align 2, !dbg !9375
  store i16 1, ptr %_20, align 4, !dbg !9375
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_20, i64 8, i1 false), !dbg !9376
  br label %bb25, !dbg !9377

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !9378
  %26 = getelementptr inbounds i8, ptr %_27, i64 2, !dbg !9379
  store i16 %_29, ptr %26, align 2, !dbg !9379
  store i16 1, ptr %_27, align 4, !dbg !9379
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_27, i64 8, i1 false), !dbg !9380
  br label %bb25, !dbg !9381

bb18:                                             ; preds = %bb15
  %27 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9383
  %u2 = load i16, ptr %27, align 2, !dbg !9383
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !9383
    #dbg_declare(ptr %u2.dbg.spill, !9345, !DIExpression(), !9384)
    #dbg_declare(ptr %u2.dbg.spill, !9347, !DIExpression(), !9385)
  %_30 = icmp ult i16 %u2, -9216, !dbg !9386
  br i1 %_30, label %bb21, label %bb19, !dbg !9386

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !9387
  br i1 %_31, label %bb21, label %bb20, !dbg !9387

bb21:                                             ; preds = %bb19, %bb18
  %28 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9388
  store i16 %u2, ptr %28, align 2, !dbg !9388
  store i16 1, ptr %_32, align 2, !dbg !9388
  %29 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9389
  %30 = load i16, ptr %_32, align 2, !dbg !9389
  %31 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9389
  %32 = load i16, ptr %31, align 2, !dbg !9389
  store i16 %30, ptr %29, align 8, !dbg !9389
  %33 = getelementptr inbounds i8, ptr %29, i64 2, !dbg !9389
  store i16 %32, ptr %33, align 2, !dbg !9389
  %_35 = load i16, ptr %u, align 2, !dbg !9390
  %34 = getelementptr inbounds i8, ptr %_33, i64 2, !dbg !9391
  store i16 %_35, ptr %34, align 2, !dbg !9391
  store i16 1, ptr %_33, align 4, !dbg !9391
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_33, i64 8, i1 false), !dbg !9392
  br label %bb25, !dbg !9393

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !9395
  %_40 = and i16 %_41, 1023, !dbg !9396
  %_39 = zext i16 %_40 to i32, !dbg !9397
  %_38 = shl i32 %_39, 10, !dbg !9397
  %_45 = and i16 %u2, 1023, !dbg !9398
  %_44 = zext i16 %_45 to i32, !dbg !9398
  %_37 = or i32 %_38, %_44, !dbg !9399
  %35 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_37, i32 65536), !dbg !9399
  %_46.0 = extractvalue { i32, i1 } %35, 0, !dbg !9399
  %_46.1 = extractvalue { i32, i1 } %35, 1, !dbg !9399
  br i1 %_46.1, label %panic, label %bb23, !dbg !9399

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !9399
    #dbg_declare(ptr %c.dbg.spill, !9349, !DIExpression(), !9400)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_46.0) #19, !dbg !9401
  %36 = getelementptr inbounds i8, ptr %_47, i64 4, !dbg !9402
  store i32 %_48, ptr %36, align 4, !dbg !9402
  store i16 0, ptr %_47, align 4, !dbg !9402
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_47, i64 8, i1 false), !dbg !9403
  br label %bb25, !dbg !9377

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d91ec9bed56fa96a16a893dd1a70684e) #20, !dbg !9399
  unreachable, !dbg !9399

bb2:                                              ; No predecessors!
  unreachable, !dbg !9404
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heab9c9c8e7a9e07dE"(ptr align 8 %self) unnamed_addr #0 !dbg !9406 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %0 = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_32 = alloca [4 x i8], align 2
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9411, !DIExpression(), !9426)
    #dbg_declare(ptr %u, !9412, !DIExpression(), !9427)
    #dbg_declare(ptr %residual.dbg.spill, !9416, !DIExpression(), !9428)
  %_4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9429
; call core::option::Option<T>::take
  %1 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E"(ptr align 2 %_4) #19, !dbg !9429
  %2 = extractvalue { i16, i16 } %1, 0, !dbg !9429
  %3 = extractvalue { i16, i16 } %1, 1, !dbg !9429
  store i16 %2, ptr %_3, align 2, !dbg !9429
  %4 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9429
  store i16 %3, ptr %4, align 2, !dbg !9429
  %5 = load i16, ptr %_3, align 2, !dbg !9429
  %_5 = zext i16 %5 to i64, !dbg !9429
  %6 = icmp eq i64 %_5, 0, !dbg !9430
  br i1 %6, label %bb3, label %bb4, !dbg !9430

bb3:                                              ; preds = %start
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68119ae6bd8b6adcE"(ptr align 8 %self) #19, !dbg !9431
  %_8.0 = extractvalue { i16, i16 } %7, 0, !dbg !9431
  %_8.1 = extractvalue { i16, i16 } %7, 1, !dbg !9431
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h69a9823995497ce2E"(i16 %_8.0, i16 %_8.1) #19, !dbg !9431
  %9 = extractvalue { i16, i16 } %8, 0, !dbg !9431
  %10 = extractvalue { i16, i16 } %8, 1, !dbg !9431
  store i16 %9, ptr %_7, align 2, !dbg !9431
  %11 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9431
  store i16 %10, ptr %11, align 2, !dbg !9431
  %12 = load i16, ptr %_7, align 2, !dbg !9431
  %_10 = zext i16 %12 to i64, !dbg !9431
  %13 = icmp eq i64 %_10, 0, !dbg !9431
  br i1 %13, label %bb7, label %bb8, !dbg !9431

bb4:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_3, i64 2, !dbg !9432
  %buf = load i16, ptr %14, align 2, !dbg !9432
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !9432
    #dbg_declare(ptr %buf.dbg.spill, !9414, !DIExpression(), !9433)
  store i16 %buf, ptr %u, align 2, !dbg !9434
  br label %bb9, !dbg !9435

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_7, i64 2, !dbg !9431
  %val = load i16, ptr %15, align 2, !dbg !9431
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !9431
    #dbg_declare(ptr %val.dbg.spill, !9418, !DIExpression(), !9436)
  store i16 %val, ptr %u, align 2, !dbg !9436
  br label %bb9, !dbg !9437

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %16 = call i64 @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E"() #19, !dbg !9438
  store i64 %16, ptr %0, align 8, !dbg !9438
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 8 %0, i64 8, i1 false), !dbg !9438
  br label %bb25, !dbg !9438

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !9439
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9439
  br i1 %_12, label %bb11, label %bb12, !dbg !9439

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  %17 = load i64, ptr %_0, align 4, !dbg !9440
  ret i64 %17, !dbg !9440

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !9441
  %_16 = zext i16 %_17 to i32, !dbg !9441
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_16) #19, !dbg !9442
  %18 = getelementptr inbounds i8, ptr %_14, i64 4, !dbg !9443
  store i32 %_15, ptr %18, align 4, !dbg !9443
  store i16 0, ptr %_14, align 4, !dbg !9443
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_14, i64 8, i1 false), !dbg !9444
  br label %bb25, !dbg !9445

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !9446
  %_18 = icmp uge i16 %_19, -9216, !dbg !9446
  br i1 %_18, label %bb14, label %bb15, !dbg !9446

bb15:                                             ; preds = %bb11
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %19 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68119ae6bd8b6adcE"(ptr align 8 %self) #19, !dbg !9447
  %20 = extractvalue { i16, i16 } %19, 0, !dbg !9447
  %21 = extractvalue { i16, i16 } %19, 1, !dbg !9447
  store i16 %20, ptr %_23, align 2, !dbg !9447
  %22 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9447
  store i16 %21, ptr %22, align 2, !dbg !9447
  %23 = load i16, ptr %_23, align 2, !dbg !9447
  %_25 = zext i16 %23 to i64, !dbg !9447
  %24 = icmp eq i64 %_25, 0, !dbg !9448
  br i1 %24, label %bb17, label %bb18, !dbg !9448

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !9449
  %25 = getelementptr inbounds i8, ptr %_20, i64 2, !dbg !9450
  store i16 %_22, ptr %25, align 2, !dbg !9450
  store i16 1, ptr %_20, align 4, !dbg !9450
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_20, i64 8, i1 false), !dbg !9451
  br label %bb25, !dbg !9452

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !9453
  %26 = getelementptr inbounds i8, ptr %_27, i64 2, !dbg !9454
  store i16 %_29, ptr %26, align 2, !dbg !9454
  store i16 1, ptr %_27, align 4, !dbg !9454
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_27, i64 8, i1 false), !dbg !9455
  br label %bb25, !dbg !9456

bb18:                                             ; preds = %bb15
  %27 = getelementptr inbounds i8, ptr %_23, i64 2, !dbg !9458
  %u2 = load i16, ptr %27, align 2, !dbg !9458
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !9458
    #dbg_declare(ptr %u2.dbg.spill, !9420, !DIExpression(), !9459)
    #dbg_declare(ptr %u2.dbg.spill, !9422, !DIExpression(), !9460)
  %_30 = icmp ult i16 %u2, -9216, !dbg !9461
  br i1 %_30, label %bb21, label %bb19, !dbg !9461

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !9462
  br i1 %_31, label %bb21, label %bb20, !dbg !9462

bb21:                                             ; preds = %bb19, %bb18
  %28 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9463
  store i16 %u2, ptr %28, align 2, !dbg !9463
  store i16 1, ptr %_32, align 2, !dbg !9463
  %29 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9464
  %30 = load i16, ptr %_32, align 2, !dbg !9464
  %31 = getelementptr inbounds i8, ptr %_32, i64 2, !dbg !9464
  %32 = load i16, ptr %31, align 2, !dbg !9464
  store i16 %30, ptr %29, align 8, !dbg !9464
  %33 = getelementptr inbounds i8, ptr %29, i64 2, !dbg !9464
  store i16 %32, ptr %33, align 2, !dbg !9464
  %_35 = load i16, ptr %u, align 2, !dbg !9465
  %34 = getelementptr inbounds i8, ptr %_33, i64 2, !dbg !9466
  store i16 %_35, ptr %34, align 2, !dbg !9466
  store i16 1, ptr %_33, align 4, !dbg !9466
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_33, i64 8, i1 false), !dbg !9467
  br label %bb25, !dbg !9468

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !9470
  %_40 = and i16 %_41, 1023, !dbg !9471
  %_39 = zext i16 %_40 to i32, !dbg !9472
  %_38 = shl i32 %_39, 10, !dbg !9472
  %_45 = and i16 %u2, 1023, !dbg !9473
  %_44 = zext i16 %_45 to i32, !dbg !9473
  %_37 = or i32 %_38, %_44, !dbg !9474
  %35 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_37, i32 65536), !dbg !9474
  %_46.0 = extractvalue { i32, i1 } %35, 0, !dbg !9474
  %_46.1 = extractvalue { i32, i1 } %35, 1, !dbg !9474
  br i1 %_46.1, label %panic, label %bb23, !dbg !9474

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !9474
    #dbg_declare(ptr %c.dbg.spill, !9424, !DIExpression(), !9475)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E"(i32 signext %_46.0) #19, !dbg !9476
  %36 = getelementptr inbounds i8, ptr %_47, i64 4, !dbg !9477
  store i32 %_48, ptr %36, align 4, !dbg !9477
  store i16 0, ptr %_47, align 4, !dbg !9477
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_0, ptr align 4 %_47, i64 8, i1 false), !dbg !9478
  br label %bb25, !dbg !9452

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d91ec9bed56fa96a16a893dd1a70684e) #20, !dbg !9474
  unreachable, !dbg !9474

bb2:                                              ; No predecessors!
  unreachable, !dbg !9479
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4cc36d4bc8345ca0E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !9481 {
start:
  %high.dbg.spill = alloca [16 x i8], align 8
  %low.dbg.spill7 = alloca [8 x i8], align 8
  %low_buf.dbg.spill = alloca [8 x i8], align 8
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [8 x i8], align 8
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [8 x i8], align 8
  %low.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %high_buf = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %high = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9486, !DIExpression(), !9505)
    #dbg_declare(ptr %high, !9489, !DIExpression(), !9506)
    #dbg_declare(ptr %high_buf, !9492, !DIExpression(), !9507)
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h368b936733322da0E"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self) #19, !dbg !9508
  %low = load i64, ptr %_4, align 8, !dbg !9509
  store i64 %low, ptr %low.dbg.spill, align 8, !dbg !9509
    #dbg_declare(ptr %low.dbg.spill, !9487, !DIExpression(), !9510)
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !9511
  %1 = load i64, ptr %0, align 8, !dbg !9511
  %2 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !9511
  %3 = load i64, ptr %2, align 8, !dbg !9511
  store i64 %1, ptr %high, align 8, !dbg !9511
  %4 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9511
  store i64 %3, ptr %4, align 8, !dbg !9511
  %5 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9512
  %6 = load i16, ptr %5, align 8, !dbg !9512
  %_9 = zext i16 %6 to i64, !dbg !9512
  %7 = icmp eq i64 %_9, 0, !dbg !9513
  br i1 %7, label %bb4, label %bb3, !dbg !9513

bb4:                                              ; preds = %start
  store i64 0, ptr %_8, align 8, !dbg !9514
  %8 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9514
  store i64 0, ptr %8, align 8, !dbg !9514
  br label %bb11, !dbg !9514

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9515
  %u = getelementptr inbounds i8, ptr %9, i64 2, !dbg !9515
  store ptr %u, ptr %u.dbg.spill, align 8, !dbg !9515
    #dbg_declare(ptr %u.dbg.spill, !9495, !DIExpression(), !9516)
  %_13 = load i16, ptr %u, align 2, !dbg !9517
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9517
  br i1 %_12, label %bb6, label %bb7, !dbg !9517

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i64, ptr %_8, align 8, !dbg !9518
  store i64 %low_buf, ptr %low_buf.dbg.spill, align 8, !dbg !9518
    #dbg_declare(ptr %low_buf.dbg.spill, !9490, !DIExpression(), !9519)
  %10 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9520
  %11 = load i64, ptr %10, align 8, !dbg !9520
  store i64 %11, ptr %high_buf, align 8, !dbg !9520
; call core::num::<impl usize>::div_ceil
  %_21 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E"(i64 %low, i64 2, ptr align 8 @alloc_2fb5b595c02e90d046a1dffece948868) #19, !dbg !9521
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21, i64 %low_buf), !dbg !9521
  %_22.0 = extractvalue { i64, i1 } %12, 0, !dbg !9521
  %_22.1 = extractvalue { i64, i1 } %12, 1, !dbg !9521
  br i1 %_22.1, label %panic, label %bb13, !dbg !9521

bb7:                                              ; preds = %bb3
  %13 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9515
  %14 = getelementptr inbounds i8, ptr %13, i64 2, !dbg !9515
  %u1 = load i16, ptr %14, align 2, !dbg !9515
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !9515
    #dbg_declare(ptr %u.dbg.spill2, !9493, !DIExpression(), !9516)
  store i64 1, ptr %_8, align 8, !dbg !9522
  %15 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9522
  store i64 1, ptr %15, align 8, !dbg !9522
  br label %bb11, !dbg !9523

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9524
  %_u = getelementptr inbounds i8, ptr %16, i64 2, !dbg !9524
  store ptr %_u, ptr %_u.dbg.spill, align 8, !dbg !9524
    #dbg_declare(ptr %_u.dbg.spill, !9498, !DIExpression(), !9525)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE"(ptr align 8 %high, ptr align 8 @alloc_d791eaf358ed821941e2d4cfd804d89b) #19, !dbg !9526
  br i1 %_16, label %bb9, label %bb10, !dbg !9526

bb10:                                             ; preds = %bb6
  %17 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9527
  %18 = getelementptr inbounds i8, ptr %17, i64 2, !dbg !9527
  %_u3 = load i16, ptr %18, align 2, !dbg !9527
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !9527
    #dbg_declare(ptr %_u.dbg.spill4, !9499, !DIExpression(), !9528)
  store i64 0, ptr %_8, align 8, !dbg !9529
  %19 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9529
  store i64 1, ptr %19, align 8, !dbg !9529
  br label %bb11, !dbg !9530

bb9:                                              ; preds = %bb6
  %20 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !9524
  %21 = getelementptr inbounds i8, ptr %20, i64 2, !dbg !9524
  %_u5 = load i16, ptr %21, align 2, !dbg !9524
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !9524
    #dbg_declare(ptr %_u.dbg.spill6, !9496, !DIExpression(), !9525)
  store i64 1, ptr %_8, align 8, !dbg !9531
  %22 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9531
  store i64 1, ptr %22, align 8, !dbg !9531
  br label %bb11, !dbg !9532

bb13:                                             ; preds = %bb11
  store i64 %_22.0, ptr %low.dbg.spill7, align 8, !dbg !9521
    #dbg_declare(ptr %low.dbg.spill7, !9501, !DIExpression(), !9533)
  %23 = load i64, ptr %high, align 8, !dbg !9534
  %24 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9534
  %25 = load i64, ptr %24, align 8, !dbg !9534
; call core::option::Option<T>::and_then
  %26 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h543cc0c855f87572E"(i64 %23, i64 %25, ptr align 8 %high_buf) #19, !dbg !9534
  %high.0 = extractvalue { i64, i64 } %26, 0, !dbg !9534
  %high.1 = extractvalue { i64, i64 } %26, 1, !dbg !9534
  store i64 %high.0, ptr %high.dbg.spill, align 8, !dbg !9534
  %27 = getelementptr inbounds i8, ptr %high.dbg.spill, i64 8, !dbg !9534
  store i64 %high.1, ptr %27, align 8, !dbg !9534
    #dbg_declare(ptr %high.dbg.spill, !9503, !DIExpression(), !9535)
  store i64 %_22.0, ptr %_0, align 8, !dbg !9536
  %28 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !9536
  store i64 %high.0, ptr %28, align 8, !dbg !9536
  %29 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !9536
  store i64 %high.1, ptr %29, align 8, !dbg !9536
  ret void, !dbg !9537

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_e59db0cc494922884add3474fe7ca357) #20, !dbg !9521
  unreachable, !dbg !9521

bb2:                                              ; No predecessors!
  unreachable, !dbg !9512
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4e794c678f5b34f7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !9538 {
start:
  %high.dbg.spill = alloca [16 x i8], align 8
  %low.dbg.spill7 = alloca [8 x i8], align 8
  %low_buf.dbg.spill = alloca [8 x i8], align 8
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [8 x i8], align 8
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [8 x i8], align 8
  %low.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %high_buf = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %high = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9543, !DIExpression(), !9562)
    #dbg_declare(ptr %high, !9546, !DIExpression(), !9563)
    #dbg_declare(ptr %high_buf, !9549, !DIExpression(), !9564)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17heb596a49b23f6739E"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self) #19, !dbg !9565
  %low = load i64, ptr %_4, align 8, !dbg !9566
  store i64 %low, ptr %low.dbg.spill, align 8, !dbg !9566
    #dbg_declare(ptr %low.dbg.spill, !9544, !DIExpression(), !9567)
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !9568
  %1 = load i64, ptr %0, align 8, !dbg !9568
  %2 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !9568
  %3 = load i64, ptr %2, align 8, !dbg !9568
  store i64 %1, ptr %high, align 8, !dbg !9568
  %4 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9568
  store i64 %3, ptr %4, align 8, !dbg !9568
  %5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9569
  %6 = load i16, ptr %5, align 8, !dbg !9569
  %_9 = zext i16 %6 to i64, !dbg !9569
  %7 = icmp eq i64 %_9, 0, !dbg !9570
  br i1 %7, label %bb4, label %bb3, !dbg !9570

bb4:                                              ; preds = %start
  store i64 0, ptr %_8, align 8, !dbg !9571
  %8 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9571
  store i64 0, ptr %8, align 8, !dbg !9571
  br label %bb11, !dbg !9571

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9572
  %u = getelementptr inbounds i8, ptr %9, i64 2, !dbg !9572
  store ptr %u, ptr %u.dbg.spill, align 8, !dbg !9572
    #dbg_declare(ptr %u.dbg.spill, !9552, !DIExpression(), !9573)
  %_13 = load i16, ptr %u, align 2, !dbg !9574
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9574
  br i1 %_12, label %bb6, label %bb7, !dbg !9574

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i64, ptr %_8, align 8, !dbg !9575
  store i64 %low_buf, ptr %low_buf.dbg.spill, align 8, !dbg !9575
    #dbg_declare(ptr %low_buf.dbg.spill, !9547, !DIExpression(), !9576)
  %10 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9577
  %11 = load i64, ptr %10, align 8, !dbg !9577
  store i64 %11, ptr %high_buf, align 8, !dbg !9577
; call core::num::<impl usize>::div_ceil
  %_21 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E"(i64 %low, i64 2, ptr align 8 @alloc_2fb5b595c02e90d046a1dffece948868) #19, !dbg !9578
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21, i64 %low_buf), !dbg !9578
  %_22.0 = extractvalue { i64, i1 } %12, 0, !dbg !9578
  %_22.1 = extractvalue { i64, i1 } %12, 1, !dbg !9578
  br i1 %_22.1, label %panic, label %bb13, !dbg !9578

bb7:                                              ; preds = %bb3
  %13 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9572
  %14 = getelementptr inbounds i8, ptr %13, i64 2, !dbg !9572
  %u1 = load i16, ptr %14, align 2, !dbg !9572
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !9572
    #dbg_declare(ptr %u.dbg.spill2, !9550, !DIExpression(), !9573)
  store i64 1, ptr %_8, align 8, !dbg !9579
  %15 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9579
  store i64 1, ptr %15, align 8, !dbg !9579
  br label %bb11, !dbg !9580

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9581
  %_u = getelementptr inbounds i8, ptr %16, i64 2, !dbg !9581
  store ptr %_u, ptr %_u.dbg.spill, align 8, !dbg !9581
    #dbg_declare(ptr %_u.dbg.spill, !9555, !DIExpression(), !9582)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE"(ptr align 8 %high, ptr align 8 @alloc_d791eaf358ed821941e2d4cfd804d89b) #19, !dbg !9583
  br i1 %_16, label %bb9, label %bb10, !dbg !9583

bb10:                                             ; preds = %bb6
  %17 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9584
  %18 = getelementptr inbounds i8, ptr %17, i64 2, !dbg !9584
  %_u3 = load i16, ptr %18, align 2, !dbg !9584
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !9584
    #dbg_declare(ptr %_u.dbg.spill4, !9556, !DIExpression(), !9585)
  store i64 0, ptr %_8, align 8, !dbg !9586
  %19 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9586
  store i64 1, ptr %19, align 8, !dbg !9586
  br label %bb11, !dbg !9587

bb9:                                              ; preds = %bb6
  %20 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9581
  %21 = getelementptr inbounds i8, ptr %20, i64 2, !dbg !9581
  %_u5 = load i16, ptr %21, align 2, !dbg !9581
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !9581
    #dbg_declare(ptr %_u.dbg.spill6, !9553, !DIExpression(), !9582)
  store i64 1, ptr %_8, align 8, !dbg !9588
  %22 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9588
  store i64 1, ptr %22, align 8, !dbg !9588
  br label %bb11, !dbg !9589

bb13:                                             ; preds = %bb11
  store i64 %_22.0, ptr %low.dbg.spill7, align 8, !dbg !9578
    #dbg_declare(ptr %low.dbg.spill7, !9558, !DIExpression(), !9590)
  %23 = load i64, ptr %high, align 8, !dbg !9591
  %24 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9591
  %25 = load i64, ptr %24, align 8, !dbg !9591
; call core::option::Option<T>::and_then
  %26 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hd40d2fada271dc15E"(i64 %23, i64 %25, ptr align 8 %high_buf) #19, !dbg !9591
  %high.0 = extractvalue { i64, i64 } %26, 0, !dbg !9591
  %high.1 = extractvalue { i64, i64 } %26, 1, !dbg !9591
  store i64 %high.0, ptr %high.dbg.spill, align 8, !dbg !9591
  %27 = getelementptr inbounds i8, ptr %high.dbg.spill, i64 8, !dbg !9591
  store i64 %high.1, ptr %27, align 8, !dbg !9591
    #dbg_declare(ptr %high.dbg.spill, !9560, !DIExpression(), !9592)
  store i64 %_22.0, ptr %_0, align 8, !dbg !9593
  %28 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !9593
  store i64 %high.0, ptr %28, align 8, !dbg !9593
  %29 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !9593
  store i64 %high.1, ptr %29, align 8, !dbg !9593
  ret void, !dbg !9594

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_e59db0cc494922884add3474fe7ca357) #20, !dbg !9578
  unreachable, !dbg !9578

bb2:                                              ; No predecessors!
  unreachable, !dbg !9569
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h6d263224b728e7f1E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !9595 {
start:
  %high.dbg.spill = alloca [16 x i8], align 8
  %low.dbg.spill7 = alloca [8 x i8], align 8
  %low_buf.dbg.spill = alloca [8 x i8], align 8
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [8 x i8], align 8
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [8 x i8], align 8
  %low.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %high_buf = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %high = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9600, !DIExpression(), !9619)
    #dbg_declare(ptr %high, !9603, !DIExpression(), !9620)
    #dbg_declare(ptr %high_buf, !9606, !DIExpression(), !9621)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h56381cb01a7560a8E"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self) #19, !dbg !9622
  %low = load i64, ptr %_4, align 8, !dbg !9623
  store i64 %low, ptr %low.dbg.spill, align 8, !dbg !9623
    #dbg_declare(ptr %low.dbg.spill, !9601, !DIExpression(), !9624)
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !9625
  %1 = load i64, ptr %0, align 8, !dbg !9625
  %2 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !9625
  %3 = load i64, ptr %2, align 8, !dbg !9625
  store i64 %1, ptr %high, align 8, !dbg !9625
  %4 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9625
  store i64 %3, ptr %4, align 8, !dbg !9625
  %5 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9626
  %6 = load i16, ptr %5, align 8, !dbg !9626
  %_9 = zext i16 %6 to i64, !dbg !9626
  %7 = icmp eq i64 %_9, 0, !dbg !9627
  br i1 %7, label %bb4, label %bb3, !dbg !9627

bb4:                                              ; preds = %start
  store i64 0, ptr %_8, align 8, !dbg !9628
  %8 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9628
  store i64 0, ptr %8, align 8, !dbg !9628
  br label %bb11, !dbg !9628

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9629
  %u = getelementptr inbounds i8, ptr %9, i64 2, !dbg !9629
  store ptr %u, ptr %u.dbg.spill, align 8, !dbg !9629
    #dbg_declare(ptr %u.dbg.spill, !9609, !DIExpression(), !9630)
  %_13 = load i16, ptr %u, align 2, !dbg !9631
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9631
  br i1 %_12, label %bb6, label %bb7, !dbg !9631

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i64, ptr %_8, align 8, !dbg !9632
  store i64 %low_buf, ptr %low_buf.dbg.spill, align 8, !dbg !9632
    #dbg_declare(ptr %low_buf.dbg.spill, !9604, !DIExpression(), !9633)
  %10 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9634
  %11 = load i64, ptr %10, align 8, !dbg !9634
  store i64 %11, ptr %high_buf, align 8, !dbg !9634
; call core::num::<impl usize>::div_ceil
  %_21 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E"(i64 %low, i64 2, ptr align 8 @alloc_2fb5b595c02e90d046a1dffece948868) #19, !dbg !9635
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21, i64 %low_buf), !dbg !9635
  %_22.0 = extractvalue { i64, i1 } %12, 0, !dbg !9635
  %_22.1 = extractvalue { i64, i1 } %12, 1, !dbg !9635
  br i1 %_22.1, label %panic, label %bb13, !dbg !9635

bb7:                                              ; preds = %bb3
  %13 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9629
  %14 = getelementptr inbounds i8, ptr %13, i64 2, !dbg !9629
  %u1 = load i16, ptr %14, align 2, !dbg !9629
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !9629
    #dbg_declare(ptr %u.dbg.spill2, !9607, !DIExpression(), !9630)
  store i64 1, ptr %_8, align 8, !dbg !9636
  %15 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9636
  store i64 1, ptr %15, align 8, !dbg !9636
  br label %bb11, !dbg !9637

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9638
  %_u = getelementptr inbounds i8, ptr %16, i64 2, !dbg !9638
  store ptr %_u, ptr %_u.dbg.spill, align 8, !dbg !9638
    #dbg_declare(ptr %_u.dbg.spill, !9612, !DIExpression(), !9639)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE"(ptr align 8 %high, ptr align 8 @alloc_d791eaf358ed821941e2d4cfd804d89b) #19, !dbg !9640
  br i1 %_16, label %bb9, label %bb10, !dbg !9640

bb10:                                             ; preds = %bb6
  %17 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9641
  %18 = getelementptr inbounds i8, ptr %17, i64 2, !dbg !9641
  %_u3 = load i16, ptr %18, align 2, !dbg !9641
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !9641
    #dbg_declare(ptr %_u.dbg.spill4, !9613, !DIExpression(), !9642)
  store i64 0, ptr %_8, align 8, !dbg !9643
  %19 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9643
  store i64 1, ptr %19, align 8, !dbg !9643
  br label %bb11, !dbg !9644

bb9:                                              ; preds = %bb6
  %20 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9638
  %21 = getelementptr inbounds i8, ptr %20, i64 2, !dbg !9638
  %_u5 = load i16, ptr %21, align 2, !dbg !9638
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !9638
    #dbg_declare(ptr %_u.dbg.spill6, !9610, !DIExpression(), !9639)
  store i64 1, ptr %_8, align 8, !dbg !9645
  %22 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9645
  store i64 1, ptr %22, align 8, !dbg !9645
  br label %bb11, !dbg !9646

bb13:                                             ; preds = %bb11
  store i64 %_22.0, ptr %low.dbg.spill7, align 8, !dbg !9635
    #dbg_declare(ptr %low.dbg.spill7, !9615, !DIExpression(), !9647)
  %23 = load i64, ptr %high, align 8, !dbg !9648
  %24 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9648
  %25 = load i64, ptr %24, align 8, !dbg !9648
; call core::option::Option<T>::and_then
  %26 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hf76144ed688c6ecbE"(i64 %23, i64 %25, ptr align 8 %high_buf) #19, !dbg !9648
  %high.0 = extractvalue { i64, i64 } %26, 0, !dbg !9648
  %high.1 = extractvalue { i64, i64 } %26, 1, !dbg !9648
  store i64 %high.0, ptr %high.dbg.spill, align 8, !dbg !9648
  %27 = getelementptr inbounds i8, ptr %high.dbg.spill, i64 8, !dbg !9648
  store i64 %high.1, ptr %27, align 8, !dbg !9648
    #dbg_declare(ptr %high.dbg.spill, !9617, !DIExpression(), !9649)
  store i64 %_22.0, ptr %_0, align 8, !dbg !9650
  %28 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !9650
  store i64 %high.0, ptr %28, align 8, !dbg !9650
  %29 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !9650
  store i64 %high.1, ptr %29, align 8, !dbg !9650
  ret void, !dbg !9651

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_e59db0cc494922884add3474fe7ca357) #20, !dbg !9635
  unreachable, !dbg !9635

bb2:                                              ; No predecessors!
  unreachable, !dbg !9626
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7a4cf7d250e8c107E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !9652 {
start:
  %high.dbg.spill = alloca [16 x i8], align 8
  %low.dbg.spill7 = alloca [8 x i8], align 8
  %low_buf.dbg.spill = alloca [8 x i8], align 8
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [8 x i8], align 8
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [8 x i8], align 8
  %low.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %high_buf = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %high = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9657, !DIExpression(), !9676)
    #dbg_declare(ptr %high, !9660, !DIExpression(), !9677)
    #dbg_declare(ptr %high_buf, !9663, !DIExpression(), !9678)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h93fc57080880152fE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self) #19, !dbg !9679
  %low = load i64, ptr %_4, align 8, !dbg !9680
  store i64 %low, ptr %low.dbg.spill, align 8, !dbg !9680
    #dbg_declare(ptr %low.dbg.spill, !9658, !DIExpression(), !9681)
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !9682
  %1 = load i64, ptr %0, align 8, !dbg !9682
  %2 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !9682
  %3 = load i64, ptr %2, align 8, !dbg !9682
  store i64 %1, ptr %high, align 8, !dbg !9682
  %4 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9682
  store i64 %3, ptr %4, align 8, !dbg !9682
  %5 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9683
  %6 = load i16, ptr %5, align 8, !dbg !9683
  %_9 = zext i16 %6 to i64, !dbg !9683
  %7 = icmp eq i64 %_9, 0, !dbg !9684
  br i1 %7, label %bb4, label %bb3, !dbg !9684

bb4:                                              ; preds = %start
  store i64 0, ptr %_8, align 8, !dbg !9685
  %8 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9685
  store i64 0, ptr %8, align 8, !dbg !9685
  br label %bb11, !dbg !9685

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9686
  %u = getelementptr inbounds i8, ptr %9, i64 2, !dbg !9686
  store ptr %u, ptr %u.dbg.spill, align 8, !dbg !9686
    #dbg_declare(ptr %u.dbg.spill, !9666, !DIExpression(), !9687)
  %_13 = load i16, ptr %u, align 2, !dbg !9688
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9688
  br i1 %_12, label %bb6, label %bb7, !dbg !9688

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i64, ptr %_8, align 8, !dbg !9689
  store i64 %low_buf, ptr %low_buf.dbg.spill, align 8, !dbg !9689
    #dbg_declare(ptr %low_buf.dbg.spill, !9661, !DIExpression(), !9690)
  %10 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9691
  %11 = load i64, ptr %10, align 8, !dbg !9691
  store i64 %11, ptr %high_buf, align 8, !dbg !9691
; call core::num::<impl usize>::div_ceil
  %_21 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E"(i64 %low, i64 2, ptr align 8 @alloc_2fb5b595c02e90d046a1dffece948868) #19, !dbg !9692
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21, i64 %low_buf), !dbg !9692
  %_22.0 = extractvalue { i64, i1 } %12, 0, !dbg !9692
  %_22.1 = extractvalue { i64, i1 } %12, 1, !dbg !9692
  br i1 %_22.1, label %panic, label %bb13, !dbg !9692

bb7:                                              ; preds = %bb3
  %13 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9686
  %14 = getelementptr inbounds i8, ptr %13, i64 2, !dbg !9686
  %u1 = load i16, ptr %14, align 2, !dbg !9686
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !9686
    #dbg_declare(ptr %u.dbg.spill2, !9664, !DIExpression(), !9687)
  store i64 1, ptr %_8, align 8, !dbg !9693
  %15 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9693
  store i64 1, ptr %15, align 8, !dbg !9693
  br label %bb11, !dbg !9694

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9695
  %_u = getelementptr inbounds i8, ptr %16, i64 2, !dbg !9695
  store ptr %_u, ptr %_u.dbg.spill, align 8, !dbg !9695
    #dbg_declare(ptr %_u.dbg.spill, !9669, !DIExpression(), !9696)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE"(ptr align 8 %high, ptr align 8 @alloc_d791eaf358ed821941e2d4cfd804d89b) #19, !dbg !9697
  br i1 %_16, label %bb9, label %bb10, !dbg !9697

bb10:                                             ; preds = %bb6
  %17 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9698
  %18 = getelementptr inbounds i8, ptr %17, i64 2, !dbg !9698
  %_u3 = load i16, ptr %18, align 2, !dbg !9698
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !9698
    #dbg_declare(ptr %_u.dbg.spill4, !9670, !DIExpression(), !9699)
  store i64 0, ptr %_8, align 8, !dbg !9700
  %19 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9700
  store i64 1, ptr %19, align 8, !dbg !9700
  br label %bb11, !dbg !9701

bb9:                                              ; preds = %bb6
  %20 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !9695
  %21 = getelementptr inbounds i8, ptr %20, i64 2, !dbg !9695
  %_u5 = load i16, ptr %21, align 2, !dbg !9695
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !9695
    #dbg_declare(ptr %_u.dbg.spill6, !9667, !DIExpression(), !9696)
  store i64 1, ptr %_8, align 8, !dbg !9702
  %22 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9702
  store i64 1, ptr %22, align 8, !dbg !9702
  br label %bb11, !dbg !9703

bb13:                                             ; preds = %bb11
  store i64 %_22.0, ptr %low.dbg.spill7, align 8, !dbg !9692
    #dbg_declare(ptr %low.dbg.spill7, !9672, !DIExpression(), !9704)
  %23 = load i64, ptr %high, align 8, !dbg !9705
  %24 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9705
  %25 = load i64, ptr %24, align 8, !dbg !9705
; call core::option::Option<T>::and_then
  %26 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hc666df8f06b3a2b2E"(i64 %23, i64 %25, ptr align 8 %high_buf) #19, !dbg !9705
  %high.0 = extractvalue { i64, i64 } %26, 0, !dbg !9705
  %high.1 = extractvalue { i64, i64 } %26, 1, !dbg !9705
  store i64 %high.0, ptr %high.dbg.spill, align 8, !dbg !9705
  %27 = getelementptr inbounds i8, ptr %high.dbg.spill, i64 8, !dbg !9705
  store i64 %high.1, ptr %27, align 8, !dbg !9705
    #dbg_declare(ptr %high.dbg.spill, !9674, !DIExpression(), !9706)
  store i64 %_22.0, ptr %_0, align 8, !dbg !9707
  %28 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !9707
  store i64 %high.0, ptr %28, align 8, !dbg !9707
  %29 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !9707
  store i64 %high.1, ptr %29, align 8, !dbg !9707
  ret void, !dbg !9708

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_e59db0cc494922884add3474fe7ca357) #20, !dbg !9692
  unreachable, !dbg !9692

bb2:                                              ; No predecessors!
  unreachable, !dbg !9683
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbea72e21e6a48405E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !9709 {
start:
  %high.dbg.spill = alloca [16 x i8], align 8
  %low.dbg.spill7 = alloca [8 x i8], align 8
  %low_buf.dbg.spill = alloca [8 x i8], align 8
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [8 x i8], align 8
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [8 x i8], align 8
  %low.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %high_buf = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %high = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9714, !DIExpression(), !9733)
    #dbg_declare(ptr %high, !9717, !DIExpression(), !9734)
    #dbg_declare(ptr %high_buf, !9720, !DIExpression(), !9735)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h162fd55153b4dc0dE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %self) #19, !dbg !9736
  %low = load i64, ptr %_4, align 8, !dbg !9737
  store i64 %low, ptr %low.dbg.spill, align 8, !dbg !9737
    #dbg_declare(ptr %low.dbg.spill, !9715, !DIExpression(), !9738)
  %0 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !9739
  %1 = load i64, ptr %0, align 8, !dbg !9739
  %2 = getelementptr inbounds i8, ptr %0, i64 8, !dbg !9739
  %3 = load i64, ptr %2, align 8, !dbg !9739
  store i64 %1, ptr %high, align 8, !dbg !9739
  %4 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9739
  store i64 %3, ptr %4, align 8, !dbg !9739
  %5 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9740
  %6 = load i16, ptr %5, align 8, !dbg !9740
  %_9 = zext i16 %6 to i64, !dbg !9740
  %7 = icmp eq i64 %_9, 0, !dbg !9741
  br i1 %7, label %bb4, label %bb3, !dbg !9741

bb4:                                              ; preds = %start
  store i64 0, ptr %_8, align 8, !dbg !9742
  %8 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9742
  store i64 0, ptr %8, align 8, !dbg !9742
  br label %bb11, !dbg !9742

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9743
  %u = getelementptr inbounds i8, ptr %9, i64 2, !dbg !9743
  store ptr %u, ptr %u.dbg.spill, align 8, !dbg !9743
    #dbg_declare(ptr %u.dbg.spill, !9723, !DIExpression(), !9744)
  %_13 = load i16, ptr %u, align 2, !dbg !9745
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E"(i16 zeroext %_13) #19, !dbg !9745
  br i1 %_12, label %bb6, label %bb7, !dbg !9745

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i64, ptr %_8, align 8, !dbg !9746
  store i64 %low_buf, ptr %low_buf.dbg.spill, align 8, !dbg !9746
    #dbg_declare(ptr %low_buf.dbg.spill, !9718, !DIExpression(), !9747)
  %10 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9748
  %11 = load i64, ptr %10, align 8, !dbg !9748
  store i64 %11, ptr %high_buf, align 8, !dbg !9748
; call core::num::<impl usize>::div_ceil
  %_21 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E"(i64 %low, i64 2, ptr align 8 @alloc_2fb5b595c02e90d046a1dffece948868) #19, !dbg !9749
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21, i64 %low_buf), !dbg !9749
  %_22.0 = extractvalue { i64, i1 } %12, 0, !dbg !9749
  %_22.1 = extractvalue { i64, i1 } %12, 1, !dbg !9749
  br i1 %_22.1, label %panic, label %bb13, !dbg !9749

bb7:                                              ; preds = %bb3
  %13 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9743
  %14 = getelementptr inbounds i8, ptr %13, i64 2, !dbg !9743
  %u1 = load i16, ptr %14, align 2, !dbg !9743
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !9743
    #dbg_declare(ptr %u.dbg.spill2, !9721, !DIExpression(), !9744)
  store i64 1, ptr %_8, align 8, !dbg !9750
  %15 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9750
  store i64 1, ptr %15, align 8, !dbg !9750
  br label %bb11, !dbg !9751

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9752
  %_u = getelementptr inbounds i8, ptr %16, i64 2, !dbg !9752
  store ptr %_u, ptr %_u.dbg.spill, align 8, !dbg !9752
    #dbg_declare(ptr %_u.dbg.spill, !9726, !DIExpression(), !9753)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE"(ptr align 8 %high, ptr align 8 @alloc_d791eaf358ed821941e2d4cfd804d89b) #19, !dbg !9754
  br i1 %_16, label %bb9, label %bb10, !dbg !9754

bb10:                                             ; preds = %bb6
  %17 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9755
  %18 = getelementptr inbounds i8, ptr %17, i64 2, !dbg !9755
  %_u3 = load i16, ptr %18, align 2, !dbg !9755
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !9755
    #dbg_declare(ptr %_u.dbg.spill4, !9727, !DIExpression(), !9756)
  store i64 0, ptr %_8, align 8, !dbg !9757
  %19 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9757
  store i64 1, ptr %19, align 8, !dbg !9757
  br label %bb11, !dbg !9758

bb9:                                              ; preds = %bb6
  %20 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9752
  %21 = getelementptr inbounds i8, ptr %20, i64 2, !dbg !9752
  %_u5 = load i16, ptr %21, align 2, !dbg !9752
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !9752
    #dbg_declare(ptr %_u.dbg.spill6, !9724, !DIExpression(), !9753)
  store i64 1, ptr %_8, align 8, !dbg !9759
  %22 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !9759
  store i64 1, ptr %22, align 8, !dbg !9759
  br label %bb11, !dbg !9760

bb13:                                             ; preds = %bb11
  store i64 %_22.0, ptr %low.dbg.spill7, align 8, !dbg !9749
    #dbg_declare(ptr %low.dbg.spill7, !9729, !DIExpression(), !9761)
  %23 = load i64, ptr %high, align 8, !dbg !9762
  %24 = getelementptr inbounds i8, ptr %high, i64 8, !dbg !9762
  %25 = load i64, ptr %24, align 8, !dbg !9762
; call core::option::Option<T>::and_then
  %26 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h1c60e8398fa148feE"(i64 %23, i64 %25, ptr align 8 %high_buf) #19, !dbg !9762
  %high.0 = extractvalue { i64, i64 } %26, 0, !dbg !9762
  %high.1 = extractvalue { i64, i64 } %26, 1, !dbg !9762
  store i64 %high.0, ptr %high.dbg.spill, align 8, !dbg !9762
  %27 = getelementptr inbounds i8, ptr %high.dbg.spill, i64 8, !dbg !9762
  store i64 %high.1, ptr %27, align 8, !dbg !9762
    #dbg_declare(ptr %high.dbg.spill, !9731, !DIExpression(), !9763)
  store i64 %_22.0, ptr %_0, align 8, !dbg !9764
  %28 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !9764
  store i64 %high.0, ptr %28, align 8, !dbg !9764
  %29 = getelementptr inbounds i8, ptr %28, i64 8, !dbg !9764
  store i64 %high.1, ptr %29, align 8, !dbg !9764
  ret void, !dbg !9765

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_e59db0cc494922884add3474fe7ca357) #20, !dbg !9749
  unreachable, !dbg !9749

bb2:                                              ; No predecessors!
  unreachable, !dbg !9740
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h1e9d1ece3c4aa634E"(ptr align 8 %0, i64 %h) unnamed_addr #1 !dbg !9766 {
start:
  %h.dbg.spill = alloca [8 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !9771, !DIExpression(DW_OP_deref), !9772)
  store i64 %h, ptr %h.dbg.spill, align 8
    #dbg_declare(ptr %h.dbg.spill, !9770, !DIExpression(), !9773)
  %_4 = load ptr, ptr %_1, align 8, !dbg !9774
  %_3 = load i64, ptr %_4, align 8, !dbg !9774
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %h, i64 %_3) #19, !dbg !9775
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !9775
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !9775
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !9776
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !9776
  ret { i64, i64 } %3, !dbg !9776
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h64121ca5b9a986adE"(ptr align 8 %0, i64 %h) unnamed_addr #1 !dbg !9777 {
start:
  %h.dbg.spill = alloca [8 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !9782, !DIExpression(DW_OP_deref), !9783)
  store i64 %h, ptr %h.dbg.spill, align 8
    #dbg_declare(ptr %h.dbg.spill, !9781, !DIExpression(), !9784)
  %_4 = load ptr, ptr %_1, align 8, !dbg !9785
  %_3 = load i64, ptr %_4, align 8, !dbg !9785
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %h, i64 %_3) #19, !dbg !9786
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !9786
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !9786
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !9787
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !9787
  ret { i64, i64 } %3, !dbg !9787
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h75f89146eef50ff0E"(ptr align 8 %0, i64 %h) unnamed_addr #1 !dbg !9788 {
start:
  %h.dbg.spill = alloca [8 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !9793, !DIExpression(DW_OP_deref), !9794)
  store i64 %h, ptr %h.dbg.spill, align 8
    #dbg_declare(ptr %h.dbg.spill, !9792, !DIExpression(), !9795)
  %_4 = load ptr, ptr %_1, align 8, !dbg !9796
  %_3 = load i64, ptr %_4, align 8, !dbg !9796
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %h, i64 %_3) #19, !dbg !9797
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !9797
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !9797
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !9798
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !9798
  ret { i64, i64 } %3, !dbg !9798
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17hb4feb60f0b9940f5E"(ptr align 8 %0, i64 %h) unnamed_addr #1 !dbg !9799 {
start:
  %h.dbg.spill = alloca [8 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !9804, !DIExpression(DW_OP_deref), !9805)
  store i64 %h, ptr %h.dbg.spill, align 8
    #dbg_declare(ptr %h.dbg.spill, !9803, !DIExpression(), !9806)
  %_4 = load ptr, ptr %_1, align 8, !dbg !9807
  %_3 = load i64, ptr %_4, align 8, !dbg !9807
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %h, i64 %_3) #19, !dbg !9808
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !9808
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !9808
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !9809
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !9809
  ret { i64, i64 } %3, !dbg !9809
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17hc81ae4410c8bd3c4E"(ptr align 8 %0, i64 %h) unnamed_addr #1 !dbg !9810 {
start:
  %h.dbg.spill = alloca [8 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !9815, !DIExpression(DW_OP_deref), !9816)
  store i64 %h, ptr %h.dbg.spill, align 8
    #dbg_declare(ptr %h.dbg.spill, !9814, !DIExpression(), !9817)
  %_4 = load ptr, ptr %_1, align 8, !dbg !9818
  %_3 = load i64, ptr %_4, align 8, !dbg !9818
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %h, i64 %_3) #19, !dbg !9819
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !9819
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !9819
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !9820
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !9820
  ret { i64, i64 } %3, !dbg !9820
}

; alloc::raw_vec::capacity_overflow
; Function Attrs: noinline noredzone noreturn nounwind
define internal void @_ZN5alloc7raw_vec17capacity_overflow17hf37f287b1e192c14E(ptr align 8 %0) unnamed_addr #4 !dbg !9821 {
start:
  %_2 = alloca [48 x i8], align 8
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_2, ptr align 8 @alloc_11d257f5ed6cc7fc38feaa801053bac6) #19, !dbg !9825
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_2, ptr align 8 %0) #20, !dbg !9825
  unreachable, !dbg !9825
}

; alloc::raw_vec::Cap::new
; Function Attrs: noredzone nounwind
define dso_local i64 @_ZN5alloc7raw_vec3Cap3new17h0219e73abd01dbcdE(i64 %cap) unnamed_addr #0 !dbg !9826 {
start:
  %cap.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !9831, !DIExpression(), !9832)
  br label %bb2, !dbg !9833

bb2:                                              ; preds = %start
  store i64 %cap, ptr %_0, align 8, !dbg !9834
  br label %bb3, !dbg !9835

bb3:                                              ; preds = %bb2
  %0 = load i64, ptr %_0, align 8, !dbg !9836
  ret i64 %0, !dbg !9836

bb1:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T>::new
; Function Attrs: noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h19dfa1b128272f2cE"() unnamed_addr #0 !dbg !9837 {
start:
; call alloc::raw_vec::RawVec<T,A>::new_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0b30a224f2f12022E"() #19, !dbg !9841
  %_0.0 = extractvalue { i64, ptr } %0, 0, !dbg !9841
  %_0.1 = extractvalue { i64, ptr } %0, 1, !dbg !9841
  %1 = insertvalue { i64, ptr } poison, i64 %_0.0, 0, !dbg !9842
  %2 = insertvalue { i64, ptr } %1, ptr %_0.1, 1, !dbg !9842
  ret { i64, ptr } %2, !dbg !9842
}

; alloc::raw_vec::RawVec<T>::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hba3c876e6bbe06e0E"(i64 %capacity, ptr align 8 %0) unnamed_addr #1 !dbg !9843 {
start:
  %capacity.dbg.spill = alloca [8 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !9848, !DIExpression(), !9849)
; call alloc::raw_vec::RawVecInner::with_capacity
  %1 = call { i64, ptr } @_ZN5alloc7raw_vec11RawVecInner13with_capacity17h78338a2134461b32E(i64 %capacity, i64 1, i64 1, ptr align 8 %0) #19, !dbg !9850
  %_2.0 = extractvalue { i64, ptr } %1, 0, !dbg !9850
  %_2.1 = extractvalue { i64, ptr } %1, 1, !dbg !9850
  %2 = insertvalue { i64, ptr } poison, i64 %_2.0, 0, !dbg !9851
  %3 = insertvalue { i64, ptr } %2, ptr %_2.1, 1, !dbg !9851
  ret { i64, ptr } %3, !dbg !9851
}

; alloc::raw_vec::RawVecInner::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, ptr } @_ZN5alloc7raw_vec11RawVecInner13with_capacity17h78338a2134461b32E(i64 %capacity, i64 %elem_layout.0, i64 %elem_layout.1, ptr align 8 %0) unnamed_addr #1 !dbg !9852 {
start:
  %err.dbg.spill = alloca [16 x i8], align 8
  %res.dbg.spill = alloca [16 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [1 x i8], align 1
  %_3 = alloca [24 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !9857, !DIExpression(), !9863)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %1, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !9858, !DIExpression(), !9864)
  store i8 0, ptr %_4, align 1, !dbg !9865
  %2 = load i8, ptr %_4, align 1, !dbg !9866
  %3 = trunc i8 %2 to i1, !dbg !9866
; call alloc::raw_vec::RawVecInner<A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h309b6bc6f7f642b6E"(ptr sret([24 x i8]) align 8 %_3, i64 %capacity, i1 zeroext %3, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !9866
  %_5 = load i64, ptr %_3, align 8, !dbg !9866
  %4 = icmp eq i64 %_5, 0, !dbg !9867
  br i1 %4, label %bb4, label %bb3, !dbg !9867

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !9868
  %res.0 = load i64, ptr %5, align 8, !dbg !9868
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !9868
  %res.1 = load ptr, ptr %6, align 8, !dbg !9868
  store i64 %res.0, ptr %res.dbg.spill, align 8, !dbg !9868
  %7 = getelementptr inbounds i8, ptr %res.dbg.spill, i64 8, !dbg !9868
  store ptr %res.1, ptr %7, align 8, !dbg !9868
    #dbg_declare(ptr %res.dbg.spill, !9859, !DIExpression(), !9869)
  %8 = insertvalue { i64, ptr } poison, i64 %res.0, 0, !dbg !9870
  %9 = insertvalue { i64, ptr } %8, ptr %res.1, 1, !dbg !9870
  ret { i64, ptr } %9, !dbg !9870

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !9871
  %err.0 = load i64, ptr %10, align 8, !dbg !9871
  %11 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !9871
  %err.1 = load i64, ptr %11, align 8, !dbg !9871
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !9871
  %12 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !9871
  store i64 %err.1, ptr %12, align 8, !dbg !9871
    #dbg_declare(ptr %err.dbg.spill, !9861, !DIExpression(), !9872)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %err.0, i64 %err.1, ptr align 8 %0) #20, !dbg !9873
  unreachable, !dbg !9873

bb2:                                              ; No predecessors!
  unreachable, !dbg !9866
}

; alloc::raw_vec::min_non_zero_cap
; Function Attrs: noredzone nounwind
define dso_local i64 @_ZN5alloc7raw_vec16min_non_zero_cap17h013b9e4a5a463f60E(i64 %size) unnamed_addr #0 !dbg !9874 {
start:
  %size.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !9878, !DIExpression(), !9879)
  %0 = icmp eq i64 %size, 1, !dbg !9880
  br i1 %0, label %bb1, label %bb2, !dbg !9880

bb1:                                              ; preds = %start
  store i64 8, ptr %_0, align 8, !dbg !9881
  br label %bb5, !dbg !9882

bb2:                                              ; preds = %start
  %_2 = icmp ule i64 %size, 1024, !dbg !9883
  br i1 %_2, label %bb3, label %bb4, !dbg !9883

bb5:                                              ; preds = %bb3, %bb4, %bb1
  %1 = load i64, ptr %_0, align 8, !dbg !9884
  ret i64 %1, !dbg !9884

bb4:                                              ; preds = %bb2
  store i64 1, ptr %_0, align 8, !dbg !9885
  br label %bb5, !dbg !9886

bb3:                                              ; preds = %bb2
  store i64 4, ptr %_0, align 8, !dbg !9887
  br label %bb5, !dbg !9886
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0b30a224f2f12022E"() unnamed_addr #1 !dbg !9888 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %alloc.dbg.spill, !9893, !DIExpression(), !9894)
; call alloc::raw_vec::RawVecInner<A>::new_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h5e79d016f74c3295E"(i64 1) #19, !dbg !9895
  %_2.0 = extractvalue { i64, ptr } %0, 0, !dbg !9895
  %_2.1 = extractvalue { i64, ptr } %0, 1, !dbg !9895
  %1 = insertvalue { i64, ptr } poison, i64 %_2.0, 0, !dbg !9896
  %2 = insertvalue { i64, ptr } %1, ptr %_2.1, 1, !dbg !9896
  ret { i64, ptr } %2, !dbg !9896
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf98b5c351e817222E"(i64 %capacity, ptr align 8 %0) unnamed_addr #1 !dbg !9897 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [8 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !9902, !DIExpression(), !9904)
    #dbg_declare(ptr %alloc.dbg.spill, !9903, !DIExpression(), !9905)
; call alloc::raw_vec::RawVecInner<A>::with_capacity_in
  %1 = call { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17h081cff6a0cbe9ec7E"(i64 %capacity, i64 1, i64 1, ptr align 8 %0) #19, !dbg !9906
  %_3.0 = extractvalue { i64, ptr } %1, 0, !dbg !9906
  %_3.1 = extractvalue { i64, ptr } %1, 1, !dbg !9906
  %2 = insertvalue { i64, ptr } poison, i64 %_3.0, 0, !dbg !9907
  %3 = insertvalue { i64, ptr } %2, ptr %_3.1, 1, !dbg !9907
  ret { i64, ptr } %3, !dbg !9907
}

; alloc::raw_vec::RawVec<T,A>::into_box
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h2602add354448feaE"(i64 %0, ptr %1, i64 %len) unnamed_addr #0 !dbg !9908 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %value.dbg.spill.i = alloca [16 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %me = alloca [16 x i8], align 8
  %_7 = alloca [48 x i8], align 8
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %2, align 8
    #dbg_declare(ptr %self, !9917, !DIExpression(), !9926)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !9918, !DIExpression(), !9927)
    #dbg_declare(ptr %me, !9919, !DIExpression(), !9928)
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_4 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE"(ptr align 8 %self) #19, !dbg !9929
  %_3 = icmp ule i64 %len, %_4, !dbg !9930
  br i1 %_3, label %bb4, label %bb2, !dbg !9930

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_7, ptr align 8 @alloc_dc2afad2f62918e2eed91adbf0bed9ff) #19, !dbg !9931
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_7, ptr align 8 @alloc_7ebc97ee82ef8190ac95da0d9c6f9d43) #20, !dbg !9931
  unreachable, !dbg !9931

bb4:                                              ; preds = %start
  %_10.0 = load i64, ptr %self, align 8, !dbg !9932
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !9932
  %_10.1 = load ptr, ptr %3, align 8, !dbg !9932
  store i64 %_10.0, ptr %value.dbg.spill.i, align 8
  %4 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i64 8
  store ptr %_10.1, ptr %4, align 8
    #dbg_declare(ptr %value.dbg.spill.i, !9933, !DIExpression(), !9940)
  %5 = insertvalue { i64, ptr } poison, i64 %_10.0, 0, !dbg !9942
  %6 = insertvalue { i64, ptr } %5, ptr %_10.1, 1, !dbg !9942
  %7 = extractvalue { i64, ptr } %6, 0, !dbg !9943
  %8 = extractvalue { i64, ptr } %6, 1, !dbg !9943
  store i64 %7, ptr %me, align 8, !dbg !9943
  %9 = getelementptr inbounds i8, ptr %me, i64 8, !dbg !9943
  store ptr %8, ptr %9, align 8, !dbg !9943
  store ptr %me, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !9944, !DIExpression(), !9952)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_13 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E"(ptr align 8 %me) #19, !dbg !9954
; call core::ptr::slice_from_raw_parts_mut
  %10 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h6d5a020ae49863f9E(ptr %_13, i64 %len) #19, !dbg !9955
  %slice.0 = extractvalue { ptr, i64 } %10, 0, !dbg !9955
  %slice.1 = extractvalue { ptr, i64 } %10, 1, !dbg !9955
  store ptr %slice.0, ptr %slice.dbg.spill, align 8, !dbg !9955
  %11 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8, !dbg !9955
  store i64 %slice.1, ptr %11, align 8, !dbg !9955
    #dbg_declare(ptr %slice.dbg.spill, !9924, !DIExpression(), !9956)
  store ptr %me, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !9944, !DIExpression(), !9957)
  %_18 = getelementptr inbounds i8, ptr %me, i64 16, !dbg !9959
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf0e7eddf83f137d7E(ptr %_18) #19, !dbg !9960
; call alloc::boxed::Box<T,A>::from_raw_in
  %12 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h8ce9e3824757248aE"(ptr %slice.0, i64 %slice.1) #19, !dbg !9961
  %_0.0 = extractvalue { ptr, i64 } %12, 0, !dbg !9961
  %_0.1 = extractvalue { ptr, i64 } %12, 1, !dbg !9961
  %13 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !9962
  %14 = insertvalue { ptr, i64 } %13, i64 %_0.1, 1, !dbg !9962
  ret { ptr, i64 } %14, !dbg !9962
}

; alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hee2af04e0fde8fafE"(ptr %ptr, i64 %capacity) unnamed_addr #1 !dbg !9963 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %capacity.dbg.spill4 = alloca [8 x i8], align 8
  %ptr.dbg.spill2 = alloca [8 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !9968, !DIExpression(), !9975)
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !9969, !DIExpression(), !9976)
    #dbg_declare(ptr %alloc.dbg.spill, !9970, !DIExpression(), !9977)
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !9978, !DIExpression(), !9983)
  store ptr %ptr, ptr %ptr.dbg.spill2, align 8, !dbg !9985
    #dbg_declare(ptr %ptr.dbg.spill2, !9971, !DIExpression(), !9986)
; call alloc::raw_vec::Cap::new
  %capacity3 = call i64 @_ZN5alloc7raw_vec3Cap3new17h0219e73abd01dbcdE(i64 %capacity) #19, !dbg !9987
  store i64 %capacity3, ptr %capacity.dbg.spill4, align 8, !dbg !9987
    #dbg_declare(ptr %capacity.dbg.spill4, !9973, !DIExpression(), !9988)
; call alloc::raw_vec::RawVecInner<A>::from_raw_parts_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17h43dd2dd595bf7e79E"(ptr %ptr, i64 %capacity3) #19, !dbg !9989
  %_6.0 = extractvalue { i64, ptr } %0, 0, !dbg !9989
  %_6.1 = extractvalue { i64, ptr } %0, 1, !dbg !9989
  %1 = insertvalue { i64, ptr } poison, i64 %_6.0, 0, !dbg !9990
  %2 = insertvalue { i64, ptr } %1, ptr %_6.1, 1, !dbg !9990
  ret { i64, ptr } %2, !dbg !9990
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E"(ptr align 8 %self) unnamed_addr #1 !dbg !9991 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !9996, !DIExpression(), !9997)
; call alloc::raw_vec::RawVecInner<A>::ptr
  %_0 = call ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17hd6a3c9f6f90e86eeE"(ptr align 8 %self) #19, !dbg !9998
  ret ptr %_0, !dbg !9999
}

; alloc::raw_vec::RawVec<T,A>::capacity
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE"(ptr align 8 %self) unnamed_addr #1 !dbg !10000 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10005, !DIExpression(), !10006)
; call alloc::raw_vec::RawVecInner<A>::capacity
  %_0 = call i64 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17he20cf9ee637f6c88E"(ptr align 8 %self, i64 1) #19, !dbg !10007
  ret i64 %_0, !dbg !10008
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17hb5286c63e3c22fabE"(ptr align 8 %self) unnamed_addr #1 !dbg !10009 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10015, !DIExpression(), !10016)
; call alloc::raw_vec::RawVecInner<A>::allocator
  %_0 = call align 1 ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17hd6c9d1a9941d3700E"(ptr align 8 %self) #19, !dbg !10017
  ret ptr %_0, !dbg !10018
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfe162141bb17885dE"(ptr align 8 %self, i64 %len, i64 %additional, ptr align 8 %0) unnamed_addr #1 !dbg !10019 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10025, !DIExpression(), !10028)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10026, !DIExpression(), !10029)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10027, !DIExpression(), !10030)
; call alloc::raw_vec::RawVecInner<A>::reserve
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17hdf89b6a9e98ad900E"(ptr align 8 %self, i64 %len, i64 %additional, i64 1, i64 1, ptr align 8 %0) #19, !dbg !10031
  ret void, !dbg !10032
}

; alloc::raw_vec::RawVec<T,A>::grow_one
; Function Attrs: noinline noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h6bb6430105e62c38E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #5 !dbg !10033 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10038, !DIExpression(), !10039)
; call alloc::raw_vec::RawVecInner<A>::grow_one
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17ha3a69cc432d0aea0E"(ptr align 8 %self, i64 1, i64 1, ptr align 8 %0) #19, !dbg !10040
  ret void, !dbg !10041
}

; alloc::raw_vec::RawVec<T,A>::try_reserve
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h45f419b025448998E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !10042 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10047, !DIExpression(), !10050)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10048, !DIExpression(), !10051)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10049, !DIExpression(), !10052)
; call alloc::raw_vec::RawVecInner<A>::try_reserve
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17hbb93dc4b1c763386E"(ptr align 8 %self, i64 %len, i64 %additional, i64 1, i64 1) #19, !dbg !10053
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !10053
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !10053
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !10054
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !10054
  ret { i64, i64 } %2, !dbg !10054
}

; alloc::raw_vec::RawVec<T,A>::reserve_exact
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h4fb005f774d65aa5E"(ptr align 8 %self, i64 %len, i64 %additional, ptr align 8 %0) unnamed_addr #0 !dbg !10055 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10058, !DIExpression(), !10061)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10059, !DIExpression(), !10062)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10060, !DIExpression(), !10063)
; call alloc::raw_vec::RawVecInner<A>::reserve_exact
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h17e04bf2f72d32f7E"(ptr align 8 %self, i64 %len, i64 %additional, i64 1, i64 1, ptr align 8 %0) #19, !dbg !10064
  ret void, !dbg !10065
}

; alloc::raw_vec::RawVec<T,A>::try_reserve_exact
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h555185e7175c9440E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !10066 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10069, !DIExpression(), !10072)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10070, !DIExpression(), !10073)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10071, !DIExpression(), !10074)
; call alloc::raw_vec::RawVecInner<A>::try_reserve_exact
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17h9e3b900bf6abbe63E"(ptr align 8 %self, i64 %len, i64 %additional, i64 1, i64 1) #19, !dbg !10075
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !10075
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !10075
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !10076
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !10076
  ret { i64, i64 } %2, !dbg !10076
}

; alloc::raw_vec::RawVec<T,A>::shrink_to_fit
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17hdf153631dd09b4f0E"(ptr align 8 %self, i64 %cap, ptr align 8 %0) unnamed_addr #1 !dbg !10077 {
start:
  %cap.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10082, !DIExpression(), !10084)
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10083, !DIExpression(), !10085)
; call alloc::raw_vec::RawVecInner<A>::shrink_to_fit
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h9a56e8880d89d81bE"(ptr align 8 %self, i64 %cap, i64 1, i64 1, ptr align 8 %0) #19, !dbg !10086
  ret void, !dbg !10087
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h320ebc5f8ac34099E"(ptr align 8 %self) unnamed_addr #0 !dbg !10088 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10093, !DIExpression(), !10094)
; call alloc::raw_vec::RawVecInner<A>::deallocate
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17h8a6de52b9ab0c5bbE"(ptr align 8 %self, i64 1, i64 1) #19, !dbg !10095
  ret void, !dbg !10096
}

; alloc::raw_vec::RawVecInner<A>::new_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h5e79d016f74c3295E"(i64 %align) unnamed_addr #1 !dbg !10097 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %alloc.dbg.spill, !10102, !DIExpression(), !10106)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !10103, !DIExpression(), !10107)
  %ptr = getelementptr i8, ptr null, i64 %align, !dbg !10108
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10108
    #dbg_declare(ptr %ptr.dbg.spill, !10104, !DIExpression(), !10109)
  %0 = insertvalue { i64, ptr } { i64 0, ptr poison }, ptr %ptr, 1, !dbg !10110
  ret { i64, ptr } %0, !dbg !10110
}

; alloc::raw_vec::RawVecInner<A>::with_capacity_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17h081cff6a0cbe9ec7E"(i64 %capacity, i64 %elem_layout.0, i64 %elem_layout.1, ptr align 8 %0) unnamed_addr #1 !dbg !10111 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %err.dbg.spill = alloca [16 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %this = alloca [16 x i8], align 8
  %_5 = alloca [1 x i8], align 1
  %_4 = alloca [24 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !10116, !DIExpression(), !10123)
    #dbg_declare(ptr %alloc.dbg.spill, !10117, !DIExpression(), !10124)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %1, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10118, !DIExpression(), !10125)
    #dbg_declare(ptr %this, !10119, !DIExpression(), !10126)
  store i8 0, ptr %_5, align 1, !dbg !10127
  %2 = load i8, ptr %_5, align 1, !dbg !10128
  %3 = trunc i8 %2 to i1, !dbg !10128
; call alloc::raw_vec::RawVecInner<A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h309b6bc6f7f642b6E"(ptr sret([24 x i8]) align 8 %_4, i64 %capacity, i1 zeroext %3, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10128
  %_6 = load i64, ptr %_4, align 8, !dbg !10128
  %4 = icmp eq i64 %_6, 0, !dbg !10129
  br i1 %4, label %bb4, label %bb3, !dbg !10129

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10130
  %6 = load i64, ptr %5, align 8, !dbg !10130
  %7 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !10130
  %8 = load ptr, ptr %7, align 8, !dbg !10130
  store i64 %6, ptr %this, align 8, !dbg !10130
  %9 = getelementptr inbounds i8, ptr %this, i64 8, !dbg !10130
  store ptr %8, ptr %9, align 8, !dbg !10130
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_10 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %this, i64 0, i64 %capacity, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10131
  %_9 = xor i1 %_10, true, !dbg !10132
  %10 = zext i1 %_9 to i8
  store i8 %10, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !10138)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !10140
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10140

bb2.i:                                            ; preds = %bb4
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_9) #19, !dbg !10142
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10142

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb4, %bb2.i
  %_0.0 = load i64, ptr %this, align 8, !dbg !10143
  %11 = getelementptr inbounds i8, ptr %this, i64 8, !dbg !10143
  %_0.1 = load ptr, ptr %11, align 8, !dbg !10143
  %12 = insertvalue { i64, ptr } poison, i64 %_0.0, 0, !dbg !10144
  %13 = insertvalue { i64, ptr } %12, ptr %_0.1, 1, !dbg !10144
  ret { i64, ptr } %13, !dbg !10144

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10145
  %err.0 = load i64, ptr %14, align 8, !dbg !10145
  %15 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !10145
  %err.1 = load i64, ptr %15, align 8, !dbg !10145
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !10145
  %16 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !10145
  store i64 %err.1, ptr %16, align 8, !dbg !10145
    #dbg_declare(ptr %err.dbg.spill, !10121, !DIExpression(), !10146)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %err.0, i64 %err.1, ptr align 8 %0) #20, !dbg !10147
  unreachable, !dbg !10147

bb2:                                              ; No predecessors!
  unreachable, !dbg !10128
}

; alloc::raw_vec::RawVecInner<A>::try_allocate_in
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h309b6bc6f7f642b6E"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, i1 zeroext %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !10148 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %err.dbg.spill = alloca [16 x i8], align 8
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %_35 = alloca [1 x i8], align 1
  %_29 = alloca [16 x i8], align 8
  %result = alloca [16 x i8], align 8
  %_17 = alloca [16 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %layout1 = alloca [16 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  %alloc = alloca [0 x i8], align 1
  %init = alloca [1 x i8], align 1
  %3 = zext i1 %0 to i8
  store i8 %3, ptr %init, align 1
  store i64 %1, ptr %elem_layout, align 8
  %4 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %2, ptr %4, align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !10168, !DIExpression(), !10184)
    #dbg_declare(ptr %init, !10169, !DIExpression(), !10185)
    #dbg_declare(ptr %alloc, !10170, !DIExpression(), !10186)
    #dbg_declare(ptr %elem_layout, !10171, !DIExpression(), !10187)
    #dbg_declare(ptr %layout, !10172, !DIExpression(), !10188)
    #dbg_declare(ptr %layout1, !10174, !DIExpression(), !10189)
    #dbg_declare(ptr %result, !10178, !DIExpression(), !10190)
  store i8 0, ptr %_35, align 1, !dbg !10191
  store i8 1, ptr %_35, align 1, !dbg !10191
  %5 = load i64, ptr %elem_layout, align 8, !dbg !10192
  %6 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10192
  %7 = load i64, ptr %6, align 8, !dbg !10192
; call alloc::raw_vec::layout_array
  call void @_ZN5alloc7raw_vec12layout_array17h10e5035f4ab8749dE(ptr sret([24 x i8]) align 8 %_6, i64 %capacity, i64 %5, i64 %7) #19, !dbg !10192
  %_7 = load i64, ptr %_6, align 8, !dbg !10192
  %8 = icmp eq i64 %_7, 0, !dbg !10193
  br i1 %8, label %bb4, label %bb3, !dbg !10193

bb4:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !10194
  %10 = load i64, ptr %9, align 8, !dbg !10194
  %11 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !10194
  %12 = load i64, ptr %11, align 8, !dbg !10194
  store i64 %10, ptr %layout1, align 8, !dbg !10194
  %13 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10194
  store i64 %12, ptr %13, align 8, !dbg !10194
  %14 = load i64, ptr %layout1, align 8, !dbg !10195
  %15 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10195
  %16 = load i64, ptr %15, align 8, !dbg !10195
  store i64 %14, ptr %layout, align 8, !dbg !10195
  %17 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10195
  store i64 %16, ptr %17, align 8, !dbg !10195
; call core::alloc::layout::Layout::size
  %_11 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10196
  %18 = icmp eq i64 %_11, 0, !dbg !10196
  br i1 %18, label %bb7, label %bb10, !dbg !10196

bb3:                                              ; preds = %start
  store i64 0, ptr %_10, align 8, !dbg !10197
  %19 = load i64, ptr %_10, align 8, !dbg !10197
  %20 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !10197
  %21 = load i64, ptr %20, align 8, !dbg !10197
; call <T as core::convert::Into<U>>::into
  %22 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %19, i64 %21, ptr align 8 @alloc_5c7a1386658d70e296b7c0767179e38d) #19, !dbg !10197
  %_9.0 = extractvalue { i64, i64 } %22, 0, !dbg !10197
  %_9.1 = extractvalue { i64, i64 } %22, 1, !dbg !10197
  %23 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10198
  store i64 %_9.0, ptr %23, align 8, !dbg !10198
  %24 = getelementptr inbounds i8, ptr %23, i64 8, !dbg !10198
  store i64 %_9.1, ptr %24, align 8, !dbg !10198
  store i64 1, ptr %_0, align 8, !dbg !10198
  br label %bb23, !dbg !10199

bb7:                                              ; preds = %bb4
  store i8 0, ptr %_35, align 1, !dbg !10201
; call core::alloc::layout::Layout::align
  %_15 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %elem_layout) #19, !dbg !10202
; call alloc::raw_vec::RawVecInner<A>::new_in
  %25 = call { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h5e79d016f74c3295E"(i64 %_15) #19, !dbg !10203
  %_13.0 = extractvalue { i64, ptr } %25, 0, !dbg !10203
  %_13.1 = extractvalue { i64, ptr } %25, 1, !dbg !10203
  %26 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10204
  store i64 %_13.0, ptr %26, align 8, !dbg !10204
  %27 = getelementptr inbounds i8, ptr %26, i64 8, !dbg !10204
  store ptr %_13.1, ptr %27, align 8, !dbg !10204
  store i64 0, ptr %_0, align 8, !dbg !10204
  br label %bb23, !dbg !10205

bb10:                                             ; preds = %bb4
; call core::alloc::layout::Layout::size
  %_18 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10207
; call alloc::raw_vec::alloc_guard
  %28 = call { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17hafad2d284ee85d9fE(i64 %_18) #19, !dbg !10208
  %29 = extractvalue { i64, i64 } %28, 0, !dbg !10208
  %30 = extractvalue { i64, i64 } %28, 1, !dbg !10208
  store i64 %29, ptr %_17, align 8, !dbg !10208
  %31 = getelementptr inbounds i8, ptr %_17, i64 8, !dbg !10208
  store i64 %30, ptr %31, align 8, !dbg !10208
  %32 = load i64, ptr %_17, align 8, !dbg !10208
  %33 = icmp eq i64 %32, -9223372036854775807, !dbg !10208
  %_20 = select i1 %33, i64 0, i64 1, !dbg !10208
  %34 = icmp eq i64 %_20, 1, !dbg !10209
  br i1 %34, label %bb13, label %bb14, !dbg !10209

bb23:                                             ; preds = %bb3, %bb18, %bb13, %bb7
  %35 = load i8, ptr %_35, align 1, !dbg !10210
  %36 = trunc i8 %35 to i1, !dbg !10210
  br i1 %36, label %bb25, label %bb24, !dbg !10210

bb13:                                             ; preds = %bb10
  %err.0 = load i64, ptr %_17, align 8, !dbg !10211
  %37 = getelementptr inbounds i8, ptr %_17, i64 8, !dbg !10211
  %err.1 = load i64, ptr %37, align 8, !dbg !10211
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !10211
  %38 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !10211
  store i64 %err.1, ptr %38, align 8, !dbg !10211
    #dbg_declare(ptr %err.dbg.spill, !10176, !DIExpression(), !10211)
  %39 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10212
  store i64 %err.0, ptr %39, align 8, !dbg !10212
  %40 = getelementptr inbounds i8, ptr %39, i64 8, !dbg !10212
  store i64 %err.1, ptr %40, align 8, !dbg !10212
  store i64 1, ptr %_0, align 8, !dbg !10212
  br label %bb23, !dbg !10205

bb14:                                             ; preds = %bb10
  %41 = load i8, ptr %init, align 1, !dbg !10213
  %42 = trunc i8 %41 to i1, !dbg !10213
  %_23 = zext i1 %42 to i64, !dbg !10213
  %43 = icmp eq i64 %_23, 0, !dbg !10214
  br i1 %43, label %bb16, label %bb15, !dbg !10214

bb16:                                             ; preds = %bb14
  %44 = load i64, ptr %layout, align 8, !dbg !10215
  %45 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10215
  %46 = load i64, ptr %45, align 8, !dbg !10215
  store i64 %44, ptr %layout1, align 8, !dbg !10215
  %47 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10215
  store i64 %46, ptr %47, align 8, !dbg !10215
  %48 = load i64, ptr %layout1, align 8, !dbg !10216
  %49 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10216
  %50 = load i64, ptr %49, align 8, !dbg !10216
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %51 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc6e3b5736570da34E"(ptr align 1 %alloc, i64 %48, i64 %50) #19, !dbg !10216
  %52 = extractvalue { ptr, i64 } %51, 0, !dbg !10216
  %53 = extractvalue { ptr, i64 } %51, 1, !dbg !10216
  store ptr %52, ptr %result, align 8, !dbg !10216
  %54 = getelementptr inbounds i8, ptr %result, i64 8, !dbg !10216
  store i64 %53, ptr %54, align 8, !dbg !10216
  br label %bb17, !dbg !10216

bb15:                                             ; preds = %bb14
  %55 = load i64, ptr %layout, align 8, !dbg !10217
  %56 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10217
  %57 = load i64, ptr %56, align 8, !dbg !10217
  store i64 %55, ptr %layout1, align 8, !dbg !10217
  %58 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10217
  store i64 %57, ptr %58, align 8, !dbg !10217
  %59 = load i64, ptr %layout1, align 8, !dbg !10218
  %60 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10218
  %61 = load i64, ptr %60, align 8, !dbg !10218
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %62 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc68de8c2f80c6d90E"(ptr align 1 %alloc, i64 %59, i64 %61) #19, !dbg !10218
  %63 = extractvalue { ptr, i64 } %62, 0, !dbg !10218
  %64 = extractvalue { ptr, i64 } %62, 1, !dbg !10218
  store ptr %63, ptr %result, align 8, !dbg !10218
  %65 = getelementptr inbounds i8, ptr %result, i64 8, !dbg !10218
  store i64 %64, ptr %65, align 8, !dbg !10218
  br label %bb17, !dbg !10218

bb17:                                             ; preds = %bb15, %bb16
  %66 = load ptr, ptr %result, align 8, !dbg !10219
  %67 = ptrtoint ptr %66 to i64, !dbg !10219
  %68 = icmp eq i64 %67, 0, !dbg !10219
  %_26 = select i1 %68, i64 1, i64 0, !dbg !10219
  %69 = icmp eq i64 %_26, 0, !dbg !10220
  br i1 %69, label %bb19, label %bb18, !dbg !10220

bb19:                                             ; preds = %bb17
  %ptr.0 = load ptr, ptr %result, align 8, !dbg !10221
  %70 = getelementptr inbounds i8, ptr %result, i64 8, !dbg !10221
  %ptr.1 = load i64, ptr %70, align 8, !dbg !10221
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8, !dbg !10221
  %71 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !10221
  store i64 %ptr.1, ptr %71, align 8, !dbg !10221
    #dbg_declare(ptr %ptr.dbg.spill, !10180, !DIExpression(), !10222)
    #dbg_declare(ptr %ptr.dbg.spill, !10182, !DIExpression(), !10223)
; call core::ptr::non_null::NonNull<T>::cast
  %_32 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7839b8f23029f390E"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !10224
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %_31 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hddeb5d4682d2c52eE"(ptr %_32) #19, !dbg !10225
  store i8 0, ptr %_35, align 1, !dbg !10226
  %72 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10227
  store i64 %capacity, ptr %72, align 8, !dbg !10227
  %73 = getelementptr inbounds i8, ptr %72, i64 8, !dbg !10227
  store ptr %_31, ptr %73, align 8, !dbg !10227
  store i64 0, ptr %_0, align 8, !dbg !10227
  br label %bb24, !dbg !10210

bb18:                                             ; preds = %bb17
  %74 = load i64, ptr %layout, align 8, !dbg !10228
  %75 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10228
  %76 = load i64, ptr %75, align 8, !dbg !10228
  store i64 %74, ptr %layout1, align 8, !dbg !10228
  %77 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10228
  store i64 %76, ptr %77, align 8, !dbg !10228
  %78 = load i64, ptr %layout1, align 8, !dbg !10229
  %79 = getelementptr inbounds i8, ptr %layout1, i64 8, !dbg !10229
  %80 = load i64, ptr %79, align 8, !dbg !10229
  store i64 %78, ptr %_29, align 8, !dbg !10229
  %81 = getelementptr inbounds i8, ptr %_29, i64 8, !dbg !10229
  store i64 %80, ptr %81, align 8, !dbg !10229
  %82 = load i64, ptr %_29, align 8, !dbg !10229
  %83 = getelementptr inbounds i8, ptr %_29, i64 8, !dbg !10229
  %84 = load i64, ptr %83, align 8, !dbg !10229
; call <T as core::convert::Into<U>>::into
  %85 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %82, i64 %84, ptr align 8 @alloc_52f6123897970d51878a92e700db4fa9) #19, !dbg !10229
  %_28.0 = extractvalue { i64, i64 } %85, 0, !dbg !10229
  %_28.1 = extractvalue { i64, i64 } %85, 1, !dbg !10229
  %86 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10230
  store i64 %_28.0, ptr %86, align 8, !dbg !10230
  %87 = getelementptr inbounds i8, ptr %86, i64 8, !dbg !10230
  store i64 %_28.1, ptr %87, align 8, !dbg !10230
  store i64 1, ptr %_0, align 8, !dbg !10230
  br label %bb23, !dbg !10205

bb24:                                             ; preds = %bb25, %bb23, %bb19
  ret void, !dbg !10231

bb25:                                             ; preds = %bb23
  br label %bb24, !dbg !10210

bb2:                                              ; No predecessors!
  unreachable, !dbg !10199
}

; alloc::raw_vec::RawVecInner<A>::from_raw_parts_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17h43dd2dd595bf7e79E"(ptr %ptr, i64 %cap) unnamed_addr #1 !dbg !10232 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %cap.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !10237, !DIExpression(), !10240)
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10238, !DIExpression(), !10241)
    #dbg_declare(ptr %alloc.dbg.spill, !10239, !DIExpression(), !10242)
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd8a863cceea1dd7cE"(ptr %ptr) #19, !dbg !10243
  %0 = insertvalue { i64, ptr } poison, i64 %cap, 0, !dbg !10244
  %1 = insertvalue { i64, ptr } %0, ptr %_4, 1, !dbg !10244
  ret { i64, ptr } %1, !dbg !10244
}

; alloc::raw_vec::RawVecInner<A>::ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17hd6a3c9f6f90e86eeE"(ptr align 8 %self) unnamed_addr #1 !dbg !10245 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10252, !DIExpression(), !10253)
; call alloc::raw_vec::RawVecInner<A>::non_null
  %_2 = call ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17hf0d9a2ceeb32f7beE"(ptr align 8 %self) #19, !dbg !10254
  store ptr %_2, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3889, !DIExpression(), !10255)
  ret ptr %_2, !dbg !10257
}

; alloc::raw_vec::RawVecInner<A>::non_null
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17hf0d9a2ceeb32f7beE"(ptr align 8 %self) unnamed_addr #1 !dbg !10258 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10263, !DIExpression(), !10264)
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !10265
  %_3 = load ptr, ptr %0, align 8, !dbg !10265
; call core::ptr::unique::Unique<T>::cast
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hb7f0e71d357e661aE"(ptr %_3) #19, !dbg !10265
; call core::ptr::unique::Unique<T>::as_non_null_ptr
  %_0 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h01259becb5e317e0E"(ptr %_2) #19, !dbg !10265
  ret ptr %_0, !dbg !10266
}

; alloc::raw_vec::RawVecInner<A>::capacity
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17he20cf9ee637f6c88E"(ptr align 8 %self, i64 %elem_size) unnamed_addr #1 !dbg !10267 {
start:
  %elem_size.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10272, !DIExpression(), !10274)
  store i64 %elem_size, ptr %elem_size.dbg.spill, align 8
    #dbg_declare(ptr %elem_size.dbg.spill, !10273, !DIExpression(), !10275)
  %0 = icmp eq i64 %elem_size, 0, !dbg !10276
  br i1 %0, label %bb1, label %bb2, !dbg !10276

bb1:                                              ; preds = %start
  store i64 -1, ptr %_0, align 8, !dbg !10277
  br label %bb3, !dbg !10278

bb2:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8, !dbg !10279
  store i64 %1, ptr %_0, align 8, !dbg !10279
  br label %bb3, !dbg !10278

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i64, ptr %_0, align 8, !dbg !10280
  ret i64 %2, !dbg !10280
}

; alloc::raw_vec::RawVecInner<A>::allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17hd6c9d1a9941d3700E"(ptr align 8 %self) unnamed_addr #1 !dbg !10281 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10286, !DIExpression(), !10287)
  %_0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !10288
  ret ptr %_0, !dbg !10289
}

; alloc::raw_vec::RawVecInner<A>::current_memory
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, i64 %0, i64 %1) unnamed_addr #1 !dbg !10290 {
start:
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %layout.dbg.spill = alloca [16 x i8], align 8
  %alloc_size.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_13 = alloca [24 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10312, !DIExpression(), !10318)
    #dbg_declare(ptr %elem_layout, !10313, !DIExpression(), !10319)
; call core::alloc::layout::Layout::size
  %_3 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10320
  %3 = icmp eq i64 %_3, 0, !dbg !10320
  br i1 %3, label %bb3, label %bb2, !dbg !10320

bb3:                                              ; preds = %bb2, %start
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10321
  store i64 0, ptr %4, align 8, !dbg !10321
  br label %bb10, !dbg !10322

bb2:                                              ; preds = %start
  %_5 = load i64, ptr %self, align 8, !dbg !10323
  %5 = icmp eq i64 %_5, 0, !dbg !10323
  br i1 %5, label %bb3, label %bb4, !dbg !10323

bb4:                                              ; preds = %bb2
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10324
  %_9 = load i64, ptr %self, align 8, !dbg !10325
  store i64 %_7, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !10326, !DIExpression(), !10330)
  store i64 %_9, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !10329, !DIExpression(), !10332)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !10333
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit", !dbg !10333

bb2.i:                                            ; preds = %bb4
; call core::num::<impl usize>::unchecked_mul::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h6a26816055385cd9E"(i64 %_7, i64 %_9) #19, !dbg !10335
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit", !dbg !10335

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit": ; preds = %bb4, %bb2.i
  %_0.i = mul nuw i64 %_7, %_9, !dbg !10336
  store i64 %_0.i, ptr %alloc_size.dbg.spill, align 8, !dbg !10324
    #dbg_declare(ptr %alloc_size.dbg.spill, !10314, !DIExpression(), !10337)
; call core::alloc::layout::Layout::align
  %_11 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %elem_layout) #19, !dbg !10338
; call core::alloc::layout::Layout::from_size_align_unchecked
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %_0.i, i64 %_11) #19, !dbg !10339
  %layout.0 = extractvalue { i64, i64 } %6, 0, !dbg !10339
  %layout.1 = extractvalue { i64, i64 } %6, 1, !dbg !10339
  store i64 %layout.0, ptr %layout.dbg.spill, align 8, !dbg !10339
  %7 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8, !dbg !10339
  store i64 %layout.1, ptr %7, align 8, !dbg !10339
    #dbg_declare(ptr %layout.dbg.spill, !10316, !DIExpression(), !10340)
  %8 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !10341
  %_15 = load ptr, ptr %8, align 8, !dbg !10341
; call <T as core::convert::Into<U>>::into
  %_14 = call ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h38af6a215d324b80E"(ptr %_15, ptr align 8 @alloc_90c395786d9559872c9bc56c3e35fbb8) #19, !dbg !10341
  store ptr %_14, ptr %_13, align 8, !dbg !10342
  %9 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !10342
  store i64 %layout.0, ptr %9, align 8, !dbg !10342
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !10342
  store i64 %layout.1, ptr %10, align 8, !dbg !10342
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_13, i64 24, i1 false), !dbg !10343
  br label %bb10, !dbg !10322

bb10:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit", %bb3
  ret void, !dbg !10344
}

; alloc::raw_vec::RawVecInner<A>::reserve
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17hdf89b6a9e98ad900E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1, ptr align 8 %0) unnamed_addr #1 !dbg !10345 {
start:
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10351, !DIExpression(), !10355)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10352, !DIExpression(), !10356)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10353, !DIExpression(), !10357)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %1, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10354, !DIExpression(), !10358)
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_5 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10359
  br i1 %_5, label %bb2, label %bb3, !dbg !10359

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !10360

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17hcf51c2800eafe3f8E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10361
  br label %bb3, !dbg !10361
}

; alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle
; Function Attrs: cold noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17hcf51c2800eafe3f8E"(ptr align 8 %slf, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) unnamed_addr #2 !dbg !10362 {
start:
  %err.dbg.spill = alloca [16 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %slf.dbg.spill = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  store ptr %slf, ptr %slf.dbg.spill, align 8
    #dbg_declare(ptr %slf.dbg.spill, !10367, !DIExpression(), !10373)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10368, !DIExpression(), !10374)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10369, !DIExpression(), !10375)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %0, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10370, !DIExpression(), !10376)
; call alloc::raw_vec::RawVecInner<A>::grow_amortized
  %1 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17ha98463843d4e0190E"(ptr align 8 %slf, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10377
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !10377
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !10377
  store i64 %2, ptr %_5, align 8, !dbg !10377
  %4 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !10377
  store i64 %3, ptr %4, align 8, !dbg !10377
  %5 = load i64, ptr %_5, align 8, !dbg !10377
  %6 = icmp eq i64 %5, -9223372036854775807, !dbg !10377
  %_6 = select i1 %6, i64 0, i64 1, !dbg !10377
  %7 = icmp eq i64 %_6, 1, !dbg !10378
  br i1 %7, label %bb2, label %bb3, !dbg !10378

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_5, align 8, !dbg !10379
  %8 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !10379
  %err.1 = load i64, ptr %8, align 8, !dbg !10379
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !10379
  %9 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !10379
  store i64 %err.1, ptr %9, align 8, !dbg !10379
    #dbg_declare(ptr %err.dbg.spill, !10371, !DIExpression(), !10379)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %err.0, i64 %err.1, ptr align 8 @alloc_867b71d642822fe06cc43eb7dbd61cbd) #20, !dbg !10380
  unreachable, !dbg !10380

bb3:                                              ; preds = %start
  ret void, !dbg !10381

bb4:                                              ; No predecessors!
  unreachable, !dbg !10382
}

; alloc::raw_vec::RawVecInner<A>::grow_one
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17ha3a69cc432d0aea0E"(ptr align 8 %self, i64 %elem_layout.0, i64 %elem_layout.1, ptr align 8 %0) unnamed_addr #1 !dbg !10383 {
start:
  %err.dbg.spill = alloca [16 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10388, !DIExpression(), !10392)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %1, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10389, !DIExpression(), !10393)
  %_4 = load i64, ptr %self, align 8, !dbg !10394
; call alloc::raw_vec::RawVecInner<A>::grow_amortized
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17ha98463843d4e0190E"(ptr align 8 %self, i64 %_4, i64 1, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10395
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !10395
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !10395
  store i64 %3, ptr %_3, align 8, !dbg !10395
  %5 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10395
  store i64 %4, ptr %5, align 8, !dbg !10395
  %6 = load i64, ptr %_3, align 8, !dbg !10395
  %7 = icmp eq i64 %6, -9223372036854775807, !dbg !10395
  %_5 = select i1 %7, i64 0, i64 1, !dbg !10395
  %8 = icmp eq i64 %_5, 1, !dbg !10396
  br i1 %8, label %bb2, label %bb3, !dbg !10396

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_3, align 8, !dbg !10397
  %9 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10397
  %err.1 = load i64, ptr %9, align 8, !dbg !10397
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !10397
  %10 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !10397
  store i64 %err.1, ptr %10, align 8, !dbg !10397
    #dbg_declare(ptr %err.dbg.spill, !10390, !DIExpression(), !10397)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %err.0, i64 %err.1, ptr align 8 %0) #20, !dbg !10398
  unreachable, !dbg !10398

bb3:                                              ; preds = %start
  ret void, !dbg !10399

bb4:                                              ; No predecessors!
  unreachable, !dbg !10400
}

; alloc::raw_vec::RawVecInner<A>::try_reserve
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17hbb93dc4b1c763386E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) unnamed_addr #0 !dbg !10401 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [16 x i8], align 8
  %val.dbg.spill = alloca [0 x i8], align 1
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10406, !DIExpression(), !10414)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10407, !DIExpression(), !10415)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10408, !DIExpression(), !10416)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %0, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10409, !DIExpression(), !10417)
    #dbg_declare(ptr %val.dbg.spill, !10412, !DIExpression(), !10418)
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_5 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10419
  br i1 %_5, label %bb2, label %bb7, !dbg !10419

bb7:                                              ; preds = %bb2, %start
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_13 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10420
  %_12 = xor i1 %_13, true, !dbg !10421
  %1 = zext i1 %_12 to i8
  store i8 %1, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !10422)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !10424
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10424

bb2.i:                                            ; preds = %bb7
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_12) #19, !dbg !10425
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10425

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb7, %bb2.i
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10426
  br label %bb10, !dbg !10427

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVecInner<A>::grow_amortized
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17ha98463843d4e0190E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10428
  %_8.0 = extractvalue { i64, i64 } %2, 0, !dbg !10428
  %_8.1 = extractvalue { i64, i64 } %2, 1, !dbg !10428
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18fb6e52d80cd6e1E"(i64 %_8.0, i64 %_8.1) #19, !dbg !10428
  %4 = extractvalue { i64, i64 } %3, 0, !dbg !10428
  %5 = extractvalue { i64, i64 } %3, 1, !dbg !10428
  store i64 %4, ptr %_7, align 8, !dbg !10428
  %6 = getelementptr inbounds i8, ptr %_7, i64 8, !dbg !10428
  store i64 %5, ptr %6, align 8, !dbg !10428
  %7 = load i64, ptr %_7, align 8, !dbg !10428
  %8 = icmp eq i64 %7, -9223372036854775807, !dbg !10428
  %_9 = select i1 %8, i64 0, i64 1, !dbg !10428
  %9 = icmp eq i64 %_9, 0, !dbg !10428
  br i1 %9, label %bb7, label %bb6, !dbg !10428

bb6:                                              ; preds = %bb2
  %residual.0 = load i64, ptr %_7, align 8, !dbg !10429
  %10 = getelementptr inbounds i8, ptr %_7, i64 8, !dbg !10429
  %residual.1 = load i64, ptr %10, align 8, !dbg !10429
  store i64 %residual.0, ptr %residual.dbg.spill, align 8, !dbg !10429
  %11 = getelementptr inbounds i8, ptr %residual.dbg.spill, i64 8, !dbg !10429
  store i64 %residual.1, ptr %11, align 8, !dbg !10429
    #dbg_declare(ptr %residual.dbg.spill, !10410, !DIExpression(), !10430)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %12 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_c99632408c318731a6463c8d43d5f795) #19, !dbg !10431
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !10431
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !10431
  store i64 %13, ptr %_0, align 8, !dbg !10431
  %15 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10431
  store i64 %14, ptr %15, align 8, !dbg !10431
  br label %bb10, !dbg !10431

bb10:                                             ; preds = %bb6, %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
  %16 = load i64, ptr %_0, align 8, !dbg !10427
  %17 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10427
  %18 = load i64, ptr %17, align 8, !dbg !10427
  %19 = insertvalue { i64, i64 } poison, i64 %16, 0, !dbg !10427
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !10427
  ret { i64, i64 } %20, !dbg !10427

bb5:                                              ; No predecessors!
  unreachable, !dbg !10428
}

; alloc::raw_vec::RawVecInner<A>::reserve_exact
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h17e04bf2f72d32f7E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1, ptr align 8 %0) unnamed_addr #0 !dbg !10432 {
start:
  %err.dbg.spill = alloca [16 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10435, !DIExpression(), !10441)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10436, !DIExpression(), !10442)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10437, !DIExpression(), !10443)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %1, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10438, !DIExpression(), !10444)
; call alloc::raw_vec::RawVecInner<A>::try_reserve_exact
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17h9e3b900bf6abbe63E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10445
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !10445
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !10445
  store i64 %3, ptr %_5, align 8, !dbg !10445
  %5 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !10445
  store i64 %4, ptr %5, align 8, !dbg !10445
  %6 = load i64, ptr %_5, align 8, !dbg !10445
  %7 = icmp eq i64 %6, -9223372036854775807, !dbg !10445
  %_6 = select i1 %7, i64 0, i64 1, !dbg !10445
  %8 = icmp eq i64 %_6, 1, !dbg !10446
  br i1 %8, label %bb2, label %bb3, !dbg !10446

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_5, align 8, !dbg !10447
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !10447
  %err.1 = load i64, ptr %9, align 8, !dbg !10447
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !10447
  %10 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !10447
  store i64 %err.1, ptr %10, align 8, !dbg !10447
    #dbg_declare(ptr %err.dbg.spill, !10439, !DIExpression(), !10447)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %err.0, i64 %err.1, ptr align 8 %0) #20, !dbg !10448
  unreachable, !dbg !10448

bb3:                                              ; preds = %start
  ret void, !dbg !10449

bb4:                                              ; No predecessors!
  unreachable, !dbg !10450
}

; alloc::raw_vec::RawVecInner<A>::try_reserve_exact
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17h9e3b900bf6abbe63E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) unnamed_addr #0 !dbg !10451 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [16 x i8], align 8
  %val.dbg.spill = alloca [0 x i8], align 1
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10454, !DIExpression(), !10462)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10455, !DIExpression(), !10463)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10456, !DIExpression(), !10464)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %0, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10457, !DIExpression(), !10465)
    #dbg_declare(ptr %val.dbg.spill, !10460, !DIExpression(), !10466)
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_5 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10467
  br i1 %_5, label %bb2, label %bb7, !dbg !10467

bb7:                                              ; preds = %bb2, %start
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_13 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10468
  %_12 = xor i1 %_13, true, !dbg !10469
  %1 = zext i1 %_12 to i8
  store i8 %1, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !10470)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !10472
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10472

bb2.i:                                            ; preds = %bb7
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_12) #19, !dbg !10473
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10473

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb7, %bb2.i
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10474
  br label %bb10, !dbg !10475

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVecInner<A>::grow_exact
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hbafcbfbd14b764c2E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10476
  %_8.0 = extractvalue { i64, i64 } %2, 0, !dbg !10476
  %_8.1 = extractvalue { i64, i64 } %2, 1, !dbg !10476
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18fb6e52d80cd6e1E"(i64 %_8.0, i64 %_8.1) #19, !dbg !10476
  %4 = extractvalue { i64, i64 } %3, 0, !dbg !10476
  %5 = extractvalue { i64, i64 } %3, 1, !dbg !10476
  store i64 %4, ptr %_7, align 8, !dbg !10476
  %6 = getelementptr inbounds i8, ptr %_7, i64 8, !dbg !10476
  store i64 %5, ptr %6, align 8, !dbg !10476
  %7 = load i64, ptr %_7, align 8, !dbg !10476
  %8 = icmp eq i64 %7, -9223372036854775807, !dbg !10476
  %_9 = select i1 %8, i64 0, i64 1, !dbg !10476
  %9 = icmp eq i64 %_9, 0, !dbg !10476
  br i1 %9, label %bb7, label %bb6, !dbg !10476

bb6:                                              ; preds = %bb2
  %residual.0 = load i64, ptr %_7, align 8, !dbg !10477
  %10 = getelementptr inbounds i8, ptr %_7, i64 8, !dbg !10477
  %residual.1 = load i64, ptr %10, align 8, !dbg !10477
  store i64 %residual.0, ptr %residual.dbg.spill, align 8, !dbg !10477
  %11 = getelementptr inbounds i8, ptr %residual.dbg.spill, i64 8, !dbg !10477
  store i64 %residual.1, ptr %11, align 8, !dbg !10477
    #dbg_declare(ptr %residual.dbg.spill, !10458, !DIExpression(), !10478)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %12 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_40b28a94c379c596f1ea303094bfc857) #19, !dbg !10479
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !10479
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !10479
  store i64 %13, ptr %_0, align 8, !dbg !10479
  %15 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10479
  store i64 %14, ptr %15, align 8, !dbg !10479
  br label %bb10, !dbg !10479

bb10:                                             ; preds = %bb6, %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
  %16 = load i64, ptr %_0, align 8, !dbg !10475
  %17 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10475
  %18 = load i64, ptr %17, align 8, !dbg !10475
  %19 = insertvalue { i64, i64 } poison, i64 %16, 0, !dbg !10475
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !10475
  ret { i64, i64 } %20, !dbg !10475

bb5:                                              ; No predecessors!
  unreachable, !dbg !10476
}

; alloc::raw_vec::RawVecInner<A>::shrink_to_fit
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h9a56e8880d89d81bE"(ptr align 8 %self, i64 %cap, i64 %elem_layout.0, i64 %elem_layout.1, ptr align 8 %0) unnamed_addr #1 !dbg !10480 {
start:
  %err.dbg.spill = alloca [16 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %cap.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10485, !DIExpression(), !10490)
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10486, !DIExpression(), !10491)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %1, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10487, !DIExpression(), !10492)
; call alloc::raw_vec::RawVecInner<A>::shrink
  %2 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h17a899d03cdf5832E"(ptr align 8 %self, i64 %cap, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10493
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !10493
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !10493
  store i64 %3, ptr %_4, align 8, !dbg !10493
  %5 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10493
  store i64 %4, ptr %5, align 8, !dbg !10493
  %6 = load i64, ptr %_4, align 8, !dbg !10493
  %7 = icmp eq i64 %6, -9223372036854775807, !dbg !10493
  %_5 = select i1 %7, i64 0, i64 1, !dbg !10493
  %8 = icmp eq i64 %_5, 1, !dbg !10494
  br i1 %8, label %bb2, label %bb3, !dbg !10494

bb2:                                              ; preds = %start
  %err.0 = load i64, ptr %_4, align 8, !dbg !10495
  %9 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10495
  %err.1 = load i64, ptr %9, align 8, !dbg !10495
  store i64 %err.0, ptr %err.dbg.spill, align 8, !dbg !10495
  %10 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8, !dbg !10495
  store i64 %err.1, ptr %10, align 8, !dbg !10495
    #dbg_declare(ptr %err.dbg.spill, !10488, !DIExpression(), !10495)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %err.0, i64 %err.1, ptr align 8 %0) #20, !dbg !10496
  unreachable, !dbg !10496

bb3:                                              ; preds = %start
  ret void, !dbg !10497

bb4:                                              ; No predecessors!
  unreachable, !dbg !10498
}

; alloc::raw_vec::RawVecInner<A>::needs_to_grow
; Function Attrs: inlinehint noredzone nounwind
define dso_local zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE"(ptr align 8 %self, i64 %len, i64 %additional, i64 %0, i64 %1) unnamed_addr #1 !dbg !10499 {
start:
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10504, !DIExpression(), !10508)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10505, !DIExpression(), !10509)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10506, !DIExpression(), !10510)
    #dbg_declare(ptr %elem_layout, !10507, !DIExpression(), !10511)
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10512
; call alloc::raw_vec::RawVecInner<A>::capacity
  %_6 = call i64 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17he20cf9ee637f6c88E"(ptr align 8 %self, i64 %_7) #19, !dbg !10513
  store i64 %_6, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !10514, !DIExpression(), !10518)
  store i64 %len, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !10517, !DIExpression(), !10520)
  %_0.i = sub i64 %_6, %len, !dbg !10521
  %_0 = icmp ugt i64 %additional, %_0.i, !dbg !10522
  ret i1 %_0, !dbg !10523
}

; alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h9c104458183a65fcE"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !10524 {
start:
  %cap.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10529, !DIExpression(), !10532)
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8
  store i64 %ptr.1, ptr %0, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !10530, !DIExpression(), !10533)
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10531, !DIExpression(), !10534)
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7839b8f23029f390E"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !10535
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %_4 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hddeb5d4682d2c52eE"(ptr %_5) #19, !dbg !10536
  %1 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !10537
  store ptr %_4, ptr %1, align 8, !dbg !10537
  store i64 %cap, ptr %self, align 8, !dbg !10538
  ret void, !dbg !10539
}

; alloc::raw_vec::RawVecInner<A>::grow_amortized
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17ha98463843d4e0190E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %0, i64 %1) unnamed_addr #0 !dbg !10540 {
start:
  %residual.dbg.spill8 = alloca [16 x i8], align 8
  %residual.dbg.spill5 = alloca [16 x i8], align 8
  %residual.dbg.spill = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %new_layout.dbg.spill = alloca [16 x i8], align 8
  %cap.dbg.spill2 = alloca [8 x i8], align 8
  %cap.dbg.spill = alloca [8 x i8], align 8
  %required_cap.dbg.spill = alloca [8 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_33 = alloca [24 x i8], align 8
  %_32 = alloca [24 x i8], align 8
  %_31 = alloca [24 x i8], align 8
  %_27 = alloca [24 x i8], align 8
  %_26 = alloca [24 x i8], align 8
  %_14 = alloca [16 x i8], align 8
  %_12 = alloca [16 x i8], align 8
  %_11 = alloca [16 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10543, !DIExpression(), !10569)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10544, !DIExpression(), !10570)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10545, !DIExpression(), !10571)
    #dbg_declare(ptr %elem_layout, !10546, !DIExpression(), !10572)
  %_5 = icmp ugt i64 %additional, 0, !dbg !10573
  br i1 %_5, label %bb2, label %bb1, !dbg !10573

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_f618e816ca814de4958218055ad99397, i64 32, ptr align 8 @alloc_c435383a1286f4112d78babaafacb720) #20, !dbg !10574
  unreachable, !dbg !10574

bb2:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10575
  %3 = icmp eq i64 %_7, 0, !dbg !10575
  br i1 %3, label %bb4, label %bb6, !dbg !10575

bb4:                                              ; preds = %bb2
  store i64 0, ptr %_10, align 8, !dbg !10576
  %4 = load i64, ptr %_10, align 8, !dbg !10576
  %5 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !10576
  %6 = load i64, ptr %5, align 8, !dbg !10576
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %4, i64 %6, ptr align 8 @alloc_7e2827044a0a1ea97ee85728939b70ec) #19, !dbg !10576
  %_9.0 = extractvalue { i64, i64 } %7, 0, !dbg !10576
  %_9.1 = extractvalue { i64, i64 } %7, 1, !dbg !10576
  store i64 %_9.0, ptr %_0, align 8, !dbg !10577
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10577
  store i64 %_9.1, ptr %8, align 8, !dbg !10577
  br label %bb28, !dbg !10578

bb6:                                              ; preds = %bb2
; call core::num::<impl usize>::checked_add
  %9 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %len, i64 %additional) #19, !dbg !10580
  %_13.0 = extractvalue { i64, i64 } %9, 0, !dbg !10580
  %_13.1 = extractvalue { i64, i64 } %9, 1, !dbg !10580
  store i64 0, ptr %_14, align 8, !dbg !10581
  %10 = load i64, ptr %_14, align 8, !dbg !10580
  %11 = getelementptr inbounds i8, ptr %_14, i64 8, !dbg !10580
  %12 = load i64, ptr %11, align 8, !dbg !10580
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h42e8827b172396c2E"(ptr sret([16 x i8]) align 8 %_12, i64 %_13.0, i64 %_13.1, i64 %10, i64 %12) #19, !dbg !10580
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb510057ff3f0e937E"(ptr sret([16 x i8]) align 8 %_11, ptr align 8 %_12) #19, !dbg !10580
  %13 = load i64, ptr %_11, align 8, !dbg !10580
  %14 = icmp eq i64 %13, -9223372036854775807, !dbg !10580
  %_15 = select i1 %14, i64 0, i64 1, !dbg !10580
  %15 = icmp eq i64 %_15, 0, !dbg !10580
  br i1 %15, label %bb11, label %bb12, !dbg !10580

bb28:                                             ; preds = %bb12, %bb21, %bb26, %bb25, %bb4
  %16 = load i64, ptr %_0, align 8, !dbg !10582
  %17 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10582
  %18 = load i64, ptr %17, align 8, !dbg !10582
  %19 = insertvalue { i64, i64 } poison, i64 %16, 0, !dbg !10582
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !10582
  ret { i64, i64 } %20, !dbg !10582

bb11:                                             ; preds = %bb6
  %21 = getelementptr inbounds i8, ptr %_11, i64 8, !dbg !10580
  %required_cap = load i64, ptr %21, align 8, !dbg !10580
  store i64 %required_cap, ptr %required_cap.dbg.spill, align 8, !dbg !10580
    #dbg_declare(ptr %required_cap.dbg.spill, !10547, !DIExpression(), !10583)
    #dbg_declare(ptr %required_cap.dbg.spill, !10551, !DIExpression(), !10584)
  %_20 = load i64, ptr %self, align 8, !dbg !10585
  %22 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_20, i64 2), !dbg !10585
  %_21.0 = extractvalue { i64, i1 } %22, 0, !dbg !10585
  %_21.1 = extractvalue { i64, i1 } %22, 1, !dbg !10585
  br i1 %_21.1, label %panic, label %bb13, !dbg !10585

bb12:                                             ; preds = %bb6
  %residual.06 = load i64, ptr %_11, align 8, !dbg !10586
  %23 = getelementptr inbounds i8, ptr %_11, i64 8, !dbg !10586
  %residual.17 = load i64, ptr %23, align 8, !dbg !10586
  store i64 %residual.06, ptr %residual.dbg.spill8, align 8, !dbg !10586
  %24 = getelementptr inbounds i8, ptr %residual.dbg.spill8, i64 8, !dbg !10586
  store i64 %residual.17, ptr %24, align 8, !dbg !10586
    #dbg_declare(ptr %residual.dbg.spill8, !10549, !DIExpression(), !10587)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h33f1e92ae445a6e0E"(i64 %residual.06, i64 %residual.17, ptr align 8 @alloc_cec94f4f583d594d9fc50f7573eb8288) #19, !dbg !10588
  %26 = extractvalue { i64, i64 } %25, 0, !dbg !10588
  %27 = extractvalue { i64, i64 } %25, 1, !dbg !10588
  store i64 %26, ptr %_0, align 8, !dbg !10588
  %28 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10588
  store i64 %27, ptr %28, align 8, !dbg !10588
  br label %bb28, !dbg !10588

bb13:                                             ; preds = %bb11
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h09455f6077321db0E(i64 %_21.0, i64 %required_cap) #19, !dbg !10589
  store i64 %cap, ptr %cap.dbg.spill, align 8, !dbg !10589
    #dbg_declare(ptr %cap.dbg.spill, !10553, !DIExpression(), !10590)
; call core::alloc::layout::Layout::size
  %_24 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10591
; call alloc::raw_vec::min_non_zero_cap
  %_23 = call i64 @_ZN5alloc7raw_vec16min_non_zero_cap17h013b9e4a5a463f60E(i64 %_24) #19, !dbg !10592
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h09455f6077321db0E(i64 %_23, i64 %cap) #19, !dbg !10593
  store i64 %cap1, ptr %cap.dbg.spill2, align 8, !dbg !10593
    #dbg_declare(ptr %cap.dbg.spill2, !10555, !DIExpression(), !10594)
  %29 = load i64, ptr %elem_layout, align 8, !dbg !10595
  %30 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10595
  %31 = load i64, ptr %30, align 8, !dbg !10595
; call alloc::raw_vec::layout_array
  call void @_ZN5alloc7raw_vec12layout_array17h10e5035f4ab8749dE(ptr sret([24 x i8]) align 8 %_27, i64 %cap1, i64 %29, i64 %31) #19, !dbg !10595
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc11776b59597b879E"(ptr sret([24 x i8]) align 8 %_26, ptr align 8 %_27) #19, !dbg !10595
  %_28 = load i64, ptr %_26, align 8, !dbg !10595
  %32 = icmp eq i64 %_28, 0, !dbg !10595
  br i1 %32, label %bb20, label %bb21, !dbg !10595

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8 @alloc_6efbafbb9ca60d10c6c657c9e1f5fb7e) #20, !dbg !10585
  unreachable, !dbg !10585

bb20:                                             ; preds = %bb13
  %33 = getelementptr inbounds i8, ptr %_26, i64 8, !dbg !10595
  %new_layout.0 = load i64, ptr %33, align 8, !dbg !10595
  %34 = getelementptr inbounds i8, ptr %33, i64 8, !dbg !10595
  %new_layout.1 = load i64, ptr %34, align 8, !dbg !10595
  store i64 %new_layout.0, ptr %new_layout.dbg.spill, align 8, !dbg !10595
  %35 = getelementptr inbounds i8, ptr %new_layout.dbg.spill, i64 8, !dbg !10595
  store i64 %new_layout.1, ptr %35, align 8, !dbg !10595
    #dbg_declare(ptr %new_layout.dbg.spill, !10557, !DIExpression(), !10596)
    #dbg_declare(ptr %new_layout.dbg.spill, !10561, !DIExpression(), !10597)
  %36 = load i64, ptr %elem_layout, align 8, !dbg !10598
  %37 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10598
  %38 = load i64, ptr %37, align 8, !dbg !10598
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E"(ptr sret([24 x i8]) align 8 %_33, ptr align 8 %self, i64 %36, i64 %38) #19, !dbg !10598
  %_35 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !10599
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17ha729baa936d24039E(ptr sret([24 x i8]) align 8 %_32, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_33, ptr align 1 %_35) #19, !dbg !10600
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h540b4559420cf42fE"(ptr sret([24 x i8]) align 8 %_31, ptr align 8 %_32) #19, !dbg !10600
  %_36 = load i64, ptr %_31, align 8, !dbg !10600
  %39 = icmp eq i64 %_36, 0, !dbg !10600
  br i1 %39, label %bb25, label %bb26, !dbg !10600

bb21:                                             ; preds = %bb13
  %40 = getelementptr inbounds i8, ptr %_26, i64 8, !dbg !10601
  %residual.03 = load i64, ptr %40, align 8, !dbg !10601
  %41 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !10601
  %residual.14 = load i64, ptr %41, align 8, !dbg !10601
  store i64 %residual.03, ptr %residual.dbg.spill5, align 8, !dbg !10601
  %42 = getelementptr inbounds i8, ptr %residual.dbg.spill5, i64 8, !dbg !10601
  store i64 %residual.14, ptr %42, align 8, !dbg !10601
    #dbg_declare(ptr %residual.dbg.spill5, !10559, !DIExpression(), !10602)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %43 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %residual.03, i64 %residual.14, ptr align 8 @alloc_5b0bab6b8a576f0da6ed67e1e199ab81) #19, !dbg !10603
  %44 = extractvalue { i64, i64 } %43, 0, !dbg !10603
  %45 = extractvalue { i64, i64 } %43, 1, !dbg !10603
  store i64 %44, ptr %_0, align 8, !dbg !10603
  %46 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10603
  store i64 %45, ptr %46, align 8, !dbg !10603
  br label %bb28, !dbg !10603

bb25:                                             ; preds = %bb20
  %47 = getelementptr inbounds i8, ptr %_31, i64 8, !dbg !10600
  %ptr.0 = load ptr, ptr %47, align 8, !dbg !10600
  %48 = getelementptr inbounds i8, ptr %47, i64 8, !dbg !10600
  %ptr.1 = load i64, ptr %48, align 8, !dbg !10600
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8, !dbg !10600
  %49 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !10600
  store i64 %ptr.1, ptr %49, align 8, !dbg !10600
    #dbg_declare(ptr %ptr.dbg.spill, !10563, !DIExpression(), !10604)
    #dbg_declare(ptr %ptr.dbg.spill, !10567, !DIExpression(), !10605)
; call alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h9c104458183a65fcE"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap1) #19, !dbg !10606
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10607
  br label %bb28, !dbg !10582

bb26:                                             ; preds = %bb20
  %50 = getelementptr inbounds i8, ptr %_31, i64 8, !dbg !10608
  %residual.0 = load i64, ptr %50, align 8, !dbg !10608
  %51 = getelementptr inbounds i8, ptr %50, i64 8, !dbg !10608
  %residual.1 = load i64, ptr %51, align 8, !dbg !10608
  store i64 %residual.0, ptr %residual.dbg.spill, align 8, !dbg !10608
  %52 = getelementptr inbounds i8, ptr %residual.dbg.spill, i64 8, !dbg !10608
  store i64 %residual.1, ptr %52, align 8, !dbg !10608
    #dbg_declare(ptr %residual.dbg.spill, !10565, !DIExpression(), !10609)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %53 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_7dd820fc2353d6e78dcc35dcb96fb34a) #19, !dbg !10610
  %54 = extractvalue { i64, i64 } %53, 0, !dbg !10610
  %55 = extractvalue { i64, i64 } %53, 1, !dbg !10610
  store i64 %54, ptr %_0, align 8, !dbg !10610
  %56 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10610
  store i64 %55, ptr %56, align 8, !dbg !10610
  br label %bb28, !dbg !10610

bb10:                                             ; No predecessors!
  unreachable, !dbg !10578
}

; alloc::raw_vec::RawVecInner<A>::grow_exact
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hbafcbfbd14b764c2E"(ptr align 8 %self, i64 %len, i64 %additional, i64 %0, i64 %1) unnamed_addr #0 !dbg !10611 {
start:
  %residual.dbg.spill6 = alloca [16 x i8], align 8
  %residual.dbg.spill3 = alloca [16 x i8], align 8
  %residual.dbg.spill = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %new_layout.dbg.spill = alloca [16 x i8], align 8
  %cap.dbg.spill = alloca [8 x i8], align 8
  %additional.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_23 = alloca [24 x i8], align 8
  %_22 = alloca [24 x i8], align 8
  %_21 = alloca [24 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %_16 = alloca [24 x i8], align 8
  %_12 = alloca [16 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10614, !DIExpression(), !10636)
  store i64 %len, ptr %len.dbg.spill, align 8
    #dbg_declare(ptr %len.dbg.spill, !10615, !DIExpression(), !10637)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !10616, !DIExpression(), !10638)
    #dbg_declare(ptr %elem_layout, !10617, !DIExpression(), !10639)
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10640
  %3 = icmp eq i64 %_5, 0, !dbg !10640
  br i1 %3, label %bb2, label %bb4, !dbg !10640

bb2:                                              ; preds = %start
  store i64 0, ptr %_8, align 8, !dbg !10641
  %4 = load i64, ptr %_8, align 8, !dbg !10641
  %5 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !10641
  %6 = load i64, ptr %5, align 8, !dbg !10641
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %4, i64 %6, ptr align 8 @alloc_93a1f017e54dc45d40059c12ee2514a2) #19, !dbg !10641
  %_7.0 = extractvalue { i64, i64 } %7, 0, !dbg !10641
  %_7.1 = extractvalue { i64, i64 } %7, 1, !dbg !10641
  store i64 %_7.0, ptr %_0, align 8, !dbg !10642
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10642
  store i64 %_7.1, ptr %8, align 8, !dbg !10642
  br label %bb21, !dbg !10643

bb4:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %9 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %len, i64 %additional) #19, !dbg !10645
  %_11.0 = extractvalue { i64, i64 } %9, 0, !dbg !10645
  %_11.1 = extractvalue { i64, i64 } %9, 1, !dbg !10645
  store i64 0, ptr %_12, align 8, !dbg !10646
  %10 = load i64, ptr %_12, align 8, !dbg !10645
  %11 = getelementptr inbounds i8, ptr %_12, i64 8, !dbg !10645
  %12 = load i64, ptr %11, align 8, !dbg !10645
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h42e8827b172396c2E"(ptr sret([16 x i8]) align 8 %_10, i64 %_11.0, i64 %_11.1, i64 %10, i64 %12) #19, !dbg !10645
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb510057ff3f0e937E"(ptr sret([16 x i8]) align 8 %_9, ptr align 8 %_10) #19, !dbg !10645
  %13 = load i64, ptr %_9, align 8, !dbg !10645
  %14 = icmp eq i64 %13, -9223372036854775807, !dbg !10645
  %_13 = select i1 %14, i64 0, i64 1, !dbg !10645
  %15 = icmp eq i64 %_13, 0, !dbg !10645
  br i1 %15, label %bb9, label %bb10, !dbg !10645

bb21:                                             ; preds = %bb10, %bb14, %bb19, %bb18, %bb2
  %16 = load i64, ptr %_0, align 8, !dbg !10647
  %17 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10647
  %18 = load i64, ptr %17, align 8, !dbg !10647
  %19 = insertvalue { i64, i64 } poison, i64 %16, 0, !dbg !10647
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !10647
  ret { i64, i64 } %20, !dbg !10647

bb9:                                              ; preds = %bb4
  %21 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !10645
  %cap = load i64, ptr %21, align 8, !dbg !10645
  store i64 %cap, ptr %cap.dbg.spill, align 8, !dbg !10645
    #dbg_declare(ptr %cap.dbg.spill, !10618, !DIExpression(), !10648)
    #dbg_declare(ptr %cap.dbg.spill, !10622, !DIExpression(), !10649)
  %22 = load i64, ptr %elem_layout, align 8, !dbg !10650
  %23 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10650
  %24 = load i64, ptr %23, align 8, !dbg !10650
; call alloc::raw_vec::layout_array
  call void @_ZN5alloc7raw_vec12layout_array17h10e5035f4ab8749dE(ptr sret([24 x i8]) align 8 %_17, i64 %cap, i64 %22, i64 %24) #19, !dbg !10650
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc11776b59597b879E"(ptr sret([24 x i8]) align 8 %_16, ptr align 8 %_17) #19, !dbg !10650
  %_18 = load i64, ptr %_16, align 8, !dbg !10650
  %25 = icmp eq i64 %_18, 0, !dbg !10650
  br i1 %25, label %bb13, label %bb14, !dbg !10650

bb10:                                             ; preds = %bb4
  %residual.04 = load i64, ptr %_9, align 8, !dbg !10651
  %26 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !10651
  %residual.15 = load i64, ptr %26, align 8, !dbg !10651
  store i64 %residual.04, ptr %residual.dbg.spill6, align 8, !dbg !10651
  %27 = getelementptr inbounds i8, ptr %residual.dbg.spill6, i64 8, !dbg !10651
  store i64 %residual.15, ptr %27, align 8, !dbg !10651
    #dbg_declare(ptr %residual.dbg.spill6, !10620, !DIExpression(), !10652)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %28 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h33f1e92ae445a6e0E"(i64 %residual.04, i64 %residual.15, ptr align 8 @alloc_d665e8656ddee09488f97f267e080a3a) #19, !dbg !10653
  %29 = extractvalue { i64, i64 } %28, 0, !dbg !10653
  %30 = extractvalue { i64, i64 } %28, 1, !dbg !10653
  store i64 %29, ptr %_0, align 8, !dbg !10653
  %31 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10653
  store i64 %30, ptr %31, align 8, !dbg !10653
  br label %bb21, !dbg !10653

bb13:                                             ; preds = %bb9
  %32 = getelementptr inbounds i8, ptr %_16, i64 8, !dbg !10650
  %new_layout.0 = load i64, ptr %32, align 8, !dbg !10650
  %33 = getelementptr inbounds i8, ptr %32, i64 8, !dbg !10650
  %new_layout.1 = load i64, ptr %33, align 8, !dbg !10650
  store i64 %new_layout.0, ptr %new_layout.dbg.spill, align 8, !dbg !10650
  %34 = getelementptr inbounds i8, ptr %new_layout.dbg.spill, i64 8, !dbg !10650
  store i64 %new_layout.1, ptr %34, align 8, !dbg !10650
    #dbg_declare(ptr %new_layout.dbg.spill, !10624, !DIExpression(), !10654)
    #dbg_declare(ptr %new_layout.dbg.spill, !10628, !DIExpression(), !10655)
  %35 = load i64, ptr %elem_layout, align 8, !dbg !10656
  %36 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10656
  %37 = load i64, ptr %36, align 8, !dbg !10656
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E"(ptr sret([24 x i8]) align 8 %_23, ptr align 8 %self, i64 %35, i64 %37) #19, !dbg !10656
  %_25 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !10657
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17ha729baa936d24039E(ptr sret([24 x i8]) align 8 %_22, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_23, ptr align 1 %_25) #19, !dbg !10658
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h540b4559420cf42fE"(ptr sret([24 x i8]) align 8 %_21, ptr align 8 %_22) #19, !dbg !10658
  %_26 = load i64, ptr %_21, align 8, !dbg !10658
  %38 = icmp eq i64 %_26, 0, !dbg !10658
  br i1 %38, label %bb18, label %bb19, !dbg !10658

bb14:                                             ; preds = %bb9
  %39 = getelementptr inbounds i8, ptr %_16, i64 8, !dbg !10659
  %residual.01 = load i64, ptr %39, align 8, !dbg !10659
  %40 = getelementptr inbounds i8, ptr %39, i64 8, !dbg !10659
  %residual.12 = load i64, ptr %40, align 8, !dbg !10659
  store i64 %residual.01, ptr %residual.dbg.spill3, align 8, !dbg !10659
  %41 = getelementptr inbounds i8, ptr %residual.dbg.spill3, i64 8, !dbg !10659
  store i64 %residual.12, ptr %41, align 8, !dbg !10659
    #dbg_declare(ptr %residual.dbg.spill3, !10626, !DIExpression(), !10660)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %residual.01, i64 %residual.12, ptr align 8 @alloc_23a3d4744acd471a3c8dbf46cf7661a4) #19, !dbg !10661
  %43 = extractvalue { i64, i64 } %42, 0, !dbg !10661
  %44 = extractvalue { i64, i64 } %42, 1, !dbg !10661
  store i64 %43, ptr %_0, align 8, !dbg !10661
  %45 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10661
  store i64 %44, ptr %45, align 8, !dbg !10661
  br label %bb21, !dbg !10661

bb18:                                             ; preds = %bb13
  %46 = getelementptr inbounds i8, ptr %_21, i64 8, !dbg !10658
  %ptr.0 = load ptr, ptr %46, align 8, !dbg !10658
  %47 = getelementptr inbounds i8, ptr %46, i64 8, !dbg !10658
  %ptr.1 = load i64, ptr %47, align 8, !dbg !10658
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8, !dbg !10658
  %48 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !10658
  store i64 %ptr.1, ptr %48, align 8, !dbg !10658
    #dbg_declare(ptr %ptr.dbg.spill, !10630, !DIExpression(), !10662)
    #dbg_declare(ptr %ptr.dbg.spill, !10634, !DIExpression(), !10663)
; call alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h9c104458183a65fcE"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap) #19, !dbg !10664
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10665
  br label %bb21, !dbg !10647

bb19:                                             ; preds = %bb13
  %49 = getelementptr inbounds i8, ptr %_21, i64 8, !dbg !10666
  %residual.0 = load i64, ptr %49, align 8, !dbg !10666
  %50 = getelementptr inbounds i8, ptr %49, i64 8, !dbg !10666
  %residual.1 = load i64, ptr %50, align 8, !dbg !10666
  store i64 %residual.0, ptr %residual.dbg.spill, align 8, !dbg !10666
  %51 = getelementptr inbounds i8, ptr %residual.dbg.spill, i64 8, !dbg !10666
  store i64 %residual.1, ptr %51, align 8, !dbg !10666
    #dbg_declare(ptr %residual.dbg.spill, !10632, !DIExpression(), !10667)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %52 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_c0f63f01bf777184241d983e099327d8) #19, !dbg !10668
  %53 = extractvalue { i64, i64 } %52, 0, !dbg !10668
  %54 = extractvalue { i64, i64 } %52, 1, !dbg !10668
  store i64 %53, ptr %_0, align 8, !dbg !10668
  %55 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10668
  store i64 %54, ptr %55, align 8, !dbg !10668
  br label %bb21, !dbg !10668

bb8:                                              ; No predecessors!
  unreachable, !dbg !10643
}

; alloc::raw_vec::RawVecInner<A>::shrink
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h17a899d03cdf5832E"(ptr align 8 %self, i64 %cap, i64 %0, i64 %1) unnamed_addr #1 !dbg !10669 {
start:
  %cap.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [48 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10674, !DIExpression(), !10677)
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10675, !DIExpression(), !10678)
    #dbg_declare(ptr %elem_layout, !10676, !DIExpression(), !10679)
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10680
; call alloc::raw_vec::RawVecInner<A>::capacity
  %_5 = call i64 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17he20cf9ee637f6c88E"(ptr align 8 %self, i64 %_7) #19, !dbg !10681
  %_4 = icmp ule i64 %cap, %_5, !dbg !10682
  br i1 %_4, label %bb3, label %bb4, !dbg !10682

bb4:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_10, ptr align 8 @alloc_52f548b6953b1f75b3b067c87f664dd5) #19, !dbg !10683
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_10, ptr align 8 @alloc_fc3bfbc8c061027976bfabb82120978f) #20, !dbg !10683
  unreachable, !dbg !10683

bb3:                                              ; preds = %start
  %3 = load i64, ptr %elem_layout, align 8, !dbg !10684
  %4 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10684
  %5 = load i64, ptr %4, align 8, !dbg !10684
; call alloc::raw_vec::RawVecInner<A>::shrink_unchecked
  %6 = call { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17h5abe58aba3fa51d1E"(ptr align 8 %self, i64 %cap, i64 %3, i64 %5) #19, !dbg !10684
  %_0.0 = extractvalue { i64, i64 } %6, 0, !dbg !10684
  %_0.1 = extractvalue { i64, i64 } %6, 1, !dbg !10684
  %7 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !10685
  %8 = insertvalue { i64, i64 } %7, i64 %_0.1, 1, !dbg !10685
  ret { i64, i64 } %8, !dbg !10685
}

; alloc::raw_vec::RawVecInner<A>::shrink_unchecked
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17h5abe58aba3fa51d1E"(ptr align 8 %self, i64 %cap, i64 %0, i64 %1) unnamed_addr #0 !dbg !10686 {
start:
  %addr.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %residual.dbg.spill = alloca [16 x i8], align 8
  %ptr.dbg.spill1 = alloca [16 x i8], align 8
  %new_size.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %cap.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_23 = alloca [24 x i8], align 8
  %_22 = alloca [24 x i8], align 8
  %new_layout = alloca [16 x i8], align 8
  %mem = alloca [24 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %layout = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10689, !DIExpression(), !10707)
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10690, !DIExpression(), !10708)
    #dbg_declare(ptr %elem_layout, !10691, !DIExpression(), !10709)
    #dbg_declare(ptr %layout, !10694, !DIExpression(), !10710)
    #dbg_declare(ptr %mem, !10695, !DIExpression(), !10711)
    #dbg_declare(ptr %new_layout, !10701, !DIExpression(), !10712)
  %3 = load i64, ptr %elem_layout, align 8, !dbg !10713
  %4 = getelementptr inbounds i8, ptr %elem_layout, i64 8, !dbg !10713
  %5 = load i64, ptr %4, align 8, !dbg !10713
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E"(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %self, i64 %3, i64 %5) #19, !dbg !10713
  %6 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !10713
  %7 = load i64, ptr %6, align 8, !dbg !10713
  %8 = icmp eq i64 %7, 0, !dbg !10713
  %_8 = select i1 %8, i64 0, i64 1, !dbg !10713
  %9 = icmp eq i64 %_8, 1, !dbg !10714
  br i1 %9, label %bb2, label %bb3, !dbg !10714

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %mem, ptr align 8 %_6, i64 24, i1 false), !dbg !10711
  %ptr = load ptr, ptr %mem, align 8, !dbg !10715
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10715
    #dbg_declare(ptr %ptr.dbg.spill, !10692, !DIExpression(), !10716)
  %10 = getelementptr inbounds i8, ptr %mem, i64 8, !dbg !10717
  %11 = load i64, ptr %10, align 8, !dbg !10717
  %12 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !10717
  %13 = load i64, ptr %12, align 8, !dbg !10717
  store i64 %11, ptr %layout, align 8, !dbg !10717
  %14 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10717
  store i64 %13, ptr %14, align 8, !dbg !10717
  %15 = icmp eq i64 %cap, 0, !dbg !10718
  br i1 %15, label %bb4, label %bb5, !dbg !10718

bb3:                                              ; preds = %start
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10719
  br label %bb21, !dbg !10720

bb4:                                              ; preds = %bb2
  %_11 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !10722
  %16 = load i64, ptr %layout, align 8, !dbg !10722
  %17 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10722
  %18 = load i64, ptr %17, align 8, !dbg !10722
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %_11, ptr %ptr, i64 %16, i64 %18) #19, !dbg !10722
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %elem_layout) #19, !dbg !10723
  store i64 %_14, ptr %addr.dbg.spill.i, align 8
    #dbg_declare(ptr %addr.dbg.spill.i, !6197, !DIExpression(), !10724)
  %_0.i2 = getelementptr i8, ptr null, i64 %_14, !dbg !10726
; call core::ptr::unique::Unique<T>::new_unchecked
  %_12 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd8a863cceea1dd7cE"(ptr %_0.i2) #19, !dbg !10727
  %19 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !10728
  store ptr %_12, ptr %19, align 8, !dbg !10728
  store i64 0, ptr %self, align 8, !dbg !10729
  br label %bb20, !dbg !10730

bb5:                                              ; preds = %bb2
; call core::alloc::layout::Layout::size
  %_17 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %elem_layout) #19, !dbg !10731
  store i64 %_17, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !10326, !DIExpression(), !10732)
  store i64 %cap, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !10329, !DIExpression(), !10734)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !10735
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit", !dbg !10735

bb2.i:                                            ; preds = %bb5
; call core::num::<impl usize>::unchecked_mul::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h6a26816055385cd9E"(i64 %_17, i64 %cap) #19, !dbg !10736
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit", !dbg !10736

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit": ; preds = %bb5, %bb2.i
  %_0.i = mul nuw i64 %_17, %cap, !dbg !10737
  store i64 %_0.i, ptr %new_size.dbg.spill, align 8, !dbg !10731
    #dbg_declare(ptr %new_size.dbg.spill, !10699, !DIExpression(), !10738)
; call core::alloc::layout::Layout::align
  %_20 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %layout) #19, !dbg !10739
; call core::alloc::layout::Layout::from_size_align_unchecked
  %20 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %_0.i, i64 %_20) #19, !dbg !10740
  %21 = extractvalue { i64, i64 } %20, 0, !dbg !10740
  %22 = extractvalue { i64, i64 } %20, 1, !dbg !10740
  store i64 %21, ptr %new_layout, align 8, !dbg !10740
  %23 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !10740
  store i64 %22, ptr %23, align 8, !dbg !10740
  %_25 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !10741
  %24 = load i64, ptr %layout, align 8, !dbg !10741
  %25 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10741
  %26 = load i64, ptr %25, align 8, !dbg !10741
  %27 = load i64, ptr %new_layout, align 8, !dbg !10741
  %28 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !10741
  %29 = load i64, ptr %28, align 8, !dbg !10741
; call <alloc::alloc::Global as core::alloc::Allocator>::shrink
  %30 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h921dc962da536af2E"(ptr align 1 %_25, ptr %ptr, i64 %24, i64 %26, i64 %27, i64 %29) #19, !dbg !10741
  %_24.0 = extractvalue { ptr, i64 } %30, 0, !dbg !10741
  %_24.1 = extractvalue { ptr, i64 } %30, 1, !dbg !10741
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc4397bbb12d5a250E"(ptr sret([24 x i8]) align 8 %_23, ptr %_24.0, i64 %_24.1, ptr align 8 %new_layout) #19, !dbg !10741
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha6abec15a9835463E"(ptr sret([24 x i8]) align 8 %_22, ptr align 8 %_23) #19, !dbg !10741
  %_28 = load i64, ptr %_22, align 8, !dbg !10741
  %31 = icmp eq i64 %_28, 0, !dbg !10741
  br i1 %31, label %bb18, label %bb19, !dbg !10741

bb20:                                             ; preds = %bb18, %bb4
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10742
  br label %bb21, !dbg !10743

bb18:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit"
  %32 = getelementptr inbounds i8, ptr %_22, i64 8, !dbg !10741
  %ptr.0 = load ptr, ptr %32, align 8, !dbg !10741
  %33 = getelementptr inbounds i8, ptr %32, i64 8, !dbg !10741
  %ptr.1 = load i64, ptr %33, align 8, !dbg !10741
  store ptr %ptr.0, ptr %ptr.dbg.spill1, align 8, !dbg !10741
  %34 = getelementptr inbounds i8, ptr %ptr.dbg.spill1, i64 8, !dbg !10741
  store i64 %ptr.1, ptr %34, align 8, !dbg !10741
    #dbg_declare(ptr %ptr.dbg.spill1, !10697, !DIExpression(), !10744)
    #dbg_declare(ptr %ptr.dbg.spill1, !10705, !DIExpression(), !10745)
; call alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h9c104458183a65fcE"(ptr align 8 %self, ptr %ptr.0, i64 %ptr.1, i64 %cap) #19, !dbg !10746
  br label %bb20, !dbg !10746

bb19:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE.exit"
  %35 = getelementptr inbounds i8, ptr %_22, i64 8, !dbg !10747
  %residual.0 = load i64, ptr %35, align 8, !dbg !10747
  %36 = getelementptr inbounds i8, ptr %35, i64 8, !dbg !10747
  %residual.1 = load i64, ptr %36, align 8, !dbg !10747
  store i64 %residual.0, ptr %residual.dbg.spill, align 8, !dbg !10747
  %37 = getelementptr inbounds i8, ptr %residual.dbg.spill, i64 8, !dbg !10747
  store i64 %residual.1, ptr %37, align 8, !dbg !10747
    #dbg_declare(ptr %residual.dbg.spill, !10703, !DIExpression(), !10748)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %38 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h33f1e92ae445a6e0E"(i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_2888ebeadf91c22b7e70ddfd9dba5abd) #19, !dbg !10749
  %39 = extractvalue { i64, i64 } %38, 0, !dbg !10749
  %40 = extractvalue { i64, i64 } %38, 1, !dbg !10749
  store i64 %39, ptr %_0, align 8, !dbg !10749
  %41 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10749
  store i64 %40, ptr %41, align 8, !dbg !10749
  br label %bb21, !dbg !10749

bb21:                                             ; preds = %bb3, %bb19, %bb20
  %42 = load i64, ptr %_0, align 8, !dbg !10743
  %43 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10743
  %44 = load i64, ptr %43, align 8, !dbg !10743
  %45 = insertvalue { i64, i64 } poison, i64 %42, 0, !dbg !10743
  %46 = insertvalue { i64, i64 } %45, i64 %44, 1, !dbg !10743
  ret { i64, i64 } %46, !dbg !10743

bb17:                                             ; No predecessors!
  unreachable, !dbg !10741
}

; alloc::raw_vec::RawVecInner<A>::shrink_unchecked::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hc12c04f3282927dbE"(ptr align 8 %0) unnamed_addr #1 !dbg !10750 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [16 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !10754, !DIExpression(DW_OP_deref), !10756)
    #dbg_declare(ptr %_2.dbg.spill, !10755, !DIExpression(), !10757)
  %_4 = load ptr, ptr %_1, align 8, !dbg !10758
  %_3.0 = load i64, ptr %_4, align 8, !dbg !10758
  %1 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10758
  %_3.1 = load i64, ptr %1, align 8, !dbg !10758
  store i64 %_3.0, ptr %_0, align 8, !dbg !10759
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10759
  store i64 %_3.1, ptr %2, align 8, !dbg !10759
  %3 = load i64, ptr %_0, align 8, !dbg !10760
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10760
  %5 = load i64, ptr %4, align 8, !dbg !10760
  %6 = insertvalue { i64, i64 } poison, i64 %3, 0, !dbg !10760
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !10760
  ret { i64, i64 } %7, !dbg !10760
}

; alloc::raw_vec::RawVecInner<A>::deallocate
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17h8a6de52b9ab0c5bbE"(ptr align 8 %self, i64 %elem_layout.0, i64 %elem_layout.1) unnamed_addr #0 !dbg !10761 {
start:
  %layout.dbg.spill = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %elem_layout.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10766, !DIExpression(), !10771)
  store i64 %elem_layout.0, ptr %elem_layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i64 8
  store i64 %elem_layout.1, ptr %0, align 8
    #dbg_declare(ptr %elem_layout.dbg.spill, !10767, !DIExpression(), !10772)
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E"(ptr sret([24 x i8]) align 8 %_3, ptr align 8 %self, i64 %elem_layout.0, i64 %elem_layout.1) #19, !dbg !10773
  %1 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10773
  %2 = load i64, ptr %1, align 8, !dbg !10773
  %3 = icmp eq i64 %2, 0, !dbg !10773
  %_5 = select i1 %3, i64 0, i64 1, !dbg !10773
  %4 = icmp eq i64 %_5, 1, !dbg !10774
  br i1 %4, label %bb2, label %bb3, !dbg !10774

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_3, align 8, !dbg !10775
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10775
    #dbg_declare(ptr %ptr.dbg.spill, !10768, !DIExpression(), !10775)
  %5 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10776
  %layout.0 = load i64, ptr %5, align 8, !dbg !10776
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !10776
  %layout.1 = load i64, ptr %6, align 8, !dbg !10776
  store i64 %layout.0, ptr %layout.dbg.spill, align 8, !dbg !10776
  %7 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8, !dbg !10776
  store i64 %layout.1, ptr %7, align 8, !dbg !10776
    #dbg_declare(ptr %layout.dbg.spill, !10770, !DIExpression(), !10776)
  %_9 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !10777
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %_9, ptr %ptr, i64 %layout.0, i64 %layout.1) #19, !dbg !10777
  br label %bb3, !dbg !10777

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !10778

bb4:                                              ; No predecessors!
  unreachable, !dbg !10779
}

; alloc::raw_vec::finish_grow
; Function Attrs: cold noredzone nounwind
define dso_local void @_ZN5alloc7raw_vec11finish_grow17ha729baa936d24039E(ptr sret([24 x i8]) align 8 %_0, i64 %0, i64 %1, ptr align 8 %current_memory, ptr align 1 %alloc) unnamed_addr #2 !dbg !10780 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [16 x i8], align 8
  %right_val.dbg.spill = alloca [8 x i8], align 8
  %left_val.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [0 x i8], align 1
  %alloc.dbg.spill = alloca [8 x i8], align 8
  %_28 = alloca [48 x i8], align 8
  %kind = alloca [1 x i8], align 1
  %_19 = alloca [8 x i8], align 8
  %_16 = alloca [8 x i8], align 8
  %old_layout = alloca [16 x i8], align 8
  %memory = alloca [16 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  %new_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %new_layout, align 8
  %2 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %new_layout, !10785, !DIExpression(), !10804)
    #dbg_declare(ptr %current_memory, !10786, !DIExpression(), !10805)
  store ptr %alloc, ptr %alloc.dbg.spill, align 8
    #dbg_declare(ptr %alloc.dbg.spill, !10787, !DIExpression(), !10806)
    #dbg_declare(ptr %memory, !10792, !DIExpression(), !10807)
    #dbg_declare(ptr %old_layout, !10796, !DIExpression(), !10808)
    #dbg_declare(ptr %kind, !10801, !DIExpression(), !10809)
    #dbg_declare(ptr %val.dbg.spill, !10790, !DIExpression(), !10810)
; call core::alloc::layout::Layout::size
  %_6 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %new_layout) #19, !dbg !10811
; call alloc::raw_vec::alloc_guard
  %3 = call { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17hafad2d284ee85d9fE(i64 %_6) #19, !dbg !10812
  %_5.0 = extractvalue { i64, i64 } %3, 0, !dbg !10812
  %_5.1 = extractvalue { i64, i64 } %3, 1, !dbg !10812
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %4 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18fb6e52d80cd6e1E"(i64 %_5.0, i64 %_5.1) #19, !dbg !10812
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !10812
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !10812
  store i64 %5, ptr %_4, align 8, !dbg !10812
  %7 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10812
  store i64 %6, ptr %7, align 8, !dbg !10812
  %8 = load i64, ptr %_4, align 8, !dbg !10812
  %9 = icmp eq i64 %8, -9223372036854775807, !dbg !10812
  %_8 = select i1 %9, i64 0, i64 1, !dbg !10812
  %10 = icmp eq i64 %_8, 0, !dbg !10812
  br i1 %10, label %bb5, label %bb6, !dbg !10812

bb5:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %current_memory, i64 8, !dbg !10813
  %12 = load i64, ptr %11, align 8, !dbg !10813
  %13 = icmp eq i64 %12, 0, !dbg !10813
  %_11 = select i1 %13, i64 0, i64 1, !dbg !10813
  %14 = icmp eq i64 %_11, 1, !dbg !10814
  br i1 %14, label %bb8, label %bb7, !dbg !10814

bb6:                                              ; preds = %start
  %residual.0 = load i64, ptr %_4, align 8, !dbg !10815
  %15 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !10815
  %residual.1 = load i64, ptr %15, align 8, !dbg !10815
  store i64 %residual.0, ptr %residual.dbg.spill, align 8, !dbg !10815
  %16 = getelementptr inbounds i8, ptr %residual.dbg.spill, i64 8, !dbg !10815
  store i64 %residual.1, ptr %16, align 8, !dbg !10815
    #dbg_declare(ptr %residual.dbg.spill, !10788, !DIExpression(), !10816)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdbba48e631aaff81E"(ptr sret([24 x i8]) align 8 %_0, i64 %residual.0, i64 %residual.1, ptr align 8 @alloc_dcec76c3bb4659c0fab740764cd7475f) #19, !dbg !10817
  br label %bb17, !dbg !10817

bb8:                                              ; preds = %bb5
  %ptr = load ptr, ptr %current_memory, align 8, !dbg !10818
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10818
    #dbg_declare(ptr %ptr.dbg.spill, !10794, !DIExpression(), !10818)
  %17 = getelementptr inbounds i8, ptr %current_memory, i64 8, !dbg !10808
  %18 = load i64, ptr %17, align 8, !dbg !10808
  %19 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !10808
  %20 = load i64, ptr %19, align 8, !dbg !10808
  store i64 %18, ptr %old_layout, align 8, !dbg !10808
  %21 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !10808
  store i64 %20, ptr %21, align 8, !dbg !10808
; call core::alloc::layout::Layout::align
  %22 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %old_layout) #19, !dbg !10819
  store i64 %22, ptr %_16, align 8, !dbg !10819
; call core::alloc::layout::Layout::align
  %23 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %new_layout) #19, !dbg !10820
  store i64 %23, ptr %_19, align 8, !dbg !10820
  store ptr %_16, ptr %left_val.dbg.spill, align 8, !dbg !10821
    #dbg_declare(ptr %left_val.dbg.spill, !10797, !DIExpression(), !10822)
  store ptr %_19, ptr %right_val.dbg.spill, align 8, !dbg !10821
    #dbg_declare(ptr %right_val.dbg.spill, !10800, !DIExpression(), !10822)
  %_24 = load i64, ptr %_16, align 8, !dbg !10822
  %_25 = load i64, ptr %_19, align 8, !dbg !10822
  %_23 = icmp eq i64 %_24, %_25, !dbg !10822
  br i1 %_23, label %bb12, label %bb11, !dbg !10822

bb7:                                              ; preds = %bb5
  %24 = load i64, ptr %new_layout, align 8, !dbg !10823
  %25 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !10823
  %26 = load i64, ptr %25, align 8, !dbg !10823
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %27 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc6e3b5736570da34E"(ptr align 1 %alloc, i64 %24, i64 %26) #19, !dbg !10823
  %28 = extractvalue { ptr, i64 } %27, 0, !dbg !10823
  %29 = extractvalue { ptr, i64 } %27, 1, !dbg !10823
  store ptr %28, ptr %memory, align 8, !dbg !10823
  %30 = getelementptr inbounds i8, ptr %memory, i64 8, !dbg !10823
  store i64 %29, ptr %30, align 8, !dbg !10823
  br label %bb16, !dbg !10823

bb11:                                             ; preds = %bb8
  store i8 0, ptr %kind, align 1, !dbg !10822
  store ptr null, ptr %_28, align 8, !dbg !10809
  %31 = load i8, ptr %kind, align 1, !dbg !10809
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha889447e65b19718E(i8 zeroext %31, ptr align 8 %_16, ptr align 8 %_19, ptr align 8 %_28, ptr align 8 @alloc_89bd8666822a16f761fde021cfb2330d) #20, !dbg !10809
  unreachable, !dbg !10809

bb12:                                             ; preds = %bb8
; call core::alloc::layout::Layout::align
  %_31 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %old_layout) #19, !dbg !10824
; call core::alloc::layout::Layout::align
  %_33 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %new_layout) #19, !dbg !10825
  %_30 = icmp eq i64 %_31, %_33, !dbg !10824
  %32 = zext i1 %_30 to i8
  store i8 %32, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !10826)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !10828
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10828

bb2.i:                                            ; preds = %bb12
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_30) #19, !dbg !10829
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !10829

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb12, %bb2.i
  %33 = load i64, ptr %old_layout, align 8, !dbg !10830
  %34 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !10830
  %35 = load i64, ptr %34, align 8, !dbg !10830
  %36 = load i64, ptr %new_layout, align 8, !dbg !10830
  %37 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !10830
  %38 = load i64, ptr %37, align 8, !dbg !10830
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %39 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h2ce5776082fbb9d2E"(ptr align 1 %alloc, ptr %ptr, i64 %33, i64 %35, i64 %36, i64 %38) #19, !dbg !10830
  %40 = extractvalue { ptr, i64 } %39, 0, !dbg !10830
  %41 = extractvalue { ptr, i64 } %39, 1, !dbg !10830
  store ptr %40, ptr %memory, align 8, !dbg !10830
  %42 = getelementptr inbounds i8, ptr %memory, i64 8, !dbg !10830
  store i64 %41, ptr %42, align 8, !dbg !10830
  br label %bb16, !dbg !10830

bb16:                                             ; preds = %bb7, %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
  %_37.0 = load ptr, ptr %memory, align 8, !dbg !10831
  %43 = getelementptr inbounds i8, ptr %memory, i64 8, !dbg !10831
  %_37.1 = load i64, ptr %43, align 8, !dbg !10831
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h68b23e03dcfea68bE"(ptr sret([24 x i8]) align 8 %_0, ptr %_37.0, i64 %_37.1, ptr align 8 %new_layout) #19, !dbg !10831
  br label %bb17, !dbg !10831

bb17:                                             ; preds = %bb6, %bb16
  ret void, !dbg !10832

bb4:                                              ; No predecessors!
  unreachable, !dbg !10812
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h65541403ff8832abE"(ptr align 8 %0) unnamed_addr #1 !dbg !10833 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_3 = alloca [16 x i8], align 8
  %_1 = alloca [8 x i8], align 8
  store ptr %0, ptr %_1, align 8
    #dbg_declare(ptr %_1, !10837, !DIExpression(DW_OP_deref), !10839)
    #dbg_declare(ptr %_2.dbg.spill, !10838, !DIExpression(), !10840)
  %_5 = load ptr, ptr %_1, align 8, !dbg !10841
  %_4.0 = load i64, ptr %_5, align 8, !dbg !10841
  %1 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !10841
  %_4.1 = load i64, ptr %1, align 8, !dbg !10841
  store i64 %_4.0, ptr %_3, align 8, !dbg !10842
  %2 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10842
  store i64 %_4.1, ptr %2, align 8, !dbg !10842
  %3 = load i64, ptr %_3, align 8, !dbg !10842
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10842
  %5 = load i64, ptr %4, align 8, !dbg !10842
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %3, i64 %5, ptr align 8 @alloc_175bca62bc9ddd286cc0663944a17128) #19, !dbg !10842
  %_0.0 = extractvalue { i64, i64 } %6, 0, !dbg !10842
  %_0.1 = extractvalue { i64, i64 } %6, 1, !dbg !10842
  %7 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !10843
  %8 = insertvalue { i64, i64 } %7, i64 %_0.1, 1, !dbg !10843
  ret { i64, i64 } %8, !dbg !10843
}

; alloc::raw_vec::handle_error
; Function Attrs: cold minsize noredzone noreturn nounwind optsize
define dso_local void @_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #6 !dbg !10844 {
start:
  %layout.dbg.spill = alloca [16 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  %e = alloca [16 x i8], align 8
  store i64 %0, ptr %e, align 8
  %3 = getelementptr inbounds i8, ptr %e, i64 8
  store i64 %1, ptr %3, align 8
    #dbg_declare(ptr %e, !10848, !DIExpression(), !10851)
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17haee17c6b6643f677E(ptr align 8 %e) #19, !dbg !10852
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !10852
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !10852
  store i64 %5, ptr %_2, align 8, !dbg !10852
  %7 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !10852
  store i64 %6, ptr %7, align 8, !dbg !10852
  %8 = load i64, ptr %_2, align 8, !dbg !10852
  %9 = icmp eq i64 %8, 0, !dbg !10852
  %_4 = select i1 %9, i64 0, i64 1, !dbg !10852
  %10 = icmp eq i64 %_4, 0, !dbg !10853
  br i1 %10, label %bb4, label %bb3, !dbg !10853

bb4:                                              ; preds = %start
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hf37f287b1e192c14E(ptr align 8 %2) #20, !dbg !10854
  unreachable, !dbg !10854

bb3:                                              ; preds = %start
  %layout.0 = load i64, ptr %_2, align 8, !dbg !10855
  %11 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !10855
  %layout.1 = load i64, ptr %11, align 8, !dbg !10855
  store i64 %layout.0, ptr %layout.dbg.spill, align 8, !dbg !10855
  %12 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8, !dbg !10855
  store i64 %layout.1, ptr %12, align 8, !dbg !10855
    #dbg_declare(ptr %layout.dbg.spill, !10849, !DIExpression(), !10856)
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h78cf9973be69c22fE(i64 %layout.0, i64 %layout.1) #20, !dbg !10857
  unreachable, !dbg !10857

bb2:                                              ; No predecessors!
  unreachable, !dbg !10852
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17hafad2d284ee85d9fE(i64 %alloc_size) unnamed_addr #1 !dbg !10858 {
start:
  %alloc_size.dbg.spill = alloca [8 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store i64 %alloc_size, ptr %alloc_size.dbg.spill, align 8
    #dbg_declare(ptr %alloc_size.dbg.spill, !10862, !DIExpression(), !10863)
  br label %bb4, !dbg !10864

bb4:                                              ; preds = %bb1, %start
  store i64 -9223372036854775807, ptr %_0, align 8, !dbg !10865
  br label %bb5, !dbg !10866

bb1:                                              ; No predecessors!
  %_3 = icmp ugt i64 %alloc_size, 9223372036854775807, !dbg !10867
  br i1 %_3, label %bb2, label %bb4, !dbg !10867

bb2:                                              ; preds = %bb1
  store i64 0, ptr %_6, align 8, !dbg !10868
  %0 = load i64, ptr %_6, align 8, !dbg !10868
  %1 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !10868
  %2 = load i64, ptr %1, align 8, !dbg !10868
; call <T as core::convert::Into<U>>::into
  %3 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %0, i64 %2, ptr align 8 @alloc_f5ca9184f677385d2f0972463cdac9ea) #19, !dbg !10868
  %_5.0 = extractvalue { i64, i64 } %3, 0, !dbg !10868
  %_5.1 = extractvalue { i64, i64 } %3, 1, !dbg !10868
  store i64 %_5.0, ptr %_0, align 8, !dbg !10869
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10869
  store i64 %_5.1, ptr %4, align 8, !dbg !10869
  br label %bb5, !dbg !10866

bb5:                                              ; preds = %bb2, %bb4
  %5 = load i64, ptr %_0, align 8, !dbg !10870
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10870
  %7 = load i64, ptr %6, align 8, !dbg !10870
  %8 = insertvalue { i64, i64 } poison, i64 %5, 0, !dbg !10870
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !10870
  ret { i64, i64 } %9, !dbg !10870
}

; alloc::raw_vec::layout_array
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc7raw_vec12layout_array17h10e5035f4ab8749dE(ptr sret([24 x i8]) align 8 %_0, i64 %cap, i64 %0, i64 %1) unnamed_addr #1 !dbg !10871 {
start:
  %cap.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %elem_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %elem_layout, align 8
  %2 = getelementptr inbounds i8, ptr %elem_layout, i64 8
  store i64 %1, ptr %2, align 8
  store i64 %cap, ptr %cap.dbg.spill, align 8
    #dbg_declare(ptr %cap.dbg.spill, !10875, !DIExpression(), !10877)
    #dbg_declare(ptr %elem_layout, !10876, !DIExpression(), !10878)
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h381bafd7c3735bf9E(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %elem_layout, i64 %cap) #19, !dbg !10879
; call core::result::Result<T,E>::map
  %3 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h48bda17d4b2b960cE"(ptr align 8 %_4) #19, !dbg !10879
  %_3.0 = extractvalue { i64, i64 } %3, 0, !dbg !10879
  %_3.1 = extractvalue { i64, i64 } %3, 1, !dbg !10879
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5455b7410ad09c45E"(ptr sret([24 x i8]) align 8 %_0, i64 %_3.0, i64 %_3.1) #19, !dbg !10879
  ret void, !dbg !10880
}

; alloc::raw_vec::layout_array::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17h1aa03a9512b3776fE"(ptr align 8 %_2) unnamed_addr #1 !dbg !10881 {
start:
  %_pad.dbg.spill = alloca [8 x i8], align 8
  %layout.dbg.spill = alloca [16 x i8], align 8
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !10888, !DIExpression(), !10890)
    #dbg_declare(ptr %_2, !10889, !DIExpression(), !10891)
  %layout.0 = load i64, ptr %_2, align 8, !dbg !10892
  %0 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !10892
  %layout.1 = load i64, ptr %0, align 8, !dbg !10892
  store i64 %layout.0, ptr %layout.dbg.spill, align 8, !dbg !10892
  %1 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8, !dbg !10892
  store i64 %layout.1, ptr %1, align 8, !dbg !10892
    #dbg_declare(ptr %layout.dbg.spill, !10885, !DIExpression(), !10893)
  %2 = getelementptr inbounds i8, ptr %_2, i64 16, !dbg !10894
  %_pad = load i64, ptr %2, align 8, !dbg !10894
  store i64 %_pad, ptr %_pad.dbg.spill, align 8, !dbg !10894
    #dbg_declare(ptr %_pad.dbg.spill, !10887, !DIExpression(), !10895)
  %3 = insertvalue { i64, i64 } poison, i64 %layout.0, 0, !dbg !10896
  %4 = insertvalue { i64, i64 } %3, i64 %layout.1, 1, !dbg !10896
  ret { i64, i64 } %4, !dbg !10896
}

; alloc::raw_vec::layout_array::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17he3993737c547ff05E"() unnamed_addr #1 !dbg !10897 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_3 = alloca [16 x i8], align 8
    #dbg_declare(ptr %_1.dbg.spill, !10901, !DIExpression(), !10903)
    #dbg_declare(ptr %_2.dbg.spill, !10902, !DIExpression(), !10904)
  store i64 0, ptr %_3, align 8, !dbg !10905
  %0 = load i64, ptr %_3, align 8, !dbg !10905
  %1 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !10905
  %2 = load i64, ptr %1, align 8, !dbg !10905
; call <T as core::convert::Into<U>>::into
  %3 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE"(i64 %0, i64 %2, ptr align 8 @alloc_a2607a9f56caecc8b029e45eefb4308e) #19, !dbg !10905
  %_0.0 = extractvalue { i64, i64 } %3, 0, !dbg !10905
  %_0.1 = extractvalue { i64, i64 } %3, 1, !dbg !10905
  %4 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !10906
  %5 = insertvalue { i64, i64 } %4, i64 %_0.1, 1, !dbg !10906
  ret { i64, i64 } %5, !dbg !10906
}

; alloc::alloc::alloc
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc5alloc17h3ac871a60ddec661E(i64 %0, i64 %1) unnamed_addr #1 !dbg !10907 {
start:
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %layout, !10912, !DIExpression(), !10913)
; call core::ptr::read_volatile
  %_2 = call i8 @_ZN4core3ptr13read_volatile17h714bdb722e2b088bE(ptr @__rust_no_alloc_shim_is_unstable) #19, !dbg !10914
; call core::alloc::layout::Layout::size
  %_6 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10915
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %layout) #19, !dbg !10916
  %_0 = call ptr @__rust_alloc(i64 %_6, i64 %_8) #19, !dbg !10917
  ret ptr %_0, !dbg !10918
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc5alloc7dealloc17he58641e8dbf5d71eE(ptr %ptr, i64 %0, i64 %1) unnamed_addr #1 !dbg !10919 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !10923, !DIExpression(), !10925)
    #dbg_declare(ptr %layout, !10924, !DIExpression(), !10926)
; call core::alloc::layout::Layout::size
  %_3 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10927
; call core::alloc::layout::Layout::align
  %_5 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %layout) #19, !dbg !10928
  call void @__rust_dealloc(ptr %ptr, i64 %_3, i64 %_5) #19, !dbg !10929
  ret void, !dbg !10930
}

; alloc::alloc::realloc
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc7realloc17he622dfad08f6c289E(ptr %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #1 !dbg !10931 {
start:
  %new_size.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !10935, !DIExpression(), !10938)
    #dbg_declare(ptr %layout, !10936, !DIExpression(), !10939)
  store i64 %new_size, ptr %new_size.dbg.spill, align 8
    #dbg_declare(ptr %new_size.dbg.spill, !10937, !DIExpression(), !10940)
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10941
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %layout) #19, !dbg !10942
  %_0 = call ptr @__rust_realloc(ptr %ptr, i64 %_4, i64 %_6, i64 %new_size) #19, !dbg !10943
  ret ptr %_0, !dbg !10944
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc12alloc_zeroed17h55dee345680adf2dE(i64 %0, i64 %1) unnamed_addr #1 !dbg !10945 {
start:
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %layout, !10947, !DIExpression(), !10948)
; call core::ptr::read_volatile
  %_2 = call i8 @_ZN4core3ptr13read_volatile17h714bdb722e2b088bE(ptr @__rust_no_alloc_shim_is_unstable) #19, !dbg !10949
; call core::alloc::layout::Layout::size
  %_6 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10950
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %layout) #19, !dbg !10951
  %_0 = call ptr @__rust_alloc_zeroed(i64 %_6, i64 %_8) #19, !dbg !10952
  ret ptr %_0, !dbg !10953
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE(ptr align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #1 !dbg !10954 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %residual.dbg.spill = alloca [0 x i8], align 1
  %zeroed.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  %_10 = alloca [8 x i8], align 8
  %raw_ptr = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !10959, !DIExpression(), !10972)
    #dbg_declare(ptr %layout, !10960, !DIExpression(), !10973)
  %3 = zext i1 %zeroed to i8
  store i8 %3, ptr %zeroed.dbg.spill, align 1
    #dbg_declare(ptr %zeroed.dbg.spill, !10961, !DIExpression(), !10974)
    #dbg_declare(ptr %raw_ptr, !10964, !DIExpression(), !10975)
    #dbg_declare(ptr %residual.dbg.spill, !10968, !DIExpression(), !10976)
; call core::alloc::layout::Layout::size
  %size = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !10977
  store i64 %size, ptr %size.dbg.spill, align 8, !dbg !10977
    #dbg_declare(ptr %size.dbg.spill, !10962, !DIExpression(), !10978)
  %4 = icmp eq i64 %size, 0, !dbg !10979
  br i1 %4, label %bb3, label %bb2, !dbg !10979

bb3:                                              ; preds = %start
; call core::alloc::layout::Layout::dangling
  %_7 = call ptr @_ZN4core5alloc6layout6Layout8dangling17h4a1fd527cdeb0e2fE(ptr align 8 %layout) #19, !dbg !10980
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %5 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E"(ptr %_7, i64 0) #19, !dbg !10981
  %_6.0 = extractvalue { ptr, i64 } %5, 0, !dbg !10981
  %_6.1 = extractvalue { ptr, i64 } %5, 1, !dbg !10981
  store ptr %_6.0, ptr %_0, align 8, !dbg !10982
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10982
  store i64 %_6.1, ptr %6, align 8, !dbg !10982
  br label %bb16, !dbg !10983

bb2:                                              ; preds = %start
  br i1 %zeroed, label %bb6, label %bb7, !dbg !10984

bb16:                                             ; preds = %bb14, %bb13, %bb3
  %7 = load ptr, ptr %_0, align 8, !dbg !10985
  %8 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10985
  %9 = load i64, ptr %8, align 8, !dbg !10985
  %10 = insertvalue { ptr, i64 } poison, ptr %7, 0, !dbg !10985
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1, !dbg !10985
  ret { ptr, i64 } %11, !dbg !10985

bb7:                                              ; preds = %bb2
  %12 = load i64, ptr %layout, align 8, !dbg !10986
  %13 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10986
  %14 = load i64, ptr %13, align 8, !dbg !10986
; call alloc::alloc::alloc
  %15 = call ptr @_ZN5alloc5alloc5alloc17h3ac871a60ddec661E(i64 %12, i64 %14) #19, !dbg !10986
  store ptr %15, ptr %raw_ptr, align 8, !dbg !10986
  br label %bb8, !dbg !10986

bb6:                                              ; preds = %bb2
  %16 = load i64, ptr %layout, align 8, !dbg !10987
  %17 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !10987
  %18 = load i64, ptr %17, align 8, !dbg !10987
; call alloc::alloc::alloc_zeroed
  %19 = call ptr @_ZN5alloc5alloc12alloc_zeroed17h55dee345680adf2dE(i64 %16, i64 %18) #19, !dbg !10987
  store ptr %19, ptr %raw_ptr, align 8, !dbg !10987
  br label %bb8, !dbg !10987

bb8:                                              ; preds = %bb6, %bb7
  %_13 = load ptr, ptr %raw_ptr, align 8, !dbg !10988
; call core::ptr::non_null::NonNull<T>::new
  %_12 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hf35a6d062855dc58E"(ptr %_13) #19, !dbg !10989
; call core::option::Option<T>::ok_or
  %_11 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17he08d66db6591ba09E"(ptr %_12) #19, !dbg !10989
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %20 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd0fa82c3a1e0f0c2E"(ptr %_11) #19, !dbg !10989
  store ptr %20, ptr %_10, align 8, !dbg !10989
  %21 = load ptr, ptr %_10, align 8, !dbg !10989
  %22 = ptrtoint ptr %21 to i64, !dbg !10989
  %23 = icmp eq i64 %22, 0, !dbg !10989
  %_14 = select i1 %23, i64 1, i64 0, !dbg !10989
  %24 = icmp eq i64 %_14, 0, !dbg !10989
  br i1 %24, label %bb13, label %bb14, !dbg !10989

bb13:                                             ; preds = %bb8
  %ptr = load ptr, ptr %_10, align 8, !dbg !10989
  store ptr %ptr, ptr %ptr.dbg.spill, align 8, !dbg !10989
    #dbg_declare(ptr %ptr.dbg.spill, !10966, !DIExpression(), !10990)
    #dbg_declare(ptr %ptr.dbg.spill, !10970, !DIExpression(), !10991)
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %25 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E"(ptr %ptr, i64 %size) #19, !dbg !10992
  %_16.0 = extractvalue { ptr, i64 } %25, 0, !dbg !10992
  %_16.1 = extractvalue { ptr, i64 } %25, 1, !dbg !10992
  store ptr %_16.0, ptr %_0, align 8, !dbg !10993
  %26 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10993
  store i64 %_16.1, ptr %26, align 8, !dbg !10993
  br label %bb16, !dbg !10994

bb14:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %27 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E"(ptr align 8 @alloc_dde264d245f0a2a468c806470ebb5456) #19, !dbg !10995
  %28 = extractvalue { ptr, i64 } %27, 0, !dbg !10995
  %29 = extractvalue { ptr, i64 } %27, 1, !dbg !10995
  store ptr %28, ptr %_0, align 8, !dbg !10995
  %30 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !10995
  store i64 %29, ptr %30, align 8, !dbg !10995
  br label %bb16, !dbg !10995

bb12:                                             ; No predecessors!
  unreachable, !dbg !10989
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17h5f45bd336a212eafE(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #1 !dbg !10996 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i9 = alloca [8 x i8], align 8
  %self.dbg.spill.i8 = alloca [8 x i8], align 8
  %count.dbg.spill.i5 = alloca [8 x i8], align 8
  %self.dbg.spill.i6 = alloca [8 x i8], align 8
  %count.dbg.spill.i.i = alloca [8 x i8], align 8
  %val.dbg.spill.i.i = alloca [1 x i8], align 1
  %dst.dbg.spill.i.i = alloca [8 x i8], align 8
  %_8.i.i = alloca [1 x i8], align 1
  %count.dbg.spill.i4 = alloca [8 x i8], align 8
  %val.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill3 = alloca [8 x i8], align 8
  %raw_ptr.dbg.spill = alloca [8 x i8], align 8
  %new_size.dbg.spill = alloca [8 x i8], align 8
  %new_ptr.dbg.spill = alloca [16 x i8], align 8
  %old_size.dbg.spill = alloca [8 x i8], align 8
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %zeroed.dbg.spill = alloca [1 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_40 = alloca [16 x i8], align 8
  %_30 = alloca [8 x i8], align 8
  %old_size = alloca [8 x i8], align 8
  %_12 = alloca [48 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %new_layout = alloca [16 x i8], align 8
  %old_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %old_layout, align 8
  %4 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %1, ptr %4, align 8
  store i64 %2, ptr %new_layout, align 8
  %5 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %3, ptr %5, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11001, !DIExpression(), !11027)
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !11002, !DIExpression(), !11028)
    #dbg_declare(ptr %old_layout, !11003, !DIExpression(), !11029)
    #dbg_declare(ptr %new_layout, !11004, !DIExpression(), !11030)
  %6 = zext i1 %zeroed to i8
  store i8 %6, ptr %zeroed.dbg.spill, align 1
    #dbg_declare(ptr %zeroed.dbg.spill, !11005, !DIExpression(), !11031)
    #dbg_declare(ptr %old_size, !11006, !DIExpression(), !11032)
    #dbg_declare(ptr %old_size, !11019, !DIExpression(), !11033)
    #dbg_declare(ptr %residual.dbg.spill, !11015, !DIExpression(), !11034)
    #dbg_declare(ptr %residual.dbg.spill1, !11023, !DIExpression(), !11035)
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %new_layout) #19, !dbg !11036
; call core::alloc::layout::Layout::size
  %_9 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %old_layout) #19, !dbg !11037
  %_6 = icmp uge i64 %_7, %_9, !dbg !11036
  br i1 %_6, label %bb5, label %bb3, !dbg !11036

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_12, ptr align 8 @alloc_04056f6d76887c0653320aca2f1cbe49) #19, !dbg !11038
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_12, ptr align 8 @alloc_f7e097dcbfe9543a6530595869b765eb) #20, !dbg !11038
  unreachable, !dbg !11038

bb5:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %7 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %old_layout) #19, !dbg !11039
  store i64 %7, ptr %old_size, align 8, !dbg !11039
  %8 = load i64, ptr %old_size, align 8, !dbg !11040
  %9 = icmp eq i64 %8, 0, !dbg !11040
  br i1 %9, label %bb8, label %bb7, !dbg !11040

bb8:                                              ; preds = %bb5
  %10 = load i64, ptr %new_layout, align 8, !dbg !11041
  %11 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !11041
  %12 = load i64, ptr %11, align 8, !dbg !11041
; call alloc::alloc::Global::alloc_impl
  %13 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE(ptr align 1 %self, i64 %10, i64 %12, i1 zeroext %zeroed) #19, !dbg !11041
  %14 = extractvalue { ptr, i64 } %13, 0, !dbg !11041
  %15 = extractvalue { ptr, i64 } %13, 1, !dbg !11041
  store ptr %14, ptr %_0, align 8, !dbg !11041
  %16 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11041
  store i64 %15, ptr %16, align 8, !dbg !11041
  br label %bb37, !dbg !11041

bb7:                                              ; preds = %bb5
  store ptr %old_size, ptr %old_size.dbg.spill, align 8, !dbg !11042
    #dbg_declare(ptr %old_size.dbg.spill, !11008, !DIExpression(), !11032)
; call core::alloc::layout::Layout::align
  %_18 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %old_layout) #19, !dbg !11043
; call core::alloc::layout::Layout::align
  %_20 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %new_layout) #19, !dbg !11044
  %_17 = icmp eq i64 %_18, %_20, !dbg !11043
  br i1 %_17, label %bb11, label %bb12, !dbg !11043

bb37:                                             ; preds = %bb23, %bb27, %bb32, %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, %bb8
  %17 = load ptr, ptr %_0, align 8, !dbg !11045
  %18 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11045
  %19 = load i64, ptr %18, align 8, !dbg !11045
  %20 = insertvalue { ptr, i64 } poison, ptr %17, 0, !dbg !11045
  %21 = insertvalue { ptr, i64 } %20, i64 %19, 1, !dbg !11045
  ret { ptr, i64 } %21, !dbg !11045

bb12:                                             ; preds = %bb7
  %22 = load i64, ptr %new_layout, align 8, !dbg !11046
  %23 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !11046
  %24 = load i64, ptr %23, align 8, !dbg !11046
; call alloc::alloc::Global::alloc_impl
  %25 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE(ptr align 1 %self, i64 %22, i64 %24, i1 zeroext %zeroed) #19, !dbg !11046
  %_41.0 = extractvalue { ptr, i64 } %25, 0, !dbg !11046
  %_41.1 = extractvalue { ptr, i64 } %25, 1, !dbg !11046
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %26 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb9c86ab250b103fbE"(ptr %_41.0, i64 %_41.1) #19, !dbg !11046
  %27 = extractvalue { ptr, i64 } %26, 0, !dbg !11046
  %28 = extractvalue { ptr, i64 } %26, 1, !dbg !11046
  store ptr %27, ptr %_40, align 8, !dbg !11046
  %29 = getelementptr inbounds i8, ptr %_40, i64 8, !dbg !11046
  store i64 %28, ptr %29, align 8, !dbg !11046
  %30 = load ptr, ptr %_40, align 8, !dbg !11046
  %31 = ptrtoint ptr %30 to i64, !dbg !11046
  %32 = icmp eq i64 %31, 0, !dbg !11046
  %_42 = select i1 %32, i64 1, i64 0, !dbg !11046
  %33 = icmp eq i64 %_42, 0, !dbg !11046
  br i1 %33, label %bb31, label %bb32, !dbg !11046

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %new_layout) #19, !dbg !11047
  store i64 %new_size, ptr %new_size.dbg.spill, align 8, !dbg !11047
    #dbg_declare(ptr %new_size.dbg.spill, !11009, !DIExpression(), !11048)
; call core::alloc::layout::Layout::size
  %_26 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %old_layout) #19, !dbg !11049
  %_25 = icmp uge i64 %new_size, %_26, !dbg !11050
  %34 = zext i1 %_25 to i8
  store i8 %34, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !11051)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11053
  br i1 %_2.i, label %bb2.i10, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !11053

bb2.i10:                                          ; preds = %bb11
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_25) #19, !dbg !11054
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !11054

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb11, %bb2.i10
  store ptr %ptr, ptr %self.dbg.spill.i8, align 8
    #dbg_declare(ptr %self.dbg.spill.i8, !3889, !DIExpression(), !11055)
  %35 = load i64, ptr %old_layout, align 8, !dbg !11057
  %36 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !11057
  %37 = load i64, ptr %36, align 8, !dbg !11057
; call alloc::alloc::realloc
  %raw_ptr = call ptr @_ZN5alloc5alloc7realloc17he622dfad08f6c289E(ptr %ptr, i64 %35, i64 %37, i64 %new_size) #19, !dbg !11057
  store ptr %raw_ptr, ptr %raw_ptr.dbg.spill, align 8, !dbg !11057
    #dbg_declare(ptr %raw_ptr.dbg.spill, !11011, !DIExpression(), !11058)
; call core::ptr::non_null::NonNull<T>::new
  %_32 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hf35a6d062855dc58E"(ptr %raw_ptr) #19, !dbg !11059
; call core::option::Option<T>::ok_or
  %_31 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17he08d66db6591ba09E"(ptr %_32) #19, !dbg !11059
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %38 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd0fa82c3a1e0f0c2E"(ptr %_31) #19, !dbg !11059
  store ptr %38, ptr %_30, align 8, !dbg !11059
  %39 = load ptr, ptr %_30, align 8, !dbg !11059
  %40 = ptrtoint ptr %39 to i64, !dbg !11059
  %41 = icmp eq i64 %40, 0, !dbg !11059
  %_33 = select i1 %41, i64 1, i64 0, !dbg !11059
  %42 = icmp eq i64 %_33, 0, !dbg !11059
  br i1 %42, label %bb22, label %bb23, !dbg !11059

bb31:                                             ; preds = %bb12
  %new_ptr.0 = load ptr, ptr %_40, align 8, !dbg !11046
  %43 = getelementptr inbounds i8, ptr %_40, i64 8, !dbg !11046
  %new_ptr.1 = load i64, ptr %43, align 8, !dbg !11046
  store ptr %new_ptr.0, ptr %new_ptr.dbg.spill, align 8, !dbg !11046
  %44 = getelementptr inbounds i8, ptr %new_ptr.dbg.spill, i64 8, !dbg !11046
  store i64 %new_ptr.1, ptr %44, align 8, !dbg !11046
    #dbg_declare(ptr %new_ptr.dbg.spill, !11021, !DIExpression(), !11060)
    #dbg_declare(ptr %new_ptr.dbg.spill, !11025, !DIExpression(), !11061)
  store ptr %ptr, ptr %self.dbg.spill.i9, align 8
    #dbg_declare(ptr %self.dbg.spill.i9, !3889, !DIExpression(), !11062)
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_47 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8ea954c26f14c1dfE"(ptr %new_ptr.0, i64 %new_ptr.1) #19, !dbg !11064
  %45 = load i64, ptr %old_size, align 8, !dbg !11065
  store ptr %ptr, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !4091, !DIExpression(), !11066)
  store ptr %_47, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !4094, !DIExpression(), !11068)
  store i64 %45, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !4095, !DIExpression(), !11069)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11070
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !11070

bb2.i:                                            ; preds = %bb31
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %ptr, ptr %_47, i64 1, i64 1, i64 %45) #19, !dbg !11071
  br label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !11071

_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit: ; preds = %bb31, %bb2.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_47, ptr align 1 %ptr, i64 %45, i1 false), !dbg !11072
  %46 = load i64, ptr %old_layout, align 8, !dbg !11073
  %47 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !11073
  %48 = load i64, ptr %47, align 8, !dbg !11073
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %self, ptr %ptr, i64 %46, i64 %48) #19, !dbg !11073
  store ptr %new_ptr.0, ptr %_0, align 8, !dbg !11074
  %49 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11074
  store i64 %new_ptr.1, ptr %49, align 8, !dbg !11074
  br label %bb37, !dbg !11075

bb32:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %50 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E"(ptr align 8 @alloc_46765a78bfce89bba8b56fcfb1141a33) #19, !dbg !11076
  %51 = extractvalue { ptr, i64 } %50, 0, !dbg !11076
  %52 = extractvalue { ptr, i64 } %50, 1, !dbg !11076
  store ptr %51, ptr %_0, align 8, !dbg !11076
  %53 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11076
  store i64 %52, ptr %53, align 8, !dbg !11076
  br label %bb37, !dbg !11076

bb22:                                             ; preds = %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
  %ptr2 = load ptr, ptr %_30, align 8, !dbg !11059
  store ptr %ptr2, ptr %ptr.dbg.spill3, align 8, !dbg !11059
    #dbg_declare(ptr %ptr.dbg.spill3, !11013, !DIExpression(), !11077)
    #dbg_declare(ptr %ptr.dbg.spill3, !11017, !DIExpression(), !11078)
  br i1 %zeroed, label %bb24, label %bb27, !dbg !11079

bb23:                                             ; preds = %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %54 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E"(ptr align 8 @alloc_aae8d81914a7812d593250f2e6c9ad12) #19, !dbg !11080
  %55 = extractvalue { ptr, i64 } %54, 0, !dbg !11080
  %56 = extractvalue { ptr, i64 } %54, 1, !dbg !11080
  store ptr %55, ptr %_0, align 8, !dbg !11080
  %57 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11080
  store i64 %56, ptr %57, align 8, !dbg !11080
  br label %bb37, !dbg !11080

bb27:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17haf8ffa4bf70e81b8E.exit", %bb22
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %58 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E"(ptr %ptr2, i64 %new_size) #19, !dbg !11081
  %_39.0 = extractvalue { ptr, i64 } %58, 0, !dbg !11081
  %_39.1 = extractvalue { ptr, i64 } %58, 1, !dbg !11081
  store ptr %_39.0, ptr %_0, align 8, !dbg !11082
  %59 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11082
  store i64 %_39.1, ptr %59, align 8, !dbg !11082
  br label %bb37, !dbg !11083

bb24:                                             ; preds = %bb22
  %60 = load i64, ptr %old_size, align 8, !dbg !11084
  store ptr %raw_ptr, ptr %self.dbg.spill.i6, align 8
    #dbg_declare(ptr %self.dbg.spill.i6, !11085, !DIExpression(), !11091)
  store i64 %60, ptr %count.dbg.spill.i5, align 8
    #dbg_declare(ptr %count.dbg.spill.i5, !11090, !DIExpression(), !11093)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11094
  br i1 %_3.i, label %bb2.i7, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !11094

bb2.i7:                                           ; preds = %bb24
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %raw_ptr, i64 %60, i64 1) #19, !dbg !11096
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !11096

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %bb24, %bb2.i7
  %_0.i = getelementptr inbounds i8, ptr %raw_ptr, i64 %60, !dbg !11097
  %61 = load i64, ptr %old_size, align 8, !dbg !11098
  %_38.0 = sub i64 %new_size, %61, !dbg !11098
  %_38.1 = icmp ult i64 %new_size, %61, !dbg !11098
  br i1 %_38.1, label %panic, label %bb26, !dbg !11098

bb26:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
  store ptr %_0.i, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11099, !DIExpression(), !11106)
  store i8 0, ptr %val.dbg.spill.i, align 1
    #dbg_declare(ptr %val.dbg.spill.i, !11104, !DIExpression(), !11108)
  store i64 %_38.0, ptr %count.dbg.spill.i4, align 8
    #dbg_declare(ptr %count.dbg.spill.i4, !11105, !DIExpression(), !11109)
  store ptr %_0.i, ptr %dst.dbg.spill.i.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i.i, !11110, !DIExpression(), !11115)
  store i8 0, ptr %val.dbg.spill.i.i, align 1
    #dbg_declare(ptr %val.dbg.spill.i.i, !11113, !DIExpression(), !11117)
  store i64 %_38.0, ptr %count.dbg.spill.i.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i.i, !11114, !DIExpression(), !11118)
; call core::ub_checks::check_language_ub
  %_4.i.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11119
  br i1 %_4.i.i, label %bb2.i.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17haf8ffa4bf70e81b8E.exit", !dbg !11119

bb2.i.i:                                          ; preds = %bb26
  %62 = icmp eq i64 %_38.0, 0, !dbg !11121
  %63 = zext i1 %62 to i8, !dbg !11121
  store i8 %63, ptr %_8.i.i, align 1, !dbg !11121
  %64 = load i8, ptr %_8.i.i, align 1, !dbg !11122
  %65 = trunc i8 %64 to i1, !dbg !11122
; call core::intrinsics::write_bytes::precondition_check
  call void @_ZN4core10intrinsics11write_bytes18precondition_check17he7d582f03055b4ecE(ptr %_0.i, i64 1, i1 zeroext %65) #19, !dbg !11122
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17haf8ffa4bf70e81b8E.exit", !dbg !11122

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17haf8ffa4bf70e81b8E.exit": ; preds = %bb26, %bb2.i.i
  call void @llvm.memset.p0.i64(ptr align 1 %_0.i, i8 0, i64 %_38.0, i1 false), !dbg !11123
  br label %bb27, !dbg !11084

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_28683999e6cbd30a51f01c03e9bf8994) #20, !dbg !11098
  unreachable, !dbg !11098

bb21:                                             ; No predecessors!
  unreachable, !dbg !11124
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc6e3b5736570da34E"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 !dbg !11126 {
start:
  %layout.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11131, !DIExpression(), !11133)
  store i64 %layout.0, ptr %layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8
  store i64 %layout.1, ptr %0, align 8
    #dbg_declare(ptr %layout.dbg.spill, !11132, !DIExpression(), !11134)
; call alloc::alloc::Global::alloc_impl
  %1 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false) #19, !dbg !11135
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11135
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11135
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11136
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !11136
  ret { ptr, i64 } %3, !dbg !11136
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc68de8c2f80c6d90E"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 !dbg !11137 {
start:
  %layout.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11139, !DIExpression(), !11141)
  store i64 %layout.0, ptr %layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8
  store i64 %layout.1, ptr %0, align 8
    #dbg_declare(ptr %layout.dbg.spill, !11140, !DIExpression(), !11142)
; call alloc::alloc::Global::alloc_impl
  %1 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true) #19, !dbg !11143
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11143
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11143
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11144
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !11144
  ret { ptr, i64 } %3, !dbg !11144
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1) unnamed_addr #1 !dbg !11145 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11149, !DIExpression(), !11152)
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !11150, !DIExpression(), !11153)
    #dbg_declare(ptr %layout, !11151, !DIExpression(), !11154)
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !11155
  %3 = icmp eq i64 %_4, 0, !dbg !11155
  br i1 %3, label %bb4, label %bb2, !dbg !11155

bb4:                                              ; preds = %bb2, %start
  ret void, !dbg !11156

bb2:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3889, !DIExpression(), !11157)
  %4 = load i64, ptr %layout, align 8, !dbg !11159
  %5 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !11159
  %6 = load i64, ptr %5, align 8, !dbg !11159
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17he58641e8dbf5d71eE(ptr %ptr, i64 %4, i64 %6) #19, !dbg !11159
  br label %bb4, !dbg !11159
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h2ce5776082fbb9d2E"(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #1 !dbg !11160 {
start:
  %new_layout.dbg.spill = alloca [16 x i8], align 8
  %old_layout.dbg.spill = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11164, !DIExpression(), !11168)
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !11165, !DIExpression(), !11169)
  store i64 %old_layout.0, ptr %old_layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %old_layout.dbg.spill, i64 8
  store i64 %old_layout.1, ptr %0, align 8
    #dbg_declare(ptr %old_layout.dbg.spill, !11166, !DIExpression(), !11170)
  store i64 %new_layout.0, ptr %new_layout.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %new_layout.dbg.spill, i64 8
  store i64 %new_layout.1, ptr %1, align 8
    #dbg_declare(ptr %new_layout.dbg.spill, !11167, !DIExpression(), !11171)
; call alloc::alloc::Global::grow_impl
  %2 = call { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17h5f45bd336a212eafE(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false) #19, !dbg !11172
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !11172
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !11172
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11173
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !11173
  ret { ptr, i64 } %4, !dbg !11173
}

; <alloc::alloc::Global as core::alloc::Allocator>::shrink
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h921dc962da536af2E"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3) unnamed_addr #1 !dbg !11174 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i4 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %ptr.dbg.spill3 = alloca [8 x i8], align 8
  %raw_ptr.dbg.spill = alloca [8 x i8], align 8
  %new_ptr.dbg.spill = alloca [16 x i8], align 8
  %new_size.dbg.spill = alloca [8 x i8], align 8
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_37 = alloca [16 x i8], align 8
  %_31 = alloca [8 x i8], align 8
  %new_size = alloca [8 x i8], align 8
  %_11 = alloca [48 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  %new_layout = alloca [16 x i8], align 8
  %old_layout = alloca [16 x i8], align 8
  store i64 %0, ptr %old_layout, align 8
  %4 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %1, ptr %4, align 8
  store i64 %2, ptr %new_layout, align 8
  %5 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %3, ptr %5, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11176, !DIExpression(), !11199)
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !11177, !DIExpression(), !11200)
    #dbg_declare(ptr %old_layout, !11178, !DIExpression(), !11201)
    #dbg_declare(ptr %new_layout, !11179, !DIExpression(), !11202)
    #dbg_declare(ptr %new_size, !11180, !DIExpression(), !11203)
    #dbg_declare(ptr %new_size, !11191, !DIExpression(), !11204)
    #dbg_declare(ptr %residual.dbg.spill, !11187, !DIExpression(), !11205)
    #dbg_declare(ptr %residual.dbg.spill1, !11195, !DIExpression(), !11206)
; call core::alloc::layout::Layout::size
  %_6 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %new_layout) #19, !dbg !11207
; call core::alloc::layout::Layout::size
  %_8 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %old_layout) #19, !dbg !11208
  %_5 = icmp ule i64 %_6, %_8, !dbg !11207
  br i1 %_5, label %bb5, label %bb3, !dbg !11207

bb3:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_11, ptr align 8 @alloc_1020994b51d9ceb7568ac48c79478bfe) #19, !dbg !11209
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_11, ptr align 8 @alloc_1c21d73e21956617058bd8f91fe5fcbe) #20, !dbg !11209
  unreachable, !dbg !11209

bb5:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %6 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %new_layout) #19, !dbg !11210
  store i64 %6, ptr %new_size, align 8, !dbg !11210
  %7 = load i64, ptr %new_size, align 8, !dbg !11211
  %8 = icmp eq i64 %7, 0, !dbg !11211
  br i1 %8, label %bb8, label %bb7, !dbg !11211

bb8:                                              ; preds = %bb5
  %9 = load i64, ptr %old_layout, align 8, !dbg !11212
  %10 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !11212
  %11 = load i64, ptr %10, align 8, !dbg !11212
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %self, ptr %ptr, i64 %9, i64 %11) #19, !dbg !11212
; call core::alloc::layout::Layout::dangling
  %_17 = call ptr @_ZN4core5alloc6layout6Layout8dangling17h4a1fd527cdeb0e2fE(ptr align 8 %new_layout) #19, !dbg !11213
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %12 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E"(ptr %_17, i64 0) #19, !dbg !11214
  %_16.0 = extractvalue { ptr, i64 } %12, 0, !dbg !11214
  %_16.1 = extractvalue { ptr, i64 } %12, 1, !dbg !11214
  store ptr %_16.0, ptr %_0, align 8, !dbg !11215
  %13 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11215
  store i64 %_16.1, ptr %13, align 8, !dbg !11215
  br label %bb35, !dbg !11216

bb7:                                              ; preds = %bb5
  store ptr %new_size, ptr %new_size.dbg.spill, align 8, !dbg !11217
    #dbg_declare(ptr %new_size.dbg.spill, !11182, !DIExpression(), !11203)
; call core::alloc::layout::Layout::align
  %_21 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %old_layout) #19, !dbg !11218
; call core::alloc::layout::Layout::align
  %_23 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %new_layout) #19, !dbg !11219
  %_20 = icmp eq i64 %_21, %_23, !dbg !11218
  br i1 %_20, label %bb14, label %bb15, !dbg !11218

bb35:                                             ; preds = %bb25, %bb24, %bb30, %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, %bb8
  %14 = load ptr, ptr %_0, align 8, !dbg !11220
  %15 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11220
  %16 = load i64, ptr %15, align 8, !dbg !11220
  %17 = insertvalue { ptr, i64 } poison, ptr %14, 0, !dbg !11220
  %18 = insertvalue { ptr, i64 } %17, i64 %16, 1, !dbg !11220
  ret { ptr, i64 } %18, !dbg !11220

bb15:                                             ; preds = %bb7
  %19 = load i64, ptr %new_layout, align 8, !dbg !11221
  %20 = getelementptr inbounds i8, ptr %new_layout, i64 8, !dbg !11221
  %21 = load i64, ptr %20, align 8, !dbg !11221
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %22 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc6e3b5736570da34E"(ptr align 1 %self, i64 %19, i64 %21) #19, !dbg !11221
  %_38.0 = extractvalue { ptr, i64 } %22, 0, !dbg !11221
  %_38.1 = extractvalue { ptr, i64 } %22, 1, !dbg !11221
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %23 = call { ptr, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb9c86ab250b103fbE"(ptr %_38.0, i64 %_38.1) #19, !dbg !11221
  %24 = extractvalue { ptr, i64 } %23, 0, !dbg !11221
  %25 = extractvalue { ptr, i64 } %23, 1, !dbg !11221
  store ptr %24, ptr %_37, align 8, !dbg !11221
  %26 = getelementptr inbounds i8, ptr %_37, i64 8, !dbg !11221
  store i64 %25, ptr %26, align 8, !dbg !11221
  %27 = load ptr, ptr %_37, align 8, !dbg !11221
  %28 = ptrtoint ptr %27 to i64, !dbg !11221
  %29 = icmp eq i64 %28, 0, !dbg !11221
  %_39 = select i1 %29, i64 1, i64 0, !dbg !11221
  %30 = icmp eq i64 %_39, 0, !dbg !11221
  br i1 %30, label %bb29, label %bb30, !dbg !11221

bb14:                                             ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_27 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %old_layout) #19, !dbg !11222
  %31 = load i64, ptr %new_size, align 8, !dbg !11223
  %_26 = icmp ule i64 %31, %_27, !dbg !11223
  %32 = zext i1 %_26 to i8
  store i8 %32, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !11224)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11226
  br i1 %_2.i, label %bb2.i5, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !11226

bb2.i5:                                           ; preds = %bb14
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_26) #19, !dbg !11227
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !11227

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb14, %bb2.i5
  store ptr %ptr, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !3889, !DIExpression(), !11228)
  %33 = load i64, ptr %old_layout, align 8, !dbg !11230
  %34 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !11230
  %35 = load i64, ptr %34, align 8, !dbg !11230
  %36 = load i64, ptr %new_size, align 8, !dbg !11230
; call alloc::alloc::realloc
  %raw_ptr = call ptr @_ZN5alloc5alloc7realloc17he622dfad08f6c289E(ptr %ptr, i64 %33, i64 %35, i64 %36) #19, !dbg !11230
  store ptr %raw_ptr, ptr %raw_ptr.dbg.spill, align 8, !dbg !11230
    #dbg_declare(ptr %raw_ptr.dbg.spill, !11183, !DIExpression(), !11231)
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hf35a6d062855dc58E"(ptr %raw_ptr) #19, !dbg !11232
; call core::option::Option<T>::ok_or
  %_32 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17he08d66db6591ba09E"(ptr %_33) #19, !dbg !11232
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %37 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd0fa82c3a1e0f0c2E"(ptr %_32) #19, !dbg !11232
  store ptr %37, ptr %_31, align 8, !dbg !11232
  %38 = load ptr, ptr %_31, align 8, !dbg !11232
  %39 = ptrtoint ptr %38 to i64, !dbg !11232
  %40 = icmp eq i64 %39, 0, !dbg !11232
  %_34 = select i1 %40, i64 1, i64 0, !dbg !11232
  %41 = icmp eq i64 %_34, 0, !dbg !11232
  br i1 %41, label %bb24, label %bb25, !dbg !11232

bb29:                                             ; preds = %bb15
  %new_ptr.0 = load ptr, ptr %_37, align 8, !dbg !11221
  %42 = getelementptr inbounds i8, ptr %_37, i64 8, !dbg !11221
  %new_ptr.1 = load i64, ptr %42, align 8, !dbg !11221
  store ptr %new_ptr.0, ptr %new_ptr.dbg.spill, align 8, !dbg !11221
  %43 = getelementptr inbounds i8, ptr %new_ptr.dbg.spill, i64 8, !dbg !11221
  store i64 %new_ptr.1, ptr %43, align 8, !dbg !11221
    #dbg_declare(ptr %new_ptr.dbg.spill, !11193, !DIExpression(), !11233)
    #dbg_declare(ptr %new_ptr.dbg.spill, !11197, !DIExpression(), !11234)
  store ptr %ptr, ptr %self.dbg.spill.i4, align 8
    #dbg_declare(ptr %self.dbg.spill.i4, !3889, !DIExpression(), !11235)
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_44 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8ea954c26f14c1dfE"(ptr %new_ptr.0, i64 %new_ptr.1) #19, !dbg !11237
  %44 = load i64, ptr %new_size, align 8, !dbg !11238
  store ptr %ptr, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !4091, !DIExpression(), !11239)
  store ptr %_44, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !4094, !DIExpression(), !11241)
  store i64 %44, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !4095, !DIExpression(), !11242)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11243
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !11243

bb2.i:                                            ; preds = %bb29
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %ptr, ptr %_44, i64 1, i64 1, i64 %44) #19, !dbg !11244
  br label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !11244

_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit: ; preds = %bb29, %bb2.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_44, ptr align 1 %ptr, i64 %44, i1 false), !dbg !11245
  %45 = load i64, ptr %old_layout, align 8, !dbg !11246
  %46 = getelementptr inbounds i8, ptr %old_layout, i64 8, !dbg !11246
  %47 = load i64, ptr %46, align 8, !dbg !11246
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %self, ptr %ptr, i64 %45, i64 %47) #19, !dbg !11246
  store ptr %new_ptr.0, ptr %_0, align 8, !dbg !11247
  %48 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11247
  store i64 %new_ptr.1, ptr %48, align 8, !dbg !11247
  br label %bb35, !dbg !11248

bb30:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %49 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E"(ptr align 8 @alloc_29ea7ae903dd0695b7b7eeb620655852) #19, !dbg !11249
  %50 = extractvalue { ptr, i64 } %49, 0, !dbg !11249
  %51 = extractvalue { ptr, i64 } %49, 1, !dbg !11249
  store ptr %50, ptr %_0, align 8, !dbg !11249
  %52 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11249
  store i64 %51, ptr %52, align 8, !dbg !11249
  br label %bb35, !dbg !11249

bb24:                                             ; preds = %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
  %ptr2 = load ptr, ptr %_31, align 8, !dbg !11232
  store ptr %ptr2, ptr %ptr.dbg.spill3, align 8, !dbg !11232
    #dbg_declare(ptr %ptr.dbg.spill3, !11185, !DIExpression(), !11250)
    #dbg_declare(ptr %ptr.dbg.spill3, !11189, !DIExpression(), !11251)
  %53 = load i64, ptr %new_size, align 8, !dbg !11252
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %54 = call { ptr, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E"(ptr %ptr2, i64 %53) #19, !dbg !11252
  %_36.0 = extractvalue { ptr, i64 } %54, 0, !dbg !11252
  %_36.1 = extractvalue { ptr, i64 } %54, 1, !dbg !11252
  store ptr %_36.0, ptr %_0, align 8, !dbg !11253
  %55 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11253
  store i64 %_36.1, ptr %55, align 8, !dbg !11253
  br label %bb35, !dbg !11254

bb25:                                             ; preds = %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %56 = call { ptr, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E"(ptr align 8 @alloc_60978929e2b2f89f214a9dee9aae7ea1) #19, !dbg !11255
  %57 = extractvalue { ptr, i64 } %56, 0, !dbg !11255
  %58 = extractvalue { ptr, i64 } %56, 1, !dbg !11255
  store ptr %57, ptr %_0, align 8, !dbg !11255
  %59 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !11255
  store i64 %58, ptr %59, align 8, !dbg !11255
  br label %bb35, !dbg !11255

bb23:                                             ; No predecessors!
  unreachable, !dbg !11256
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint noredzone nounwind
define internal ptr @_ZN5alloc5alloc15exchange_malloc17h671db6c8b01b187cE(i64 %size, i64 %align) unnamed_addr #1 !dbg !11258 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %layout.dbg.spill = alloca [16 x i8], align 8
  %align.dbg.spill = alloca [8 x i8], align 8
  %size.dbg.spill = alloca [8 x i8], align 8
  %_4 = alloca [16 x i8], align 8
  store i64 %size, ptr %size.dbg.spill, align 8
    #dbg_declare(ptr %size.dbg.spill, !11262, !DIExpression(), !11268)
  store i64 %align, ptr %align.dbg.spill, align 8
    #dbg_declare(ptr %align.dbg.spill, !11263, !DIExpression(), !11269)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E(i64 %size, i64 %align) #19, !dbg !11270
  %layout.0 = extractvalue { i64, i64 } %0, 0, !dbg !11270
  %layout.1 = extractvalue { i64, i64 } %0, 1, !dbg !11270
  store i64 %layout.0, ptr %layout.dbg.spill, align 8, !dbg !11270
  %1 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8, !dbg !11270
  store i64 %layout.1, ptr %1, align 8, !dbg !11270
    #dbg_declare(ptr %layout.dbg.spill, !11264, !DIExpression(), !11271)
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %2 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc6e3b5736570da34E"(ptr align 1 inttoptr (i64 1 to ptr), i64 %layout.0, i64 %layout.1) #19, !dbg !11272
  %3 = extractvalue { ptr, i64 } %2, 0, !dbg !11272
  %4 = extractvalue { ptr, i64 } %2, 1, !dbg !11272
  store ptr %3, ptr %_4, align 8, !dbg !11272
  %5 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !11272
  store i64 %4, ptr %5, align 8, !dbg !11272
  %6 = load ptr, ptr %_4, align 8, !dbg !11272
  %7 = ptrtoint ptr %6 to i64, !dbg !11272
  %8 = icmp eq i64 %7, 0, !dbg !11272
  %_6 = select i1 %8, i64 1, i64 0, !dbg !11272
  %9 = icmp eq i64 %_6, 0, !dbg !11273
  br i1 %9, label %bb5, label %bb4, !dbg !11273

bb5:                                              ; preds = %start
  %ptr.0 = load ptr, ptr %_4, align 8, !dbg !11274
  %10 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !11274
  %ptr.1 = load i64, ptr %10, align 8, !dbg !11274
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8, !dbg !11274
  %11 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11274
  store i64 %ptr.1, ptr %11, align 8, !dbg !11274
    #dbg_declare(ptr %ptr.dbg.spill, !11266, !DIExpression(), !11275)
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_0 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8ea954c26f14c1dfE"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !11276
  ret ptr %_0, !dbg !11277

bb4:                                              ; preds = %start
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h78cf9973be69c22fE(i64 %layout.0, i64 %layout.1) #20, !dbg !11278
  unreachable, !dbg !11278

bb3:                                              ; No predecessors!
  unreachable, !dbg !11272
}

; alloc::alloc::handle_alloc_error
; Function Attrs: cold minsize noredzone noreturn nounwind optsize
define dso_local void @_ZN5alloc5alloc18handle_alloc_error17h78cf9973be69c22fE(i64 %layout.0, i64 %layout.1) unnamed_addr #6 !dbg !11279 {
start:
  %layout.dbg.spill = alloca [16 x i8], align 8
  store i64 %layout.0, ptr %layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8
  store i64 %layout.1, ptr %0, align 8
    #dbg_declare(ptr %layout.dbg.spill, !11283, !DIExpression(), !11284)
; call alloc::alloc::handle_alloc_error::rt_error
  call void @_ZN5alloc5alloc18handle_alloc_error8rt_error17h3a62122d94f15743E(i64 %layout.0, i64 %layout.1) #20, !dbg !11285
  unreachable, !dbg !11285
}

; alloc::alloc::handle_alloc_error::ct_error
; Function Attrs: noredzone noreturn nounwind
define dso_local void @_ZN5alloc5alloc18handle_alloc_error8ct_error17heb8c9575625c925cE(i64 %_1.0, i64 %_1.1) unnamed_addr #7 !dbg !11286 {
start:
  %_1.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  store i64 %_1.0, ptr %_1.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i64 8
  store i64 %_1.1, ptr %0, align 8
    #dbg_declare(ptr %_1.dbg.spill, !11289, !DIExpression(), !11290)
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_6baf420c0410c6f30b16cb34b783a44f) #19, !dbg !11291
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_3, ptr align 8 @alloc_d8ee81cc72e45807bfff68229bba85f1) #20, !dbg !11291
  unreachable, !dbg !11291
}

; alloc::alloc::handle_alloc_error::rt_error
; Function Attrs: inlinehint noredzone noreturn nounwind
define internal void @_ZN5alloc5alloc18handle_alloc_error8rt_error17h3a62122d94f15743E(i64 %0, i64 %1) unnamed_addr #8 !dbg !11292 {
start:
  %layout = alloca [16 x i8], align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %layout, !11294, !DIExpression(), !11295)
; call core::alloc::layout::Layout::size
  %_3 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !11296
; call core::alloc::layout::Layout::align
  %_5 = call i64 @_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE(ptr align 8 %layout) #19, !dbg !11297
  call void @__rust_alloc_error_handler(i64 %_3, i64 %_5) #20, !dbg !11298
  unreachable, !dbg !11298
}

; Function Attrs: noredzone noreturn nounwind
define dso_local void @__rdl_oom(i64 %0, i64 %_align) unnamed_addr #7 !dbg !11299 {
start:
  %_align.dbg.spill = alloca [8 x i8], align 8
  %_16 = alloca [16 x i8], align 8
  %_15 = alloca [16 x i8], align 8
  %_12 = alloca [48 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_6 = alloca [48 x i8], align 8
  %size = alloca [8 x i8], align 8
  store i64 %0, ptr %size, align 8
    #dbg_declare(ptr %size, !11302, !DIExpression(), !11304)
  store i64 %_align, ptr %_align.dbg.spill, align 8
    #dbg_declare(ptr %_align.dbg.spill, !11303, !DIExpression(), !11305)
  %_3 = load i8, ptr @__rust_alloc_error_handler_should_panic, align 1, !dbg !11306
  %1 = icmp eq i8 %_3, 0, !dbg !11307
  br i1 %1, label %bb4, label %bb1, !dbg !11307

bb4:                                              ; preds = %start
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_16, ptr align 8 %size) #19, !dbg !11308
  %2 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_15, i64 0, !dbg !11308
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_16, i64 16, i1 false), !dbg !11308
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha6a77a92f9f24c92E(ptr sret([48 x i8]) align 8 %_12, ptr align 8 @alloc_7c7b93fd305fe7ff1d4a9e5bebdd169b, ptr align 8 %_15) #19, !dbg !11308
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17hd18759d7b00dd58aE(ptr align 8 %_12, i1 zeroext false, ptr align 8 @alloc_7dd813c198fcb81e7e182574ce36ec6d) #20, !dbg !11309
  unreachable, !dbg !11309

bb1:                                              ; preds = %start
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_10, ptr align 8 %size) #19, !dbg !11310
  %3 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_9, i64 0, !dbg !11310
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_10, i64 16, i1 false), !dbg !11310
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117ha6a77a92f9f24c92E(ptr sret([48 x i8]) align 8 %_6, ptr align 8 @alloc_7c7b93fd305fe7ff1d4a9e5bebdd169b, ptr align 8 %_9) #19, !dbg !11310
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_6, ptr align 8 @alloc_3fc333d2be47ba02b7c7378360afcfe2) #20, !dbg !11310
  unreachable, !dbg !11310
}

; <alloc::boxed::Box<[T]> as alloc::boxed::convert::BoxFromSlice<T>>::from_slice
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN101_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..boxed..convert..BoxFromSlice$LT$T$GT$$GT$10from_slice17h58ffb5d3f2525b75E"(ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !11311 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %slice.dbg.spill = alloca [16 x i8], align 8
  %buf = alloca [16 x i8], align 8
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !11317, !DIExpression(), !11322)
    #dbg_declare(ptr %buf, !11320, !DIExpression(), !11323)
  store i64 %slice.1, ptr %len.dbg.spill, align 8, !dbg !11324
    #dbg_declare(ptr %len.dbg.spill, !11318, !DIExpression(), !11325)
; call alloc::raw_vec::RawVec<T>::with_capacity
  %1 = call { i64, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hba3c876e6bbe06e0E"(i64 %slice.1, ptr align 8 @alloc_30cca34b9ca3bc71253a116c188b9e4c) #19, !dbg !11326
  %2 = extractvalue { i64, ptr } %1, 0, !dbg !11326
  %3 = extractvalue { i64, ptr } %1, 1, !dbg !11326
  store i64 %2, ptr %buf, align 8, !dbg !11326
  %4 = getelementptr inbounds i8, ptr %buf, i64 8, !dbg !11326
  store ptr %3, ptr %4, align 8, !dbg !11326
  store ptr %slice.0, ptr %self.dbg.spill.i, align 8
  %5 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %slice.1, ptr %5, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2260, !DIExpression(), !11327)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_6 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E"(ptr align 8 %buf) #19, !dbg !11329
  store ptr %slice.0, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !4091, !DIExpression(), !11330)
  store ptr %_6, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !4094, !DIExpression(), !11332)
  store i64 %slice.1, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !4095, !DIExpression(), !11333)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !11334
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !11334

bb2.i:                                            ; preds = %start
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %slice.0, ptr %_6, i64 1, i64 1, i64 %slice.1) #19, !dbg !11335
  br label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !11335

_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit: ; preds = %start, %bb2.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_6, ptr align 1 %slice.0, i64 %slice.1, i1 false), !dbg !11336
  %6 = load i64, ptr %buf, align 8, !dbg !11337
  %7 = getelementptr inbounds i8, ptr %buf, i64 8, !dbg !11337
  %8 = load ptr, ptr %7, align 8, !dbg !11337
; call alloc::raw_vec::RawVec<T,A>::into_box
  %9 = call { ptr, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h2602add354448feaE"(i64 %6, ptr %8, i64 %slice.1) #19, !dbg !11337
  %_8.0 = extractvalue { ptr, i64 } %9, 0, !dbg !11337
  %_8.1 = extractvalue { ptr, i64 } %9, 1, !dbg !11337
; call alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
  %10 = call { ptr, i64 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17ha700e6df5a143db9E"(ptr align 1 %_8.0, i64 %_8.1) #19, !dbg !11337
  %_0.0 = extractvalue { ptr, i64 } %10, 0, !dbg !11337
  %_0.1 = extractvalue { ptr, i64 } %10, 1, !dbg !11337
  %11 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11338
  %12 = insertvalue { ptr, i64 } %11, i64 %_0.1, 1, !dbg !11338
  ret { ptr, i64 } %12, !dbg !11338
}

; alloc::boxed::convert::<impl core::convert::From<&[T]> for alloc::boxed::Box<[T]>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17hca9842cba6e06ba6E"(ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #1 !dbg !11339 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
    #dbg_declare(ptr %slice.dbg.spill, !11342, !DIExpression(), !11343)
; call <alloc::boxed::Box<[T]> as alloc::boxed::convert::BoxFromSlice<T>>::from_slice
  %1 = call { ptr, i64 } @"_ZN101_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..boxed..convert..BoxFromSlice$LT$T$GT$$GT$10from_slice17h58ffb5d3f2525b75E"(ptr align 1 %slice.0, i64 %slice.1) #19, !dbg !11344
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11344
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11344
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11345
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !11345
  ret { ptr, i64 } %3, !dbg !11345
}

; alloc::boxed::convert::<impl core::convert::From<alloc::boxed::Box<str,A>> for alloc::boxed::Box<[u8],A>>::from
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed7convert131_$LT$impl$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$GT$4from17h2855a1b3981b3881E"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !11346 {
start:
  %raw.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !11355, !DIExpression(), !11359)
    #dbg_declare(ptr %alloc.dbg.spill, !11358, !DIExpression(), !11360)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h181002c231574c74E"(ptr align 1 %s.0, i64 %s.1) #19, !dbg !11361
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11361
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11361
  store ptr %_4.0, ptr %raw.dbg.spill, align 8, !dbg !11362
  %2 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8, !dbg !11362
  store i64 %_4.1, ptr %2, align 8, !dbg !11362
    #dbg_declare(ptr %raw.dbg.spill, !11356, !DIExpression(), !11363)
; call alloc::boxed::Box<T,A>::from_raw_in
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf2328b2d9fb7bfddE"(ptr %_4.0, i64 %_4.1) #19, !dbg !11364
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !11364
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !11364
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11365
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !11365
  ret { ptr, i64 } %5, !dbg !11365
}

; alloc::boxed::convert::<impl core::convert::From<[T; N]> for alloc::boxed::Box<[T]>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$u5b$T$u3b$$u20$N$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h0d07abc93b54b782E"(i8 %0) unnamed_addr #0 !dbg !11366 {
start:
  %1 = alloca [1 x i8], align 1
  %x.i = alloca [1 x i8], align 1
  %2 = alloca [1 x i8], align 1
  %3 = alloca [1 x i8], align 1
  %array = alloca [1 x i8], align 1
  store i8 %0, ptr %3, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %array, ptr align 1 %3, i64 1, i1 false)
    #dbg_declare(ptr %array, !11371, !DIExpression(), !11372)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2, ptr align 1 %array, i64 1, i1 false), !dbg !11373
  %4 = load i8, ptr %2, align 1, !dbg !11373
  store i8 %4, ptr %1, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %x.i, ptr align 1 %1, i64 1, i1 false)
    #dbg_declare(ptr %x.i, !11374, !DIExpression(), !11382)
; call alloc::alloc::exchange_malloc
  %_4.i = call ptr @_ZN5alloc5alloc15exchange_malloc17h671db6c8b01b187cE(i64 1, i64 1) #19, !dbg !11384
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_4.i, ptr align 1 %x.i, i64 1, i1 false), !dbg !11385
  %5 = insertvalue { ptr, i64 } poison, ptr %_4.i, 0, !dbg !11386
  %6 = insertvalue { ptr, i64 } %5, i64 1, 1, !dbg !11386
  ret { ptr, i64 } %6, !dbg !11386
}

; alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, ptr } @"_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h7143c78066fed9ecE"(ptr align 8 %err) unnamed_addr #1 !dbg !11387 {
start:
  %_3 = alloca [24 x i8], align 8
    #dbg_declare(ptr %err, !11397, !DIExpression(), !11398)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %err, i64 24, i1 false), !dbg !11399
    #dbg_declare(ptr %_3, !11400, !DIExpression(), !11406)
; call alloc::alloc::exchange_malloc
  %_4.i = call ptr @_ZN5alloc5alloc15exchange_malloc17h671db6c8b01b187cE(i64 24, i64 8) #19, !dbg !11408
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4.i, ptr align 8 %_3, i64 24, i1 false), !dbg !11409
  %0 = insertvalue { ptr, ptr } poison, ptr %_4.i, 0, !dbg !11410
  %1 = insertvalue { ptr, ptr } %0, ptr @vtable.6, 1, !dbg !11410
  ret { ptr, ptr } %1, !dbg !11410
}

; <alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::error::Error>::description
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..error..Error$GT$11description17h48c6d84981b3d80cE"(ptr align 8 %self) unnamed_addr #0 !dbg !11411 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11416, !DIExpression(), !11417)
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h00d877d5957a177aE"(ptr align 8 %self) #19, !dbg !11418
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !11418
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !11418
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11419
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !11419
  ret { ptr, i64 } %2, !dbg !11419
}

; <alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h4065c6c534685a91E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11420 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11425, !DIExpression(), !11427)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !11426, !DIExpression(), !11428)
; call <alloc::string::String as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h203b596375d19e57E"(ptr align 8 %self, ptr align 8 %f) #19, !dbg !11429
  ret i1 %_0, !dbg !11430
}

; <alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN254_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6e614d15668a76eE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !11431 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11434, !DIExpression(), !11436)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !11435, !DIExpression(), !11437)
; call <alloc::string::String as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17hb50fda63c454e2f1E"(ptr align 8 %self, ptr align 8 %f) #19, !dbg !11438
  ret i1 %_0, !dbg !11439
}

; alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17ha02e589e1d982d6aE"(ptr align 8 %str_err) unnamed_addr #0 !dbg !11440 {
start:
  %err2.dbg.spill = alloca [16 x i8], align 8, !dbg !11454
  %err1.dbg.spill = alloca [16 x i8], align 8, !dbg !11454
    #dbg_declare(ptr %str_err, !11449, !DIExpression(), !11455)
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
  %0 = call { ptr, ptr } @"_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h7143c78066fed9ecE"(ptr align 8 %str_err) #19, !dbg !11454
  %err1.0 = extractvalue { ptr, ptr } %0, 0, !dbg !11454
  %err1.1 = extractvalue { ptr, ptr } %0, 1, !dbg !11454
  store ptr %err1.0, ptr %err1.dbg.spill, align 8, !dbg !11454
  %1 = getelementptr inbounds i8, ptr %err1.dbg.spill, i64 8, !dbg !11454
  store ptr %err1.1, ptr %1, align 8, !dbg !11454
    #dbg_declare(ptr %err1.dbg.spill, !11450, !DIExpression(), !11456)
  store ptr %err1.0, ptr %err2.dbg.spill, align 8, !dbg !11457
  %2 = getelementptr inbounds i8, ptr %err2.dbg.spill, i64 8, !dbg !11457
  store ptr %err1.1, ptr %2, align 8, !dbg !11457
    #dbg_declare(ptr %err2.dbg.spill, !11452, !DIExpression(), !11458)
  %3 = insertvalue { ptr, ptr } poison, ptr %err1.0, 0, !dbg !11459
  %4 = insertvalue { ptr, ptr } %3, ptr %err1.1, 1, !dbg !11459
  ret { ptr, ptr } %4, !dbg !11459
}

; alloc::boxed::convert::<impl core::convert::From<&str> for alloc::boxed::Box<dyn core::error::Error>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h3b5f53dbb3bfd540E"(ptr align 1 %err.0, i64 %err.1) unnamed_addr #0 !dbg !11460 {
start:
  %err.dbg.spill = alloca [16 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  store ptr %err.0, ptr %err.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %err.dbg.spill, i64 8
  store i64 %err.1, ptr %0, align 8
    #dbg_declare(ptr %err.dbg.spill, !11465, !DIExpression(), !11466)
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hbbd0f04abc7c890fE"(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %err.0, i64 %err.1) #19, !dbg !11467
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error>>::from
  %1 = call { ptr, ptr } @"_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17ha02e589e1d982d6aE"(ptr align 8 %_2) #19, !dbg !11468
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !11468
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !11468
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !11469
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !11469
  ret { ptr, ptr } %3, !dbg !11469
}

; alloc::boxed::convert::<impl core::convert::From<alloc::borrow::Cow<str>> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert184_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h481fb0a98c172b4aE"(ptr align 8 %err) unnamed_addr #0 !dbg !11470 {
start:
  %_2 = alloca [24 x i8], align 8
    #dbg_declare(ptr %err, !11475, !DIExpression(), !11476)
; call <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
  call void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h1a870786092f9a85E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %err) #19, !dbg !11477
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
  %0 = call { ptr, ptr } @"_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h7143c78066fed9ecE"(ptr align 8 %_2) #19, !dbg !11478
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !11478
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !11478
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !11479
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !11479
  ret { ptr, ptr } %2, !dbg !11479
}

; alloc::boxed::convert::<impl core::convert::From<alloc::borrow::Cow<str>> for alloc::boxed::Box<dyn core::error::Error>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert138_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17ha4b94dd11ba5aac5E"(ptr align 8 %err) unnamed_addr #0 !dbg !11480 {
start:
  %_2 = alloca [24 x i8], align 8
    #dbg_declare(ptr %err, !11485, !DIExpression(), !11486)
; call <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
  call void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h1a870786092f9a85E"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %err) #19, !dbg !11487
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error>>::from
  %0 = call { ptr, ptr } @"_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17ha02e589e1d982d6aE"(ptr align 8 %_2) #19, !dbg !11488
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !11488
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !11488
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !11489
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !11489
  ret { ptr, ptr } %2, !dbg !11489
}

; alloc::boxed::thin::WithHeader<H>::new_unsize_zst::max
; Function Attrs: noredzone nounwind
define dso_local i64 @"_ZN5alloc5boxed4thin19WithHeader$LT$H$GT$14new_unsize_zst3max17hcd579b3dab5d820aE"(i64 %a, i64 %b) unnamed_addr #0 !dbg !11490 {
start:
  %b.dbg.spill = alloca [8 x i8], align 8
  %a.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 8
  store i64 %a, ptr %a.dbg.spill, align 8
    #dbg_declare(ptr %a.dbg.spill, !11496, !DIExpression(), !11498)
  store i64 %b, ptr %b.dbg.spill, align 8
    #dbg_declare(ptr %b.dbg.spill, !11497, !DIExpression(), !11499)
  %_3 = icmp ugt i64 %a, %b, !dbg !11500
  br i1 %_3, label %bb1, label %bb2, !dbg !11500

bb2:                                              ; preds = %start
  store i64 %b, ptr %_0, align 8, !dbg !11501
  br label %bb3, !dbg !11502

bb1:                                              ; preds = %start
  store i64 %a, ptr %_0, align 8, !dbg !11503
  br label %bb3, !dbg !11502

bb3:                                              ; preds = %bb1, %bb2
  %0 = load i64, ptr %_0, align 8, !dbg !11504
  ret i64 %0, !dbg !11504
}

; alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17ha700e6df5a143db9E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !11505 {
start:
  %raw.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !11510, !DIExpression(), !11514)
    #dbg_declare(ptr %alloc.dbg.spill, !11513, !DIExpression(), !11515)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf25177ebfef01753E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !11516
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11516
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11516
  store ptr %_4.0, ptr %raw.dbg.spill, align 8, !dbg !11517
  %2 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8, !dbg !11517
  store i64 %_4.1, ptr %2, align 8, !dbg !11517
    #dbg_declare(ptr %raw.dbg.spill, !11511, !DIExpression(), !11518)
; call alloc::boxed::Box<T,A>::from_raw_in
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf2328b2d9fb7bfddE"(ptr %_4.0, i64 %_4.1) #19, !dbg !11519
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !11519
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !11519
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11520
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !11520
  ret { ptr, i64 } %5, !dbg !11520
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h13a71ae362b77767E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11521 {
start:
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11526, !DIExpression(), !11527)
; call alloc::boxed::Box<T,A>::from_raw_in
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf2328b2d9fb7bfddE"(ptr %raw.0, i64 %raw.1) #19, !dbg !11528
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11528
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11528
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11529
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !11529
  ret { ptr, i64 } %3, !dbg !11529
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h640c3af015d6226fE"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11530 {
start:
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11534, !DIExpression(), !11535)
; call alloc::boxed::Box<T,A>::from_raw_in
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h1238ef3c6c24c25eE"(ptr %raw.0, i64 %raw.1) #19, !dbg !11536
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11536
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11536
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11537
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !11537
  ret { ptr, i64 } %3, !dbg !11537
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hecf9e2ffed1d57f8E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11538 {
start:
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11546, !DIExpression(), !11547)
; call alloc::boxed::Box<T,A>::from_raw_in
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17ha49bc0180d442c98E"(ptr %raw.0, i64 %raw.1) #19, !dbg !11548
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11548
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11548
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11549
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !11549
  ret { ptr, i64 } %3, !dbg !11549
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h1238ef3c6c24c25eE"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11550 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11555, !DIExpression(), !11557)
    #dbg_declare(ptr %alloc.dbg.spill, !11556, !DIExpression(), !11558)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hcfa3c6ac58bfea4aE"(ptr %raw.0, i64 %raw.1) #19, !dbg !11559
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11559
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11559
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !11560
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !11560
  ret { ptr, i64 } %3, !dbg !11560
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h8ce9e3824757248aE"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11561 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11565, !DIExpression(), !11568)
    #dbg_declare(ptr %alloc.dbg.spill, !11566, !DIExpression(), !11569)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1ccfc74c589b8c82E"(ptr %raw.0, i64 %raw.1) #19, !dbg !11570
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11570
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11570
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !11571
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !11571
  ret { ptr, i64 } %3, !dbg !11571
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17ha49bc0180d442c98E"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11572 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11576, !DIExpression(), !11579)
    #dbg_declare(ptr %alloc.dbg.spill, !11577, !DIExpression(), !11580)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5b03a388edb65e62E"(ptr %raw.0, i64 %raw.1) #19, !dbg !11581
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11581
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11581
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !11582
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !11582
  ret { ptr, i64 } %3, !dbg !11582
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf2328b2d9fb7bfddE"(ptr %raw.0, i64 %raw.1) unnamed_addr #1 !dbg !11583 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [16 x i8], align 8
  store ptr %raw.0, ptr %raw.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8
  store i64 %raw.1, ptr %0, align 8
    #dbg_declare(ptr %raw.dbg.spill, !11587, !DIExpression(), !11589)
    #dbg_declare(ptr %alloc.dbg.spill, !11588, !DIExpression(), !11590)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc18eeea7ef5fa95bE"(ptr %raw.0, i64 %raw.1) #19, !dbg !11591
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11591
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11591
  %2 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !11592
  %3 = insertvalue { ptr, i64 } %2, i64 %_3.1, 1, !dbg !11592
  ret { ptr, i64 } %3, !dbg !11592
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h82a4a9f336b81157E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !11593 {
start:
  %b.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !11597, !DIExpression(), !11598)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h6272260b31fb11b9E"(ptr align 1 %b.0, i64 %b.1) #19, !dbg !11599
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !11599
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !11599
  store ptr %2, ptr %_3, align 8, !dbg !11599
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !11599
  store i64 %3, ptr %4, align 8, !dbg !11599
  %_4.0 = load ptr, ptr %_3, align 8, !dbg !11600
  %5 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !11600
  %_4.1 = load i64, ptr %5, align 8, !dbg !11600
  %6 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0, !dbg !11601
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !11601
  ret { ptr, i64 } %7, !dbg !11601
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17haa0de9018da4c18fE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !11602 {
start:
  %b.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !11606, !DIExpression(), !11607)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h62554975f423fdbfE"(ptr align 1 %b.0, i64 %b.1) #19, !dbg !11608
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !11608
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !11608
  store ptr %2, ptr %_3, align 8, !dbg !11608
  %4 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !11608
  store i64 %3, ptr %4, align 8, !dbg !11608
  %_4.0 = load ptr, ptr %_3, align 8, !dbg !11609
  %5 = getelementptr inbounds i8, ptr %_3, i64 8, !dbg !11609
  %_4.1 = load i64, ptr %5, align 8, !dbg !11609
  %6 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0, !dbg !11610
  %7 = insertvalue { ptr, i64 } %6, i64 %_4.1, 1, !dbg !11610
  ret { ptr, i64 } %7, !dbg !11610
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h181002c231574c74E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !11611 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %value.dbg.spill.i = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [16 x i8], align 8
  %b = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !11619, !DIExpression(), !11631)
    #dbg_declare(ptr %b, !11620, !DIExpression(), !11632)
    #dbg_declare(ptr %alloc.dbg.spill, !11629, !DIExpression(), !11633)
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i64 8
  store i64 %b.1, ptr %1, align 8
    #dbg_declare(ptr %value.dbg.spill.i, !11634, !DIExpression(), !11640)
  %2 = insertvalue { ptr, i64 } poison, ptr %b.0, 0, !dbg !11642
  %3 = insertvalue { ptr, i64 } %2, i64 %b.1, 1, !dbg !11642
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !11643
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !11643
  store ptr %4, ptr %b, align 8, !dbg !11643
  %6 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11643
  store i64 %5, ptr %6, align 8, !dbg !11643
  store ptr %b, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !11644, !DIExpression(), !11652)
  %_11.0 = load ptr, ptr %b, align 8, !dbg !11654
  %7 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11654
  %_11.1 = load i64, ptr %7, align 8, !dbg !11654
  store ptr %_11.0, ptr %ptr.dbg.spill, align 8, !dbg !11654
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11654
  store i64 %_11.1, ptr %8, align 8, !dbg !11654
    #dbg_declare(ptr %ptr.dbg.spill, !11627, !DIExpression(), !11655)
  store ptr %b, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11656, !DIExpression(), !11663)
  %_8 = getelementptr inbounds i8, ptr %b, i64 16, !dbg !11665
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf0e7eddf83f137d7E(ptr %_8) #19, !dbg !11666
  %9 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !11667
  %10 = insertvalue { ptr, i64 } %9, i64 %_11.1, 1, !dbg !11667
  ret { ptr, i64 } %10, !dbg !11667
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h62554975f423fdbfE"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !11668 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %value.dbg.spill.i = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [16 x i8], align 8
  %b = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !11676, !DIExpression(), !11686)
    #dbg_declare(ptr %b, !11677, !DIExpression(), !11687)
    #dbg_declare(ptr %alloc.dbg.spill, !11684, !DIExpression(), !11688)
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i64 8
  store i64 %b.1, ptr %1, align 8
    #dbg_declare(ptr %value.dbg.spill.i, !11689, !DIExpression(), !11695)
  %2 = insertvalue { ptr, i64 } poison, ptr %b.0, 0, !dbg !11697
  %3 = insertvalue { ptr, i64 } %2, i64 %b.1, 1, !dbg !11697
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !11698
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !11698
  store ptr %4, ptr %b, align 8, !dbg !11698
  %6 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11698
  store i64 %5, ptr %6, align 8, !dbg !11698
  store ptr %b, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !11699, !DIExpression(), !11705)
  %_11.0 = load ptr, ptr %b, align 8, !dbg !11707
  %7 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11707
  %_11.1 = load i64, ptr %7, align 8, !dbg !11707
  store ptr %_11.0, ptr %ptr.dbg.spill, align 8, !dbg !11707
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11707
  store i64 %_11.1, ptr %8, align 8, !dbg !11707
    #dbg_declare(ptr %ptr.dbg.spill, !11682, !DIExpression(), !11708)
  store ptr %b, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11709, !DIExpression(), !11716)
  %_8 = getelementptr inbounds i8, ptr %b, i64 16, !dbg !11718
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf0e7eddf83f137d7E(ptr %_8) #19, !dbg !11719
  %9 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !11720
  %10 = insertvalue { ptr, i64 } %9, i64 %_11.1, 1, !dbg !11720
  ret { ptr, i64 } %10, !dbg !11720
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h6272260b31fb11b9E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !11721 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %value.dbg.spill.i = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [16 x i8], align 8
  %b = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !11729, !DIExpression(), !11741)
    #dbg_declare(ptr %b, !11730, !DIExpression(), !11742)
    #dbg_declare(ptr %alloc.dbg.spill, !11739, !DIExpression(), !11743)
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i64 8
  store i64 %b.1, ptr %1, align 8
    #dbg_declare(ptr %value.dbg.spill.i, !11744, !DIExpression(), !11750)
  %2 = insertvalue { ptr, i64 } poison, ptr %b.0, 0, !dbg !11752
  %3 = insertvalue { ptr, i64 } %2, i64 %b.1, 1, !dbg !11752
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !11753
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !11753
  store ptr %4, ptr %b, align 8, !dbg !11753
  %6 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11753
  store i64 %5, ptr %6, align 8, !dbg !11753
  store ptr %b, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !11754, !DIExpression(), !11761)
  %_11.0 = load ptr, ptr %b, align 8, !dbg !11763
  %7 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11763
  %_11.1 = load i64, ptr %7, align 8, !dbg !11763
  store ptr %_11.0, ptr %ptr.dbg.spill, align 8, !dbg !11763
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11763
  store i64 %_11.1, ptr %8, align 8, !dbg !11763
    #dbg_declare(ptr %ptr.dbg.spill, !11737, !DIExpression(), !11764)
  store ptr %b, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11765, !DIExpression(), !11772)
  %_8 = getelementptr inbounds i8, ptr %b, i64 16, !dbg !11774
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf0e7eddf83f137d7E(ptr %_8) #19, !dbg !11775
  %9 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !11776
  %10 = insertvalue { ptr, i64 } %9, i64 %_11.1, 1, !dbg !11776
  ret { ptr, i64 } %10, !dbg !11776
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf25177ebfef01753E"(ptr align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !11777 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %value.dbg.spill.i = alloca [16 x i8], align 8
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [16 x i8], align 8
  %b = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !11785, !DIExpression(), !11797)
    #dbg_declare(ptr %b, !11786, !DIExpression(), !11798)
    #dbg_declare(ptr %alloc.dbg.spill, !11795, !DIExpression(), !11799)
  store ptr %b.0, ptr %value.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i64 8
  store i64 %b.1, ptr %1, align 8
    #dbg_declare(ptr %value.dbg.spill.i, !11800, !DIExpression(), !11806)
  %2 = insertvalue { ptr, i64 } poison, ptr %b.0, 0, !dbg !11808
  %3 = insertvalue { ptr, i64 } %2, i64 %b.1, 1, !dbg !11808
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !11809
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !11809
  store ptr %4, ptr %b, align 8, !dbg !11809
  %6 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11809
  store i64 %5, ptr %6, align 8, !dbg !11809
  store ptr %b, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !11810, !DIExpression(), !11817)
  %_11.0 = load ptr, ptr %b, align 8, !dbg !11819
  %7 = getelementptr inbounds i8, ptr %b, i64 8, !dbg !11819
  %_11.1 = load i64, ptr %7, align 8, !dbg !11819
  store ptr %_11.0, ptr %ptr.dbg.spill, align 8, !dbg !11819
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11819
  store i64 %_11.1, ptr %8, align 8, !dbg !11819
    #dbg_declare(ptr %ptr.dbg.spill, !11793, !DIExpression(), !11820)
  store ptr %b, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11821, !DIExpression(), !11828)
  %_8 = getelementptr inbounds i8, ptr %b, i64 16, !dbg !11830
; call core::ptr::read
  call void @_ZN4core3ptr4read17hf0e7eddf83f137d7E(ptr %_8) #19, !dbg !11831
  %9 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0, !dbg !11832
  %10 = insertvalue { ptr, i64 } %9, i64 %_11.1, 1, !dbg !11832
  ret { ptr, i64 } %10, !dbg !11832
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09b9ddd7b4a3eacdE"(ptr align 8 %self) unnamed_addr #1 !dbg !11833 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %layout = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11838, !DIExpression(), !11843)
    #dbg_declare(ptr %layout, !11841, !DIExpression(), !11844)
  %ptr.0 = load ptr, ptr %self, align 8, !dbg !11845
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !11845
  %ptr.1 = load i64, ptr %0, align 8, !dbg !11845
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 8, !dbg !11845
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11845
  store i64 %ptr.1, ptr %1, align 8, !dbg !11845
    #dbg_declare(ptr %ptr.dbg.spill, !11839, !DIExpression(), !11846)
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { ptr, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h57809246cddec3c6E"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !11847
  %_5.0 = extractvalue { ptr, i64 } %2, 0, !dbg !11847
  %_5.1 = extractvalue { ptr, i64 } %2, 1, !dbg !11847
; call core::alloc::layout::Layout::for_value_raw
  %3 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h2de37cf2c8fb55ebE(ptr %_5.0, i64 %_5.1) #19, !dbg !11848
  %4 = extractvalue { i64, i64 } %3, 0, !dbg !11848
  %5 = extractvalue { i64, i64 } %3, 1, !dbg !11848
  store i64 %4, ptr %layout, align 8, !dbg !11848
  %6 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !11848
  store i64 %5, ptr %6, align 8, !dbg !11848
; call core::alloc::layout::Layout::size
  %_6 = call i64 @_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E(ptr align 8 %layout) #19, !dbg !11849
  %7 = icmp eq i64 %_6, 0, !dbg !11849
  br i1 %7, label %bb7, label %bb4, !dbg !11849

bb7:                                              ; preds = %bb4, %start
  ret void, !dbg !11850

bb4:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !11851
; call core::ptr::unique::Unique<T>::cast
  %_11 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h868fc1eb7ffbefb1E"(ptr %ptr.0, i64 %ptr.1) #19, !dbg !11852
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_10 = call ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hffaef22b86024aceE"(ptr %_11) #19, !dbg !11853
  %8 = load i64, ptr %layout, align 8, !dbg !11851
  %9 = getelementptr inbounds i8, ptr %layout, i64 8, !dbg !11851
  %10 = load i64, ptr %9, align 8, !dbg !11851
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE"(ptr align 1 %_9, ptr %_10, i64 %8, i64 %10) #19, !dbg !11851
  br label %bb7, !dbg !11851
}

; <alloc::boxed::Box<[T]> as core::default::Default>::default
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h799a061006e6e183E"() unnamed_addr #1 !dbg !11854 {
start:
  %ptr.dbg.spill = alloca [16 x i8], align 8, !dbg !11861
; call core::ptr::unique::Unique<T>::dangling
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hc032be863a5aadc0E"() #19, !dbg !11861
  store ptr %_2, ptr %ptr.dbg.spill, align 8, !dbg !11861
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i64 8, !dbg !11861
  store i64 0, ptr %0, align 8, !dbg !11861
    #dbg_declare(ptr %ptr.dbg.spill, !11859, !DIExpression(), !11862)
  %1 = insertvalue { ptr, i64 } poison, ptr %_2, 0, !dbg !11863
  %2 = insertvalue { ptr, i64 } %1, i64 0, 1, !dbg !11863
  ret { ptr, i64 } %2, !dbg !11863
}

; <alloc::boxed::Box<str> as core::clone::Clone>::clone
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN67_$LT$alloc..boxed..Box$LT$str$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h15d497ecddb5e249E"(ptr align 8 %self) unnamed_addr #0 !dbg !11864 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %buf.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11869, !DIExpression(), !11872)
  %_5.0 = load ptr, ptr %self, align 8, !dbg !11873
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !11873
  %_5.1 = load i64, ptr %0, align 8, !dbg !11873
  store ptr %_5.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %_5.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !11874)
  %2 = insertvalue { ptr, i64 } poison, ptr %_5.0, 0, !dbg !11876
  %3 = insertvalue { ptr, i64 } %2, i64 %_5.1, 1, !dbg !11876
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !11873
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !11873
; call <T as core::convert::Into<U>>::into
  %4 = call { ptr, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hca5904ee56a6374fE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 @alloc_251fcef07d5ab66677109f871c020c8b) #19, !dbg !11873
  %buf.0 = extractvalue { ptr, i64 } %4, 0, !dbg !11873
  %buf.1 = extractvalue { ptr, i64 } %4, 1, !dbg !11873
  store ptr %buf.0, ptr %buf.dbg.spill, align 8, !dbg !11873
  %5 = getelementptr inbounds i8, ptr %buf.dbg.spill, i64 8, !dbg !11873
  store i64 %buf.1, ptr %5, align 8, !dbg !11873
    #dbg_declare(ptr %buf.dbg.spill, !11870, !DIExpression(), !11877)
; call alloc::str::from_boxed_utf8_unchecked
  %6 = call { ptr, i64 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h16bc6e03dea23d89E(ptr align 1 %buf.0, i64 %buf.1) #19, !dbg !11878
  %_0.0 = extractvalue { ptr, i64 } %6, 0, !dbg !11878
  %_0.1 = extractvalue { ptr, i64 } %6, 1, !dbg !11878
  %7 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11879
  %8 = insertvalue { ptr, i64 } %7, i64 %_0.1, 1, !dbg !11879
  ret { ptr, i64 } %8, !dbg !11879
}

; alloc::borrow::Cow<B>::to_mut
; Function Attrs: noredzone nounwind
define dso_local align 8 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h3f254fbddca720f4E"(ptr align 8 %self) unnamed_addr #0 !dbg !11880 {
start:
  %owned.dbg.spill1 = alloca [8 x i8], align 8
  %owned.dbg.spill = alloca [8 x i8], align 8
  %borrowed.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %_2 = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11887, !DIExpression(), !11894)
  %0 = load i64, ptr %self, align 8, !dbg !11895
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !11895
  %_3 = select i1 %1, i64 0, i64 1, !dbg !11895
  %2 = icmp eq i64 %_3, 0, !dbg !11896
  br i1 %2, label %bb3, label %bb2, !dbg !11896

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !11897
  %borrowed.0 = load ptr, ptr %3, align 8, !dbg !11897
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !11897
  %borrowed.1 = load i64, ptr %4, align 8, !dbg !11897
  store ptr %borrowed.0, ptr %borrowed.dbg.spill, align 8, !dbg !11897
  %5 = getelementptr inbounds i8, ptr %borrowed.dbg.spill, i64 8, !dbg !11897
  store i64 %borrowed.1, ptr %5, align 8, !dbg !11897
    #dbg_declare(ptr %borrowed.dbg.spill, !11888, !DIExpression(), !11898)
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17he2a6fa28c2c08bf7E"(ptr sret([24 x i8]) align 8 %_6, ptr align 1 %borrowed.0, i64 %borrowed.1) #19, !dbg !11899
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %_6, i64 24, i1 false), !dbg !11900
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %self) #19, !dbg !11901
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_5, i64 24, i1 false), !dbg !11901
  %6 = load i64, ptr %self, align 8, !dbg !11902
  %7 = icmp eq i64 %6, -9223372036854775808, !dbg !11902
  %_7 = select i1 %7, i64 0, i64 1, !dbg !11902
  %8 = icmp eq i64 %_7, 0, !dbg !11903
  br i1 %8, label %bb7, label %bb6, !dbg !11903

bb2:                                              ; preds = %start
  store ptr %self, ptr %owned.dbg.spill1, align 8, !dbg !11904
    #dbg_declare(ptr %owned.dbg.spill1, !11892, !DIExpression(), !11905)
  store ptr %self, ptr %_2, align 8, !dbg !11906
  br label %bb8, !dbg !11907

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i64 40, ptr align 8 @alloc_f660fed6470d8fdcc38f89abbae259fb) #20, !dbg !11908
  unreachable, !dbg !11908

bb6:                                              ; preds = %bb3
  store ptr %self, ptr %owned.dbg.spill, align 8, !dbg !11909
    #dbg_declare(ptr %owned.dbg.spill, !11890, !DIExpression(), !11910)
  store ptr %self, ptr %_2, align 8, !dbg !11903
  br label %bb8, !dbg !11911

bb8:                                              ; preds = %bb2, %bb6
  %_0 = load ptr, ptr %_2, align 8, !dbg !11896
  ret ptr %_0, !dbg !11912

bb1:                                              ; No predecessors!
  unreachable, !dbg !11913
}

; alloc::borrow::Cow<B>::into_owned
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17he85c5a07ac1cd5c4E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !11915 {
start:
  %borrowed.dbg.spill = alloca [16 x i8], align 8
  %owned = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !11920, !DIExpression(), !11925)
    #dbg_declare(ptr %owned, !11923, !DIExpression(), !11926)
  %0 = load i64, ptr %self, align 8, !dbg !11927
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !11927
  %_2 = select i1 %1, i64 0, i64 1, !dbg !11927
  %2 = icmp eq i64 %_2, 0, !dbg !11928
  br i1 %2, label %bb3, label %bb2, !dbg !11928

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !11929
  %borrowed.0 = load ptr, ptr %3, align 8, !dbg !11929
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !11929
  %borrowed.1 = load i64, ptr %4, align 8, !dbg !11929
  store ptr %borrowed.0, ptr %borrowed.dbg.spill, align 8, !dbg !11929
  %5 = getelementptr inbounds i8, ptr %borrowed.dbg.spill, i64 8, !dbg !11929
  store i64 %borrowed.1, ptr %5, align 8, !dbg !11929
    #dbg_declare(ptr %borrowed.dbg.spill, !11921, !DIExpression(), !11930)
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17he2a6fa28c2c08bf7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %borrowed.0, i64 %borrowed.1) #19, !dbg !11931
  br label %bb4, !dbg !11931

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %owned, ptr align 8 %self, i64 24, i1 false), !dbg !11932
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %owned, i64 24, i1 false), !dbg !11933
  br label %bb4, !dbg !11934

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !11935

bb1:                                              ; No predecessors!
  unreachable, !dbg !11927
}

; <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E"(ptr align 8 %self) unnamed_addr #0 !dbg !11936 {
start:
  %owned.dbg.spill = alloca [8 x i8], align 8
  %borrowed.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11942, !DIExpression(), !11948)
  %0 = load i64, ptr %self, align 8, !dbg !11949
  %1 = icmp eq i64 %0, -9223372036854775808, !dbg !11949
  %_3 = select i1 %1, i64 0, i64 1, !dbg !11949
  %2 = icmp eq i64 %_3, 0, !dbg !11950
  br i1 %2, label %bb3, label %bb2, !dbg !11950

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !11951
  %borrowed.0 = load ptr, ptr %3, align 8, !dbg !11951
  %4 = getelementptr inbounds i8, ptr %3, i64 8, !dbg !11951
  %borrowed.1 = load i64, ptr %4, align 8, !dbg !11951
  store ptr %borrowed.0, ptr %borrowed.dbg.spill, align 8, !dbg !11951
  %5 = getelementptr inbounds i8, ptr %borrowed.dbg.spill, i64 8, !dbg !11951
  store i64 %borrowed.1, ptr %5, align 8, !dbg !11951
    #dbg_declare(ptr %borrowed.dbg.spill, !11943, !DIExpression(), !11952)
  store ptr %borrowed.0, ptr %_2, align 8, !dbg !11953
  %6 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !11953
  store i64 %borrowed.1, ptr %6, align 8, !dbg !11953
  br label %bb5, !dbg !11954

bb2:                                              ; preds = %start
  store ptr %self, ptr %owned.dbg.spill, align 8, !dbg !11955
    #dbg_declare(ptr %owned.dbg.spill, !11945, !DIExpression(), !11956)
; call alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %7 = call { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h25447f92ec0acb71E"(ptr align 8 %self) #19, !dbg !11957
  %_6.0 = extractvalue { ptr, i64 } %7, 0, !dbg !11957
  %_6.1 = extractvalue { ptr, i64 } %7, 1, !dbg !11957
  store ptr %_6.0, ptr %_2, align 8, !dbg !11957
  %8 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !11957
  store i64 %_6.1, ptr %8, align 8, !dbg !11957
  br label %bb5, !dbg !11958

bb5:                                              ; preds = %bb2, %bb3
  %_0.0 = load ptr, ptr %_2, align 8, !dbg !11950
  %9 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !11950
  %_0.1 = load i64, ptr %9, align 8, !dbg !11950
  %10 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !11959
  %11 = insertvalue { ptr, i64 } %10, i64 %_0.1, 1, !dbg !11959
  ret { ptr, i64 } %11, !dbg !11959

bb1:                                              ; No predecessors!
  unreachable, !dbg !11949
}

; <alloc::borrow::Cow<str> as core::ops::arith::AddAssign<&str>>::add_assign
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN92_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$LT$$RF$str$GT$$GT$10add_assign17h6bbd71f2d061106eE"(ptr align 8 %self, ptr align 1 %rhs.0, i64 %rhs.1) unnamed_addr #0 !dbg !11960 {
start:
  %lhs.dbg.spill = alloca [16 x i8], align 8
  %rhs.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_18 = alloca [24 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %s = alloca [24 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11965, !DIExpression(), !11971)
  store ptr %rhs.0, ptr %rhs.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %rhs.dbg.spill, i64 8
  store i64 %rhs.1, ptr %0, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !11966, !DIExpression(), !11972)
    #dbg_declare(ptr %s, !11969, !DIExpression(), !11973)
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E"(ptr align 8 %self) #19, !dbg !11974
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !11974
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !11974
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E"(ptr align 1 %_4.0, i64 %_4.1) #19, !dbg !11974
  br i1 %_3, label %bb3, label %bb5, !dbg !11974

bb5:                                              ; preds = %start
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E"(ptr align 1 %rhs.0, i64 %rhs.1) #19, !dbg !11975
  br i1 %_7, label %bb17, label %bb7, !dbg !11975

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !11976
  store ptr %rhs.0, ptr %2, align 8, !dbg !11976
  %3 = getelementptr inbounds i8, ptr %2, i64 8, !dbg !11976
  store i64 %rhs.1, ptr %3, align 8, !dbg !11976
  store i64 -9223372036854775808, ptr %_6, align 8, !dbg !11976
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %self) #19, !dbg !11977
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_6, i64 24, i1 false), !dbg !11977
  br label %bb17, !dbg !11978

bb7:                                              ; preds = %bb5
  %4 = load i64, ptr %self, align 8, !dbg !11979
  %5 = icmp eq i64 %4, -9223372036854775808, !dbg !11979
  %_8 = select i1 %5, i64 0, i64 1, !dbg !11979
  %6 = icmp eq i64 %_8, 0, !dbg !11980
  br i1 %6, label %bb8, label %bb15, !dbg !11980

bb17:                                             ; preds = %bb3, %bb15, %bb5
  ret void, !dbg !11981

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !11982
  %lhs.0 = load ptr, ptr %7, align 8, !dbg !11982
  %8 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !11982
  %lhs.1 = load i64, ptr %8, align 8, !dbg !11982
  store ptr %lhs.0, ptr %lhs.dbg.spill, align 8, !dbg !11982
  %9 = getelementptr inbounds i8, ptr %lhs.dbg.spill, i64 8, !dbg !11982
  store i64 %lhs.1, ptr %9, align 8, !dbg !11982
    #dbg_declare(ptr %lhs.dbg.spill, !11967, !DIExpression(), !11982)
; call core::str::<impl str>::len
  %_12 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %lhs.0, i64 %lhs.1) #19, !dbg !11983
; call core::str::<impl str>::len
  %_13 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %rhs.0, i64 %rhs.1) #19, !dbg !11984
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_12, i64 %_13), !dbg !11983
  %_14.0 = extractvalue { i64, i1 } %10, 0, !dbg !11983
  %_14.1 = extractvalue { i64, i1 } %10, 1, !dbg !11983
  br i1 %_14.1, label %panic, label %bb11, !dbg !11983

bb15:                                             ; preds = %bb11, %bb7
; call alloc::borrow::Cow<B>::to_mut
  %_20 = call align 8 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h3f254fbddca720f4E"(ptr align 8 %self) #19, !dbg !11985
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %_20, ptr align 1 %rhs.0, i64 %rhs.1) #19, !dbg !11985
  br label %bb17, !dbg !11985

bb11:                                             ; preds = %bb8
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE(ptr sret([24 x i8]) align 8 %s, i64 %_14.0) #19, !dbg !11986
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %s, ptr align 1 %lhs.0, i64 %lhs.1) #19, !dbg !11987
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_18, ptr align 8 %s, i64 24, i1 false), !dbg !11988
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_17, ptr align 8 %_18, i64 24, i1 false), !dbg !11989
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %self) #19, !dbg !11990
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_17, i64 24, i1 false), !dbg !11990
  br label %bb15, !dbg !11991

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_dbd6112801b11838880ab8653fc65e2d) #20, !dbg !11983
  unreachable, !dbg !11983

bb18:                                             ; No predecessors!
  unreachable, !dbg !11992
}

; <alloc::borrow::Cow<str> as core::ops::arith::AddAssign>::add_assign
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN77_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hebdc7760d57d1d1cE"(ptr align 8 %self, ptr align 8 %rhs) unnamed_addr #0 !dbg !11993 {
start:
  %lhs.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_27 = alloca [1 x i8], align 1
  %_22 = alloca [24 x i8], align 8
  %_21 = alloca [24 x i8], align 8
  %s = alloca [24 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !11998, !DIExpression(), !12004)
    #dbg_declare(ptr %rhs, !11999, !DIExpression(), !12005)
    #dbg_declare(ptr %s, !12002, !DIExpression(), !12006)
  store i8 0, ptr %_27, align 1, !dbg !12007
  store i8 1, ptr %_27, align 1, !dbg !12007
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E"(ptr align 8 %self) #19, !dbg !12007
  %_4.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12007
  %_4.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12007
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E"(ptr align 1 %_4.0, i64 %_4.1) #19, !dbg !12007
  br i1 %_3, label %bb3, label %bb5, !dbg !12007

bb5:                                              ; preds = %start
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E"(ptr align 8 %rhs) #19, !dbg !12008
  %_8.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12008
  %_8.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12008
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E"(ptr align 1 %_8.0, i64 %_8.1) #19, !dbg !12008
  br i1 %_7, label %bb20, label %bb8, !dbg !12008

bb3:                                              ; preds = %start
  store i8 0, ptr %_27, align 1, !dbg !12009
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %rhs, i64 24, i1 false), !dbg !12009
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %self) #19, !dbg !12010
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_6, i64 24, i1 false), !dbg !12010
  br label %bb20, !dbg !12011

bb8:                                              ; preds = %bb5
  %2 = load i64, ptr %self, align 8, !dbg !12012
  %3 = icmp eq i64 %2, -9223372036854775808, !dbg !12012
  %_10 = select i1 %3, i64 0, i64 1, !dbg !12012
  %4 = icmp eq i64 %_10, 0, !dbg !12013
  br i1 %4, label %bb9, label %bb17, !dbg !12013

bb20:                                             ; preds = %bb3, %bb17, %bb5
  %5 = load i8, ptr %_27, align 1, !dbg !12014
  %6 = trunc i8 %5 to i1, !dbg !12014
  br i1 %6, label %bb22, label %bb21, !dbg !12014

bb9:                                              ; preds = %bb8
  %7 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !12015
  %lhs.0 = load ptr, ptr %7, align 8, !dbg !12015
  %8 = getelementptr inbounds i8, ptr %7, i64 8, !dbg !12015
  %lhs.1 = load i64, ptr %8, align 8, !dbg !12015
  store ptr %lhs.0, ptr %lhs.dbg.spill, align 8, !dbg !12015
  %9 = getelementptr inbounds i8, ptr %lhs.dbg.spill, i64 8, !dbg !12015
  store i64 %lhs.1, ptr %9, align 8, !dbg !12015
    #dbg_declare(ptr %lhs.dbg.spill, !12000, !DIExpression(), !12015)
; call core::str::<impl str>::len
  %_14 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %lhs.0, i64 %lhs.1) #19, !dbg !12016
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %10 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E"(ptr align 8 %rhs) #19, !dbg !12017
  %_16.0 = extractvalue { ptr, i64 } %10, 0, !dbg !12017
  %_16.1 = extractvalue { ptr, i64 } %10, 1, !dbg !12017
; call core::str::<impl str>::len
  %_15 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %_16.0, i64 %_16.1) #19, !dbg !12017
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_14, i64 %_15), !dbg !12016
  %_18.0 = extractvalue { i64, i1 } %11, 0, !dbg !12016
  %_18.1 = extractvalue { i64, i1 } %11, 1, !dbg !12016
  br i1 %_18.1, label %panic, label %bb13, !dbg !12016

bb17:                                             ; preds = %bb13, %bb8
; call alloc::borrow::Cow<B>::to_mut
  %_24 = call align 8 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h3f254fbddca720f4E"(ptr align 8 %self) #19, !dbg !12018
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %12 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E"(ptr align 8 %rhs) #19, !dbg !12019
  %_25.0 = extractvalue { ptr, i64 } %12, 0, !dbg !12019
  %_25.1 = extractvalue { ptr, i64 } %12, 1, !dbg !12019
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %_24, ptr align 1 %_25.0, i64 %_25.1) #19, !dbg !12018
  br label %bb20, !dbg !12018

bb13:                                             ; preds = %bb9
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE(ptr sret([24 x i8]) align 8 %s, i64 %_18.0) #19, !dbg !12020
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %s, ptr align 1 %lhs.0, i64 %lhs.1) #19, !dbg !12021
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_22, ptr align 8 %s, i64 24, i1 false), !dbg !12022
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_21, ptr align 8 %_22, i64 24, i1 false), !dbg !12023
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %self) #19, !dbg !12024
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_21, i64 24, i1 false), !dbg !12024
  br label %bb17, !dbg !12025

panic:                                            ; preds = %bb9
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_504ab2be3c083e9805e5221eba3917a9) #20, !dbg !12016
  unreachable, !dbg !12016

bb23:                                             ; No predecessors!
  unreachable, !dbg !12026

bb21:                                             ; preds = %bb22, %bb20
  ret void, !dbg !12027

bb22:                                             ; preds = %bb20
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E"(ptr align 8 %rhs) #19, !dbg !12014
  br label %bb21, !dbg !12014
}

; <alloc::collections::btree::map::UnorderedKeyError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN88_$LT$alloc..collections..btree..map..UnorderedKeyError$u20$as$u20$core..fmt..Display$GT$3fmt17h23d81eed968b884eE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 !dbg !12028 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12038, !DIExpression(), !12040)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !12039, !DIExpression(), !12041)
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_2d176137a8b89209c523717d4f986029) #19, !dbg !12042
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E(ptr align 8 %f, ptr align 8 %_3) #19, !dbg !12042
  ret i1 %_0, !dbg !12043
}

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4454aabe2e88e5b3E"(ptr align 1 %self) unnamed_addr #0 !dbg !12044 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12054, !DIExpression(), !12055)
  call void @llvm.trap(), !dbg !12056
  unreachable, !dbg !12056
}

; alloc::collections::btree::node::splitpoint
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc11collections5btree4node10splitpoint17hca233f880b440073E(ptr sret([24 x i8]) align 8 %_0, i64 %edge_idx) unnamed_addr #0 !dbg !12057 {
start:
  %edge_idx.dbg.spill = alloca [8 x i8], align 8
  %_13 = alloca [16 x i8], align 8
  %_10 = alloca [16 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  store i64 %edge_idx, ptr %edge_idx.dbg.spill, align 8
    #dbg_declare(ptr %edge_idx.dbg.spill, !12080, !DIExpression(), !12081)
  %_2 = icmp ule i64 %edge_idx, 11, !dbg !12082
  br i1 %_2, label %bb2, label %bb1, !dbg !12082

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_1ac27a7ad4b1fedc41713a13c30f215d, i64 38, ptr align 8 @alloc_fdeaf922b78fe0d8a4ddaa1eb03169fa) #20, !dbg !12083
  unreachable, !dbg !12083

bb2:                                              ; preds = %start
  %_4 = icmp ule i64 0, %edge_idx, !dbg !12084
  br i1 %_4, label %bb6, label %bb5, !dbg !12084

bb5:                                              ; preds = %bb6, %bb2
  switch i64 %edge_idx, label %bb3 [
    i64 5, label %bb8
    i64 6, label %bb7
  ], !dbg !12085

bb6:                                              ; preds = %bb2
  %_5 = icmp ult i64 %edge_idx, 5, !dbg !12084
  br i1 %_5, label %bb4, label %bb5, !dbg !12084

bb4:                                              ; preds = %bb6
  %0 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !12086
  store i64 %edge_idx, ptr %0, align 8, !dbg !12086
  store i64 0, ptr %_8, align 8, !dbg !12086
  store i64 4, ptr %_0, align 8, !dbg !12087
  %1 = load i64, ptr %_8, align 8, !dbg !12087
  %2 = getelementptr inbounds i8, ptr %_8, i64 8, !dbg !12087
  %3 = load i64, ptr %2, align 8, !dbg !12087
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12087
  store i64 %1, ptr %4, align 8, !dbg !12087
  %5 = getelementptr inbounds i8, ptr %4, i64 8, !dbg !12087
  store i64 %3, ptr %5, align 8, !dbg !12087
  br label %bb14, !dbg !12088

bb3:                                              ; preds = %bb5
  %6 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 5, i64 1), !dbg !12089
  %_12.0 = extractvalue { i64, i1 } %6, 0, !dbg !12089
  %_12.1 = extractvalue { i64, i1 } %6, 1, !dbg !12089
  br i1 %_12.1, label %panic, label %bb10, !dbg !12089

bb8:                                              ; preds = %bb5
  %7 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !12090
  store i64 %edge_idx, ptr %7, align 8, !dbg !12090
  store i64 0, ptr %_9, align 8, !dbg !12090
  store i64 5, ptr %_0, align 8, !dbg !12091
  %8 = load i64, ptr %_9, align 8, !dbg !12091
  %9 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !12091
  %10 = load i64, ptr %9, align 8, !dbg !12091
  %11 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12091
  store i64 %8, ptr %11, align 8, !dbg !12091
  %12 = getelementptr inbounds i8, ptr %11, i64 8, !dbg !12091
  store i64 %10, ptr %12, align 8, !dbg !12091
  br label %bb14, !dbg !12092

bb7:                                              ; preds = %bb5
  %13 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !12093
  store i64 0, ptr %13, align 8, !dbg !12093
  store i64 1, ptr %_10, align 8, !dbg !12093
  store i64 5, ptr %_0, align 8, !dbg !12094
  %14 = load i64, ptr %_10, align 8, !dbg !12094
  %15 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !12094
  %16 = load i64, ptr %15, align 8, !dbg !12094
  %17 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12094
  store i64 %14, ptr %17, align 8, !dbg !12094
  %18 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !12094
  store i64 %16, ptr %18, align 8, !dbg !12094
  br label %bb14, !dbg !12095

bb14:                                             ; preds = %bb4, %bb13, %bb7, %bb8
  ret void, !dbg !12096

bb10:                                             ; preds = %bb3
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 5, i64 1), !dbg !12097
  %_17.0 = extractvalue { i64, i1 } %19, 0, !dbg !12097
  %_17.1 = extractvalue { i64, i1 } %19, 1, !dbg !12097
  br i1 %_17.1, label %panic1, label %bb11, !dbg !12097

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_6914a2a2730bbe9ab0a2ec588ca3bb0f) #20, !dbg !12089
  unreachable, !dbg !12089

bb11:                                             ; preds = %bb10
  %20 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_17.0, i64 1), !dbg !12098
  %_18.0 = extractvalue { i64, i1 } %20, 0, !dbg !12098
  %_18.1 = extractvalue { i64, i1 } %20, 1, !dbg !12098
  br i1 %_18.1, label %panic2, label %bb12, !dbg !12098

panic1:                                           ; preds = %bb10
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d0de19b92850c0368ebf2096fc88d53c) #20, !dbg !12097
  unreachable, !dbg !12097

bb12:                                             ; preds = %bb11
  %_19.0 = sub i64 %edge_idx, %_18.0, !dbg !12099
  %_19.1 = icmp ult i64 %edge_idx, %_18.0, !dbg !12099
  br i1 %_19.1, label %panic3, label %bb13, !dbg !12099

panic2:                                           ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_57e359cf053e0fa750f69fb57c4d24f1) #20, !dbg !12098
  unreachable, !dbg !12098

bb13:                                             ; preds = %bb12
  %21 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !12100
  store i64 %_19.0, ptr %21, align 8, !dbg !12100
  store i64 1, ptr %_13, align 8, !dbg !12100
  store i64 %_12.0, ptr %_0, align 8, !dbg !12101
  %22 = load i64, ptr %_13, align 8, !dbg !12101
  %23 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !12101
  %24 = load i64, ptr %23, align 8, !dbg !12101
  %25 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12101
  store i64 %22, ptr %25, align 8, !dbg !12101
  %26 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !12101
  store i64 %24, ptr %26, align 8, !dbg !12101
  br label %bb14, !dbg !12102

panic3:                                           ; preds = %bb12
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_6fd25ed348c66af91a0e024a68db0dbb) #20, !dbg !12099
  unreachable, !dbg !12099
}

; <alloc::collections::btree::set_val::SetValZST as alloc::collections::btree::set_val::IsSetVal>::is_set_val
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN110_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$alloc..collections..btree..set_val..IsSetVal$GT$10is_set_val17h0618bf7be60d9affE"() unnamed_addr #0 !dbg !12103 {
start:
  ret i1 true, !dbg !12107
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17haee17c6b6643f677E(ptr align 8 %self) unnamed_addr #1 !dbg !12108 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12115, !DIExpression(), !12116)
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h135a58c11680f750E"(ptr align 8 %self) #19, !dbg !12117
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !12117
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !12117
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !12118
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !12118
  ret { i64, i64 } %2, !dbg !12118
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf2f6d2c9f90567a2E"(i64 %kind.0, i64 %kind.1) unnamed_addr #1 !dbg !12119 {
start:
  %kind.dbg.spill = alloca [16 x i8], align 8
  store i64 %kind.0, ptr %kind.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %kind.dbg.spill, i64 8
  store i64 %kind.1, ptr %0, align 8
    #dbg_declare(ptr %kind.dbg.spill, !12124, !DIExpression(), !12125)
  %1 = insertvalue { i64, i64 } poison, i64 %kind.0, 0, !dbg !12126
  %2 = insertvalue { i64, i64 } %1, i64 %kind.1, 1, !dbg !12126
  ret { i64, i64 } %2, !dbg !12126
}

; <alloc::collections::TryReserveError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN74_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Display$GT$3fmt17ha40ef8fe1b5c9243E"(ptr align 8 %self, ptr align 8 %fmt) unnamed_addr #0 !dbg !12127 {
start:
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %fmt.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %reason = alloca [16 x i8], align 8
  %_3 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12132, !DIExpression(), !12153)
  store ptr %fmt, ptr %fmt.dbg.spill, align 8
    #dbg_declare(ptr %fmt.dbg.spill, !12133, !DIExpression(), !12154)
    #dbg_declare(ptr %reason, !12151, !DIExpression(), !12155)
    #dbg_declare(ptr %residual.dbg.spill, !12134, !DIExpression(), !12156)
    #dbg_declare(ptr %val.dbg.spill, !12149, !DIExpression(), !12157)
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h7692d295d2a10118E(ptr align 8 %fmt, ptr align 1 @alloc_1c48aaa25881cebb537398237e87da2c, i64 24) #19, !dbg !12158
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %0 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6f5d72278f0336c2E"(i1 zeroext %_4) #19, !dbg !12158
  %1 = zext i1 %0 to i8, !dbg !12158
  store i8 %1, ptr %_3, align 1, !dbg !12158
  %2 = load i8, ptr %_3, align 1, !dbg !12158
  %3 = trunc i8 %2 to i1, !dbg !12158
  %_6 = zext i1 %3 to i64, !dbg !12158
  %4 = icmp eq i64 %_6, 0, !dbg !12158
  br i1 %4, label %bb4, label %bb5, !dbg !12158

bb4:                                              ; preds = %start
  %5 = load i64, ptr %self, align 8, !dbg !12159
  %6 = icmp eq i64 %5, 0, !dbg !12159
  %_8 = select i1 %6, i64 0, i64 1, !dbg !12159
  %7 = icmp eq i64 %_8, 0, !dbg !12160
  br i1 %7, label %bb7, label %bb6, !dbg !12160

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc90fb1daef4651adE"(ptr align 8 @alloc_bbf62262887b8b896beb1704dfc73111) #19, !dbg !12161
  %9 = zext i1 %8 to i8, !dbg !12161
  store i8 %9, ptr %_0, align 1, !dbg !12161
  br label %bb9, !dbg !12161

bb7:                                              ; preds = %bb4
  store ptr @alloc_236b52f5c81143245b05b9fdb0db30b7, ptr %reason, align 8, !dbg !12162
  %10 = getelementptr inbounds i8, ptr %reason, i64 8, !dbg !12162
  store i64 64, ptr %10, align 8, !dbg !12162
  br label %bb8, !dbg !12162

bb6:                                              ; preds = %bb4
  store ptr @alloc_8743fc3ff085a87cd6d6fd0bc23a3ce4, ptr %reason, align 8, !dbg !12163
  %11 = getelementptr inbounds i8, ptr %reason, i64 8, !dbg !12163
  store i64 47, ptr %11, align 8, !dbg !12163
  br label %bb8, !dbg !12164

bb8:                                              ; preds = %bb6, %bb7
  %_9.0 = load ptr, ptr %reason, align 8, !dbg !12165
  %12 = getelementptr inbounds i8, ptr %reason, i64 8, !dbg !12165
  %_9.1 = load i64, ptr %12, align 8, !dbg !12165
; call core::fmt::Formatter::write_str
  %13 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h7692d295d2a10118E(ptr align 8 %fmt, ptr align 1 %_9.0, i64 %_9.1) #19, !dbg !12166
  %14 = zext i1 %13 to i8, !dbg !12166
  store i8 %14, ptr %_0, align 1, !dbg !12166
  br label %bb9, !dbg !12166

bb9:                                              ; preds = %bb5, %bb8
  %15 = load i8, ptr %_0, align 1, !dbg !12167
  %16 = trunc i8 %15 to i1, !dbg !12167
  ret i1 %16, !dbg !12167

bb3:                                              ; No predecessors!
  unreachable, !dbg !12168
}

; alloc::ffi::c_str::FromVecWithNulError::as_bytes
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17hef1f41a988d37f7bE(ptr align 8 %self) unnamed_addr #0 !dbg !12170 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12192, !DIExpression(), !12193)
  %_2 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !12194
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h8701d00ae8a955aeE"(ptr align 8 %_2, ptr align 8 @alloc_5d2681ff4fbc1370c12be37e64de7262) #19, !dbg !12195
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12195
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12195
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12196
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !12196
  ret { ptr, i64 } %2, !dbg !12196
}

; alloc::ffi::c_str::FromVecWithNulError::into_bytes
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17h0043e6c54ef8e733E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !12197 {
start:
    #dbg_declare(ptr %self, !12202, !DIExpression(), !12203)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !12204
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %0, i64 24, i1 false), !dbg !12204
  ret void, !dbg !12205
}

; <&[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN81_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hb3b047ff8fd7e774E"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12206 {
start:
  %val.dbg.spill.i.i = alloca [8 x i8], align 8
  %self.i.i = alloca [16 x i8], align 8
  %i.dbg.spill.i = alloca [8 x i8], align 8
  %capacity.dbg.spill.i = alloca [8 x i8], align 8
  %bytes.dbg.spill.i = alloca [16 x i8], align 8
  %_14.i = alloca [24 x i8], align 8
  %_12.i = alloca [24 x i8], align 8
  %_11.i = alloca [32 x i8], align 8
  %_8.i = alloca [16 x i8], align 8
  %buffer.i = alloca [24 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12232, !DIExpression(), !12233)
  store ptr %self.0, ptr %bytes.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %bytes.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %bytes.dbg.spill.i, !12234, !DIExpression(), !12243)
    #dbg_declare(ptr %buffer.i, !12239, !DIExpression(), !12245)
; call core::num::<impl usize>::checked_add
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %self.1, i64 1) #19, !dbg !12246
  %_3.0.i = extractvalue { i64, i64 } %2, 0, !dbg !12246
  %_3.1.i = extractvalue { i64, i64 } %2, 1, !dbg !12246
  store i64 %_3.0.i, ptr %self.i.i, align 8
  %3 = getelementptr inbounds i8, ptr %self.i.i, i64 8
  store i64 %_3.1.i, ptr %3, align 8
    #dbg_declare(ptr %self.i.i, !12247, !DIExpression(), !12255)
  %_2.i.i = load i64, ptr %self.i.i, align 8, !dbg !12257
  %4 = icmp eq i64 %_2.i.i, 0, !dbg !12258
  br i1 %4, label %bb2.i.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i", !dbg !12258

bb2.i.i:                                          ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h218570abae70db0dE(ptr align 8 @alloc_afc85ac7fa1fc5f9a417a32db98225bc) #20, !dbg !12259
  unreachable, !dbg !12259

"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i": ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self.i.i, i64 8, !dbg !12260
  %val.i.i = load i64, ptr %5, align 8, !dbg !12260
  store i64 %val.i.i, ptr %val.dbg.spill.i.i, align 8, !dbg !12260
    #dbg_declare(ptr %val.dbg.spill.i.i, !12253, !DIExpression(), !12261)
  store i64 %val.i.i, ptr %capacity.dbg.spill.i, align 8, !dbg !12246
    #dbg_declare(ptr %capacity.dbg.spill.i, !12237, !DIExpression(), !12262)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %buffer.i, i64 %val.i.i, ptr align 8 @alloc_11c66dabf7f7feef72599f3946f6dfc4) #19, !dbg !12263
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h49c450e26972f9f4E"(ptr align 8 %buffer.i, ptr align 1 %self.0, i64 %self.1, ptr align 8 @alloc_f6e394c6859c56983342eb358e885f0c) #19, !dbg !12264
; call core::slice::memchr::memchr
  %6 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext 0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12265
  %7 = extractvalue { i64, i64 } %6, 0, !dbg !12265
  %8 = extractvalue { i64, i64 } %6, 1, !dbg !12265
  store i64 %7, ptr %_8.i, align 8, !dbg !12265
  %9 = getelementptr inbounds i8, ptr %_8.i, i64 8, !dbg !12265
  store i64 %8, ptr %9, align 8, !dbg !12265
  %_9.i = load i64, ptr %_8.i, align 8, !dbg !12265
  %10 = icmp eq i64 %_9.i, 0, !dbg !12266
  br i1 %10, label %bb7.i, label %bb8.i, !dbg !12266

bb7.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i"
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_14.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !12267
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %11 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE(ptr align 8 %_14.i) #19, !dbg !12268
  %_13.0.i = extractvalue { ptr, i64 } %11, 0, !dbg !12268
  %_13.1.i = extractvalue { ptr, i64 } %11, 1, !dbg !12268
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12269
  store ptr %_13.0.i, ptr %12, align 8, !dbg !12269
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !12269
  store i64 %_13.1.i, ptr %13, align 8, !dbg !12269
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !12269
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit, !dbg !12270

bb8.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i"
  %14 = getelementptr inbounds i8, ptr %_8.i, i64 8, !dbg !12271
  %i.i = load i64, ptr %14, align 8, !dbg !12271
  store i64 %i.i, ptr %i.dbg.spill.i, align 8, !dbg !12271
    #dbg_declare(ptr %i.dbg.spill.i, !12241, !DIExpression(), !12272)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !12273
  %15 = getelementptr inbounds i8, ptr %_11.i, i64 24, !dbg !12274
  store i64 %i.i, ptr %15, align 8, !dbg !12274
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11.i, ptr align 8 %_12.i, i64 24, i1 false), !dbg !12274
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_11.i, i64 32, i1 false), !dbg !12275
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit, !dbg !12276

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit: ; preds = %bb7.i, %bb8.i
  ret void, !dbg !12277
}

; <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h89f9e00cb5e205bdE"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12278 {
start:
  %val.dbg.spill.i.i = alloca [8 x i8], align 8
  %self.i.i = alloca [16 x i8], align 8
  %i.dbg.spill.i = alloca [8 x i8], align 8
  %capacity.dbg.spill.i = alloca [8 x i8], align 8
  %bytes.dbg.spill.i = alloca [16 x i8], align 8
  %_14.i = alloca [24 x i8], align 8
  %_12.i = alloca [24 x i8], align 8
  %_11.i = alloca [32 x i8], align 8
  %_8.i = alloca [16 x i8], align 8
  %buffer.i = alloca [24 x i8], align 8
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12283, !DIExpression(), !12284)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !12285)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !12287
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !12287
  %_2.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12288
  %_2.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12288
  store ptr %_2.0, ptr %bytes.dbg.spill.i, align 8
  %4 = getelementptr inbounds i8, ptr %bytes.dbg.spill.i, i64 8
  store i64 %_2.1, ptr %4, align 8
    #dbg_declare(ptr %bytes.dbg.spill.i, !12234, !DIExpression(), !12289)
    #dbg_declare(ptr %buffer.i, !12239, !DIExpression(), !12291)
; call core::num::<impl usize>::checked_add
  %5 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %_2.1, i64 1) #19, !dbg !12292
  %_3.0.i = extractvalue { i64, i64 } %5, 0, !dbg !12292
  %_3.1.i = extractvalue { i64, i64 } %5, 1, !dbg !12292
  store i64 %_3.0.i, ptr %self.i.i, align 8
  %6 = getelementptr inbounds i8, ptr %self.i.i, i64 8
  store i64 %_3.1.i, ptr %6, align 8
    #dbg_declare(ptr %self.i.i, !12247, !DIExpression(), !12293)
  %_2.i.i = load i64, ptr %self.i.i, align 8, !dbg !12295
  %7 = icmp eq i64 %_2.i.i, 0, !dbg !12296
  br i1 %7, label %bb2.i.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i", !dbg !12296

bb2.i.i:                                          ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h218570abae70db0dE(ptr align 8 @alloc_afc85ac7fa1fc5f9a417a32db98225bc) #20, !dbg !12297
  unreachable, !dbg !12297

"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i": ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self.i.i, i64 8, !dbg !12298
  %val.i.i = load i64, ptr %8, align 8, !dbg !12298
  store i64 %val.i.i, ptr %val.dbg.spill.i.i, align 8, !dbg !12298
    #dbg_declare(ptr %val.dbg.spill.i.i, !12253, !DIExpression(), !12299)
  store i64 %val.i.i, ptr %capacity.dbg.spill.i, align 8, !dbg !12292
    #dbg_declare(ptr %capacity.dbg.spill.i, !12237, !DIExpression(), !12300)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %buffer.i, i64 %val.i.i, ptr align 8 @alloc_11c66dabf7f7feef72599f3946f6dfc4) #19, !dbg !12301
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h49c450e26972f9f4E"(ptr align 8 %buffer.i, ptr align 1 %_2.0, i64 %_2.1, ptr align 8 @alloc_f6e394c6859c56983342eb358e885f0c) #19, !dbg !12302
; call core::slice::memchr::memchr
  %9 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext 0, ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !12303
  %10 = extractvalue { i64, i64 } %9, 0, !dbg !12303
  %11 = extractvalue { i64, i64 } %9, 1, !dbg !12303
  store i64 %10, ptr %_8.i, align 8, !dbg !12303
  %12 = getelementptr inbounds i8, ptr %_8.i, i64 8, !dbg !12303
  store i64 %11, ptr %12, align 8, !dbg !12303
  %_9.i = load i64, ptr %_8.i, align 8, !dbg !12303
  %13 = icmp eq i64 %_9.i, 0, !dbg !12304
  br i1 %13, label %bb7.i, label %bb8.i, !dbg !12304

bb7.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i"
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_14.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !12305
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %14 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE(ptr align 8 %_14.i) #19, !dbg !12306
  %_13.0.i = extractvalue { ptr, i64 } %14, 0, !dbg !12306
  %_13.1.i = extractvalue { ptr, i64 } %14, 1, !dbg !12306
  %15 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12307
  store ptr %_13.0.i, ptr %15, align 8, !dbg !12307
  %16 = getelementptr inbounds i8, ptr %15, i64 8, !dbg !12307
  store i64 %_13.1.i, ptr %16, align 8, !dbg !12307
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !12307
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit, !dbg !12308

bb8.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i"
  %17 = getelementptr inbounds i8, ptr %_8.i, i64 8, !dbg !12309
  %i.i = load i64, ptr %17, align 8, !dbg !12309
  store i64 %i.i, ptr %i.dbg.spill.i, align 8, !dbg !12309
    #dbg_declare(ptr %i.dbg.spill.i, !12241, !DIExpression(), !12310)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !12311
  %18 = getelementptr inbounds i8, ptr %_11.i, i64 24, !dbg !12312
  store i64 %i.i, ptr %18, align 8, !dbg !12312
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11.i, ptr align 8 %_12.i, i64 24, i1 false), !dbg !12312
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_11.i, i64 32, i1 false), !dbg !12313
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit, !dbg !12314

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit: ; preds = %bb7.i, %bb8.i
  ret void, !dbg !12315
}

; <&mut [u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN89_$LT$$RF$mut$u20$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hfd73c39f1fac8afcE"(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12316 {
start:
  %val.dbg.spill.i.i = alloca [8 x i8], align 8
  %self.i.i = alloca [16 x i8], align 8
  %i.dbg.spill.i = alloca [8 x i8], align 8
  %capacity.dbg.spill.i = alloca [8 x i8], align 8
  %bytes.dbg.spill.i = alloca [16 x i8], align 8
  %_14.i = alloca [24 x i8], align 8
  %_12.i = alloca [24 x i8], align 8
  %_11.i = alloca [32 x i8], align 8
  %_8.i = alloca [16 x i8], align 8
  %buffer.i = alloca [24 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12321, !DIExpression(), !12322)
  store ptr %self.0, ptr %bytes.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %bytes.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %bytes.dbg.spill.i, !12234, !DIExpression(), !12323)
    #dbg_declare(ptr %buffer.i, !12239, !DIExpression(), !12325)
; call core::num::<impl usize>::checked_add
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE"(i64 %self.1, i64 1) #19, !dbg !12326
  %_3.0.i = extractvalue { i64, i64 } %2, 0, !dbg !12326
  %_3.1.i = extractvalue { i64, i64 } %2, 1, !dbg !12326
  store i64 %_3.0.i, ptr %self.i.i, align 8
  %3 = getelementptr inbounds i8, ptr %self.i.i, i64 8
  store i64 %_3.1.i, ptr %3, align 8
    #dbg_declare(ptr %self.i.i, !12247, !DIExpression(), !12327)
  %_2.i.i = load i64, ptr %self.i.i, align 8, !dbg !12329
  %4 = icmp eq i64 %_2.i.i, 0, !dbg !12330
  br i1 %4, label %bb2.i.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i", !dbg !12330

bb2.i.i:                                          ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h218570abae70db0dE(ptr align 8 @alloc_afc85ac7fa1fc5f9a417a32db98225bc) #20, !dbg !12331
  unreachable, !dbg !12331

"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i": ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self.i.i, i64 8, !dbg !12332
  %val.i.i = load i64, ptr %5, align 8, !dbg !12332
  store i64 %val.i.i, ptr %val.dbg.spill.i.i, align 8, !dbg !12332
    #dbg_declare(ptr %val.dbg.spill.i.i, !12253, !DIExpression(), !12333)
  store i64 %val.i.i, ptr %capacity.dbg.spill.i, align 8, !dbg !12326
    #dbg_declare(ptr %capacity.dbg.spill.i, !12237, !DIExpression(), !12334)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %buffer.i, i64 %val.i.i, ptr align 8 @alloc_11c66dabf7f7feef72599f3946f6dfc4) #19, !dbg !12335
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h49c450e26972f9f4E"(ptr align 8 %buffer.i, ptr align 1 %self.0, i64 %self.1, ptr align 8 @alloc_f6e394c6859c56983342eb358e885f0c) #19, !dbg !12336
; call core::slice::memchr::memchr
  %6 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext 0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12337
  %7 = extractvalue { i64, i64 } %6, 0, !dbg !12337
  %8 = extractvalue { i64, i64 } %6, 1, !dbg !12337
  store i64 %7, ptr %_8.i, align 8, !dbg !12337
  %9 = getelementptr inbounds i8, ptr %_8.i, i64 8, !dbg !12337
  store i64 %8, ptr %9, align 8, !dbg !12337
  %_9.i = load i64, ptr %_8.i, align 8, !dbg !12337
  %10 = icmp eq i64 %_9.i, 0, !dbg !12338
  br i1 %10, label %bb7.i, label %bb8.i, !dbg !12338

bb7.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i"
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_14.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !12339
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %11 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE(ptr align 8 %_14.i) #19, !dbg !12340
  %_13.0.i = extractvalue { ptr, i64 } %11, 0, !dbg !12340
  %_13.1.i = extractvalue { ptr, i64 } %11, 1, !dbg !12340
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12341
  store ptr %_13.0.i, ptr %12, align 8, !dbg !12341
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !12341
  store i64 %_13.1.i, ptr %13, align 8, !dbg !12341
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !12341
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit, !dbg !12342

bb8.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit.i"
  %14 = getelementptr inbounds i8, ptr %_8.i, i64 8, !dbg !12343
  %i.i = load i64, ptr %14, align 8, !dbg !12343
  store i64 %i.i, ptr %i.dbg.spill.i, align 8, !dbg !12343
    #dbg_declare(ptr %i.dbg.spill.i, !12241, !DIExpression(), !12344)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12.i, ptr align 8 %buffer.i, i64 24, i1 false), !dbg !12345
  %15 = getelementptr inbounds i8, ptr %_11.i, i64 24, !dbg !12346
  store i64 %i.i, ptr %15, align 8, !dbg !12346
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11.i, ptr align 8 %_12.i, i64 24, i1 false), !dbg !12346
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_11.i, i64 32, i1 false), !dbg !12347
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit, !dbg !12348

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E.exit: ; preds = %bb7.i, %bb8.i
  ret void, !dbg !12349
}

; alloc::ffi::c_str::CString::from_vec_unchecked
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17hc10e08b27d6b20efE(ptr align 8 %v) unnamed_addr #0 !dbg !12350 {
start:
  %_4 = alloca [16 x i8], align 8
    #dbg_declare(ptr %v, !12355, !DIExpression(), !12356)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %v) #19, !dbg !12357
  %_5.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12357
  %_5.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12357
; call core::slice::memchr::memchr
  %1 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext 0, ptr align 1 %_5.0, i64 %_5.1) #19, !dbg !12358
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !12358
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !12358
  store i64 %2, ptr %_4, align 8, !dbg !12358
  %4 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !12358
  store i64 %3, ptr %4, align 8, !dbg !12358
; call core::option::Option<T>::is_none
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17he71727173ad5660aE"(ptr align 8 %_4) #19, !dbg !12358
  br i1 %_2, label %bb5, label %bb4, !dbg !12358

bb4:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_9ed1d40f60081ac3c8582d1e71419d75, i64 49, ptr align 8 @alloc_156d5c7c6f69fe34845cc3baa812fa37) #20, !dbg !12359
  unreachable, !dbg !12359

bb5:                                              ; preds = %start
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %5 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE(ptr align 8 %v) #19, !dbg !12360
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !12360
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !12360
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12361
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !12361
  ret { ptr, i64 } %7, !dbg !12361
}

; alloc::ffi::c_str::CString::_from_vec_unchecked
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE(ptr align 8 %v) unnamed_addr #0 !dbg !12362 {
start:
  %_7 = alloca [24 x i8], align 8
    #dbg_declare(ptr %v, !12365, !DIExpression(), !12366)
; call alloc::vec::Vec<T,A>::reserve_exact
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hfe0a39fa792c655aE"(ptr align 8 %v, i64 1, ptr align 8 @alloc_0e7eff428019b5753767681608ae6587) #19, !dbg !12367
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h92d949171015b075E"(ptr align 8 %v, i8 zeroext 0, ptr align 8 @alloc_781b2bbbd116826056d7a9c10c6889b7) #19, !dbg !12368
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %v, i64 24, i1 false), !dbg !12369
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E"(ptr align 8 %_7, ptr align 8 @alloc_9848efa103523892095f8411b68557c3) #19, !dbg !12369
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12369
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12369
  %1 = insertvalue { ptr, i64 } poison, ptr %_6.0, 0, !dbg !12370
  %2 = insertvalue { ptr, i64 } %1, i64 %_6.1, 1, !dbg !12370
  ret { ptr, i64 } %2, !dbg !12370
}

; alloc::ffi::c_str::CString::from_raw
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str7CString8from_raw17h4fd357127ea36e1dE(ptr %ptr) unnamed_addr #0 !dbg !12371 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !12376, !DIExpression(), !12381)
  %_3 = call i64 @strlen(ptr %ptr) #19, !dbg !12382
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_3, i64 1), !dbg !12382
  %_5.0 = extractvalue { i64, i1 } %0, 0, !dbg !12382
  %_5.1 = extractvalue { i64, i1 } %0, 1, !dbg !12382
  br i1 %_5.1, label %panic, label %bb2, !dbg !12382

bb2:                                              ; preds = %start
  store i64 %_5.0, ptr %len.dbg.spill, align 8, !dbg !12382
    #dbg_declare(ptr %len.dbg.spill, !12377, !DIExpression(), !12383)
; call core::slice::raw::from_raw_parts_mut
  %1 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h86439c6721016fafE(ptr %ptr, i64 %_5.0) #19, !dbg !12384
  %slice.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12384
  %slice.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12384
  store ptr %slice.0, ptr %slice.dbg.spill, align 8, !dbg !12384
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8, !dbg !12384
  store i64 %slice.1, ptr %2, align 8, !dbg !12384
    #dbg_declare(ptr %slice.dbg.spill, !12379, !DIExpression(), !12385)
; call alloc::boxed::Box<T>::from_raw
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h13a71ae362b77767E"(ptr %slice.0, i64 %slice.1) #19, !dbg !12386
  %_7.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12386
  %_7.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12386
  %4 = insertvalue { ptr, i64 } poison, ptr %_7.0, 0, !dbg !12387
  %5 = insertvalue { ptr, i64 } %4, i64 %_7.1, 1, !dbg !12387
  ret { ptr, i64 } %5, !dbg !12387

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_b81e3863036eb7cddad670d5f49dd48c) #20, !dbg !12382
  unreachable, !dbg !12382
}

; alloc::ffi::c_str::CString::into_string
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString11into_string17hb1300f768f348071E(ptr sret([32 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12388 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %_2 = alloca [40 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12393, !DIExpression(), !12394)
; call alloc::ffi::c_str::CString::into_bytes
  call void @_ZN5alloc3ffi5c_str7CString10into_bytes17h4d27f1a9eff3f28dE(ptr sret([24 x i8]) align 8 %_3, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12395
; call alloc::string::String::from_utf8
  call void @_ZN5alloc6string6String9from_utf817h46e709e2886e8f0eE(ptr sret([40 x i8]) align 8 %_2, ptr align 8 %_3) #19, !dbg !12396
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96b119ef350d9df1E"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %_2) #19, !dbg !12396
  ret void, !dbg !12397
}

; alloc::ffi::c_str::CString::into_string::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17h6d6702930b05347dE"(ptr sret([32 x i8]) align 8 %_0, ptr align 8 %e) unnamed_addr #1 !dbg !12398 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [24 x i8], align 8
  %_3 = alloca [16 x i8], align 8
    #dbg_declare(ptr %_1.dbg.spill, !12403, !DIExpression(), !12404)
    #dbg_declare(ptr %e, !12402, !DIExpression(), !12405)
; call alloc::string::FromUtf8Error::utf8_error
  call void @_ZN5alloc6string13FromUtf8Error10utf8_error17hfdc33b529c4d4fa5E(ptr sret([16 x i8]) align 8 %_3, ptr align 8 %e) #19, !dbg !12406
; call alloc::string::FromUtf8Error::into_bytes
  call void @_ZN5alloc6string13FromUtf8Error10into_bytes17h7a20b162a9e3cee6E(ptr sret([24 x i8]) align 8 %_6, ptr align 8 %e) #19, !dbg !12407
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %0 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE(ptr align 8 %_6) #19, !dbg !12408
  %_5.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12408
  %_5.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12408
  store ptr %_5.0, ptr %_0, align 8, !dbg !12409
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12409
  store i64 %_5.1, ptr %1, align 8, !dbg !12409
  %2 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !12409
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_3, i64 16, i1 false), !dbg !12409
  ret void, !dbg !12410
}

; alloc::ffi::c_str::CString::into_bytes
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString10into_bytes17h4d27f1a9eff3f28dE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12411 {
start:
  %right_val.dbg.spill = alloca [8 x i8], align 8
  %left_val.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_14 = alloca [48 x i8], align 8
  %kind = alloca [1 x i8], align 1
  %_nul = alloca [2 x i8], align 1
  %vec = alloca [24 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12416, !DIExpression(), !12428)
    #dbg_declare(ptr %vec, !12417, !DIExpression(), !12429)
    #dbg_declare(ptr %_nul, !12419, !DIExpression(), !12430)
    #dbg_declare(ptr %kind, !12425, !DIExpression(), !12431)
; call alloc::ffi::c_str::CString::into_inner
  %1 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h0669530a238e0199E(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12432
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12432
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12432
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h3eb148217c08a6b6E(ptr sret([24 x i8]) align 8 %vec, ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !12433
; call alloc::vec::Vec<T,A>::pop
  %2 = call { i1, i8 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h2d5771bad42b3b66E"(ptr align 8 %vec) #19, !dbg !12434
  %3 = extractvalue { i1, i8 } %2, 0, !dbg !12434
  %4 = extractvalue { i1, i8 } %2, 1, !dbg !12434
  %5 = zext i1 %3 to i8, !dbg !12434
  store i8 %5, ptr %_nul, align 1, !dbg !12434
  %6 = getelementptr inbounds i8, ptr %_nul, i64 1, !dbg !12434
  store i8 %4, ptr %6, align 1, !dbg !12434
  store ptr %_nul, ptr %left_val.dbg.spill, align 8, !dbg !12435
    #dbg_declare(ptr %left_val.dbg.spill, !12421, !DIExpression(), !12436)
  store ptr @alloc_c8f8d850bafb8c953da39152ff673a10, ptr %right_val.dbg.spill, align 8, !dbg !12435
    #dbg_declare(ptr %right_val.dbg.spill, !12424, !DIExpression(), !12436)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hcb1184b3e526b36cE"(ptr align 1 %_nul, ptr align 1 @alloc_c8f8d850bafb8c953da39152ff673a10) #19, !dbg !12436
  br i1 %_11, label %bb6, label %bb5, !dbg !12436

bb5:                                              ; preds = %start
  store i8 0, ptr %kind, align 1, !dbg !12436
  store ptr null, ptr %_14, align 8, !dbg !12431
  %7 = load i8, ptr %kind, align 1, !dbg !12431
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h3afa9d80748d587aE(i8 zeroext %7, ptr align 1 %_nul, ptr align 1 @alloc_c8f8d850bafb8c953da39152ff673a10, ptr align 8 %_14, ptr align 8 @alloc_0bf25458e8613f0cbeeb109fec892b39) #20, !dbg !12431
  unreachable, !dbg !12431

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vec, i64 24, i1 false), !dbg !12437
  ret void, !dbg !12438
}

; alloc::ffi::c_str::CString::into_bytes_with_nul
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h0ae8f6045b10d7ceE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12439 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12442, !DIExpression(), !12443)
; call alloc::ffi::c_str::CString::into_inner
  %1 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h0669530a238e0199E(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12444
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12444
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12444
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h3eb148217c08a6b6E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !12445
  ret void, !dbg !12446
}

; alloc::ffi::c_str::CString::as_bytes_with_nul
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h850785f953d13936E(ptr align 8 %self) unnamed_addr #1 !dbg !12447 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12453, !DIExpression(), !12454)
  %_3.0 = load ptr, ptr %self, align 8, !dbg !12455
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !12455
  %_3.1 = load i64, ptr %0, align 8, !dbg !12455
  %1 = insertvalue { ptr, i64 } poison, ptr %_3.0, 0, !dbg !12456
  %2 = insertvalue { ptr, i64 } %1, i64 %_3.1, 1, !dbg !12456
  ret { ptr, i64 } %2, !dbg !12456
}

; alloc::ffi::c_str::CString::into_boxed_c_str
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17hd45d2e252c69da5bE(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12457 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12462, !DIExpression(), !12463)
; call alloc::ffi::c_str::CString::into_inner
  %1 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h0669530a238e0199E(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12464
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12464
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12464
; call alloc::boxed::Box<T,A>::into_raw
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17haa0de9018da4c18fE"(ptr align 1 %_4.0, i64 %_4.1) #19, !dbg !12465
  %_3.0 = extractvalue { ptr, i64 } %2, 0, !dbg !12465
  %_3.1 = extractvalue { ptr, i64 } %2, 1, !dbg !12465
; call alloc::boxed::Box<T>::from_raw
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hecf9e2ffed1d57f8E"(ptr %_3.0, i64 %_3.1) #19, !dbg !12466
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12466
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12466
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12467
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !12467
  ret { ptr, i64 } %5, !dbg !12467
}

; alloc::ffi::c_str::CString::into_inner
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str7CString10into_inner17h0669530a238e0199E(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !12468 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %value.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %this = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12473, !DIExpression(), !12480)
    #dbg_declare(ptr %this, !12474, !DIExpression(), !12481)
  store ptr %self.0, ptr %value.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %value.dbg.spill.i, !12482, !DIExpression(), !12488)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !12490
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !12490
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !12491
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !12491
  store ptr %4, ptr %this, align 8, !dbg !12491
  %6 = getelementptr inbounds i8, ptr %this, i64 8, !dbg !12491
  store i64 %5, ptr %6, align 8, !dbg !12491
  store ptr %this, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !12492, !DIExpression(), !12498)
; call core::ptr::read
  %7 = call { ptr, i64 } @_ZN4core3ptr4read17h2e437cd775b4c54bE(ptr %this) #19, !dbg !12500
  %_0.0 = extractvalue { ptr, i64 } %7, 0, !dbg !12500
  %_0.1 = extractvalue { ptr, i64 } %7, 1, !dbg !12500
  %8 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12501
  %9 = insertvalue { ptr, i64 } %8, i64 %_0.1, 1, !dbg !12501
  ret { ptr, i64 } %9, !dbg !12501
}

; alloc::ffi::c_str::CString::from_vec_with_nul_unchecked
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17hc8a8494032dfc278E(ptr align 8 %v) unnamed_addr #0 !dbg !12502 {
start:
  %val.dbg.spill.i = alloca [8 x i8], align 8
  %self.i = alloca [16 x i8], align 8
    #dbg_declare(ptr %v, !12505, !DIExpression(), !12506)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %v) #19, !dbg !12507
  %_6.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12507
  %_6.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12507
; call core::slice::memchr::memchr
  %1 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext 0, ptr align 1 %_6.0, i64 %_6.1) #19, !dbg !12508
  %_5.0 = extractvalue { i64, i64 } %1, 0, !dbg !12508
  %_5.1 = extractvalue { i64, i64 } %1, 1, !dbg !12508
  store i64 %_5.0, ptr %self.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.i, i64 8
  store i64 %_5.1, ptr %2, align 8
    #dbg_declare(ptr %self.i, !12247, !DIExpression(), !12509)
  %_2.i = load i64, ptr %self.i, align 8, !dbg !12511
  %3 = icmp eq i64 %_2.i, 0, !dbg !12512
  br i1 %3, label %bb2.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit", !dbg !12512

bb2.i:                                            ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h218570abae70db0dE(ptr align 8 @alloc_d6e10e01f54dbc5798f664872daa8769) #20, !dbg !12513
  unreachable, !dbg !12513

"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit": ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self.i, i64 8, !dbg !12514
  %val.i = load i64, ptr %4, align 8, !dbg !12514
  store i64 %val.i, ptr %val.dbg.spill.i, align 8, !dbg !12514
    #dbg_declare(ptr %val.dbg.spill.i, !12253, !DIExpression(), !12515)
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %val.i, i64 1), !dbg !12508
  %_8.0 = extractvalue { i64, i1 } %5, 0, !dbg !12508
  %_8.1 = extractvalue { i64, i1 } %5, 1, !dbg !12508
  br i1 %_8.1, label %panic, label %bb4, !dbg !12508

bb4:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit"
; call alloc::vec::Vec<T,A>::len
  %_9 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %v) #19, !dbg !12516
  %_2 = icmp eq i64 %_8.0, %_9, !dbg !12508
  br i1 %_2, label %bb7, label %bb6, !dbg !12508

panic:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_d2aec74c294cb6f49efc94f79e2e54ed) #20, !dbg !12508
  unreachable, !dbg !12508

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_4ca7a4293309f2a594112e5992259be2, i64 63, ptr align 8 @alloc_09d709bae586d94aaa77cc454a7d298a) #20, !dbg !12517
  unreachable, !dbg !12517

bb7:                                              ; preds = %bb4
; call alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
  %6 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17hbaa43eabc4dc19c6E(ptr align 8 %v) #19, !dbg !12518
  %_0.0 = extractvalue { ptr, i64 } %6, 0, !dbg !12518
  %_0.1 = extractvalue { ptr, i64 } %6, 1, !dbg !12518
  %7 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12519
  %8 = insertvalue { ptr, i64 } %7, i64 %_0.1, 1, !dbg !12519
  ret { ptr, i64 } %8, !dbg !12519
}

; alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
; Function Attrs: noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17hbaa43eabc4dc19c6E(ptr align 8 %v) unnamed_addr #0 !dbg !12520 {
start:
    #dbg_declare(ptr %v, !12523, !DIExpression(), !12524)
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E"(ptr align 8 %v, ptr align 8 @alloc_6cdd581df14db01179aebcce3453bd09) #19, !dbg !12525
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12525
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12525
  %1 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !12526
  %2 = insertvalue { ptr, i64 } %1, i64 %_2.1, 1, !dbg !12526
  ret { ptr, i64 } %2, !dbg !12526
}

; alloc::ffi::c_str::CString::from_vec_with_nul
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17h7ff5a879778eacb3E(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %v) unnamed_addr #0 !dbg !12527 {
start:
  %nul_pos.dbg.spill5 = alloca [8 x i8], align 8
  %nul_pos.dbg.spill3 = alloca [8 x i8], align 8
  %nul_pos.dbg.spill = alloca [8 x i8], align 8
  %_19 = alloca [16 x i8], align 8
  %_18 = alloca [40 x i8], align 8
  %_17 = alloca [16 x i8], align 8
  %_16 = alloca [40 x i8], align 8
  %nul_pos = alloca [16 x i8], align 8
    #dbg_declare(ptr %v, !12547, !DIExpression(), !12555)
    #dbg_declare(ptr %nul_pos, !12548, !DIExpression(), !12556)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %v) #19, !dbg !12557
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12557
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12557
; call core::slice::memchr::memchr
  %1 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E(i8 zeroext 0, ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !12558
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !12558
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !12558
  store i64 %2, ptr %nul_pos, align 8, !dbg !12558
  %4 = getelementptr inbounds i8, ptr %nul_pos, i64 8, !dbg !12558
  store i64 %3, ptr %4, align 8, !dbg !12558
  %_5 = load i64, ptr %nul_pos, align 8, !dbg !12559
  %5 = icmp eq i64 %_5, 0, !dbg !12560
  br i1 %5, label %bb4, label %bb5, !dbg !12560

bb4:                                              ; preds = %start
  store i64 1, ptr %_19, align 8, !dbg !12561
  %6 = load i64, ptr %_19, align 8, !dbg !12562
  %7 = getelementptr inbounds i8, ptr %_19, i64 8, !dbg !12562
  %8 = load i64, ptr %7, align 8, !dbg !12562
  store i64 %6, ptr %_18, align 8, !dbg !12562
  %9 = getelementptr inbounds i8, ptr %_18, i64 8, !dbg !12562
  store i64 %8, ptr %9, align 8, !dbg !12562
  %10 = getelementptr inbounds i8, ptr %_18, i64 16, !dbg !12562
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %v, i64 24, i1 false), !dbg !12562
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_18, i64 40, i1 false), !dbg !12563
  br label %bb11, !dbg !12564

bb5:                                              ; preds = %start
  %nul_pos1 = getelementptr inbounds i8, ptr %nul_pos, i64 8, !dbg !12565
  store ptr %nul_pos1, ptr %nul_pos.dbg.spill, align 8, !dbg !12565
    #dbg_declare(ptr %nul_pos.dbg.spill, !12552, !DIExpression(), !12566)
  %_10 = load i64, ptr %nul_pos1, align 8, !dbg !12567
  %11 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_10, i64 1), !dbg !12567
  %_11.0 = extractvalue { i64, i1 } %11, 0, !dbg !12567
  %_11.1 = extractvalue { i64, i1 } %11, 1, !dbg !12567
  br i1 %_11.1, label %panic, label %bb6, !dbg !12567

bb11:                                             ; preds = %bb8, %bb9, %bb4
  ret void, !dbg !12568

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::len
  %_12 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %v) #19, !dbg !12569
  %_8 = icmp eq i64 %_11.0, %_12, !dbg !12567
  br i1 %_8, label %bb8, label %bb9, !dbg !12567

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_86d69e9e608dca2a470f1f25dbb1fb03) #20, !dbg !12567
  unreachable, !dbg !12567

bb9:                                              ; preds = %bb6
  %12 = getelementptr inbounds i8, ptr %nul_pos, i64 8, !dbg !12570
  %nul_pos2 = load i64, ptr %12, align 8, !dbg !12570
  store i64 %nul_pos2, ptr %nul_pos.dbg.spill3, align 8, !dbg !12570
    #dbg_declare(ptr %nul_pos.dbg.spill3, !12553, !DIExpression(), !12571)
  %13 = getelementptr inbounds i8, ptr %_17, i64 8, !dbg !12572
  store i64 %nul_pos2, ptr %13, align 8, !dbg !12572
  store i64 0, ptr %_17, align 8, !dbg !12572
  %14 = load i64, ptr %_17, align 8, !dbg !12573
  %15 = getelementptr inbounds i8, ptr %_17, i64 8, !dbg !12573
  %16 = load i64, ptr %15, align 8, !dbg !12573
  store i64 %14, ptr %_16, align 8, !dbg !12573
  %17 = getelementptr inbounds i8, ptr %_16, i64 8, !dbg !12573
  store i64 %16, ptr %17, align 8, !dbg !12573
  %18 = getelementptr inbounds i8, ptr %_16, i64 16, !dbg !12573
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %v, i64 24, i1 false), !dbg !12573
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_16, i64 40, i1 false), !dbg !12574
  br label %bb11, !dbg !12575

bb8:                                              ; preds = %bb6
  %19 = getelementptr inbounds i8, ptr %nul_pos, i64 8, !dbg !12565
  %nul_pos4 = load i64, ptr %19, align 8, !dbg !12565
  store i64 %nul_pos4, ptr %nul_pos.dbg.spill5, align 8, !dbg !12565
    #dbg_declare(ptr %nul_pos.dbg.spill5, !12550, !DIExpression(), !12566)
; call alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
  %20 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17hbaa43eabc4dc19c6E(ptr align 8 %v) #19, !dbg !12576
  %_14.0 = extractvalue { ptr, i64 } %20, 0, !dbg !12576
  %_14.1 = extractvalue { ptr, i64 } %20, 1, !dbg !12576
  %21 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12577
  store ptr %_14.0, ptr %21, align 8, !dbg !12577
  %22 = getelementptr inbounds i8, ptr %21, i64 8, !dbg !12577
  store i64 %_14.1, ptr %22, align 8, !dbg !12577
  store i64 2, ptr %_0, align 8, !dbg !12577
  br label %bb11, !dbg !12578

bb3:                                              ; No predecessors!
  unreachable, !dbg !12559
}

; <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd8dbaf4bc14ef8a6E"(ptr align 8 %self) unnamed_addr #1 !dbg !12579 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12584, !DIExpression(), !12585)
; call alloc::ffi::c_str::CString::as_bytes_with_nul
  %0 = call { ptr, i64 } @_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h850785f953d13936E(ptr align 8 %self) #19, !dbg !12586
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12586
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12586
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha6543f6aaea04575E(ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !12587
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12587
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12587
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12588
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !12588
  ret { ptr, i64 } %3, !dbg !12588
}

; <alloc::ffi::c_str::CString as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17h06097ac427f2cdd2E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !12589 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12594, !DIExpression(), !12596)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !12595, !DIExpression(), !12597)
; call <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd8dbaf4bc14ef8a6E"(ptr align 8 %self) #19, !dbg !12598
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12598
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12598
; call <core::ffi::c_str::CStr as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN59_$LT$core..ffi..c_str..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h2911853f019f956dE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f) #19, !dbg !12599
  ret i1 %_0, !dbg !12600
}

; <alloc::ffi::c_str::CString as core::default::Default>::default
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN69_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..default..Default$GT$7default17hd9e41640a4b2aaf2E"() unnamed_addr #0 !dbg !12601 {
start:
  %a.dbg.spill = alloca [16 x i8], align 8, !dbg !12608
; call <&core::ffi::c_str::CStr as core::default::Default>::default
  %0 = call { ptr, i64 } @"_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h7e52163d12fc97c8E"() #19, !dbg !12608
  %a.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12608
  %a.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12608
  store ptr %a.0, ptr %a.dbg.spill, align 8, !dbg !12608
  %1 = getelementptr inbounds i8, ptr %a.dbg.spill, i64 8, !dbg !12608
  store i64 %a.1, ptr %1, align 8, !dbg !12608
    #dbg_declare(ptr %a.dbg.spill, !12606, !DIExpression(), !12609)
; call alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
  %2 = call { ptr, i64 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17ha531f8d2a532c5bbE"(ptr align 1 %a.0, i64 %a.1) #19, !dbg !12610
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !12610
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !12610
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12611
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !12611
  ret { ptr, i64 } %4, !dbg !12611
}

; alloc::ffi::c_str::<impl core::convert::From<&core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h79d0c5c1a9074749E"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !12612 {
start:
  %boxed.dbg.spill = alloca [16 x i8], align 8
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !12617, !DIExpression(), !12620)
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E(ptr align 1 %s.0, i64 %s.1) #19, !dbg !12621
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12621
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12621
; call alloc::boxed::convert::<impl core::convert::From<&[T]> for alloc::boxed::Box<[T]>>::from
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17hca9842cba6e06ba6E"(ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !12622
  %boxed.0 = extractvalue { ptr, i64 } %2, 0, !dbg !12622
  %boxed.1 = extractvalue { ptr, i64 } %2, 1, !dbg !12622
  store ptr %boxed.0, ptr %boxed.dbg.spill, align 8, !dbg !12622
  %3 = getelementptr inbounds i8, ptr %boxed.dbg.spill, i64 8, !dbg !12622
  store i64 %boxed.1, ptr %3, align 8, !dbg !12622
    #dbg_declare(ptr %boxed.dbg.spill, !12618, !DIExpression(), !12623)
; call alloc::boxed::Box<T,A>::into_raw
  %4 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17haa0de9018da4c18fE"(ptr align 1 %boxed.0, i64 %boxed.1) #19, !dbg !12624
  %_5.0 = extractvalue { ptr, i64 } %4, 0, !dbg !12624
  %_5.1 = extractvalue { ptr, i64 } %4, 1, !dbg !12624
; call alloc::boxed::Box<T>::from_raw
  %5 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hecf9e2ffed1d57f8E"(ptr %_5.0, i64 %_5.1) #19, !dbg !12625
  %_0.0 = extractvalue { ptr, i64 } %5, 0, !dbg !12625
  %_0.1 = extractvalue { ptr, i64 } %5, 1, !dbg !12625
  %6 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12626
  %7 = insertvalue { ptr, i64 } %6, i64 %_0.1, 1, !dbg !12626
  ret { ptr, i64 } %7, !dbg !12626
}

; alloc::ffi::c_str::<impl core::convert::From<&mut core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3ffi5c_str139_$LT$impl$u20$core..convert..From$LT$$RF$mut$u20$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h228db1863265ceb5E"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !12627 {
start:
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !12636, !DIExpression(), !12637)
; call alloc::ffi::c_str::<impl core::convert::From<&core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
  %1 = call { ptr, i64 } @"_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h79d0c5c1a9074749E"(ptr align 1 %s.0, i64 %s.1) #19, !dbg !12638
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12638
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12638
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12639
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !12639
  ret { ptr, i64 } %3, !dbg !12639
}

; <alloc::ffi::c_str::CString as core::convert::From<alloc::boxed::Box<core::ffi::c_str::CStr>>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17h066f422034282278E"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !12640 {
start:
  %raw.dbg.spill = alloca [16 x i8], align 8
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !12645, !DIExpression(), !12648)
; call alloc::boxed::Box<T,A>::into_raw
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h82a4a9f336b81157E"(ptr align 1 %s.0, i64 %s.1) #19, !dbg !12649
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12649
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12649
  store ptr %_3.0, ptr %raw.dbg.spill, align 8, !dbg !12649
  %2 = getelementptr inbounds i8, ptr %raw.dbg.spill, i64 8, !dbg !12649
  store i64 %_3.1, ptr %2, align 8, !dbg !12649
    #dbg_declare(ptr %raw.dbg.spill, !12646, !DIExpression(), !12650)
; call alloc::boxed::Box<T>::from_raw
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h13a71ae362b77767E"(ptr %_3.0, i64 %_3.1) #19, !dbg !12651
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12651
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12651
  %4 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0, !dbg !12652
  %5 = insertvalue { ptr, i64 } %4, i64 %_4.1, 1, !dbg !12652
  ret { ptr, i64 } %5, !dbg !12652
}

; alloc::ffi::c_str::<impl core::default::Default for alloc::boxed::Box<core::ffi::c_str::CStr>>::default
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3ffi5c_str100_$LT$impl$u20$core..default..Default$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$7default17h9a42db6b7ec97cfdE"() unnamed_addr #0 !dbg !12653 {
start:
  %boxed.dbg.spill = alloca [16 x i8], align 8
  %0 = alloca [1 x i8], align 1
  %_2 = alloca [1 x i8], align 1
  %1 = getelementptr inbounds i8, ptr %_2, i64 0, !dbg !12660
  store i8 0, ptr %1, align 1, !dbg !12660
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %0, ptr align 1 %_2, i64 1, i1 false), !dbg !12661
  %2 = load i8, ptr %0, align 1, !dbg !12661
; call alloc::boxed::convert::<impl core::convert::From<[T; N]> for alloc::boxed::Box<[T]>>::from
  %3 = call { ptr, i64 } @"_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$u5b$T$u3b$$u20$N$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h0d07abc93b54b782E"(i8 %2) #19, !dbg !12661
  %boxed.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12661
  %boxed.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12661
  store ptr %boxed.0, ptr %boxed.dbg.spill, align 8, !dbg !12661
  %4 = getelementptr inbounds i8, ptr %boxed.dbg.spill, i64 8, !dbg !12661
  store i64 %boxed.1, ptr %4, align 8, !dbg !12661
    #dbg_declare(ptr %boxed.dbg.spill, !12658, !DIExpression(), !12662)
; call alloc::boxed::Box<T,A>::into_raw
  %5 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17haa0de9018da4c18fE"(ptr align 1 %boxed.0, i64 %boxed.1) #19, !dbg !12663
  %_4.0 = extractvalue { ptr, i64 } %5, 0, !dbg !12663
  %_4.1 = extractvalue { ptr, i64 } %5, 1, !dbg !12663
; call alloc::boxed::Box<T>::from_raw
  %6 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hecf9e2ffed1d57f8E"(ptr %_4.0, i64 %_4.1) #19, !dbg !12664
  %_0.0 = extractvalue { ptr, i64 } %6, 0, !dbg !12664
  %_0.1 = extractvalue { ptr, i64 } %6, 1, !dbg !12664
  %7 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12665
  %8 = insertvalue { ptr, i64 } %7, i64 %_0.1, 1, !dbg !12665
  ret { ptr, i64 } %8, !dbg !12665
}

; alloc::ffi::c_str::NulError::nul_position
; Function Attrs: noredzone nounwind
define dso_local i64 @_ZN5alloc3ffi5c_str8NulError12nul_position17h7035d6e9a5c653e7E(ptr align 8 %self) unnamed_addr #0 !dbg !12666 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12672, !DIExpression(), !12673)
  %0 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !12674
  %_0 = load i64, ptr %0, align 8, !dbg !12674
  ret i64 %_0, !dbg !12675
}

; alloc::ffi::c_str::NulError::into_vec
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str8NulError8into_vec17h58b0b551c7a27fc1E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !12676 {
start:
    #dbg_declare(ptr %self, !12681, !DIExpression(), !12682)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false), !dbg !12683
  ret void, !dbg !12684
}

; <alloc::ffi::c_str::NulError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Display$GT$3fmt17h1cd0b1ebd9ceafdeE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !12685 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_7 = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12690, !DIExpression(), !12692)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !12691, !DIExpression(), !12693)
  %_8 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !12694
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_7, ptr align 8 %_8) #19, !dbg !12694
  %0 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_6, i64 0, !dbg !12694
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %_7, i64 16, i1 false), !dbg !12694
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h63782da5e03c5a43E(ptr sret([48 x i8]) align 8 %_3, ptr align 8 @alloc_577aa44f47f6ef39a87ddb5a9b4451b8, ptr align 8 %_6) #19, !dbg !12694
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E(ptr align 8 %f, ptr align 8 %_3) #19, !dbg !12694
  ret i1 %_0, !dbg !12695
}

; <alloc::ffi::c_str::FromVecWithNulError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN77_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h16026dcd0a6e83cdE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !12696 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_11 = alloca [48 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_5 = alloca [48 x i8], align 8
  %pos = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12701, !DIExpression(), !12705)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !12702, !DIExpression(), !12706)
    #dbg_declare(ptr %pos, !12703, !DIExpression(), !12707)
  %_3 = load i64, ptr %self, align 8, !dbg !12708
  %0 = icmp eq i64 %_3, 0, !dbg !12709
  br i1 %0, label %bb3, label %bb2, !dbg !12709

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !12710
  %2 = load i64, ptr %1, align 8, !dbg !12710
  store i64 %2, ptr %pos, align 8, !dbg !12710
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_9, ptr align 8 %pos) #19, !dbg !12711
  %3 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_8, i64 0, !dbg !12711
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_9, i64 16, i1 false), !dbg !12711
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h63782da5e03c5a43E(ptr sret([48 x i8]) align 8 %_5, ptr align 8 @alloc_ff42d28a277982e056a5409725510716, ptr align 8 %_8) #19, !dbg !12711
; call core::fmt::Formatter::write_fmt
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E(ptr align 8 %f, ptr align 8 %_5) #19, !dbg !12711
  %5 = zext i1 %4 to i8, !dbg !12711
  store i8 %5, ptr %_0, align 1, !dbg !12711
  br label %bb7, !dbg !12711

bb2:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8 %_11, ptr align 8 @alloc_23f759e465b470884cf2ee7ff692a8fa) #19, !dbg !12712
; call core::fmt::Formatter::write_fmt
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E(ptr align 8 %f, ptr align 8 %_11) #19, !dbg !12712
  %7 = zext i1 %6 to i8, !dbg !12712
  store i8 %7, ptr %_0, align 1, !dbg !12712
  br label %bb7, !dbg !12712

bb7:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %_0, align 1, !dbg !12713
  %9 = trunc i8 %8 to i1, !dbg !12713
  ret i1 %9, !dbg !12713

bb1:                                              ; No predecessors!
  unreachable, !dbg !12708
}

; alloc::ffi::c_str::IntoStringError::into_cstring
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17hf728a0670d083f8fE(ptr align 8 %self) unnamed_addr #0 !dbg !12714 {
start:
    #dbg_declare(ptr %self, !12719, !DIExpression(), !12720)
  %_0.0 = load ptr, ptr %self, align 8, !dbg !12721
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !12721
  %_0.1 = load i64, ptr %0, align 8, !dbg !12721
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12722
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !12722
  ret { ptr, i64 } %2, !dbg !12722
}

; alloc::ffi::c_str::IntoStringError::utf8_error
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17h37caa9b2ca078fb3E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !12723 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12729, !DIExpression(), !12730)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !12731
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %0, i64 16, i1 false), !dbg !12731
  ret void, !dbg !12732
}

; alloc::ffi::c_str::IntoStringError::description
; Function Attrs: noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3ffi5c_str15IntoStringError11description17h80071276c8ae3439E(ptr align 8 %self) unnamed_addr #0 !dbg !12733 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12738, !DIExpression(), !12739)
  ret { ptr, i64 } { ptr @alloc_2be04d996cb96ea7cf76b18f168cc936, i64 33 }, !dbg !12740
}

; <alloc::ffi::c_str::IntoStringError as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Display$GT$3fmt17h178b0b9b43fe99daE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !12741 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12746, !DIExpression(), !12748)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !12747, !DIExpression(), !12749)
; call alloc::ffi::c_str::IntoStringError::description
  %0 = call { ptr, i64 } @_ZN5alloc3ffi5c_str15IntoStringError11description17h80071276c8ae3439E(ptr align 8 %self) #19, !dbg !12750
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12750
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12750
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h401e3d670cc48d35E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f) #19, !dbg !12750
  ret i1 %_0, !dbg !12751
}

; alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17ha531f8d2a532c5bbE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12752 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12757, !DIExpression(), !12758)
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12759
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12759
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12759
; call <T as core::convert::Into<U>>::into
  %2 = call { ptr, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hca5904ee56a6374fE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 @alloc_aef15d1c7629ae4e01160d230d1515e3) #19, !dbg !12759
  %_2.0 = extractvalue { ptr, i64 } %2, 0, !dbg !12759
  %_2.1 = extractvalue { ptr, i64 } %2, 1, !dbg !12759
  %3 = insertvalue { ptr, i64 } poison, ptr %_2.0, 0, !dbg !12760
  %4 = insertvalue { ptr, i64 } %3, i64 %_2.1, 1, !dbg !12760
  ret { ptr, i64 } %4, !dbg !12760
}

; alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::clone_into
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$10clone_into17h138c81d8fd9e6327E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !12761 {
start:
  %target.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %b = alloca [24 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12766, !DIExpression(), !12770)
  store ptr %target, ptr %target.dbg.spill, align 8
    #dbg_declare(ptr %target.dbg.spill, !12767, !DIExpression(), !12771)
    #dbg_declare(ptr %b, !12768, !DIExpression(), !12772)
; call core::mem::take
  %1 = call { ptr, i64 } @_ZN4core3mem4take17h8d397c24782aadc6E(ptr align 8 %target) #19, !dbg !12773
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12773
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12773
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h3eb148217c08a6b6E(ptr sret([24 x i8]) align 8 %b, ptr align 1 %_4.0, i64 %_4.1) #19, !dbg !12774
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %2 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12775
  %_7.0 = extractvalue { ptr, i64 } %2, 0, !dbg !12775
  %_7.1 = extractvalue { ptr, i64 } %2, 1, !dbg !12775
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h5c005fedc5721282E"(ptr align 1 %_7.0, i64 %_7.1, ptr align 8 %b) #19, !dbg !12775
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %b, i64 24, i1 false), !dbg !12776
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %3 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E"(ptr align 8 %_10, ptr align 8 @alloc_62924e1e8b0d672be51647c6040252d9) #19, !dbg !12776
  %_9.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12776
  %_9.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12776
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hbf51f9f937146909E"(ptr align 8 %target) #19, !dbg !12777
  store ptr %_9.0, ptr %target, align 8, !dbg !12777
  %4 = getelementptr inbounds i8, ptr %target, i64 8, !dbg !12777
  store i64 %_9.1, ptr %4, align 8, !dbg !12777
  ret void, !dbg !12778
}

; <alloc::ffi::c_str::CString as core::convert::From<&core::ffi::c_str::CStr>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN100_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$GT$4from17h510fd84899783eceE"(ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !12779 {
start:
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !12782, !DIExpression(), !12783)
; call alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
  %1 = call { ptr, i64 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17ha531f8d2a532c5bbE"(ptr align 1 %s.0, i64 %s.1) #19, !dbg !12784
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12784
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12784
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12785
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !12785
  ret { ptr, i64 } %3, !dbg !12785
}

; alloc::ffi::c_str::<impl core::ffi::c_str::CStr>::to_string_lossy
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17h8294f23583f41e66E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12786 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12791, !DIExpression(), !12792)
; call core::ffi::c_str::CStr::to_bytes
  %1 = call { ptr, i64 } @_ZN4core3ffi5c_str4CStr8to_bytes17h40a5d5761cbaddacE(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12793
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12793
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12793
; call alloc::string::String::from_utf8_lossy
  call void @_ZN5alloc6string6String15from_utf8_lossy17h2d5a9c797a3f29c5E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !12794
  ret void, !dbg !12795
}

; alloc::ffi::c_str::<impl core::ffi::c_str::CStr>::into_c_string
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17hab664bc3b4c40108E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12796 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12799, !DIExpression(), !12800)
; call <alloc::ffi::c_str::CString as core::convert::From<alloc::boxed::Box<core::ffi::c_str::CStr>>>::from
  %1 = call { ptr, i64 } @"_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17h066f422034282278E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !12801
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12801
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12801
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12802
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !12802
  ret { ptr, i64 } %3, !dbg !12802
}

; <alloc::ffi::c_str::NulError as core::error::Error>::description
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..error..Error$GT$11description17h7ecb78d2134ac623E"(ptr align 8 %self) unnamed_addr #0 !dbg !12803 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12808, !DIExpression(), !12809)
  ret { ptr, i64 } { ptr @alloc_d4d0b95d03b96c59f7662e0365977680, i64 22 }, !dbg !12810
}

; <alloc::ffi::c_str::IntoStringError as core::error::Error>::description
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$11description17h9e47c84b5e9571ddE"(ptr align 8 %self) unnamed_addr #0 !dbg !12811 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12814, !DIExpression(), !12815)
  ret { ptr, i64 } { ptr @alloc_2be04d996cb96ea7cf76b18f168cc936, i64 33 }, !dbg !12816
}

; <alloc::ffi::c_str::IntoStringError as core::error::Error>::source
; Function Attrs: noredzone nounwind
define dso_local { ptr, ptr } @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$6source17h6ae0e798383679b2E"(ptr align 8 %self) unnamed_addr #0 !dbg !12817 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12821, !DIExpression(), !12822)
  %_3 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !12823
  store ptr %_3, ptr %_0, align 8, !dbg !12824
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12824
  store ptr @vtable.7, ptr %0, align 8, !dbg !12824
  %1 = load ptr, ptr %_0, align 8, !dbg !12825
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !12825
  %3 = load ptr, ptr %2, align 8, !dbg !12825
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0, !dbg !12825
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1, !dbg !12825
  ret { ptr, ptr } %5, !dbg !12825
}

; alloc::fmt::format::format_inner
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc3fmt6format12format_inner17hef86f7aaee29d1e9E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %args) unnamed_addr #0 !dbg !12826 {
start:
  %0 = alloca [48 x i8], align 8
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %output = alloca [24 x i8], align 8
    #dbg_declare(ptr %args, !12833, !DIExpression(), !12838)
    #dbg_declare(ptr %output, !12836, !DIExpression(), !12839)
; call core::fmt::Arguments::estimated_capacity
  %capacity = call i64 @_ZN4core3fmt9Arguments18estimated_capacity17h0aa853e31d84981cE(ptr align 8 %args) #19, !dbg !12840
  store i64 %capacity, ptr %capacity.dbg.spill, align 8, !dbg !12840
    #dbg_declare(ptr %capacity.dbg.spill, !12834, !DIExpression(), !12841)
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE(ptr sret([24 x i8]) align 8 %output, i64 %capacity) #19, !dbg !12842
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %args, i64 48, i1 false), !dbg !12843
; call core::fmt::Write::write_fmt
  %_6 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h17a6868f9c748f56E(ptr align 8 %output, ptr align 8 %0) #19, !dbg !12843
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3811244cd94293caE"(i1 zeroext %_6, ptr align 1 @alloc_a439077caaee6bab9af745f1531d72a4, i64 86, ptr align 8 @alloc_dccb8b006c854771352df302727257a5) #19, !dbg !12843
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %output, i64 24, i1 false), !dbg !12844
  ret void, !dbg !12845
}

; alloc::rc::rc_inner_layout_for_value_layout
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN5alloc2rc32rc_inner_layout_for_value_layout17h692e767b077914c2E(i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !12846 {
start:
  %e.i = alloca [0 x i8], align 1
  %layout.dbg.spill = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  store i64 %layout.0, ptr %layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8
  store i64 %layout.1, ptr %0, align 8
    #dbg_declare(ptr %layout.dbg.spill, !12851, !DIExpression(), !12852)
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h7a5860340e5ecdd2E() #19, !dbg !12853
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !12853
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !12853
  store i64 %2, ptr %_6, align 8, !dbg !12853
  %4 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !12853
  store i64 %3, ptr %4, align 8, !dbg !12853
; call core::alloc::layout::Layout::extend
  call void @_ZN4core5alloc6layout6Layout6extend17h60352684f0eebe17E(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %_6, i64 %layout.0, i64 %layout.1) #19, !dbg !12853
    #dbg_declare(ptr %_3, !12854, !DIExpression(), !12864)
    #dbg_declare(ptr %_4, !12861, !DIExpression(), !12866)
    #dbg_declare(ptr %e.i, !12862, !DIExpression(), !12867)
  %5 = load i64, ptr %_4, align 8, !dbg !12868
  %6 = icmp eq i64 %5, 0, !dbg !12868
  %_2.i = select i1 %6, i64 1, i64 0, !dbg !12868
  %7 = icmp eq i64 %_2.i, 0, !dbg !12869
  br i1 %7, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha05559181cb40b44E.exit", label %bb2.i, !dbg !12869

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h32e9195b123d06eeE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i, ptr align 8 @vtable.1, ptr align 8 @alloc_e9e555dabcea10b1f843fa8f0c99f780) #20, !dbg !12870
  unreachable, !dbg !12870

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha05559181cb40b44E.exit": ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 24, i1 false), !dbg !12871
; call core::alloc::layout::Layout::pad_to_align
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h2bc6557b92255774E(ptr align 8 %_3) #19, !dbg !12853
  %_0.0 = extractvalue { i64, i64 } %8, 0, !dbg !12853
  %_0.1 = extractvalue { i64, i64 } %8, 1, !dbg !12853
  %9 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !12872
  %10 = insertvalue { i64, i64 } %9, i64 %_0.1, 1, !dbg !12872
  ret { i64, i64 } %10, !dbg !12872
}

; alloc::slice::hack::into_vec
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc5slice4hack8into_vec17h3eb148217c08a6b6E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %b.0, i64 %b.1) unnamed_addr #0 !dbg !12873 {
start:
  %b.dbg.spill1 = alloca [16 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [16 x i8], align 8
  store ptr %b.0, ptr %b.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i64 8
  store i64 %b.1, ptr %0, align 8
    #dbg_declare(ptr %b.dbg.spill, !12880, !DIExpression(), !12886)
    #dbg_declare(ptr %alloc.dbg.spill, !12885, !DIExpression(), !12887)
  store i64 %b.1, ptr %len.dbg.spill, align 8, !dbg !12888
    #dbg_declare(ptr %len.dbg.spill, !12881, !DIExpression(), !12889)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h62554975f423fdbfE"(ptr align 1 %b.0, i64 %b.1) #19, !dbg !12890
  %_6.0 = extractvalue { ptr, i64 } %1, 0, !dbg !12890
  %_6.1 = extractvalue { ptr, i64 } %1, 1, !dbg !12890
  store ptr %_6.0, ptr %b.dbg.spill1, align 8, !dbg !12891
  %2 = getelementptr inbounds i8, ptr %b.dbg.spill1, i64 8, !dbg !12891
  store i64 %_6.1, ptr %2, align 8, !dbg !12891
    #dbg_declare(ptr %b.dbg.spill1, !12883, !DIExpression(), !12892)
; call alloc::vec::Vec<T,A>::from_raw_parts_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17hf77891917e6c590eE"(ptr sret([24 x i8]) align 8 %_0, ptr %_6.0, i64 %b.1, i64 %b.1) #19, !dbg !12893
  ret void, !dbg !12894
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @_ZN5alloc5slice4hack6to_vec17h44a6bbfffc4c5d0bE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !12895 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !12899, !DIExpression(), !12901)
    #dbg_declare(ptr %alloc.dbg.spill, !12900, !DIExpression(), !12902)
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h240a5a37248956a7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) #19, !dbg !12903
  ret void, !dbg !12904
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h240a5a37248956a7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !12905 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [16 x i8], align 8
  %v = alloca [24 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !12908, !DIExpression(), !12912)
    #dbg_declare(ptr %alloc.dbg.spill, !12909, !DIExpression(), !12913)
    #dbg_declare(ptr %v, !12910, !DIExpression(), !12914)
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf5dfd896da7902efE"(ptr sret([24 x i8]) align 8 %v, i64 %s.1, ptr align 8 @alloc_29284281892bde93e7545e1a18a5f8dc) #19, !dbg !12915
  store ptr %s.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %s.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !2260, !DIExpression(), !12916)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_7 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %v) #19, !dbg !12918
; call core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h7c7f21c0a2a81ed1E"(ptr %s.0, ptr %_7, i64 %s.1) #19, !dbg !12919
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %v, i64 %s.1) #19, !dbg !12920
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 24, i1 false), !dbg !12921
  ret void, !dbg !12922
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hef05650c30b71d4bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !12923 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12928, !DIExpression(), !12929)
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h1cd06a32d75f4646E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12930
  ret void, !dbg !12931
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h1cd06a32d75f4646E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !12932 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12934, !DIExpression(), !12936)
    #dbg_declare(ptr %alloc.dbg.spill, !12935, !DIExpression(), !12937)
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17h44a6bbfffc4c5d0bE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12938
  ret void, !dbg !12939
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17ha5ad211c85a97096E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !12940 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12942, !DIExpression(), !12943)
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h3eb148217c08a6b6E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12944
  ret void, !dbg !12945
}

; <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h5320f0f9405b2486E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !12946 {
start:
  %target.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12951, !DIExpression(), !12953)
  store ptr %target, ptr %target.dbg.spill, align 8
    #dbg_declare(ptr %target.dbg.spill, !12952, !DIExpression(), !12954)
; call alloc::vec::Vec<T,A>::clear
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17hdc51e58aca5ba4b9E"(ptr align 8 %target) #19, !dbg !12955
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE"(ptr align 8 %target, ptr align 1 %self.0, i64 %self.1, ptr align 8 @alloc_1302e1bce89cada18067fac642ba3231) #19, !dbg !12956
  ret void, !dbg !12957
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hde18547f56e350c8E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12958 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12961, !DIExpression(), !12962)
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hef05650c30b71d4bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) #19, !dbg !12963
  ret void, !dbg !12964
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h5c005fedc5721282E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) unnamed_addr #0 !dbg !12965 {
start:
  %target.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12967, !DIExpression(), !12969)
  store ptr %target, ptr %target.dbg.spill, align 8
    #dbg_declare(ptr %target.dbg.spill, !12968, !DIExpression(), !12970)
; call <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
  call void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h5320f0f9405b2486E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %target) #19, !dbg !12971
  ret void, !dbg !12972
}

; alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h25447f92ec0acb71E"(ptr align 8 %self) unnamed_addr #1 !dbg !12973 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !12979, !DIExpression(), !12980)
; call <alloc::string::String as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hf73e75d89969b7ceE"(ptr align 8 %self, ptr align 8 @alloc_c293372f8f30b1fc526359c56aa5c89f) #19, !dbg !12981
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !12981
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !12981
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !12982
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !12982
  ret { ptr, i64 } %2, !dbg !12982
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17he2a6fa28c2c08bf7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !12983 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12988, !DIExpression(), !12989)
  store ptr %self.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %self.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !12990)
  %2 = insertvalue { ptr, i64 } poison, ptr %self.0, 0, !dbg !12992
  %3 = insertvalue { ptr, i64 } %2, i64 %self.1, 1, !dbg !12992
  %_3.0 = extractvalue { ptr, i64 } %3, 0, !dbg !12993
  %_3.1 = extractvalue { ptr, i64 } %3, 1, !dbg !12993
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hde18547f56e350c8E"(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !12993
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2) #19, !dbg !12994
  ret void, !dbg !12995
}

; alloc::str::<impl str>::to_lowercase
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase17h7a09f6fec5e68a0bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12996 {
start:
  %c.dbg.spill8 = alloca [4 x i8], align 4
  %b.dbg.spill6 = alloca [4 x i8], align 4
  %a.dbg.spill4 = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill2 = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %sigma_lowercase.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [8 x i8], align 8
  %prefix_len.dbg.spill = alloca [8 x i8], align 8
  %rest.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_22 = alloca [12 x i8], align 4
  %_12 = alloca [16 x i8], align 8
  %iter = alloca [24 x i8], align 8
  %_9 = alloca [24 x i8], align 8
  %_8 = alloca [24 x i8], align 8
  %_4 = alloca [40 x i8], align 8
  %s = alloca [24 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12998, !DIExpression(), !13020)
    #dbg_declare(ptr %s, !12999, !DIExpression(), !13021)
    #dbg_declare(ptr %iter, !13004, !DIExpression(), !13022)
; call alloc::str::convert_while_ascii
  call void @_ZN5alloc3str19convert_while_ascii17h66812988ffe18450E(ptr sret([40 x i8]) align 8 %_4, ptr align 1 %self.0, i64 %self.1, ptr @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h86adba17fc20bfc9E") #19, !dbg !13023
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %_4, i64 24, i1 false), !dbg !13024
  %1 = getelementptr inbounds i8, ptr %_4, i64 24, !dbg !13025
  %rest.0 = load ptr, ptr %1, align 8, !dbg !13025
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !13025
  %rest.1 = load i64, ptr %2, align 8, !dbg !13025
  store ptr %rest.0, ptr %rest.dbg.spill, align 8, !dbg !13025
  %3 = getelementptr inbounds i8, ptr %rest.dbg.spill, i64 8, !dbg !13025
  store i64 %rest.1, ptr %3, align 8, !dbg !13025
    #dbg_declare(ptr %rest.dbg.spill, !13001, !DIExpression(), !13026)
; call alloc::string::String::len
  %prefix_len = call i64 @_ZN5alloc6string6String3len17hec6fd4d7b1d2ed2eE(ptr align 8 %s) #19, !dbg !13027
  store i64 %prefix_len, ptr %prefix_len.dbg.spill, align 8, !dbg !13027
    #dbg_declare(ptr %prefix_len.dbg.spill, !13002, !DIExpression(), !13028)
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h09ad5fa2dba47c47E"(ptr sret([24 x i8]) align 8 %_9, ptr align 1 %rest.0, i64 %rest.1) #19, !dbg !13029
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h761462e48c1c349dE"(ptr sret([24 x i8]) align 8 %_8, ptr align 8 %_9) #19, !dbg !13029
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_8, i64 24, i1 false), !dbg !13029
  br label %bb5, !dbg !13030

bb5:                                              ; preds = %bb5.backedge, %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %4 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc89fef062066f653E"(ptr align 8 %iter) #19, !dbg !13022
  %5 = extractvalue { i64, i32 } %4, 0, !dbg !13022
  %6 = extractvalue { i64, i32 } %4, 1, !dbg !13022
  store i64 %5, ptr %_12, align 8, !dbg !13022
  %7 = getelementptr inbounds i8, ptr %_12, i64 8, !dbg !13022
  store i32 %6, ptr %7, align 8, !dbg !13022
  %8 = getelementptr inbounds i8, ptr %_12, i64 8, !dbg !13022
  %9 = load i32, ptr %8, align 8, !dbg !13022
  %10 = icmp eq i32 %9, 1114112, !dbg !13022
  %_14 = select i1 %10, i64 0, i64 1, !dbg !13022
  %11 = icmp eq i64 %_14, 0, !dbg !13022
  br i1 %11, label %bb9, label %bb8, !dbg !13022

bb9:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %s, i64 24, i1 false), !dbg !13031
  ret void, !dbg !13032

bb8:                                              ; preds = %bb5
  %i = load i64, ptr %_12, align 8, !dbg !13033
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !13033
    #dbg_declare(ptr %i.dbg.spill, !13006, !DIExpression(), !13034)
  %12 = getelementptr inbounds i8, ptr %_12, i64 8, !dbg !13035
  %c = load i32, ptr %12, align 8, !dbg !13035
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !13035
    #dbg_declare(ptr %c.dbg.spill, !13008, !DIExpression(), !13036)
  %13 = icmp eq i32 %c, 931, !dbg !13037
  br i1 %13, label %bb10, label %bb13, !dbg !13037

bb10:                                             ; preds = %bb8
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %prefix_len, i64 %i), !dbg !13038
  %_19.0 = extractvalue { i64, i1 } %14, 0, !dbg !13038
  %_19.1 = extractvalue { i64, i1 } %14, 1, !dbg !13038
  br i1 %_19.1, label %panic, label %bb11, !dbg !13038

bb13:                                             ; preds = %bb8
; call core::unicode::unicode_data::conversions::to_lower
  call void @_ZN4core7unicode12unicode_data11conversions8to_lower17h5a74cdd27a13bdbdE(ptr sret([12 x i8]) align 4 %_22, i32 signext %c) #19, !dbg !13039
  %15 = getelementptr inbounds i32, ptr %_22, i64 1, !dbg !13040
  %16 = load i32, ptr %15, align 4, !dbg !13040
  %17 = icmp eq i32 %16, 0, !dbg !13040
  br i1 %17, label %bb18, label %bb15, !dbg !13040

bb11:                                             ; preds = %bb10
; call alloc::str::<impl str>::to_lowercase::map_uppercase_sigma
  %sigma_lowercase = call i32 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17hca04c30b5486cfcaE"(ptr align 1 %self.0, i64 %self.1, i64 %_19.0) #19, !dbg !13041
  store i32 %sigma_lowercase, ptr %sigma_lowercase.dbg.spill, align 4, !dbg !13041
    #dbg_declare(ptr %sigma_lowercase.dbg.spill, !13009, !DIExpression(), !13042)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %sigma_lowercase) #19, !dbg !13043
  br label %bb5.backedge, !dbg !13043

bb5.backedge:                                     ; preds = %bb11, %bb18, %bb17, %bb16
  br label %bb5, !dbg !13022

panic:                                            ; preds = %bb10
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_92bd1ae6467565f43615e43ac39bf41a) #20, !dbg !13038
  unreachable, !dbg !13038

bb18:                                             ; preds = %bb13
  %18 = getelementptr inbounds i32, ptr %_22, i64 0, !dbg !13044
  %a = load i32, ptr %18, align 4, !dbg !13044
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !13044
    #dbg_declare(ptr %a.dbg.spill, !13011, !DIExpression(), !13045)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %a) #19, !dbg !13046
  br label %bb5.backedge, !dbg !13046

bb15:                                             ; preds = %bb13
  %19 = getelementptr inbounds i32, ptr %_22, i64 2, !dbg !13040
  %20 = load i32, ptr %19, align 4, !dbg !13040
  %21 = icmp eq i32 %20, 0, !dbg !13040
  br i1 %21, label %bb17, label %bb16, !dbg !13040

bb17:                                             ; preds = %bb15
  %22 = getelementptr inbounds i32, ptr %_22, i64 0, !dbg !13047
  %a1 = load i32, ptr %22, align 4, !dbg !13047
  store i32 %a1, ptr %a.dbg.spill2, align 4, !dbg !13047
    #dbg_declare(ptr %a.dbg.spill2, !13013, !DIExpression(), !13048)
  %23 = getelementptr inbounds i32, ptr %_22, i64 1, !dbg !13049
  %b = load i32, ptr %23, align 4, !dbg !13049
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !13049
    #dbg_declare(ptr %b.dbg.spill, !13015, !DIExpression(), !13050)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %a1) #19, !dbg !13051
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %b) #19, !dbg !13052
  br label %bb5.backedge, !dbg !13052

bb16:                                             ; preds = %bb15
  %24 = getelementptr inbounds i32, ptr %_22, i64 0, !dbg !13053
  %a3 = load i32, ptr %24, align 4, !dbg !13053
  store i32 %a3, ptr %a.dbg.spill4, align 4, !dbg !13053
    #dbg_declare(ptr %a.dbg.spill4, !13016, !DIExpression(), !13054)
  %25 = getelementptr inbounds i32, ptr %_22, i64 1, !dbg !13055
  %b5 = load i32, ptr %25, align 4, !dbg !13055
  store i32 %b5, ptr %b.dbg.spill6, align 4, !dbg !13055
    #dbg_declare(ptr %b.dbg.spill6, !13018, !DIExpression(), !13056)
  %26 = getelementptr inbounds i32, ptr %_22, i64 2, !dbg !13057
  %c7 = load i32, ptr %26, align 4, !dbg !13057
  store i32 %c7, ptr %c.dbg.spill8, align 4, !dbg !13057
    #dbg_declare(ptr %c.dbg.spill8, !13019, !DIExpression(), !13058)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %a3) #19, !dbg !13059
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %b5) #19, !dbg !13060
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %c7) #19, !dbg !13061
  br label %bb5.backedge, !dbg !13061

bb7:                                              ; No predecessors!
  unreachable, !dbg !13022
}

; alloc::str::<impl str>::to_lowercase::map_uppercase_sigma
; Function Attrs: noredzone nounwind
define internal i32 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17hca04c30b5486cfcaE"(ptr align 1 %from.0, i64 %from.1, i64 %i) unnamed_addr #0 !dbg !13062 {
start:
  %i.dbg.spill = alloca [8 x i8], align 8
  %from.dbg.spill = alloca [16 x i8], align 8
  %is_word_final = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  store ptr %from.0, ptr %from.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %from.dbg.spill, i64 8
  store i64 %from.1, ptr %0, align 8
    #dbg_declare(ptr %from.dbg.spill, !13066, !DIExpression(), !13070)
  store i64 %i, ptr %i.dbg.spill, align 8
    #dbg_declare(ptr %i.dbg.spill, !13067, !DIExpression(), !13071)
    #dbg_declare(ptr %is_word_final, !13068, !DIExpression(), !13072)
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hae25e11b0f9236eaE"(i32 signext 931) #19, !dbg !13073
  %1 = icmp eq i64 %_3, 2, !dbg !13073
  br i1 %1, label %bb3, label %bb2, !dbg !13073

bb3:                                              ; preds = %start
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %2 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hb16c0014501ab2ddE"(ptr align 1 %from.0, i64 %from.1, i64 %i, ptr align 8 @alloc_bc07c7a33ae726400a93eb9e81138f66) #19, !dbg !13074
  %_9.0 = extractvalue { ptr, i64 } %2, 0, !dbg !13074
  %_9.1 = extractvalue { ptr, i64 } %2, 1, !dbg !13074
; call core::str::<impl str>::chars
  %3 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hb2e95cef6820fa16E"(ptr align 1 %_9.0, i64 %_9.1) #19, !dbg !13075
  %_8.0 = extractvalue { ptr, ptr } %3, 0, !dbg !13075
  %_8.1 = extractvalue { ptr, ptr } %3, 1, !dbg !13075
; call core::iter::traits::iterator::Iterator::rev
  %4 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3rev17h6b1e1e52c97eb7afE(ptr %_8.0, ptr %_8.1) #19, !dbg !13075
  %_7.0 = extractvalue { ptr, ptr } %4, 0, !dbg !13075
  %_7.1 = extractvalue { ptr, ptr } %4, 1, !dbg !13075
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
  %_6 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17hb6451dd30fbe164bE"(ptr %_7.0, ptr %_7.1) #19, !dbg !13076
  br i1 %_6, label %bb8, label %bb9, !dbg !13076

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_19e04ffb8ff30923e1e2debaf035124d, i64 38, ptr align 8 @alloc_15d0514513d1f32ff678727c0d5776e8) #20, !dbg !13077
  unreachable, !dbg !13077

bb9:                                              ; preds = %bb3
  store i8 0, ptr %is_word_final, align 1, !dbg !13076
  br label %bb14, !dbg !13076

bb8:                                              ; preds = %bb3
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %i, i64 2), !dbg !13078
  %_16.0 = extractvalue { i64, i1 } %5, 0, !dbg !13078
  %_16.1 = extractvalue { i64, i1 } %5, 1, !dbg !13078
  br i1 %_16.1, label %panic, label %bb10, !dbg !13078

bb14:                                             ; preds = %bb10, %bb9
  %6 = load i8, ptr %is_word_final, align 1, !dbg !13079
  %_17 = trunc i8 %6 to i1, !dbg !13079
  br i1 %_17, label %bb15, label %bb16, !dbg !13079

bb10:                                             ; preds = %bb8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %7 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h79f725d0f9a9852dE"(ptr align 1 %from.0, i64 %from.1, i64 %_16.0, ptr align 8 @alloc_ed9af1e4279834b9852d26f8d3d4b8c2) #19, !dbg !13080
  %_13.0 = extractvalue { ptr, i64 } %7, 0, !dbg !13080
  %_13.1 = extractvalue { ptr, i64 } %7, 1, !dbg !13080
; call core::str::<impl str>::chars
  %8 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hb2e95cef6820fa16E"(ptr align 1 %_13.0, i64 %_13.1) #19, !dbg !13081
  %_12.0 = extractvalue { ptr, ptr } %8, 0, !dbg !13081
  %_12.1 = extractvalue { ptr, ptr } %8, 1, !dbg !13081
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
  %_11 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17hcef374aacb8ca1f8E"(ptr %_12.0, ptr %_12.1) #19, !dbg !13082
  %9 = xor i1 %_11, true, !dbg !13083
  %10 = zext i1 %9 to i8, !dbg !13083
  store i8 %10, ptr %is_word_final, align 1, !dbg !13083
  br label %bb14, !dbg !13076

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_3274b17868dcd12126c89c982b6d4c8a) #20, !dbg !13078
  unreachable, !dbg !13078

bb16:                                             ; preds = %bb14
  store i32 963, ptr %_0, align 4, !dbg !13084
  br label %bb17, !dbg !13085

bb15:                                             ; preds = %bb14
  store i32 962, ptr %_0, align 4, !dbg !13086
  br label %bb17, !dbg !13085

bb17:                                             ; preds = %bb15, %bb16
  %11 = load i32, ptr %_0, align 4, !dbg !13087
  ret i32 %11, !dbg !13087
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
; Function Attrs: noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17hb6451dd30fbe164bE"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !13088 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %iter.dbg.spill = alloca [16 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !13092, !DIExpression(), !13096)
; call core::iter::traits::iterator::Iterator::skip_while
  call void @_ZN4core4iter6traits8iterator8Iterator10skip_while17h6c8fe23524f7a929E(ptr sret([24 x i8]) align 8 %_4, ptr %iter.0, ptr %iter.1) #19, !dbg !13097
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
  %1 = call i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha1e2debf19aa7813E"(ptr align 8 %_4) #19, !dbg !13097
  store i32 %1, ptr %_2, align 4, !dbg !13097
  %2 = load i32, ptr %_2, align 4, !dbg !13097
  %3 = icmp eq i32 %2, 1114112, !dbg !13097
  %_5 = select i1 %3, i64 0, i64 1, !dbg !13097
  %4 = icmp eq i64 %_5, 0, !dbg !13098
  br i1 %4, label %bb4, label %bb5, !dbg !13098

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !13099
  br label %bb6, !dbg !13099

bb5:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !13100
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !13100
    #dbg_declare(ptr %c.dbg.spill, !13093, !DIExpression(), !13101)
; call core::unicode::unicode_data::cased::lookup
  %5 = call zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17hc924efbcce64d2fcE(i32 signext %c) #19, !dbg !13102
  %6 = zext i1 %5 to i8, !dbg !13102
  store i8 %6, ptr %_0, align 1, !dbg !13102
  br label %bb6, !dbg !13102

bb6:                                              ; preds = %bb5, %bb4
  %7 = load i8, ptr %_0, align 1, !dbg !13103
  %8 = trunc i8 %7 to i1, !dbg !13103
  ret i1 %8, !dbg !13103

bb3:                                              ; No predecessors!
  unreachable, !dbg !13097
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
; Function Attrs: noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17hcef374aacb8ca1f8E"(ptr %iter.0, ptr %iter.1) unnamed_addr #0 !dbg !13104 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %iter.dbg.spill = alloca [16 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store ptr %iter.1, ptr %0, align 8
    #dbg_declare(ptr %iter.dbg.spill, !13108, !DIExpression(), !13112)
; call core::iter::traits::iterator::Iterator::skip_while
  call void @_ZN4core4iter6traits8iterator8Iterator10skip_while17ha8f7b67b0c9d095cE(ptr sret([24 x i8]) align 8 %_4, ptr %iter.0, ptr %iter.1) #19, !dbg !13113
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
  %1 = call i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h05254696377b7db8E"(ptr align 8 %_4) #19, !dbg !13113
  store i32 %1, ptr %_2, align 4, !dbg !13113
  %2 = load i32, ptr %_2, align 4, !dbg !13113
  %3 = icmp eq i32 %2, 1114112, !dbg !13113
  %_5 = select i1 %3, i64 0, i64 1, !dbg !13113
  %4 = icmp eq i64 %_5, 0, !dbg !13114
  br i1 %4, label %bb4, label %bb5, !dbg !13114

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !13115
  br label %bb6, !dbg !13115

bb5:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !13116
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !13116
    #dbg_declare(ptr %c.dbg.spill, !13109, !DIExpression(), !13117)
; call core::unicode::unicode_data::cased::lookup
  %5 = call zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17hc924efbcce64d2fcE(i32 signext %c) #19, !dbg !13118
  %6 = zext i1 %5 to i8, !dbg !13118
  store i8 %6, ptr %_0, align 1, !dbg !13118
  br label %bb6, !dbg !13118

bb6:                                              ; preds = %bb5, %bb4
  %7 = load i8, ptr %_0, align 1, !dbg !13119
  %8 = trunc i8 %7 to i1, !dbg !13119
  ret i1 %8, !dbg !13119

bb3:                                              ; No predecessors!
  unreachable, !dbg !13113
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h6ef02b37b9a12ce2E"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #1 !dbg !13120 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !13126, !DIExpression(), !13128)
  store ptr %_2, ptr %_2.dbg.spill, align 8
    #dbg_declare(ptr %_2.dbg.spill, !13127, !DIExpression(), !13129)
  %c = load i32, ptr %_2, align 4, !dbg !13130
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !13130
    #dbg_declare(ptr %c.dbg.spill, !13124, !DIExpression(), !13131)
; call core::unicode::unicode_data::case_ignorable::lookup
  %_0 = call zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17h763c807f6c8ed5d3E(i32 signext %c) #19, !dbg !13132
  ret i1 %_0, !dbg !13133
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h87fcd1a278770be1E"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #1 !dbg !13134 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !13140, !DIExpression(), !13142)
  store ptr %_2, ptr %_2.dbg.spill, align 8
    #dbg_declare(ptr %_2.dbg.spill, !13141, !DIExpression(), !13143)
  %c = load i32, ptr %_2, align 4, !dbg !13144
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !13144
    #dbg_declare(ptr %c.dbg.spill, !13138, !DIExpression(), !13145)
; call core::unicode::unicode_data::case_ignorable::lookup
  %_0 = call zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17h763c807f6c8ed5d3E(i32 signext %c) #19, !dbg !13146
  ret i1 %_0, !dbg !13147
}

; alloc::str::<impl str>::to_uppercase
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_uppercase17h1a9efdf013e53ceeE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !13148 {
start:
  %c.dbg.spill8 = alloca [4 x i8], align 4
  %b.dbg.spill6 = alloca [4 x i8], align 4
  %a.dbg.spill4 = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill2 = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_14 = alloca [12 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %iter = alloca [16 x i8], align 8
  %_4 = alloca [40 x i8], align 8
  %s = alloca [24 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !13150, !DIExpression(), !13167)
    #dbg_declare(ptr %s, !13151, !DIExpression(), !13168)
    #dbg_declare(ptr %iter, !13154, !DIExpression(), !13169)
; call alloc::str::convert_while_ascii
  call void @_ZN5alloc3str19convert_while_ascii17h66812988ffe18450E(ptr sret([40 x i8]) align 8 %_4, ptr align 1 %self.0, i64 %self.1, ptr @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17h27d67ee103102a11E") #19, !dbg !13170
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %_4, i64 24, i1 false), !dbg !13171
  %1 = getelementptr inbounds i8, ptr %_4, i64 24, !dbg !13172
  %rest.0 = load ptr, ptr %1, align 8, !dbg !13172
  %2 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !13172
  %rest.1 = load i64, ptr %2, align 8, !dbg !13172
  store ptr %rest.0, ptr %rest.dbg.spill, align 8, !dbg !13172
  %3 = getelementptr inbounds i8, ptr %rest.dbg.spill, i64 8, !dbg !13172
  store i64 %rest.1, ptr %3, align 8, !dbg !13172
    #dbg_declare(ptr %rest.dbg.spill, !13153, !DIExpression(), !13173)
; call core::str::<impl str>::chars
  %4 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hb2e95cef6820fa16E"(ptr align 1 %rest.0, i64 %rest.1) #19, !dbg !13174
  %_7.0 = extractvalue { ptr, ptr } %4, 0, !dbg !13174
  %_7.1 = extractvalue { ptr, ptr } %4, 1, !dbg !13174
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %5 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d1b7bb79df1a3d7E"(ptr %_7.0, ptr %_7.1) #19, !dbg !13174
  %_6.0 = extractvalue { ptr, ptr } %5, 0, !dbg !13174
  %_6.1 = extractvalue { ptr, ptr } %5, 1, !dbg !13174
  store ptr %_6.0, ptr %iter, align 8, !dbg !13174
  %6 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !13174
  store ptr %_6.1, ptr %6, align 8, !dbg !13174
  br label %bb4, !dbg !13175

bb4:                                              ; preds = %bb4.backedge, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %7 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7d4ca64fd8e14bdbE"(ptr align 8 %iter) #19, !dbg !13169
  store i32 %7, ptr %_10, align 4, !dbg !13169
  %8 = load i32, ptr %_10, align 4, !dbg !13169
  %9 = icmp eq i32 %8, 1114112, !dbg !13169
  %_12 = select i1 %9, i64 0, i64 1, !dbg !13169
  %10 = icmp eq i64 %_12, 0, !dbg !13169
  br i1 %10, label %bb8, label %bb7, !dbg !13169

bb8:                                              ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %s, i64 24, i1 false), !dbg !13176
  ret void, !dbg !13177

bb7:                                              ; preds = %bb4
  %c = load i32, ptr %_10, align 4, !dbg !13178
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !13178
    #dbg_declare(ptr %c.dbg.spill, !13156, !DIExpression(), !13179)
; call core::unicode::unicode_data::conversions::to_upper
  call void @_ZN4core7unicode12unicode_data11conversions8to_upper17hc934648acf96e392E(ptr sret([12 x i8]) align 4 %_14, i32 signext %c) #19, !dbg !13180
  %11 = getelementptr inbounds i32, ptr %_14, i64 1, !dbg !13181
  %12 = load i32, ptr %11, align 4, !dbg !13181
  %13 = icmp eq i32 %12, 0, !dbg !13181
  br i1 %13, label %bb13, label %bb10, !dbg !13181

bb13:                                             ; preds = %bb7
  %14 = getelementptr inbounds i32, ptr %_14, i64 0, !dbg !13182
  %a = load i32, ptr %14, align 4, !dbg !13182
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !13182
    #dbg_declare(ptr %a.dbg.spill, !13158, !DIExpression(), !13183)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %a) #19, !dbg !13184
  br label %bb4.backedge, !dbg !13184

bb4.backedge:                                     ; preds = %bb13, %bb12, %bb11
  br label %bb4, !dbg !13169

bb10:                                             ; preds = %bb7
  %15 = getelementptr inbounds i32, ptr %_14, i64 2, !dbg !13181
  %16 = load i32, ptr %15, align 4, !dbg !13181
  %17 = icmp eq i32 %16, 0, !dbg !13181
  br i1 %17, label %bb12, label %bb11, !dbg !13181

bb12:                                             ; preds = %bb10
  %18 = getelementptr inbounds i32, ptr %_14, i64 0, !dbg !13185
  %a1 = load i32, ptr %18, align 4, !dbg !13185
  store i32 %a1, ptr %a.dbg.spill2, align 4, !dbg !13185
    #dbg_declare(ptr %a.dbg.spill2, !13160, !DIExpression(), !13186)
  %19 = getelementptr inbounds i32, ptr %_14, i64 1, !dbg !13187
  %b = load i32, ptr %19, align 4, !dbg !13187
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !13187
    #dbg_declare(ptr %b.dbg.spill, !13162, !DIExpression(), !13188)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %a1) #19, !dbg !13189
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %b) #19, !dbg !13190
  br label %bb4.backedge, !dbg !13190

bb11:                                             ; preds = %bb10
  %20 = getelementptr inbounds i32, ptr %_14, i64 0, !dbg !13191
  %a3 = load i32, ptr %20, align 4, !dbg !13191
  store i32 %a3, ptr %a.dbg.spill4, align 4, !dbg !13191
    #dbg_declare(ptr %a.dbg.spill4, !13163, !DIExpression(), !13192)
  %21 = getelementptr inbounds i32, ptr %_14, i64 1, !dbg !13193
  %b5 = load i32, ptr %21, align 4, !dbg !13193
  store i32 %b5, ptr %b.dbg.spill6, align 4, !dbg !13193
    #dbg_declare(ptr %b.dbg.spill6, !13165, !DIExpression(), !13194)
  %22 = getelementptr inbounds i32, ptr %_14, i64 2, !dbg !13195
  %c7 = load i32, ptr %22, align 4, !dbg !13195
  store i32 %c7, ptr %c.dbg.spill8, align 4, !dbg !13195
    #dbg_declare(ptr %c.dbg.spill8, !13166, !DIExpression(), !13196)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %a3) #19, !dbg !13197
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %b5) #19, !dbg !13198
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %s, i32 signext %c7) #19, !dbg !13199
  br label %bb4.backedge, !dbg !13199

bb6:                                              ; No predecessors!
  unreachable, !dbg !13169
}

; alloc::str::<impl str>::into_string
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17h8096f41a5a555169E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !13200 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !13204, !DIExpression(), !13207)
; call alloc::boxed::convert::<impl core::convert::From<alloc::boxed::Box<str,A>> for alloc::boxed::Box<[u8],A>>::from
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed7convert131_$LT$impl$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$GT$4from17h2855a1b3981b3881E"(ptr align 1 %self.0, i64 %self.1) #19, !dbg !13208
  %slice.0 = extractvalue { ptr, i64 } %1, 0, !dbg !13208
  %slice.1 = extractvalue { ptr, i64 } %1, 1, !dbg !13208
  store ptr %slice.0, ptr %slice.dbg.spill, align 8, !dbg !13208
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8, !dbg !13208
  store i64 %slice.1, ptr %2, align 8, !dbg !13208
    #dbg_declare(ptr %slice.dbg.spill, !13205, !DIExpression(), !13209)
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17ha5ad211c85a97096E"(ptr sret([24 x i8]) align 8 %_3, ptr align 1 %slice.0, i64 %slice.1) #19, !dbg !13210
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_3) #19, !dbg !13211
  ret void, !dbg !13212
}

; alloc::str::from_boxed_utf8_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h16bc6e03dea23d89E(ptr align 1 %v.0, i64 %v.1) unnamed_addr #1 !dbg !13213 {
start:
  %v.dbg.spill = alloca [16 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13217, !DIExpression(), !13218)
; call alloc::boxed::Box<T,A>::into_raw
  %1 = call { ptr, i64 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17haa0de9018da4c18fE"(ptr align 1 %v.0, i64 %v.1) #19, !dbg !13219
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !13219
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !13219
; call alloc::boxed::Box<T>::from_raw
  %2 = call { ptr, i64 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h640c3af015d6226fE"(ptr %_3.0, i64 %_3.1) #19, !dbg !13220
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !13220
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !13220
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !13221
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !13221
  ret { ptr, i64 } %4, !dbg !13221
}

; alloc::str::convert_while_ascii
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc3str19convert_while_ascii17h66812988ffe18450E(ptr sret([40 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1, ptr %convert) unnamed_addr #1 !dbg !13222 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %value.dbg.spill.i13 = alloca [1 x i8], align 1
  %value.dbg.spill.i = alloca [1 x i8], align 1
  %val.dbg.spill.i10 = alloca [1 x i8], align 1
  %_0.i11 = alloca [1 x i8], align 1
  %val.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %j.dbg.spill7 = alloca [8 x i8], align 8
  %rest.dbg.spill = alloca [16 x i8], align 8
  %j.dbg.spill = alloca [8 x i8], align 8
  %out_chunk.dbg.spill = alloca [16 x i8], align 8
  %chunk.dbg.spill = alloca [16 x i8], align 8
  %convert.dbg.spill = alloca [8 x i8], align 8
  %s.dbg.spill = alloca [16 x i8], align 8
  %_84 = alloca [24 x i8], align 8
  %ascii_string = alloca [24 x i8], align 8
  %byte = alloca [1 x i8], align 1
  %_41 = alloca [16 x i8], align 8
  %iter1 = alloca [16 x i8], align 8
  %_23 = alloca [16 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %is_ascii = alloca [16 x i8], align 1
  %ascii_prefix_len = alloca [8 x i8], align 8
  %out_slice = alloca [16 x i8], align 8
  %out = alloca [24 x i8], align 8
  %slice = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !13231, !DIExpression(), !13264)
  store ptr %convert, ptr %convert.dbg.spill, align 8
    #dbg_declare(ptr %convert.dbg.spill, !13232, !DIExpression(), !13265)
    #dbg_declare(ptr %slice, !13233, !DIExpression(), !13266)
    #dbg_declare(ptr %out, !13235, !DIExpression(), !13267)
    #dbg_declare(ptr %out_slice, !13237, !DIExpression(), !13268)
    #dbg_declare(ptr %ascii_prefix_len, !13239, !DIExpression(), !13269)
    #dbg_declare(ptr %is_ascii, !13241, !DIExpression(), !13270)
    #dbg_declare(ptr %iter, !13250, !DIExpression(), !13271)
    #dbg_declare(ptr %iter1, !13254, !DIExpression(), !13272)
    #dbg_declare(ptr %byte, !13258, !DIExpression(), !13273)
    #dbg_declare(ptr %ascii_string, !13260, !DIExpression(), !13274)
  store ptr %s.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %s.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !13275)
  %2 = insertvalue { ptr, i64 } poison, ptr %s.0, 0, !dbg !13277
  %3 = insertvalue { ptr, i64 } %2, i64 %s.1, 1, !dbg !13277
  %4 = extractvalue { ptr, i64 } %3, 0, !dbg !13278
  %5 = extractvalue { ptr, i64 } %3, 1, !dbg !13278
  store ptr %4, ptr %slice, align 8, !dbg !13278
  %6 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13278
  store i64 %5, ptr %6, align 8, !dbg !13278
  %_6.0 = load ptr, ptr %slice, align 8, !dbg !13279
  %7 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13279
  %_6.1 = load i64, ptr %7, align 8, !dbg !13279
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %out, i64 %_6.1, ptr align 8 @alloc_28cedd3a8e0c6f009a156ddd894b61f9) #19, !dbg !13280
; call alloc::vec::Vec<T,A>::spare_capacity_mut
  %8 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h2d201c19034bbe04E"(ptr align 8 %out) #19, !dbg !13281
  %9 = extractvalue { ptr, i64 } %8, 0, !dbg !13281
  %10 = extractvalue { ptr, i64 } %8, 1, !dbg !13281
  store ptr %9, ptr %out_slice, align 8, !dbg !13281
  %11 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13281
  store i64 %10, ptr %11, align 8, !dbg !13281
  store i64 0, ptr %ascii_prefix_len, align 8, !dbg !13282
  call void @llvm.memset.p0.i64(ptr align 1 %is_ascii, i8 0, i64 16, i1 false), !dbg !13283
  br label %bb4, !dbg !13284

bb4:                                              ; preds = %bb29, %start
  %_13.0 = load ptr, ptr %slice, align 8, !dbg !13285
  %12 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13285
  %_13.1 = load i64, ptr %12, align 8, !dbg !13285
  %_11 = icmp uge i64 %_13.1, 16, !dbg !13285
  br i1 %_11, label %bb5, label %bb32.preheader, !dbg !13285

bb32.preheader:                                   ; preds = %bb4, %bb13
  br label %bb32, !dbg !13286

bb32:                                             ; preds = %bb32.preheader, %bb39
  %_62.0 = load ptr, ptr %slice, align 8, !dbg !13286
  %13 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13286
  %_62.1 = load i64, ptr %13, align 8, !dbg !13286
  %_60 = icmp ugt i64 %_62.1, 0, !dbg !13286
  br i1 %_60, label %bb33, label %bb42, !dbg !13286

bb5:                                              ; preds = %bb4
  %_15.0 = load ptr, ptr %slice, align 8, !dbg !13287
  %14 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13287
  %_15.1 = load i64, ptr %14, align 8, !dbg !13287
; call core::slice::<impl [T]>::get_unchecked
  %15 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17he116466d7d04cd9fE"(ptr align 1 %_15.0, i64 %_15.1, i64 16) #19, !dbg !13287
  %chunk.0 = extractvalue { ptr, i64 } %15, 0, !dbg !13287
  %chunk.1 = extractvalue { ptr, i64 } %15, 1, !dbg !13287
  store ptr %chunk.0, ptr %chunk.dbg.spill, align 8, !dbg !13287
  %16 = getelementptr inbounds i8, ptr %chunk.dbg.spill, i64 8, !dbg !13287
  store i64 %chunk.1, ptr %16, align 8, !dbg !13287
    #dbg_declare(ptr %chunk.dbg.spill, !13246, !DIExpression(), !13288)
  %_18.0 = load ptr, ptr %out_slice, align 8, !dbg !13289
  %17 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13289
  %_18.1 = load i64, ptr %17, align 8, !dbg !13289
; call core::slice::<impl [T]>::get_unchecked_mut
  %18 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d516fed878b15f8E"(ptr align 1 %_18.0, i64 %_18.1, i64 16) #19, !dbg !13289
  %out_chunk.0 = extractvalue { ptr, i64 } %18, 0, !dbg !13289
  %out_chunk.1 = extractvalue { ptr, i64 } %18, 1, !dbg !13289
  store ptr %out_chunk.0, ptr %out_chunk.dbg.spill, align 8, !dbg !13289
  %19 = getelementptr inbounds i8, ptr %out_chunk.dbg.spill, i64 8, !dbg !13289
  store i64 %out_chunk.1, ptr %19, align 8, !dbg !13289
    #dbg_declare(ptr %out_chunk.dbg.spill, !13248, !DIExpression(), !13290)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd370b081b84c2999E"(i64 0, i64 16) #19, !dbg !13291
  %_20.0 = extractvalue { i64, i64 } %20, 0, !dbg !13291
  %_20.1 = extractvalue { i64, i64 } %20, 1, !dbg !13291
  store i64 %_20.0, ptr %iter, align 8, !dbg !13291
  %21 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !13291
  store i64 %_20.1, ptr %21, align 8, !dbg !13291
  br label %bb9, !dbg !13292

bb9:                                              ; preds = %bb15, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %22 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h49d9c6ac9a42a61fE"(ptr align 8 %iter) #19, !dbg !13271
  %23 = extractvalue { i64, i64 } %22, 0, !dbg !13271
  %24 = extractvalue { i64, i64 } %22, 1, !dbg !13271
  store i64 %23, ptr %_23, align 8, !dbg !13271
  %25 = getelementptr inbounds i8, ptr %_23, i64 8, !dbg !13271
  store i64 %24, ptr %25, align 8, !dbg !13271
  %_25 = load i64, ptr %_23, align 8, !dbg !13271
  %26 = icmp eq i64 %_25, 0, !dbg !13271
  br i1 %26, label %bb13, label %bb12, !dbg !13271

bb13:                                             ; preds = %bb9
; call core::slice::<impl [T]>::iter
  %27 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h67482b2ffbe482fbE"(ptr align 1 %is_ascii, i64 16) #19, !dbg !13293
  %_35.0 = extractvalue { ptr, ptr } %27, 0, !dbg !13293
  %_35.1 = extractvalue { ptr, ptr } %27, 1, !dbg !13293
; call core::iter::traits::iterator::Iterator::map
  %28 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hf470657c387e232dE(ptr %_35.0, ptr %_35.1) #19, !dbg !13293
  %_34.0 = extractvalue { ptr, ptr } %28, 0, !dbg !13293
  %_34.1 = extractvalue { ptr, ptr } %28, 1, !dbg !13293
; call core::iter::traits::iterator::Iterator::sum
  %_33 = call i8 @_ZN4core4iter6traits8iterator8Iterator3sum17hca7ec4e879e11fecE(ptr %_34.0, ptr %_34.1) #19, !dbg !13293
  %_32 = zext i8 %_33 to i64, !dbg !13293
  %_31 = icmp ne i64 %_32, 16, !dbg !13293
  br i1 %_31, label %bb32.preheader, label %bb19, !dbg !13293

bb12:                                             ; preds = %bb9
  %29 = getelementptr inbounds i8, ptr %_23, i64 8, !dbg !13294
  %j6 = load i64, ptr %29, align 8, !dbg !13294
  store i64 %j6, ptr %j.dbg.spill7, align 8, !dbg !13294
    #dbg_declare(ptr %j.dbg.spill7, !13252, !DIExpression(), !13295)
  %_29 = icmp ult i64 %j6, %chunk.1, !dbg !13296
  br i1 %_29, label %bb14, label %panic8, !dbg !13296

bb19:                                             ; preds = %bb13
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %30 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd370b081b84c2999E"(i64 0, i64 16) #19, !dbg !13297
  %_38.0 = extractvalue { i64, i64 } %30, 0, !dbg !13297
  %_38.1 = extractvalue { i64, i64 } %30, 1, !dbg !13297
  store i64 %_38.0, ptr %iter1, align 8, !dbg !13297
  %31 = getelementptr inbounds i8, ptr %iter1, i64 8, !dbg !13297
  store i64 %_38.1, ptr %31, align 8, !dbg !13297
  br label %bb21, !dbg !13298

bb21:                                             ; preds = %bb28, %bb19
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %32 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h49d9c6ac9a42a61fE"(ptr align 8 %iter1) #19, !dbg !13272
  %33 = extractvalue { i64, i64 } %32, 0, !dbg !13272
  %34 = extractvalue { i64, i64 } %32, 1, !dbg !13272
  store i64 %33, ptr %_41, align 8, !dbg !13272
  %35 = getelementptr inbounds i8, ptr %_41, i64 8, !dbg !13272
  store i64 %34, ptr %35, align 8, !dbg !13272
  %_43 = load i64, ptr %_41, align 8, !dbg !13272
  %36 = icmp eq i64 %_43, 0, !dbg !13272
  br i1 %36, label %bb24, label %bb23, !dbg !13272

bb24:                                             ; preds = %bb21
  %37 = load i64, ptr %ascii_prefix_len, align 8, !dbg !13299
  %38 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %37, i64 16), !dbg !13299
  %_53.0 = extractvalue { i64, i1 } %38, 0, !dbg !13299
  %_53.1 = extractvalue { i64, i1 } %38, 1, !dbg !13299
  br i1 %_53.1, label %panic, label %bb29, !dbg !13299

bb23:                                             ; preds = %bb21
  %39 = getelementptr inbounds i8, ptr %_41, i64 8, !dbg !13300
  %j = load i64, ptr %39, align 8, !dbg !13300
  store i64 %j, ptr %j.dbg.spill, align 8, !dbg !13300
    #dbg_declare(ptr %j.dbg.spill, !13256, !DIExpression(), !13301)
  %_49 = icmp ult i64 %j, %chunk.1, !dbg !13302
  br i1 %_49, label %bb25, label %panic2, !dbg !13302

bb29:                                             ; preds = %bb24
  store i64 %_53.0, ptr %ascii_prefix_len, align 8, !dbg !13299
  %_55.0 = load ptr, ptr %slice, align 8, !dbg !13303
  %40 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13303
  %_55.1 = load i64, ptr %40, align 8, !dbg !13303
; call core::slice::<impl [T]>::get_unchecked
  %41 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hd1d01c16f281a5e0E"(ptr align 1 %_55.0, i64 %_55.1, i64 16) #19, !dbg !13303
  %_54.0 = extractvalue { ptr, i64 } %41, 0, !dbg !13303
  %_54.1 = extractvalue { ptr, i64 } %41, 1, !dbg !13303
  store ptr %_54.0, ptr %slice, align 8, !dbg !13304
  %42 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13304
  store i64 %_54.1, ptr %42, align 8, !dbg !13304
  %_58.0 = load ptr, ptr %out_slice, align 8, !dbg !13305
  %43 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13305
  %_58.1 = load i64, ptr %43, align 8, !dbg !13305
; call core::slice::<impl [T]>::get_unchecked_mut
  %44 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h70c16926b97fd5e8E"(ptr align 1 %_58.0, i64 %_58.1, i64 16) #19, !dbg !13305
  %_57.0 = extractvalue { ptr, i64 } %44, 0, !dbg !13305
  %_57.1 = extractvalue { ptr, i64 } %44, 1, !dbg !13305
  store ptr %_57.0, ptr %out_slice, align 8, !dbg !13306
  %45 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13306
  store i64 %_57.1, ptr %45, align 8, !dbg !13306
  br label %bb4, !dbg !13284

panic:                                            ; preds = %bb24
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_3fe01a8f0c7681d7141ec2caceee152c) #20, !dbg !13299
  unreachable, !dbg !13299

bb25:                                             ; preds = %bb23
  %_47 = getelementptr inbounds i8, ptr %chunk.0, i64 %j, !dbg !13307
  %_46 = call i8 %convert(ptr align 1 %_47) #19, !dbg !13308
  store i8 %_46, ptr %val.dbg.spill.i10, align 1
    #dbg_declare(ptr %val.dbg.spill.i10, !13309, !DIExpression(), !13316)
  store i8 %_46, ptr %value.dbg.spill.i, align 1
    #dbg_declare(ptr %value.dbg.spill.i, !13318, !DIExpression(), !13324)
  store i8 %_46, ptr %_0.i11, align 1, !dbg !13326
  %46 = load i8, ptr %_0.i11, align 1, !dbg !13327
  %_52 = icmp ult i64 %j, %out_chunk.1, !dbg !13328
  br i1 %_52, label %bb28, label %panic3, !dbg !13328

panic2:                                           ; preds = %bb23
  %chunk.1.lcssa22 = phi i64 [ %chunk.1, %bb23 ], !dbg !13287
  %j.lcssa = phi i64 [ %j, %bb23 ], !dbg !13300
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 %j.lcssa, i64 %chunk.1.lcssa22, ptr align 8 @alloc_e48e8a9597ed398ce02259aed66b0df2) #20, !dbg !13302
  unreachable, !dbg !13302

bb28:                                             ; preds = %bb25
  %47 = getelementptr inbounds i8, ptr %out_chunk.0, i64 %j, !dbg !13328
  store i8 %46, ptr %47, align 1, !dbg !13328
  br label %bb21, !dbg !13298

panic3:                                           ; preds = %bb25
  %out_chunk.1.lcssa19 = phi i64 [ %out_chunk.1, %bb25 ], !dbg !13289
  %j.lcssa16 = phi i64 [ %j, %bb25 ], !dbg !13300
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 %j.lcssa16, i64 %out_chunk.1.lcssa19, ptr align 8 @alloc_e12cbdefc2186a0a49cbe82704556654) #20, !dbg !13328
  unreachable, !dbg !13328

bb42:                                             ; preds = %bb34, %bb32
  %_82 = load i64, ptr %ascii_prefix_len, align 8, !dbg !13329
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %out, i64 %_82) #19, !dbg !13330
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_84, ptr align 8 %out, i64 24, i1 false), !dbg !13331
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E(ptr sret([24 x i8]) align 8 %ascii_string, ptr align 8 %_84) #19, !dbg !13332
  %_86.0 = load ptr, ptr %slice, align 8, !dbg !13333
  %48 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13333
  %_86.1 = load i64, ptr %48, align 8, !dbg !13333
; call core::str::converts::from_utf8_unchecked
  %49 = call { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h586e219a711934d3E(ptr align 1 %_86.0, i64 %_86.1) #19, !dbg !13334
  %rest.0 = extractvalue { ptr, i64 } %49, 0, !dbg !13334
  %rest.1 = extractvalue { ptr, i64 } %49, 1, !dbg !13334
  store ptr %rest.0, ptr %rest.dbg.spill, align 8, !dbg !13334
  %50 = getelementptr inbounds i8, ptr %rest.dbg.spill, i64 8, !dbg !13334
  store i64 %rest.1, ptr %50, align 8, !dbg !13334
    #dbg_declare(ptr %rest.dbg.spill, !13262, !DIExpression(), !13335)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %ascii_string, i64 24, i1 false), !dbg !13336
  %51 = getelementptr inbounds i8, ptr %_0, i64 24, !dbg !13336
  store ptr %rest.0, ptr %51, align 8, !dbg !13336
  %52 = getelementptr inbounds i8, ptr %51, i64 8, !dbg !13336
  store i64 %rest.1, ptr %52, align 8, !dbg !13336
  ret void, !dbg !13337

bb33:                                             ; preds = %bb32
  %53 = load ptr, ptr %slice, align 8, !dbg !13338
  %54 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13338
  %_65 = load i64, ptr %54, align 8, !dbg !13338
  %_66 = icmp ult i64 0, %_65, !dbg !13338
  br i1 %_66, label %bb34, label %panic4, !dbg !13338

bb34:                                             ; preds = %bb33
  %55 = load ptr, ptr %slice, align 8, !dbg !13338
  %56 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13338
  %57 = load i64, ptr %56, align 8, !dbg !13338
  %58 = getelementptr inbounds i8, ptr %55, i64 0, !dbg !13338
  %59 = load i8, ptr %58, align 1, !dbg !13338
  store i8 %59, ptr %byte, align 1, !dbg !13338
  %60 = load i8, ptr %byte, align 1, !dbg !13339
  %_67 = icmp ugt i8 %60, 127, !dbg !13339
  br i1 %_67, label %bb42, label %bb35, !dbg !13339

panic4:                                           ; preds = %bb33
  %_65.lcssa = phi i64 [ %_65, %bb33 ], !dbg !13338
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 0, i64 %_65.lcssa, ptr align 8 @alloc_7d12abe270608543095c00c24c20eff8) #20, !dbg !13338
  unreachable, !dbg !13338

bb35:                                             ; preds = %bb34
  %_69 = call i8 %convert(ptr align 1 %byte) #19, !dbg !13340
  store i8 %_69, ptr %val.dbg.spill.i, align 1
    #dbg_declare(ptr %val.dbg.spill.i, !13309, !DIExpression(), !13341)
  store i8 %_69, ptr %value.dbg.spill.i13, align 1
    #dbg_declare(ptr %value.dbg.spill.i13, !13318, !DIExpression(), !13343)
  store i8 %_69, ptr %_0.i, align 1, !dbg !13345
  %61 = load i8, ptr %_0.i, align 1, !dbg !13346
  %_72.0 = load ptr, ptr %out_slice, align 8, !dbg !13347
  %62 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13347
  %_72.1 = load i64, ptr %62, align 8, !dbg !13347
; call core::slice::<impl [T]>::get_unchecked_mut
  %_71 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h14560758a93dd05cE"(ptr align 1 %_72.0, i64 %_72.1, i64 0) #19, !dbg !13347
  store i8 %61, ptr %_71, align 1, !dbg !13348
  %63 = load i64, ptr %ascii_prefix_len, align 8, !dbg !13349
  %64 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %63, i64 1), !dbg !13349
  %_73.0 = extractvalue { i64, i1 } %64, 0, !dbg !13349
  %_73.1 = extractvalue { i64, i1 } %64, 1, !dbg !13349
  br i1 %_73.1, label %panic5, label %bb39, !dbg !13349

bb39:                                             ; preds = %bb35
  store i64 %_73.0, ptr %ascii_prefix_len, align 8, !dbg !13349
  %_75.0 = load ptr, ptr %slice, align 8, !dbg !13350
  %65 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13350
  %_75.1 = load i64, ptr %65, align 8, !dbg !13350
; call core::slice::<impl [T]>::get_unchecked
  %66 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hd1d01c16f281a5e0E"(ptr align 1 %_75.0, i64 %_75.1, i64 1) #19, !dbg !13350
  %_74.0 = extractvalue { ptr, i64 } %66, 0, !dbg !13350
  %_74.1 = extractvalue { ptr, i64 } %66, 1, !dbg !13350
  store ptr %_74.0, ptr %slice, align 8, !dbg !13351
  %67 = getelementptr inbounds i8, ptr %slice, i64 8, !dbg !13351
  store i64 %_74.1, ptr %67, align 8, !dbg !13351
  %_78.0 = load ptr, ptr %out_slice, align 8, !dbg !13352
  %68 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13352
  %_78.1 = load i64, ptr %68, align 8, !dbg !13352
; call core::slice::<impl [T]>::get_unchecked_mut
  %69 = call { ptr, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h70c16926b97fd5e8E"(ptr align 1 %_78.0, i64 %_78.1, i64 1) #19, !dbg !13352
  %_77.0 = extractvalue { ptr, i64 } %69, 0, !dbg !13352
  %_77.1 = extractvalue { ptr, i64 } %69, 1, !dbg !13352
  store ptr %_77.0, ptr %out_slice, align 8, !dbg !13353
  %70 = getelementptr inbounds i8, ptr %out_slice, i64 8, !dbg !13353
  store i64 %_77.1, ptr %70, align 8, !dbg !13353
  br label %bb32, !dbg !13354

panic5:                                           ; preds = %bb35
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_66270c0eb24b37d82ccb41e5f655ad61) #20, !dbg !13349
  unreachable, !dbg !13349

bb14:                                             ; preds = %bb12
  %71 = getelementptr inbounds i8, ptr %chunk.0, i64 %j6, !dbg !13296
  %_27 = load i8, ptr %71, align 1, !dbg !13296
  %_30 = icmp ult i64 %j6, 16, !dbg !13355
  br i1 %_30, label %bb15, label %panic9, !dbg !13355

panic8:                                           ; preds = %bb12
  %chunk.1.lcssa = phi i64 [ %chunk.1, %bb12 ], !dbg !13287
  %j6.lcssa = phi i64 [ %j6, %bb12 ], !dbg !13294
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 %j6.lcssa, i64 %chunk.1.lcssa, ptr align 8 @alloc_e1d6c52e6efc094399824cc5c4faa274) #20, !dbg !13296
  unreachable, !dbg !13296

bb15:                                             ; preds = %bb14
  %72 = getelementptr inbounds i8, ptr %is_ascii, i64 %j6, !dbg !13355
  %73 = icmp ule i8 %_27, 127, !dbg !13355
  %74 = zext i1 %73 to i8, !dbg !13355
  store i8 %74, ptr %72, align 1, !dbg !13355
  br label %bb9, !dbg !13292

panic9:                                           ; preds = %bb14
  %j6.lcssa15 = phi i64 [ %j6, %bb14 ], !dbg !13294
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64 %j6.lcssa15, i64 16, ptr align 8 @alloc_44d8ad110fab633cdaecb51ef75e82a7) #20, !dbg !13355
  unreachable, !dbg !13355

bb11:                                             ; No predecessors!
  unreachable, !dbg !13356
}

; alloc::str::convert_while_ascii::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i8 @"_ZN5alloc3str19convert_while_ascii28_$u7b$$u7b$closure$u7d$$u7d$17hd5bea76adf3287d2E"(ptr align 1 %_1, ptr align 1 %x) unnamed_addr #1 !dbg !13358 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !13364, !DIExpression(), !13365)
  store ptr %x, ptr %x.dbg.spill, align 8
    #dbg_declare(ptr %x.dbg.spill, !13363, !DIExpression(), !13366)
  %0 = load i8, ptr %x, align 1, !dbg !13367
  %_3 = trunc i8 %0 to i1, !dbg !13367
  %_0 = zext i1 %_3 to i8, !dbg !13367
  ret i8 %_0, !dbg !13368
}

; alloc::string::String::new
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String3new17hf82faab0a3bd0d40E(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #1 !dbg !13369 {
start:
  %_1 = alloca [24 x i8], align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h4dc4ab64060b6e8fE"(ptr sret([24 x i8]) align 8 %_1) #19, !dbg !13374
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false), !dbg !13375
  ret void, !dbg !13376
}

; alloc::string::String::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE(ptr sret([24 x i8]) align 8 %_0, i64 %capacity) unnamed_addr #1 !dbg !13377 {
start:
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !13382, !DIExpression(), !13383)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %_2, i64 %capacity, ptr align 8 @alloc_bfe1800c95e72e5697f38b2dfd7acff2) #19, !dbg !13384
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false), !dbg !13385
  ret void, !dbg !13386
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String9from_utf817h46e709e2886e8f0eE(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %vec) unnamed_addr #1 !dbg !13387 {
start:
  %_8 = alloca [40 x i8], align 8
  %e = alloca [16 x i8], align 8
  %_6 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
    #dbg_declare(ptr %vec, !13392, !DIExpression(), !13395)
    #dbg_declare(ptr %e, !13393, !DIExpression(), !13396)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %vec) #19, !dbg !13397
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !13397
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !13397
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817hdab18433f5fda5bdE(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !13398
  %_5 = load i64, ptr %_2, align 8, !dbg !13398
  %1 = icmp eq i64 %_5, 0, !dbg !13399
  br i1 %1, label %bb5, label %bb4, !dbg !13399

bb5:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %vec, i64 24, i1 false), !dbg !13400
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !13401
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 24, i1 false), !dbg !13401
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !13401
  br label %bb6, !dbg !13402

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13403
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %3, i64 16, i1 false), !dbg !13403
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %vec, i64 24, i1 false), !dbg !13404
  %4 = getelementptr inbounds i8, ptr %_8, i64 24, !dbg !13404
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %e, i64 16, i1 false), !dbg !13404
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_8, i64 40, i1 false), !dbg !13405
  br label %bb6, !dbg !13406

bb6:                                              ; preds = %bb4, %bb5
  ret void, !dbg !13407

bb3:                                              ; No predecessors!
  unreachable, !dbg !13398
}

; alloc::string::String::from_utf8_lossy
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String15from_utf8_lossy17h2d5a9c797a3f29c5E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !13408 {
start:
  %right_val.dbg.spill = alloca [8 x i8], align 8
  %left_val.dbg.spill = alloca [8 x i8], align 8
  %first_valid.dbg.spill = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_50 = alloca [24 x i8], align 8
  %chunk2 = alloca [32 x i8], align 8
  %_36 = alloca [32 x i8], align 8
  %iter1 = alloca [16 x i8], align 8
  %res = alloca [24 x i8], align 8
  %_24 = alloca [48 x i8], align 8
  %kind = alloca [1 x i8], align 1
  %_16 = alloca [8 x i8], align 8
  %_14 = alloca [8 x i8], align 8
  %chunk = alloca [32 x i8], align 8
  %_3 = alloca [32 x i8], align 8
  %iter = alloca [16 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13413, !DIExpression(), !13443)
    #dbg_declare(ptr %iter, !13414, !DIExpression(), !13444)
    #dbg_declare(ptr %chunk, !13422, !DIExpression(), !13445)
    #dbg_declare(ptr %kind, !13434, !DIExpression(), !13446)
    #dbg_declare(ptr %res, !13437, !DIExpression(), !13447)
    #dbg_declare(ptr %iter1, !13439, !DIExpression(), !13448)
    #dbg_declare(ptr %chunk2, !13441, !DIExpression(), !13449)
; call core::str::lossy::<impl [u8]>::utf8_chunks
  %1 = call { ptr, i64 } @"_ZN4core3str5lossy30_$LT$impl$u20$$u5b$u8$u5d$$GT$11utf8_chunks17h9f42c350fc2b892fE"(ptr align 1 %v.0, i64 %v.1) #19, !dbg !13450
  %2 = extractvalue { ptr, i64 } %1, 0, !dbg !13450
  %3 = extractvalue { ptr, i64 } %1, 1, !dbg !13450
  store ptr %2, ptr %iter, align 8, !dbg !13450
  %4 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !13450
  store i64 %3, ptr %4, align 8, !dbg !13450
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h039d4a0e8ae09119E"(ptr sret([32 x i8]) align 8 %_3, ptr align 8 %iter) #19, !dbg !13451
  %5 = load ptr, ptr %_3, align 8, !dbg !13451
  %6 = ptrtoint ptr %5 to i64, !dbg !13451
  %7 = icmp eq i64 %6, 0, !dbg !13451
  %_5 = select i1 %7, i64 0, i64 1, !dbg !13451
  %8 = icmp eq i64 %_5, 1, !dbg !13452
  br i1 %8, label %bb3, label %bb12, !dbg !13452

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chunk, ptr align 8 %_3, i64 32, i1 false), !dbg !13445
; call core::str::lossy::Utf8Chunk::valid
  %9 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hc95a3b730b2dec96E(ptr align 8 %chunk) #19, !dbg !13453
  %first_valid.0 = extractvalue { ptr, i64 } %9, 0, !dbg !13453
  %first_valid.1 = extractvalue { ptr, i64 } %9, 1, !dbg !13453
  store ptr %first_valid.0, ptr %first_valid.dbg.spill, align 8, !dbg !13453
  %10 = getelementptr inbounds i8, ptr %first_valid.dbg.spill, i64 8, !dbg !13453
  store i64 %first_valid.1, ptr %10, align 8, !dbg !13453
    #dbg_declare(ptr %first_valid.dbg.spill, !13420, !DIExpression(), !13454)
    #dbg_declare(ptr %first_valid.dbg.spill, !13428, !DIExpression(), !13455)
; call core::str::lossy::Utf8Chunk::invalid
  %11 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h61b99c7f2e978407E(ptr align 8 %chunk) #19, !dbg !13456
  %_10.0 = extractvalue { ptr, i64 } %11, 0, !dbg !13456
  %_10.1 = extractvalue { ptr, i64 } %11, 1, !dbg !13456
; call core::slice::<impl [T]>::is_empty
  %_9 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1 %_10.0, i64 %_10.1) #19, !dbg !13456
  br i1 %_9, label %bb7, label %bb11, !dbg !13456

bb12:                                             ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !13457
  store ptr inttoptr (i64 1 to ptr), ptr %12, align 8, !dbg !13457
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !13457
  store i64 0, ptr %13, align 8, !dbg !13457
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !13457
  br label %bb27, !dbg !13458

bb11:                                             ; preds = %bb3
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE(ptr sret([24 x i8]) align 8 %res, i64 %v.1) #19, !dbg !13460
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %res, ptr align 1 %first_valid.0, i64 %first_valid.1) #19, !dbg !13461
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %res, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13462
  %_34.0 = load ptr, ptr %iter, align 8, !dbg !13463
  %14 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !13463
  %_34.1 = load i64, ptr %14, align 8, !dbg !13463
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { ptr, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h34c67bcdb7a7f834E"(ptr align 1 %_34.0, i64 %_34.1) #19, !dbg !13463
  %_33.0 = extractvalue { ptr, i64 } %15, 0, !dbg !13463
  %_33.1 = extractvalue { ptr, i64 } %15, 1, !dbg !13463
  store ptr %_33.0, ptr %iter1, align 8, !dbg !13463
  %16 = getelementptr inbounds i8, ptr %iter1, i64 8, !dbg !13463
  store i64 %_33.1, ptr %16, align 8, !dbg !13463
  br label %bb17, !dbg !13464

bb7:                                              ; preds = %bb3
; call core::str::<impl str>::len
  %17 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE"(ptr align 1 %first_valid.0, i64 %first_valid.1) #19, !dbg !13465
  store i64 %17, ptr %_14, align 8, !dbg !13465
  store i64 %v.1, ptr %_16, align 8, !dbg !13466
  store ptr %_14, ptr %left_val.dbg.spill, align 8, !dbg !13467
    #dbg_declare(ptr %left_val.dbg.spill, !13430, !DIExpression(), !13468)
  store ptr %_16, ptr %right_val.dbg.spill, align 8, !dbg !13467
    #dbg_declare(ptr %right_val.dbg.spill, !13433, !DIExpression(), !13468)
  %_20 = load i64, ptr %_14, align 8, !dbg !13468
  %_21 = load i64, ptr %_16, align 8, !dbg !13468
  %_19 = icmp eq i64 %_20, %_21, !dbg !13468
  br i1 %_19, label %bb10, label %bb9, !dbg !13468

bb17:                                             ; preds = %bb17.backedge, %bb11
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h039d4a0e8ae09119E"(ptr sret([32 x i8]) align 8 %_36, ptr align 8 %iter1) #19, !dbg !13448
  %18 = load ptr, ptr %_36, align 8, !dbg !13448
  %19 = ptrtoint ptr %18 to i64, !dbg !13448
  %20 = icmp eq i64 %19, 0, !dbg !13448
  %_38 = select i1 %20, i64 0, i64 1, !dbg !13448
  %21 = icmp eq i64 %_38, 0, !dbg !13448
  br i1 %21, label %bb21, label %bb20, !dbg !13448

bb21:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_50, ptr align 8 %res, i64 24, i1 false), !dbg !13469
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_50, i64 24, i1 false), !dbg !13470
  br label %bb27, !dbg !13471

bb20:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chunk2, ptr align 8 %_36, i64 32, i1 false), !dbg !13472
; call core::str::lossy::Utf8Chunk::valid
  %22 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hc95a3b730b2dec96E(ptr align 8 %chunk2) #19, !dbg !13473
  %_42.0 = extractvalue { ptr, i64 } %22, 0, !dbg !13473
  %_42.1 = extractvalue { ptr, i64 } %22, 1, !dbg !13473
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %res, ptr align 1 %_42.0, i64 %_42.1) #19, !dbg !13474
; call core::str::lossy::Utf8Chunk::invalid
  %23 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h61b99c7f2e978407E(ptr align 8 %chunk2) #19, !dbg !13475
  %_45.0 = extractvalue { ptr, i64 } %23, 0, !dbg !13475
  %_45.1 = extractvalue { ptr, i64 } %23, 1, !dbg !13475
; call core::slice::<impl [T]>::is_empty
  %_44 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1 %_45.0, i64 %_45.1) #19, !dbg !13475
  br i1 %_44, label %bb17.backedge, label %bb26, !dbg !13475

bb17.backedge:                                    ; preds = %bb20, %bb26
  br label %bb17, !dbg !13448

bb27:                                             ; preds = %bb12, %bb10, %bb21
  ret void, !dbg !13471

bb26:                                             ; preds = %bb20
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %res, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13476
  br label %bb17.backedge, !dbg !13476

bb9:                                              ; preds = %bb7
  store i8 0, ptr %kind, align 1, !dbg !13468
  store ptr null, ptr %_24, align 8, !dbg !13446
  %24 = load i8, ptr %kind, align 1, !dbg !13446
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha889447e65b19718E(i8 zeroext %24, ptr align 8 %_14, ptr align 8 %_16, ptr align 8 %_24, ptr align 8 @alloc_084813e4c477ff533b4bda7eee02bed0) #20, !dbg !13446
  unreachable, !dbg !13446

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !13477
  store ptr %first_valid.0, ptr %25, align 8, !dbg !13477
  %26 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !13477
  store i64 %first_valid.1, ptr %26, align 8, !dbg !13477
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !13477
  br label %bb27, !dbg !13458

bb19:                                             ; No predecessors!
  unreachable, !dbg !13448
}

; alloc::string::String::from_utf8_lossy_owned
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String21from_utf8_lossy_owned17hda5953d0eefd385dE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %v) unnamed_addr #0 !dbg !13478 {
start:
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [24 x i8], align 8
  %string = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
    #dbg_declare(ptr %v, !13483, !DIExpression(), !13486)
    #dbg_declare(ptr %string, !13484, !DIExpression(), !13487)
  store i8 0, ptr %_9, align 1, !dbg !13488
  store i8 0, ptr %_8, align 1, !dbg !13488
  store i8 1, ptr %_9, align 1, !dbg !13488
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %v) #19, !dbg !13489
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !13489
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !13489
; call alloc::string::String::from_utf8_lossy
  call void @_ZN5alloc6string6String15from_utf8_lossy17h2d5a9c797a3f29c5E(ptr sret([24 x i8]) align 8 %_2, ptr align 1 %_3.0, i64 %_3.1) #19, !dbg !13488
  store i8 1, ptr %_8, align 1, !dbg !13490
  %1 = load i64, ptr %_2, align 8, !dbg !13488
  %2 = icmp eq i64 %1, -9223372036854775808, !dbg !13488
  %_5 = select i1 %2, i64 0, i64 1, !dbg !13488
  %3 = icmp eq i64 %_5, 1, !dbg !13491
  br i1 %3, label %bb3, label %bb4, !dbg !13491

bb3:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !13487
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %string, ptr align 8 %_2, i64 24, i1 false), !dbg !13487
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %string, i64 24, i1 false), !dbg !13492
  br label %bb9, !dbg !13493

bb4:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !13494
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %v, i64 24, i1 false), !dbg !13494
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_7) #19, !dbg !13495
  br label %bb9, !dbg !13495

bb9:                                              ; preds = %bb4, %bb3
  %4 = load i64, ptr %_2, align 8, !dbg !13496
  %5 = icmp eq i64 %4, -9223372036854775808, !dbg !13496
  %_10 = select i1 %5, i64 0, i64 1, !dbg !13496
  %6 = icmp eq i64 %_10, 1, !dbg !13496
  br i1 %6, label %bb7, label %bb6, !dbg !13496

bb7:                                              ; preds = %bb9
  %7 = load i8, ptr %_8, align 1, !dbg !13496
  %8 = trunc i8 %7 to i1, !dbg !13496
  br i1 %8, label %bb8, label %bb6, !dbg !13496

bb6:                                              ; preds = %bb8, %bb7, %bb9
  store i8 0, ptr %_8, align 1, !dbg !13496
  %9 = load i8, ptr %_9, align 1, !dbg !13496
  %10 = trunc i8 %9 to i1, !dbg !13496
  br i1 %10, label %bb10, label %bb5, !dbg !13496

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %_2) #19, !dbg !13496
  br label %bb6, !dbg !13496

bb5:                                              ; preds = %bb10, %bb6
  ret void, !dbg !13497

bb10:                                             ; preds = %bb6
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h3e5ac1a2fc7a82ffE"(ptr align 8 %v) #19, !dbg !13496
  br label %bb5, !dbg !13496

bb11:                                             ; No predecessors!
  unreachable, !dbg !13498
}

; alloc::string::String::from_utf16
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String10from_utf1617hdbb6471a5ae280d1E(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %v.0, i64 %v.1) unnamed_addr #0 !dbg !13499 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %0 = alloca [8 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_17 = alloca [24 x i8], align 8
  %c = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %iter = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %ret = alloca [24 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %1, align 8
    #dbg_declare(ptr %v.dbg.spill, !13504, !DIExpression(), !13513)
    #dbg_declare(ptr %ret, !13505, !DIExpression(), !13514)
    #dbg_declare(ptr %iter, !13507, !DIExpression(), !13515)
    #dbg_declare(ptr %c, !13509, !DIExpression(), !13516)
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE(ptr sret([24 x i8]) align 8 %ret, i64 %v.1) #19, !dbg !13517
; call core::slice::<impl [T]>::iter
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h84987636a86f045fE"(ptr align 2 %v.0, i64 %v.1) #19, !dbg !13518
  %_7.0 = extractvalue { ptr, ptr } %2, 0, !dbg !13518
  %_7.1 = extractvalue { ptr, ptr } %2, 1, !dbg !13518
; call core::iter::traits::iterator::Iterator::cloned
  %3 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17h4d577e09594f2dceE(ptr %_7.0, ptr %_7.1) #19, !dbg !13518
  %_6.0 = extractvalue { ptr, ptr } %3, 0, !dbg !13518
  %_6.1 = extractvalue { ptr, ptr } %3, 1, !dbg !13518
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h47d56a1480061c49E"(ptr sret([24 x i8]) align 8 %_5, ptr %_6.0, ptr %_6.1) #19, !dbg !13519
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf011668e8a7276adE"(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %_5) #19, !dbg !13519
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %_4, i64 24, i1 false), !dbg !13519
  br label %bb6, !dbg !13520

bb6:                                              ; preds = %bb11, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  %4 = call i64 @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h85da2e5b468c94bcE"(ptr align 8 %iter) #19, !dbg !13515
  store i64 %4, ptr %0, align 8, !dbg !13515
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %_9, ptr align 8 %0, i64 8, i1 false), !dbg !13515
  %5 = load i16, ptr %_9, align 4, !dbg !13515
  %6 = icmp eq i16 %5, 2, !dbg !13515
  %_11 = select i1 %6, i64 0, i64 1, !dbg !13515
  %7 = icmp eq i64 %_11, 0, !dbg !13515
  br i1 %7, label %bb10, label %bb9, !dbg !13515

bb10:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_17, ptr align 8 %ret, i64 24, i1 false), !dbg !13521
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_17, i64 24, i1 false), !dbg !13522
  br label %bb13, !dbg !13523

bb9:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %c, ptr align 4 %_9, i64 8, i1 false), !dbg !13524
  %8 = load i16, ptr %c, align 4, !dbg !13525
  %_13 = zext i16 %8 to i64, !dbg !13525
  %9 = icmp eq i64 %_13, 0, !dbg !13526
  br i1 %9, label %bb11, label %bb12, !dbg !13526

bb13:                                             ; preds = %bb12, %bb10
  ret void, !dbg !13523

bb11:                                             ; preds = %bb9
  %10 = getelementptr inbounds i8, ptr %c, i64 4, !dbg !13527
  %c1 = load i32, ptr %10, align 4, !dbg !13527
  store i32 %c1, ptr %c.dbg.spill, align 4, !dbg !13527
    #dbg_declare(ptr %c.dbg.spill, !13511, !DIExpression(), !13527)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %ret, i32 signext %c1) #19, !dbg !13528
  br label %bb6, !dbg !13528

bb12:                                             ; preds = %bb9
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !13529
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E"(ptr align 8 %ret) #19, !dbg !13530
  br label %bb13, !dbg !13530

bb8:                                              ; No predecessors!
  unreachable, !dbg !13515
}

; alloc::string::String::from_utf16_lossy
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %v.0, i64 %v.1) unnamed_addr #1 !dbg !13531 {
start:
  %v.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13536, !DIExpression(), !13537)
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h84987636a86f045fE"(ptr align 2 %v.0, i64 %v.1) #19, !dbg !13538
  %_5.0 = extractvalue { ptr, ptr } %1, 0, !dbg !13538
  %_5.1 = extractvalue { ptr, ptr } %1, 1, !dbg !13538
; call core::iter::traits::iterator::Iterator::cloned
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17h4d577e09594f2dceE(ptr %_5.0, ptr %_5.1) #19, !dbg !13538
  %_4.0 = extractvalue { ptr, ptr } %2, 0, !dbg !13538
  %_4.1 = extractvalue { ptr, ptr } %2, 1, !dbg !13538
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h47d56a1480061c49E"(ptr sret([24 x i8]) align 8 %_3, ptr %_4.0, ptr %_4.1) #19, !dbg !13539
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h7e93eb40b89a0ba1E(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %_3) #19, !dbg !13539
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h8c452d31131578e9E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2) #19, !dbg !13539
  ret void, !dbg !13540
}

; alloc::string::String::from_utf16_lossy::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local i32 @"_ZN5alloc6string6String16from_utf16_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h3e11a0c3a8d0b8b3E"(ptr align 1 %_1, i64 %0) unnamed_addr #1 !dbg !13541 {
start:
  %1 = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %r = alloca [8 x i8], align 4
  store i64 %0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %r, ptr align 8 %2, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !13547, !DIExpression(), !13548)
    #dbg_declare(ptr %r, !13546, !DIExpression(), !13549)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %r, i64 8, i1 false), !dbg !13550
  %3 = load i64, ptr %1, align 8, !dbg !13550
; call core::result::Result<T,E>::unwrap_or
  %_0 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h0a63d98d03a6edf3E"(i64 %3, i32 signext 65533) #19, !dbg !13550
  ret i32 %_0, !dbg !13551
}

; alloc::string::String::from_utf16le
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String12from_utf16le17h11d7a10b66f5c695E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !13552 {
start:
  %v.dbg.spill3 = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_14 = alloca [32 x i8], align 8
  %_13 = alloca [32 x i8], align 8
  %_12 = alloca [32 x i8], align 8
  %_11 = alloca [40 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %_6 = alloca [48 x i8], align 8
  %_5 = alloca [56 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13557, !DIExpression(), !13560)
  %_2 = urem i64 %v.1, 2, !dbg !13561
  %1 = icmp eq i64 %_2, 0, !dbg !13561
  br i1 %1, label %bb3, label %bb2, !dbg !13561

bb3:                                              ; preds = %start
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17h3b6984de3bf70dd0E"(ptr sret([48 x i8]) align 8 %_6, ptr align 1 %v.0, i64 %v.1) #19, !dbg !13562
  store i8 1, ptr %_5, align 8, !dbg !13563
  %2 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13563
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 48, i1 false), !dbg !13563
  %3 = load i8, ptr %_5, align 8, !dbg !13564
  %4 = trunc i8 %3 to i1, !dbg !13564
  br i1 %4, label %bb6, label %bb5, !dbg !13564

bb2:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !13565
  br label %bb14, !dbg !13566

bb5:                                              ; preds = %bb7, %bb6, %bb3
; call core::slice::<impl [T]>::array_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12array_chunks17h83611f2c5aee7a38E"(ptr sret([32 x i8]) align 8 %_14, ptr align 1 %v.0, i64 %v.1, ptr align 8 @alloc_2a70e4b3a45ca4c601ad735ef6b33a99) #19, !dbg !13567
; call core::iter::traits::iterator::Iterator::copied
  call void @_ZN4core4iter6traits8iterator8Iterator6copied17h3e969b455cdafb99E(ptr sret([32 x i8]) align 8 %_13, ptr align 8 %_14) #19, !dbg !13567
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h0488d6703bae2120E(ptr sret([32 x i8]) align 8 %_12, ptr align 8 %_13) #19, !dbg !13567
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h12b41fdca0170b9cE"(ptr sret([40 x i8]) align 8 %_11, ptr align 8 %_12) #19, !dbg !13568
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17hc4c9fc8e9539358fE(ptr sret([24 x i8]) align 8 %_10, ptr align 8 %_11) #19, !dbg !13568
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0d83318b72780e5aE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_10) #19, !dbg !13568
  br label %bb14, !dbg !13568

bb6:                                              ; preds = %bb3
  %5 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13569
  %_15.0 = load ptr, ptr %5, align 8, !dbg !13569
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !13569
  %_15.1 = load i64, ptr %6, align 8, !dbg !13569
  %7 = icmp eq i64 %_15.1, 0, !dbg !13569
  br i1 %7, label %bb7, label %bb5, !dbg !13569

bb7:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13570
  %9 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !13570
  %_16.0 = load ptr, ptr %9, align 8, !dbg !13570
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !13570
  %_16.1 = load i64, ptr %10, align 8, !dbg !13570
  %11 = icmp eq i64 %_16.1, 0, !dbg !13570
  br i1 %11, label %bb8, label %bb5, !dbg !13570

bb8:                                              ; preds = %bb7
  %12 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13571
  %13 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !13571
  %v.01 = load ptr, ptr %13, align 8, !dbg !13571
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !13571
  %v.12 = load i64, ptr %14, align 8, !dbg !13571
  store ptr %v.01, ptr %v.dbg.spill3, align 8, !dbg !13571
  %15 = getelementptr inbounds i8, ptr %v.dbg.spill3, i64 8, !dbg !13571
  store i64 %v.12, ptr %15, align 8, !dbg !13571
    #dbg_declare(ptr %v.dbg.spill3, !13558, !DIExpression(), !13572)
; call alloc::string::String::from_utf16
  call void @_ZN5alloc6string6String10from_utf1617hdbb6471a5ae280d1E(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %v.01, i64 %v.12) #19, !dbg !13573
  br label %bb14, !dbg !13573

bb14:                                             ; preds = %bb2, %bb5, %bb8
  ret void, !dbg !13566
}

; alloc::string::String::from_utf16le::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc6string6String12from_utf16le28_$u7b$$u7b$closure$u7d$$u7d$17haa7a00f08f5c7eb8E"(i16 zeroext %_2) unnamed_addr #1 !dbg !13574 {
start:
  %_2.dbg.spill = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !13578, !DIExpression(), !13580)
  store i16 %_2, ptr %_2.dbg.spill, align 2
    #dbg_declare(ptr %_2.dbg.spill, !13579, !DIExpression(), !13581)
  ret void, !dbg !13582
}

; alloc::string::String::from_utf16le_lossy
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String18from_utf16le_lossy17he667aa87439fe2daE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !13583 {
start:
  %_remainder.dbg.spill = alloca [8 x i8], align 8
  %v.dbg.spill6 = alloca [16 x i8], align 8
  %v.dbg.spill3 = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_15 = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 8
  %string = alloca [24 x i8], align 8
  %iter = alloca [32 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %_2 = alloca [56 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13588, !DIExpression(), !13598)
    #dbg_declare(ptr %iter, !13594, !DIExpression(), !13599)
    #dbg_declare(ptr %string, !13596, !DIExpression(), !13600)
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17h3b6984de3bf70dd0E"(ptr sret([48 x i8]) align 8 %_3, ptr align 1 %v.0, i64 %v.1) #19, !dbg !13601
  store i8 1, ptr %_2, align 8, !dbg !13602
  %1 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13602
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_3, i64 48, i1 false), !dbg !13602
  %2 = load i8, ptr %_2, align 8, !dbg !13603
  %3 = trunc i8 %2 to i1, !dbg !13603
  br i1 %3, label %bb3, label %bb2, !dbg !13603

bb2:                                              ; preds = %bb5, %bb3, %start
; call core::slice::<impl [T]>::array_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12array_chunks17h83611f2c5aee7a38E"(ptr sret([32 x i8]) align 8 %iter, ptr align 1 %v.0, i64 %v.1, ptr align 8 @alloc_37279426793bee973b1ffc46555e5638) #19, !dbg !13604
; call core::iter::traits::iterator::Iterator::by_ref
  %_18 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator6by_ref17h08950ff8578bebedE(ptr align 8 %iter) #19, !dbg !13605
; call core::iter::traits::iterator::Iterator::copied
  %_17 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator6copied17h2d2b7320ee875f1aE(ptr align 8 %_18) #19, !dbg !13605
; call core::iter::traits::iterator::Iterator::map
  %_16 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator3map17h832a46cb60f3481fE(ptr align 8 %_17) #19, !dbg !13605
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617ha7f27074dfcbfff2E"(ptr sret([16 x i8]) align 8 %_15, ptr align 8 %_16) #19, !dbg !13606
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17ha571727d7e3dd24dE(ptr sret([16 x i8]) align 8 %_14, ptr align 8 %_15) #19, !dbg !13606
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h4372d49cc1f3cbd3E(ptr sret([24 x i8]) align 8 %string, ptr align 8 %_14) #19, !dbg !13606
; call core::slice::iter::ArrayChunks<T,_>::remainder
  %4 = call { ptr, i64 } @"_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$9remainder17ha5e87bf7e7f163c8E"(ptr align 8 %iter) #19, !dbg !13607
  %_21.0 = extractvalue { ptr, i64 } %4, 0, !dbg !13607
  %_21.1 = extractvalue { ptr, i64 } %4, 1, !dbg !13607
; call core::slice::<impl [T]>::is_empty
  %_20 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1 %_21.0, i64 %_21.1) #19, !dbg !13607
  br i1 %_20, label %bb18, label %bb19, !dbg !13607

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13608
  %_24.0 = load ptr, ptr %5, align 8, !dbg !13608
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !13608
  %_24.1 = load i64, ptr %6, align 8, !dbg !13608
  %7 = icmp eq i64 %_24.1, 0, !dbg !13608
  br i1 %7, label %bb4, label %bb2, !dbg !13608

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13609
  %9 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !13609
  %_25.0 = load ptr, ptr %9, align 8, !dbg !13609
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !13609
  %_25.1 = load i64, ptr %10, align 8, !dbg !13609
  %11 = icmp eq i64 %_25.1, 0, !dbg !13609
  br i1 %11, label %bb7, label %bb5, !dbg !13609

bb7:                                              ; preds = %bb4
  %12 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13610
  %13 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !13610
  %v.01 = load ptr, ptr %13, align 8, !dbg !13610
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !13610
  %v.12 = load i64, ptr %14, align 8, !dbg !13610
  store ptr %v.01, ptr %v.dbg.spill3, align 8, !dbg !13610
  %15 = getelementptr inbounds i8, ptr %v.dbg.spill3, i64 8, !dbg !13610
  store i64 %v.12, ptr %15, align 8, !dbg !13610
    #dbg_declare(ptr %v.dbg.spill3, !13589, !DIExpression(), !13611)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %v.01, i64 %v.12) #19, !dbg !13612
  br label %bb20, !dbg !13612

bb5:                                              ; preds = %bb4
  %16 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13613
  %17 = getelementptr inbounds i8, ptr %16, i64 32, !dbg !13613
  %_26.0 = load ptr, ptr %17, align 8, !dbg !13613
  %18 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !13613
  %_26.1 = load i64, ptr %18, align 8, !dbg !13613
  %19 = icmp eq i64 %_26.1, 1, !dbg !13613
  br i1 %19, label %bb6, label %bb2, !dbg !13613

bb20:                                             ; preds = %bb18, %bb19, %bb6, %bb7
  ret void, !dbg !13614

bb6:                                              ; preds = %bb5
  %20 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13615
  %21 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !13615
  %v.04 = load ptr, ptr %21, align 8, !dbg !13615
  %22 = getelementptr inbounds i8, ptr %21, i64 8, !dbg !13615
  %v.15 = load i64, ptr %22, align 8, !dbg !13615
  store ptr %v.04, ptr %v.dbg.spill6, align 8, !dbg !13615
  %23 = getelementptr inbounds i8, ptr %v.dbg.spill6, i64 8, !dbg !13615
  store i64 %v.15, ptr %23, align 8, !dbg !13615
    #dbg_declare(ptr %v.dbg.spill6, !13591, !DIExpression(), !13616)
  %24 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13617
  %25 = getelementptr inbounds i8, ptr %24, i64 32, !dbg !13617
  %_27.0 = load ptr, ptr %25, align 8, !dbg !13617
  %26 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !13617
  %_27.1 = load i64, ptr %26, align 8, !dbg !13617
  %_remainder = getelementptr inbounds i8, ptr %_27.0, i64 0, !dbg !13617
  store ptr %_remainder, ptr %_remainder.dbg.spill, align 8, !dbg !13617
    #dbg_declare(ptr %_remainder.dbg.spill, !13593, !DIExpression(), !13618)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E(ptr sret([24 x i8]) align 8 %_10, ptr align 2 %v.04, i64 %v.15) #19, !dbg !13619
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17hb0f30b25982dfb41E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_10, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13619
  br label %bb20, !dbg !13619

bb19:                                             ; preds = %bb2
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17hb0f30b25982dfb41E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %string, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13620
  br label %bb20, !dbg !13620

bb18:                                             ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %string, i64 24, i1 false), !dbg !13621
  br label %bb20, !dbg !13622
}

; alloc::string::String::from_utf16le_lossy::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN5alloc6string6String18from_utf16le_lossy28_$u7b$$u7b$closure$u7d$$u7d$17haa8260feb9b9657cE"(ptr align 1 %_1, i64 %0) unnamed_addr #1 !dbg !13623 {
start:
  %1 = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %r = alloca [8 x i8], align 4
  store i64 %0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %r, ptr align 8 %2, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !13629, !DIExpression(), !13630)
    #dbg_declare(ptr %r, !13628, !DIExpression(), !13631)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %r, i64 8, i1 false), !dbg !13632
  %3 = load i64, ptr %1, align 8, !dbg !13632
; call core::result::Result<T,E>::unwrap_or
  %_0 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h0a63d98d03a6edf3E"(i64 %3, i32 signext 65533) #19, !dbg !13632
  ret i32 %_0, !dbg !13633
}

; alloc::string::String::from_utf16be
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String12from_utf16be17h1e24269c0ea3540bE(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !13634 {
start:
  %v.dbg.spill3 = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_14 = alloca [32 x i8], align 8
  %_13 = alloca [32 x i8], align 8
  %_12 = alloca [32 x i8], align 8
  %_11 = alloca [40 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %_6 = alloca [48 x i8], align 8
  %_5 = alloca [56 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13637, !DIExpression(), !13640)
  %_2 = urem i64 %v.1, 2, !dbg !13641
  %1 = icmp eq i64 %_2, 0, !dbg !13641
  br i1 %1, label %bb3, label %bb2, !dbg !13641

bb3:                                              ; preds = %start
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17h3b6984de3bf70dd0E"(ptr sret([48 x i8]) align 8 %_6, ptr align 1 %v.0, i64 %v.1) #19, !dbg !13642
  store i8 0, ptr %_5, align 8, !dbg !13643
  %2 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13643
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %_6, i64 48, i1 false), !dbg !13643
  %3 = load i8, ptr %_5, align 8, !dbg !13644
  %4 = trunc i8 %3 to i1, !dbg !13644
  br i1 %4, label %bb6, label %bb5, !dbg !13644

bb2:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8, !dbg !13645
  br label %bb14, !dbg !13646

bb5:                                              ; preds = %bb7, %bb6, %bb3
; call core::slice::<impl [T]>::array_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12array_chunks17h83611f2c5aee7a38E"(ptr sret([32 x i8]) align 8 %_14, ptr align 1 %v.0, i64 %v.1, ptr align 8 @alloc_cfe4cbf656be2b6f9e730fd865604915) #19, !dbg !13647
; call core::iter::traits::iterator::Iterator::copied
  call void @_ZN4core4iter6traits8iterator8Iterator6copied17h3e969b455cdafb99E(ptr sret([32 x i8]) align 8 %_13, ptr align 8 %_14) #19, !dbg !13647
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h2b793ebf5abc8fb7E(ptr sret([32 x i8]) align 8 %_12, ptr align 8 %_13) #19, !dbg !13647
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h283c6ab00d45c069E"(ptr sret([40 x i8]) align 8 %_11, ptr align 8 %_12) #19, !dbg !13648
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17hcabe6276b7c8417fE(ptr sret([24 x i8]) align 8 %_10, ptr align 8 %_11) #19, !dbg !13648
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd5438ebee1e7cff8E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_10) #19, !dbg !13648
  br label %bb14, !dbg !13648

bb6:                                              ; preds = %bb3
  %5 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13649
  %_15.0 = load ptr, ptr %5, align 8, !dbg !13649
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !13649
  %_15.1 = load i64, ptr %6, align 8, !dbg !13649
  %7 = icmp eq i64 %_15.1, 0, !dbg !13649
  br i1 %7, label %bb7, label %bb5, !dbg !13649

bb7:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13650
  %9 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !13650
  %_16.0 = load ptr, ptr %9, align 8, !dbg !13650
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !13650
  %_16.1 = load i64, ptr %10, align 8, !dbg !13650
  %11 = icmp eq i64 %_16.1, 0, !dbg !13650
  br i1 %11, label %bb8, label %bb5, !dbg !13650

bb8:                                              ; preds = %bb7
  %12 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !13651
  %13 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !13651
  %v.01 = load ptr, ptr %13, align 8, !dbg !13651
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !13651
  %v.12 = load i64, ptr %14, align 8, !dbg !13651
  store ptr %v.01, ptr %v.dbg.spill3, align 8, !dbg !13651
  %15 = getelementptr inbounds i8, ptr %v.dbg.spill3, i64 8, !dbg !13651
  store i64 %v.12, ptr %15, align 8, !dbg !13651
    #dbg_declare(ptr %v.dbg.spill3, !13638, !DIExpression(), !13652)
; call alloc::string::String::from_utf16
  call void @_ZN5alloc6string6String10from_utf1617hdbb6471a5ae280d1E(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %v.01, i64 %v.12) #19, !dbg !13653
  br label %bb14, !dbg !13653

bb14:                                             ; preds = %bb2, %bb5, %bb8
  ret void, !dbg !13646
}

; alloc::string::String::from_utf16be::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN5alloc6string6String12from_utf16be28_$u7b$$u7b$closure$u7d$$u7d$17hff31191c53916e37E"(i16 zeroext %_2) unnamed_addr #1 !dbg !13654 {
start:
  %_2.dbg.spill = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !13658, !DIExpression(), !13660)
  store i16 %_2, ptr %_2.dbg.spill, align 2
    #dbg_declare(ptr %_2.dbg.spill, !13659, !DIExpression(), !13661)
  ret void, !dbg !13662
}

; alloc::string::String::from_utf16be_lossy
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String18from_utf16be_lossy17h47088b5c1d958ac5E(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !13663 {
start:
  %_remainder.dbg.spill = alloca [8 x i8], align 8
  %v.dbg.spill6 = alloca [16 x i8], align 8
  %v.dbg.spill3 = alloca [16 x i8], align 8
  %v.dbg.spill = alloca [16 x i8], align 8
  %_15 = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 8
  %string = alloca [24 x i8], align 8
  %iter = alloca [32 x i8], align 8
  %_10 = alloca [24 x i8], align 8
  %_3 = alloca [48 x i8], align 8
  %_2 = alloca [56 x i8], align 8
  store ptr %v.0, ptr %v.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8
  store i64 %v.1, ptr %0, align 8
    #dbg_declare(ptr %v.dbg.spill, !13666, !DIExpression(), !13676)
    #dbg_declare(ptr %iter, !13672, !DIExpression(), !13677)
    #dbg_declare(ptr %string, !13674, !DIExpression(), !13678)
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17h3b6984de3bf70dd0E"(ptr sret([48 x i8]) align 8 %_3, ptr align 1 %v.0, i64 %v.1) #19, !dbg !13679
  store i8 0, ptr %_2, align 8, !dbg !13680
  %1 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13680
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_3, i64 48, i1 false), !dbg !13680
  %2 = load i8, ptr %_2, align 8, !dbg !13681
  %3 = trunc i8 %2 to i1, !dbg !13681
  br i1 %3, label %bb3, label %bb2, !dbg !13681

bb2:                                              ; preds = %bb5, %bb3, %start
; call core::slice::<impl [T]>::array_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12array_chunks17h83611f2c5aee7a38E"(ptr sret([32 x i8]) align 8 %iter, ptr align 1 %v.0, i64 %v.1, ptr align 8 @alloc_238cb96f85b9d7e10cadcd603f5f3e36) #19, !dbg !13682
; call core::iter::traits::iterator::Iterator::by_ref
  %_18 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator6by_ref17h08950ff8578bebedE(ptr align 8 %iter) #19, !dbg !13683
; call core::iter::traits::iterator::Iterator::copied
  %_17 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator6copied17h2d2b7320ee875f1aE(ptr align 8 %_18) #19, !dbg !13683
; call core::iter::traits::iterator::Iterator::map
  %_16 = call align 8 ptr @_ZN4core4iter6traits8iterator8Iterator3map17h98616424182e2e07E(ptr align 8 %_17) #19, !dbg !13683
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hbb124aef0346177bE"(ptr sret([16 x i8]) align 8 %_15, ptr align 8 %_16) #19, !dbg !13684
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h9fcd208123266eb4E(ptr sret([16 x i8]) align 8 %_14, ptr align 8 %_15) #19, !dbg !13684
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17hfa840492b54743baE(ptr sret([24 x i8]) align 8 %string, ptr align 8 %_14) #19, !dbg !13684
; call core::slice::iter::ArrayChunks<T,_>::remainder
  %4 = call { ptr, i64 } @"_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$9remainder17ha5e87bf7e7f163c8E"(ptr align 8 %iter) #19, !dbg !13685
  %_21.0 = extractvalue { ptr, i64 } %4, 0, !dbg !13685
  %_21.1 = extractvalue { ptr, i64 } %4, 1, !dbg !13685
; call core::slice::<impl [T]>::is_empty
  %_20 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1 %_21.0, i64 %_21.1) #19, !dbg !13685
  br i1 %_20, label %bb18, label %bb19, !dbg !13685

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13686
  %_24.0 = load ptr, ptr %5, align 8, !dbg !13686
  %6 = getelementptr inbounds i8, ptr %5, i64 8, !dbg !13686
  %_24.1 = load i64, ptr %6, align 8, !dbg !13686
  %7 = icmp eq i64 %_24.1, 0, !dbg !13686
  br i1 %7, label %bb4, label %bb2, !dbg !13686

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13687
  %9 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !13687
  %_25.0 = load ptr, ptr %9, align 8, !dbg !13687
  %10 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !13687
  %_25.1 = load i64, ptr %10, align 8, !dbg !13687
  %11 = icmp eq i64 %_25.1, 0, !dbg !13687
  br i1 %11, label %bb7, label %bb5, !dbg !13687

bb7:                                              ; preds = %bb4
  %12 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13688
  %13 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !13688
  %v.01 = load ptr, ptr %13, align 8, !dbg !13688
  %14 = getelementptr inbounds i8, ptr %13, i64 8, !dbg !13688
  %v.12 = load i64, ptr %14, align 8, !dbg !13688
  store ptr %v.01, ptr %v.dbg.spill3, align 8, !dbg !13688
  %15 = getelementptr inbounds i8, ptr %v.dbg.spill3, i64 8, !dbg !13688
  store i64 %v.12, ptr %15, align 8, !dbg !13688
    #dbg_declare(ptr %v.dbg.spill3, !13667, !DIExpression(), !13689)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E(ptr sret([24 x i8]) align 8 %_0, ptr align 2 %v.01, i64 %v.12) #19, !dbg !13690
  br label %bb20, !dbg !13690

bb5:                                              ; preds = %bb4
  %16 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13691
  %17 = getelementptr inbounds i8, ptr %16, i64 32, !dbg !13691
  %_26.0 = load ptr, ptr %17, align 8, !dbg !13691
  %18 = getelementptr inbounds i8, ptr %17, i64 8, !dbg !13691
  %_26.1 = load i64, ptr %18, align 8, !dbg !13691
  %19 = icmp eq i64 %_26.1, 1, !dbg !13691
  br i1 %19, label %bb6, label %bb2, !dbg !13691

bb20:                                             ; preds = %bb18, %bb19, %bb6, %bb7
  ret void, !dbg !13692

bb6:                                              ; preds = %bb5
  %20 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13693
  %21 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !13693
  %v.04 = load ptr, ptr %21, align 8, !dbg !13693
  %22 = getelementptr inbounds i8, ptr %21, i64 8, !dbg !13693
  %v.15 = load i64, ptr %22, align 8, !dbg !13693
  store ptr %v.04, ptr %v.dbg.spill6, align 8, !dbg !13693
  %23 = getelementptr inbounds i8, ptr %v.dbg.spill6, i64 8, !dbg !13693
  store i64 %v.15, ptr %23, align 8, !dbg !13693
    #dbg_declare(ptr %v.dbg.spill6, !13669, !DIExpression(), !13694)
  %24 = getelementptr inbounds i8, ptr %_2, i64 8, !dbg !13695
  %25 = getelementptr inbounds i8, ptr %24, i64 32, !dbg !13695
  %_27.0 = load ptr, ptr %25, align 8, !dbg !13695
  %26 = getelementptr inbounds i8, ptr %25, i64 8, !dbg !13695
  %_27.1 = load i64, ptr %26, align 8, !dbg !13695
  %_remainder = getelementptr inbounds i8, ptr %_27.0, i64 0, !dbg !13695
  store ptr %_remainder, ptr %_remainder.dbg.spill, align 8, !dbg !13695
    #dbg_declare(ptr %_remainder.dbg.spill, !13671, !DIExpression(), !13696)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E(ptr sret([24 x i8]) align 8 %_10, ptr align 2 %v.04, i64 %v.15) #19, !dbg !13697
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17hb0f30b25982dfb41E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_10, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13697
  br label %bb20, !dbg !13697

bb19:                                             ; preds = %bb2
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17hb0f30b25982dfb41E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %string, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13698
  br label %bb20, !dbg !13698

bb18:                                             ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %string, i64 24, i1 false), !dbg !13699
  br label %bb20, !dbg !13700
}

; alloc::string::String::from_utf16be_lossy::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define internal i32 @"_ZN5alloc6string6String18from_utf16be_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h3ad59939c93a76a4E"(ptr align 1 %_1, i64 %0) unnamed_addr #1 !dbg !13701 {
start:
  %1 = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [8 x i8], align 8
  %2 = alloca [8 x i8], align 8
  %r = alloca [8 x i8], align 4
  store i64 %0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %r, ptr align 8 %2, i64 8, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !13707, !DIExpression(), !13708)
    #dbg_declare(ptr %r, !13706, !DIExpression(), !13709)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 4 %r, i64 8, i1 false), !dbg !13710
  %3 = load i64, ptr %1, align 8, !dbg !13710
; call core::result::Result<T,E>::unwrap_or
  %_0 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h0a63d98d03a6edf3E"(i64 %3, i32 signext 65533) #19, !dbg !13710
  ret i32 %_0, !dbg !13711
}

; alloc::string::String::into_raw_parts
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String14into_raw_parts17ha38ec374ae3e139bE(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13712 {
start:
  %_2 = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !13722, !DIExpression(), !13723)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %self, i64 24, i1 false), !dbg !13724
; call alloc::vec::Vec<T,A>::into_raw_parts
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hc9f4e0c2ef59f3abE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %_2) #19, !dbg !13724
  ret void, !dbg !13725
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %bytes) unnamed_addr #1 !dbg !13726 {
start:
    #dbg_declare(ptr %bytes, !13729, !DIExpression(), !13730)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false), !dbg !13731
  ret void, !dbg !13732
}

; alloc::string::String::into_bytes
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String10into_bytes17he180ecf317f01a82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #1 !dbg !13733 {
start:
    #dbg_declare(ptr %self, !13738, !DIExpression(), !13739)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false), !dbg !13740
  ret void, !dbg !13741
}

; alloc::string::String::as_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc6string6String6as_str17hd771ad2969f56027E(ptr align 8 %self) unnamed_addr #1 !dbg !13742 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13745, !DIExpression(), !13746)
; call alloc::vec::Vec<T,A>::as_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h527846da8ec6e886E"(ptr align 8 %self) #19, !dbg !13747
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !13747
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !13747
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h586e219a711934d3E(ptr align 1 %_2.0, i64 %_2.1) #19, !dbg !13748
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !13748
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !13748
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !13749
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !13749
  ret { ptr, i64 } %3, !dbg !13749
}

; alloc::string::String::push_str
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %self, ptr align 1 %string.0, i64 %string.1) unnamed_addr #1 !dbg !13750 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %string.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13755, !DIExpression(), !13757)
  store ptr %string.0, ptr %string.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %string.dbg.spill, i64 8
  store i64 %string.1, ptr %0, align 8
    #dbg_declare(ptr %string.dbg.spill, !13756, !DIExpression(), !13758)
  store ptr %string.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %string.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !13759)
  %2 = insertvalue { ptr, i64 } poison, ptr %string.0, 0, !dbg !13761
  %3 = insertvalue { ptr, i64 } %2, i64 %string.1, 1, !dbg !13761
  %_4.0 = extractvalue { ptr, i64 } %3, 0, !dbg !13762
  %_4.1 = extractvalue { ptr, i64 } %3, 1, !dbg !13762
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE"(ptr align 8 %self, ptr align 1 %_4.0, i64 %_4.1, ptr align 8 @alloc_5f6f00486b3db66e0fcfb99068155af3) #19, !dbg !13763
  ret void, !dbg !13764
}

; alloc::string::String::reserve
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E(ptr align 8 %self, i64 %additional) unnamed_addr #1 !dbg !13765 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13770, !DIExpression(), !13772)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !13771, !DIExpression(), !13773)
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5877bb739ea4e293E"(ptr align 8 %self, i64 %additional, ptr align 8 @alloc_eb331bd363aabbd7fe50c17b00db1b63) #19, !dbg !13774
  ret void, !dbg !13775
}

; alloc::string::String::try_reserve
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN5alloc6string6String11try_reserve17hf00c6f094e40d823E(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !13776 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13781, !DIExpression(), !13783)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !13782, !DIExpression(), !13784)
; call alloc::vec::Vec<T,A>::try_reserve
  %0 = call { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h50abbc23c8017640E"(ptr align 8 %self, i64 %additional) #19, !dbg !13785
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !13785
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !13785
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !13786
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !13786
  ret { i64, i64 } %2, !dbg !13786
}

; alloc::string::String::try_reserve_exact
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN5alloc6string6String17try_reserve_exact17hb3ea394410cc3571E(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !13787 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13790, !DIExpression(), !13792)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !13791, !DIExpression(), !13793)
; call alloc::vec::Vec<T,A>::try_reserve_exact
  %0 = call { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h014a30c04e6f2f17E"(ptr align 8 %self, i64 %additional) #19, !dbg !13794
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !13794
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !13794
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !13795
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !13795
  ret { i64, i64 } %2, !dbg !13795
}

; alloc::string::String::push
; Function Attrs: inlinehint noredzone nounwind
define internal void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %self, i32 signext %ch) unnamed_addr #1 !dbg !13796 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %ch.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_12 = alloca [4 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13801, !DIExpression(), !13803)
  store i32 %ch, ptr %ch.dbg.spill, align 4
    #dbg_declare(ptr %ch.dbg.spill, !13802, !DIExpression(), !13804)
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hae25e11b0f9236eaE"(i32 signext %ch) #19, !dbg !13805
  %0 = icmp eq i64 %_3, 1, !dbg !13806
  br i1 %0, label %bb3, label %bb2, !dbg !13806

bb3:                                              ; preds = %start
  %_5 = trunc i32 %ch to i8, !dbg !13807
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h92d949171015b075E"(ptr align 8 %self, i8 zeroext %_5, ptr align 8 @alloc_ae56b34ad047abccc1fe4f6306545d3f) #19, !dbg !13808
  br label %bb6, !dbg !13808

bb2:                                              ; preds = %start
  call void @llvm.memset.p0.i64(ptr align 1 %_12, i8 0, i64 4, i1 false), !dbg !13809
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { ptr, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h60efe6d0691b73e0E"(i32 signext %ch, ptr align 1 %_12, i64 4) #19, !dbg !13810
  %_9.0 = extractvalue { ptr, i64 } %1, 0, !dbg !13810
  %_9.1 = extractvalue { ptr, i64 } %1, 1, !dbg !13810
  store ptr %_9.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %_9.1, ptr %2, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !13811)
  %_7.0 = extractvalue { ptr, i64 } %1, 0, !dbg !13810
  %_7.1 = extractvalue { ptr, i64 } %1, 1, !dbg !13810
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE"(ptr align 8 %self, ptr align 1 %_7.0, i64 %_7.1, ptr align 8 @alloc_261264039435881a8b2969e98c3da3d3) #19, !dbg !13813
  br label %bb6, !dbg !13813

bb6:                                              ; preds = %bb2, %bb3
  ret void, !dbg !13814
}

; <alloc::string::String::retain::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN85_$LT$alloc..string..String..retain..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83cd7c15c48b0206E"(ptr align 8 %self) unnamed_addr #0 !dbg !13815 {
start:
  %new_len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13827, !DIExpression(), !13830)
  %0 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !13831
  %_3 = load i64, ptr %0, align 8, !dbg !13831
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !13832
  %_4 = load i64, ptr %1, align 8, !dbg !13832
  %_5.0 = sub i64 %_3, %_4, !dbg !13831
  %_5.1 = icmp ult i64 %_3, %_4, !dbg !13831
  br i1 %_5.1, label %panic, label %bb1, !dbg !13831

bb1:                                              ; preds = %start
  store i64 %_5.0, ptr %new_len.dbg.spill, align 8, !dbg !13831
    #dbg_declare(ptr %new_len.dbg.spill, !13828, !DIExpression(), !13833)
  %_12 = load ptr, ptr %self, align 8, !dbg !13834
; call alloc::string::String::len
  %_7 = call i64 @_ZN5alloc6string6String3len17hec6fd4d7b1d2ed2eE(ptr align 8 %_12) #19, !dbg !13834
  %_6 = icmp ule i64 %_5.0, %_7, !dbg !13835
  br i1 %_6, label %bb4, label %bb3, !dbg !13835

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_9611bc68a938bae1a46be4c541ce042c) #20, !dbg !13831
  unreachable, !dbg !13831

bb3:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_f75f43df8b3ea1b7e01ee0bd50b84955, i64 41, ptr align 8 @alloc_0eac978c2a0b868eee1ab188c8627753) #20, !dbg !13836
  unreachable, !dbg !13836

bb4:                                              ; preds = %bb1
  %_13 = load ptr, ptr %self, align 8, !dbg !13837
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %_13, i64 %_5.0) #19, !dbg !13837
  ret void, !dbg !13838
}

; alloc::string::String::insert_bytes
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string6String12insert_bytes17ha16a817e18c4dc27E(ptr align 8 %self, i64 %idx, ptr align 1 %bytes.0, i64 %bytes.1) unnamed_addr #0 !dbg !13839 {
start:
  %self.dbg.spill.i22 = alloca [16 x i8], align 8
  %count.dbg.spill.i17 = alloca [8 x i8], align 8
  %self.dbg.spill.i18 = alloca [8 x i8], align 8
  %count.dbg.spill.i11 = alloca [8 x i8], align 8
  %self.dbg.spill.i12 = alloca [8 x i8], align 8
  %count.dbg.spill.i9 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %count.dbg.spill.i3 = alloca [8 x i8], align 8
  %dst.dbg.spill.i4 = alloca [8 x i8], align 8
  %src.dbg.spill.i5 = alloca [8 x i8], align 8
  %_9.i6 = alloca [1 x i8], align 1
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %amt.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %bytes.dbg.spill = alloca [16 x i8], align 8
  %idx.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13844, !DIExpression(), !13851)
  store i64 %idx, ptr %idx.dbg.spill, align 8
    #dbg_declare(ptr %idx.dbg.spill, !13845, !DIExpression(), !13852)
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i64 8
  store i64 %bytes.1, ptr %0, align 8
    #dbg_declare(ptr %bytes.dbg.spill, !13846, !DIExpression(), !13853)
; call alloc::string::String::len
  %len = call i64 @_ZN5alloc6string6String3len17hec6fd4d7b1d2ed2eE(ptr align 8 %self) #19, !dbg !13854
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !13854
    #dbg_declare(ptr %len.dbg.spill, !13847, !DIExpression(), !13855)
  store i64 %bytes.1, ptr %amt.dbg.spill, align 8, !dbg !13856
    #dbg_declare(ptr %amt.dbg.spill, !13849, !DIExpression(), !13857)
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5877bb739ea4e293E"(ptr align 8 %self, i64 %bytes.1, ptr align 8 @alloc_2dd14832ef12136d13f9f9c3e468a707) #19, !dbg !13858
; call alloc::vec::Vec<T,A>::as_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E"(ptr align 8 %self) #19, !dbg !13859
  store ptr %_11, ptr %self.dbg.spill.i18, align 8
    #dbg_declare(ptr %self.dbg.spill.i18, !6531, !DIExpression(), !13860)
  store i64 %idx, ptr %count.dbg.spill.i17, align 8
    #dbg_declare(ptr %count.dbg.spill.i17, !6536, !DIExpression(), !13862)
; call core::ub_checks::check_language_ub
  %_3.i19 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !13863
  br i1 %_3.i19, label %bb2.i21, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !13863

bb2.i21:                                          ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E"(ptr %_11, i64 %idx, i64 1) #19, !dbg !13864
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !13864

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit": ; preds = %start, %bb2.i21
  %_0.i20 = getelementptr inbounds i8, ptr %_11, i64 %idx, !dbg !13865
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !13866
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %idx, i64 %bytes.1), !dbg !13867
  %_17.0 = extractvalue { i64, i1 } %1, 0, !dbg !13867
  %_17.1 = extractvalue { i64, i1 } %1, 1, !dbg !13867
  br i1 %_17.1, label %panic, label %bb6, !dbg !13867

bb6:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit"
  store ptr %_14, ptr %self.dbg.spill.i12, align 8
    #dbg_declare(ptr %self.dbg.spill.i12, !11085, !DIExpression(), !13868)
  store i64 %_17.0, ptr %count.dbg.spill.i11, align 8
    #dbg_declare(ptr %count.dbg.spill.i11, !11090, !DIExpression(), !13870)
; call core::ub_checks::check_language_ub
  %_3.i13 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !13871
  br i1 %_3.i13, label %bb2.i15, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit16", !dbg !13871

bb2.i15:                                          ; preds = %bb6
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %_14, i64 %_17.0, i64 1) #19, !dbg !13872
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit16", !dbg !13872

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit16": ; preds = %bb6, %bb2.i15
  %_0.i14 = getelementptr inbounds i8, ptr %_14, i64 %_17.0, !dbg !13873
  %_19.0 = sub i64 %len, %idx, !dbg !13874
  %_19.1 = icmp ult i64 %len, %idx, !dbg !13874
  br i1 %_19.1, label %panic1, label %bb8, !dbg !13874

panic:                                            ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_67225652672aa7bd26b8efdb02f6545a) #20, !dbg !13867
  unreachable, !dbg !13867

bb8:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit16"
  store ptr %_0.i20, ptr %src.dbg.spill.i5, align 8
    #dbg_declare(ptr %src.dbg.spill.i5, !13875, !DIExpression(), !13880)
  store ptr %_0.i14, ptr %dst.dbg.spill.i4, align 8
    #dbg_declare(ptr %dst.dbg.spill.i4, !13878, !DIExpression(), !13882)
  store i64 %_19.0, ptr %count.dbg.spill.i3, align 8
    #dbg_declare(ptr %count.dbg.spill.i3, !13879, !DIExpression(), !13883)
; call core::ub_checks::check_language_ub
  %_4.i7 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !13884
  br i1 %_4.i7, label %bb2.i8, label %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit, !dbg !13884

bb2.i8:                                           ; preds = %bb8
  %2 = icmp eq i64 %_19.0, 0, !dbg !13886
  %3 = zext i1 %2 to i8, !dbg !13886
  store i8 %3, ptr %_9.i6, align 1, !dbg !13886
  %4 = load i8, ptr %_9.i6, align 1, !dbg !13887
  %5 = trunc i8 %4 to i1, !dbg !13887
; call core::intrinsics::copy::precondition_check
  call void @_ZN4core10intrinsics4copy18precondition_check17h22f1a0946e134f3bE(ptr %_0.i20, ptr %_0.i14, i64 1, i1 zeroext %5) #19, !dbg !13887
  br label %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit, !dbg !13887

_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit: ; preds = %bb8, %bb2.i8
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %_0.i14, ptr align 1 %_0.i20, i64 %_19.0, i1 false), !dbg !13888
  store ptr %bytes.0, ptr %self.dbg.spill.i22, align 8
  %6 = getelementptr inbounds i8, ptr %self.dbg.spill.i22, i64 8
  store i64 %bytes.1, ptr %6, align 8
    #dbg_declare(ptr %self.dbg.spill.i22, !2260, !DIExpression(), !13889)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_23 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !13891
  store ptr %_23, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11085, !DIExpression(), !13892)
  store i64 %idx, ptr %count.dbg.spill.i9, align 8
    #dbg_declare(ptr %count.dbg.spill.i9, !11090, !DIExpression(), !13894)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !13895
  br i1 %_3.i, label %bb2.i10, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !13895

bb2.i10:                                          ; preds = %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %_23, i64 %idx, i64 1) #19, !dbg !13896
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !13896

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit, %bb2.i10
  %_0.i = getelementptr inbounds i8, ptr %_23, i64 %idx, !dbg !13897
  store ptr %bytes.0, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !4091, !DIExpression(), !13898)
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !4094, !DIExpression(), !13900)
  store i64 %bytes.1, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !4095, !DIExpression(), !13901)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !13902
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !13902

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %bytes.0, ptr %_0.i, i64 1, i64 1, i64 %bytes.1) #19, !dbg !13903
  br label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !13903

_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit: ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", %bb2.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i, ptr align 1 %bytes.0, i64 %bytes.1, i1 false), !dbg !13904
  %7 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %bytes.1), !dbg !13905
  %_28.0 = extractvalue { i64, i1 } %7, 0, !dbg !13905
  %_28.1 = extractvalue { i64, i1 } %7, 1, !dbg !13905
  br i1 %_28.1, label %panic2, label %bb14, !dbg !13905

panic1:                                           ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit16"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_bd20691fc8adec093d36c3db10edeb84) #20, !dbg !13874
  unreachable, !dbg !13874

bb14:                                             ; preds = %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %self, i64 %_28.0) #19, !dbg !13906
  ret void, !dbg !13907

panic2:                                           ; preds = %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_a9538baca41d2286e1df2d6082a4139a) #20, !dbg !13905
  unreachable, !dbg !13905
}

; alloc::string::String::as_mut_vec
; Function Attrs: inlinehint noredzone nounwind
define internal align 8 ptr @_ZN5alloc6string6String10as_mut_vec17h4acfc07818fe6ac5E(ptr align 8 %self) unnamed_addr #1 !dbg !13908 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13913, !DIExpression(), !13914)
  ret ptr %self, !dbg !13915
}

; alloc::string::String::len
; Function Attrs: inlinehint noredzone nounwind
define internal i64 @_ZN5alloc6string6String3len17hec6fd4d7b1d2ed2eE(ptr align 8 %self) unnamed_addr #1 !dbg !13916 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13921, !DIExpression(), !13922)
; call alloc::vec::Vec<T,A>::len
  %_0 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self) #19, !dbg !13923
  ret i64 %_0, !dbg !13924
}

; alloc::string::String::into_boxed_str
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @_ZN5alloc6string6String14into_boxed_str17hfa7d7d177b854f93E(ptr align 8 %self) unnamed_addr #1 !dbg !13925 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  %_3 = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !13930, !DIExpression(), !13933)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 24, i1 false), !dbg !13934
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E"(ptr align 8 %_3, ptr align 8 @alloc_6d4c13210275430bedb64a9bec928024) #19, !dbg !13934
  %slice.0 = extractvalue { ptr, i64 } %0, 0, !dbg !13934
  %slice.1 = extractvalue { ptr, i64 } %0, 1, !dbg !13934
  store ptr %slice.0, ptr %slice.dbg.spill, align 8, !dbg !13934
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8, !dbg !13934
  store i64 %slice.1, ptr %1, align 8, !dbg !13934
    #dbg_declare(ptr %slice.dbg.spill, !13931, !DIExpression(), !13935)
; call alloc::str::from_boxed_utf8_unchecked
  %2 = call { ptr, i64 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h16bc6e03dea23d89E(ptr align 1 %slice.0, i64 %slice.1) #19, !dbg !13936
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !13936
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !13936
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !13937
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !13937
  ret { ptr, i64 } %4, !dbg !13937
}

; alloc::string::FromUtf8Error::as_bytes
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc6string13FromUtf8Error8as_bytes17h54bbddd9da620af4E(ptr align 8 %self) unnamed_addr #0 !dbg !13938 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !13944, !DIExpression(), !13945)
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h8701d00ae8a955aeE"(ptr align 8 %self, ptr align 8 @alloc_d8ada33d87f7034e38d41dac689ce480) #19, !dbg !13946
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !13946
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !13946
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !13947
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !13947
  ret { ptr, i64 } %2, !dbg !13947
}

; alloc::string::FromUtf8Error::into_utf8_lossy
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string13FromUtf8Error15into_utf8_lossy17h3c3cd93b6bd28f27E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13948 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  %chunk = alloca [32 x i8], align 8
  %_22 = alloca [32 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %_13 = alloca [24 x i8], align 8
  %v = alloca [24 x i8], align 8
  %res = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !13953, !DIExpression(), !13964)
    #dbg_declare(ptr %res, !13954, !DIExpression(), !13965)
    #dbg_declare(ptr %v, !13956, !DIExpression(), !13966)
    #dbg_declare(ptr %iter, !13960, !DIExpression(), !13967)
    #dbg_declare(ptr %chunk, !13962, !DIExpression(), !13968)
; call alloc::vec::Vec<T,A>::len
  %_4 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self) #19, !dbg !13969
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %v, i64 %_4, ptr align 8 @alloc_176ebab96aba90174b4232bc9c47a0d3) #19, !dbg !13970
  %_12 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !13971
; call core::str::error::Utf8Error::valid_up_to
  %_11 = call i64 @_ZN4core3str5error9Utf8Error11valid_up_to17h8bc2250ad0907e27E(ptr align 8 %_12) #19, !dbg !13971
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h0df5c7baa51e96abE"(ptr align 8 %self, i64 %_11, ptr align 8 @alloc_759e2e01d7b3588a0bc62fa5bfed5833) #19, !dbg !13972
  %_8.0 = extractvalue { ptr, i64 } %0, 0, !dbg !13972
  %_8.1 = extractvalue { ptr, i64 } %0, 1, !dbg !13972
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE"(ptr align 8 %v, ptr align 1 %_8.0, i64 %_8.1, ptr align 8 @alloc_b4a16a01cd856e7c4dcc831ea549de66) #19, !dbg !13973
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13, ptr align 8 %v, i64 24, i1 false), !dbg !13974
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E(ptr sret([24 x i8]) align 8 %res, ptr align 8 %_13) #19, !dbg !13975
  %_19 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !13976
; call core::str::error::Utf8Error::valid_up_to
  %_18 = call i64 @_ZN4core3str5error9Utf8Error11valid_up_to17h8bc2250ad0907e27E(ptr align 8 %_19) #19, !dbg !13976
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %1 = call { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17haf53587d6ad804b1E"(ptr align 8 %self, i64 %_18, ptr align 8 @alloc_ab92493c11d5b21eb87a07b7b9126afe) #19, !dbg !13977
  %_15.0 = extractvalue { ptr, i64 } %1, 0, !dbg !13977
  %_15.1 = extractvalue { ptr, i64 } %1, 1, !dbg !13977
; call core::str::lossy::<impl [u8]>::utf8_chunks
  %2 = call { ptr, i64 } @"_ZN4core3str5lossy30_$LT$impl$u20$$u5b$u8$u5d$$GT$11utf8_chunks17h9f42c350fc2b892fE"(ptr align 1 %_15.0, i64 %_15.1) #19, !dbg !13978
  %iter.0 = extractvalue { ptr, i64 } %2, 0, !dbg !13978
  %iter.1 = extractvalue { ptr, i64 } %2, 1, !dbg !13978
  store ptr %iter.0, ptr %iter.dbg.spill, align 8, !dbg !13978
  %3 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8, !dbg !13978
  store i64 %iter.1, ptr %3, align 8, !dbg !13978
    #dbg_declare(ptr %iter.dbg.spill, !13958, !DIExpression(), !13979)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %4 = call { ptr, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h34c67bcdb7a7f834E"(ptr align 1 %iter.0, i64 %iter.1) #19, !dbg !13980
  %_20.0 = extractvalue { ptr, i64 } %4, 0, !dbg !13980
  %_20.1 = extractvalue { ptr, i64 } %4, 1, !dbg !13980
  store ptr %_20.0, ptr %iter, align 8, !dbg !13980
  %5 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !13980
  store i64 %_20.1, ptr %5, align 8, !dbg !13980
  br label %bb11, !dbg !13981

bb11:                                             ; preds = %bb11.backedge, %start
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h039d4a0e8ae09119E"(ptr sret([32 x i8]) align 8 %_22, ptr align 8 %iter) #19, !dbg !13967
  %6 = load ptr, ptr %_22, align 8, !dbg !13967
  %7 = ptrtoint ptr %6 to i64, !dbg !13967
  %8 = icmp eq i64 %7, 0, !dbg !13967
  %_24 = select i1 %8, i64 0, i64 1, !dbg !13967
  %9 = icmp eq i64 %_24, 0, !dbg !13967
  br i1 %9, label %bb15, label %bb14, !dbg !13967

bb15:                                             ; preds = %bb11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %res, i64 24, i1 false), !dbg !13982
; call core::ptr::drop_in_place<alloc::string::FromUtf8Error>
  call void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h4655c8c2d5c9086eE"(ptr align 8 %self) #19, !dbg !13983
  ret void, !dbg !13984

bb14:                                             ; preds = %bb11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %chunk, ptr align 8 %_22, i64 32, i1 false), !dbg !13985
; call core::str::lossy::Utf8Chunk::valid
  %10 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hc95a3b730b2dec96E(ptr align 8 %chunk) #19, !dbg !13986
  %_28.0 = extractvalue { ptr, i64 } %10, 0, !dbg !13986
  %_28.1 = extractvalue { ptr, i64 } %10, 1, !dbg !13986
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %res, ptr align 1 %_28.0, i64 %_28.1) #19, !dbg !13987
; call core::str::lossy::Utf8Chunk::invalid
  %11 = call { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h61b99c7f2e978407E(ptr align 8 %chunk) #19, !dbg !13988
  %_31.0 = extractvalue { ptr, i64 } %11, 0, !dbg !13988
  %_31.1 = extractvalue { ptr, i64 } %11, 1, !dbg !13988
; call core::slice::<impl [T]>::is_empty
  %_30 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1 %_31.0, i64 %_31.1) #19, !dbg !13988
  br i1 %_30, label %bb11.backedge, label %bb20, !dbg !13988

bb11.backedge:                                    ; preds = %bb14, %bb20
  br label %bb11, !dbg !13967

bb20:                                             ; preds = %bb14
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %res, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i64 3) #19, !dbg !13989
  br label %bb11.backedge, !dbg !13989

bb13:                                             ; No predecessors!
  unreachable, !dbg !13967
}

; alloc::string::FromUtf8Error::into_bytes
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string13FromUtf8Error10into_bytes17h7a20b162a9e3cee6E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13990 {
start:
    #dbg_declare(ptr %self, !13995, !DIExpression(), !13996)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false), !dbg !13997
  ret void, !dbg !13998
}

; alloc::string::FromUtf8Error::utf8_error
; Function Attrs: noredzone nounwind
define dso_local void @_ZN5alloc6string13FromUtf8Error10utf8_error17hfdc33b529c4d4fa5E(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13999 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14004, !DIExpression(), !14005)
  %0 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !14006
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %0, i64 16, i1 false), !dbg !14006
  ret void, !dbg !14007
}

; <alloc::string::FromUtf8Error as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h239edf6e7a1be10cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !14008 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14013, !DIExpression(), !14015)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !14014, !DIExpression(), !14016)
  %_3 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !14017
; call <core::str::error::Utf8Error as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17heb4a47b0542153a5E"(ptr align 8 %_3, ptr align 8 %f) #19, !dbg !14018
  ret i1 %_0, !dbg !14019
}

; <alloc::string::FromUtf16Error as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Display$GT$3fmt17h577b46c4c8926c4dE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 !dbg !14020 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14026, !DIExpression(), !14028)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !14027, !DIExpression(), !14029)
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h401e3d670cc48d35E"(ptr align 1 @alloc_6fbea5e9c73aa07232d8e93629f5148f, i64 36, ptr align 8 %f) #19, !dbg !14030
  ret i1 %_0, !dbg !14031
}

; <alloc::string::FromUtf8Error as core::error::Error>::description
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..error..Error$GT$11description17h61cacdd39bfd8949E"(ptr align 8 %self) unnamed_addr #0 !dbg !14032 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14037, !DIExpression(), !14038)
  ret { ptr, i64 } { ptr @alloc_8f25c7227a5bf6e813f71dc7dbd57c20, i64 13 }, !dbg !14039
}

; <alloc::string::FromUtf16Error as core::error::Error>::description
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..error..Error$GT$11description17h62ef1651ff0bf058E"(ptr align 1 %self) unnamed_addr #0 !dbg !14040 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14045, !DIExpression(), !14046)
  ret { ptr, i64 } { ptr @alloc_c9030d29d46859fcf5c8ae281867725c, i64 14 }, !dbg !14047
}

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h2cb5040a3a55c9e2E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !14048 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  %_2 = alloca [24 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14053, !DIExpression(), !14054)
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h82cd77fbaeae87fdE"(ptr sret([24 x i8]) align 8 %_2, ptr align 8 %self, ptr align 8 @alloc_1ac06a49b23a927d7f574d6fe0595f78) #19, !dbg !14055
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false), !dbg !14056
  ret void, !dbg !14057
}

; <alloc::string::String as core::clone::Clone>::clone_from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$10clone_from17h55ba7fb1a80b2d8eE"(ptr align 8 %self, ptr align 8 %source) unnamed_addr #0 !dbg !14058 {
start:
  %source.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14062, !DIExpression(), !14064)
  store ptr %source, ptr %source.dbg.spill, align 8
    #dbg_declare(ptr %source.dbg.spill, !14063, !DIExpression(), !14065)
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone_from
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17hc28935a479ab173dE"(ptr align 8 %self, ptr align 8 %source, ptr align 8 @alloc_e68d78b1122174498773fa3fd0dbb2fb) #19, !dbg !14066
  ret void, !dbg !14067
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h1377f77d17d8a0e5E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !14068 {
start:
  %buf = alloca [24 x i8], align 8
    #dbg_declare(ptr %iter, !14071, !DIExpression(), !14074)
    #dbg_declare(ptr %buf, !14072, !DIExpression(), !14075)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf82faab0a3bd0d40E(ptr sret([24 x i8]) align 8 %buf) #19, !dbg !14076
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hce30aa336ccdfa2cE"(ptr align 8 %buf, ptr align 8 %iter) #19, !dbg !14077
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false), !dbg !14078
  ret void, !dbg !14079
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17ha1dce803413e712dE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !14080 {
start:
  %buf = alloca [24 x i8], align 8
    #dbg_declare(ptr %iter, !14082, !DIExpression(), !14085)
    #dbg_declare(ptr %buf, !14083, !DIExpression(), !14086)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf82faab0a3bd0d40E(ptr sret([24 x i8]) align 8 %buf) #19, !dbg !14087
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hacc5c1954a54f903E"(ptr align 8 %buf, ptr align 8 %iter) #19, !dbg !14088
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false), !dbg !14089
  ret void, !dbg !14090
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hb36d9acdf1cd8878E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !14091 {
start:
  %buf = alloca [24 x i8], align 8
    #dbg_declare(ptr %iter, !14093, !DIExpression(), !14096)
    #dbg_declare(ptr %buf, !14094, !DIExpression(), !14097)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf82faab0a3bd0d40E(ptr sret([24 x i8]) align 8 %buf) #19, !dbg !14098
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17he8e2ad9ef62ec0b6E"(ptr align 8 %buf, ptr align 8 %iter) #19, !dbg !14099
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false), !dbg !14100
  ret void, !dbg !14101
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hc1d0b6299887d162E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !14102 {
start:
  %buf = alloca [24 x i8], align 8
    #dbg_declare(ptr %iter, !14104, !DIExpression(), !14107)
    #dbg_declare(ptr %buf, !14105, !DIExpression(), !14108)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf82faab0a3bd0d40E(ptr sret([24 x i8]) align 8 %buf) #19, !dbg !14109
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h7fbea1e0b8d9c1b5E"(ptr align 8 %buf, ptr align 8 %iter) #19, !dbg !14110
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false), !dbg !14111
  ret void, !dbg !14112
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17he1c630a156a6adb6E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %iter) unnamed_addr #0 !dbg !14113 {
start:
  %buf = alloca [24 x i8], align 8
    #dbg_declare(ptr %iter, !14115, !DIExpression(), !14118)
    #dbg_declare(ptr %buf, !14116, !DIExpression(), !14119)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf82faab0a3bd0d40E(ptr sret([24 x i8]) align 8 %buf) #19, !dbg !14120
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h741a49c1525bdc3eE"(ptr align 8 %buf, ptr align 8 %iter) #19, !dbg !14121
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false), !dbg !14122
  ret void, !dbg !14123
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h741a49c1525bdc3eE"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #0 !dbg !14124 {
start:
  %lower_bound.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [48 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %iterator = alloca [48 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14128, !DIExpression(), !14134)
    #dbg_declare(ptr %iter, !14129, !DIExpression(), !14135)
    #dbg_declare(ptr %iterator, !14130, !DIExpression(), !14136)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha51080fc84ce996fE"(ptr sret([48 x i8]) align 8 %iterator, ptr align 8 %iter) #19, !dbg !14137
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h1bc7ca62f3cc9270E"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %iterator) #19, !dbg !14138
  %lower_bound = load i64, ptr %_5, align 8, !dbg !14139
  store i64 %lower_bound, ptr %lower_bound.dbg.spill, align 8, !dbg !14139
    #dbg_declare(ptr %lower_bound.dbg.spill, !14132, !DIExpression(), !14140)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E(ptr align 8 %self, i64 %lower_bound) #19, !dbg !14141
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %iterator, i64 48, i1 false), !dbg !14142
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h4b5968fd9e3fccaeE(ptr align 8 %_9, ptr align 8 %self) #19, !dbg !14142
  ret void, !dbg !14143
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h7fbea1e0b8d9c1b5E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #0 !dbg !14144 {
start:
  %lower_bound.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [48 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %iterator = alloca [48 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14148, !DIExpression(), !14154)
    #dbg_declare(ptr %iter, !14149, !DIExpression(), !14155)
    #dbg_declare(ptr %iterator, !14150, !DIExpression(), !14156)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hecb9f3243fc764d6E"(ptr sret([48 x i8]) align 8 %iterator, ptr align 8 %iter) #19, !dbg !14157
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h053ec0577368bca0E"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %iterator) #19, !dbg !14158
  %lower_bound = load i64, ptr %_5, align 8, !dbg !14159
  store i64 %lower_bound, ptr %lower_bound.dbg.spill, align 8, !dbg !14159
    #dbg_declare(ptr %lower_bound.dbg.spill, !14152, !DIExpression(), !14160)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E(ptr align 8 %self, i64 %lower_bound) #19, !dbg !14161
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %iterator, i64 48, i1 false), !dbg !14162
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17hc76f61ea01929b3aE(ptr align 8 %_9, ptr align 8 %self) #19, !dbg !14162
  ret void, !dbg !14163
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hacc5c1954a54f903E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #0 !dbg !14164 {
start:
  %lower_bound.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %iterator = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14168, !DIExpression(), !14174)
    #dbg_declare(ptr %iter, !14169, !DIExpression(), !14175)
    #dbg_declare(ptr %iterator, !14170, !DIExpression(), !14176)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9fb2051d3400fd15E"(ptr sret([16 x i8]) align 8 %iterator, ptr align 8 %iter) #19, !dbg !14177
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h872aa59146a7cfa9E"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %iterator) #19, !dbg !14178
  %lower_bound = load i64, ptr %_5, align 8, !dbg !14179
  store i64 %lower_bound, ptr %lower_bound.dbg.spill, align 8, !dbg !14179
    #dbg_declare(ptr %lower_bound.dbg.spill, !14172, !DIExpression(), !14180)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E(ptr align 8 %self, i64 %lower_bound) #19, !dbg !14181
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %iterator, i64 16, i1 false), !dbg !14182
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h0f7f73cc7291a65fE(ptr align 8 %_9, ptr align 8 %self) #19, !dbg !14182
  ret void, !dbg !14183
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hce30aa336ccdfa2cE"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #0 !dbg !14184 {
start:
  %lower_bound.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [24 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %iterator = alloca [24 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14188, !DIExpression(), !14194)
    #dbg_declare(ptr %iter, !14189, !DIExpression(), !14195)
    #dbg_declare(ptr %iterator, !14190, !DIExpression(), !14196)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd98a58555276bde9E"(ptr sret([24 x i8]) align 8 %iterator, ptr align 8 %iter) #19, !dbg !14197
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf81945ef99946e86E"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %iterator) #19, !dbg !14198
  %lower_bound = load i64, ptr %_5, align 8, !dbg !14199
  store i64 %lower_bound, ptr %lower_bound.dbg.spill, align 8, !dbg !14199
    #dbg_declare(ptr %lower_bound.dbg.spill, !14192, !DIExpression(), !14200)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E(ptr align 8 %self, i64 %lower_bound) #19, !dbg !14201
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %iterator, i64 24, i1 false), !dbg !14202
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h17b97303bd1a315bE(ptr align 8 %_9, ptr align 8 %self) #19, !dbg !14202
  ret void, !dbg !14203
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17he8e2ad9ef62ec0b6E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #0 !dbg !14204 {
start:
  %lower_bound.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %iterator = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14208, !DIExpression(), !14214)
    #dbg_declare(ptr %iter, !14209, !DIExpression(), !14215)
    #dbg_declare(ptr %iterator, !14210, !DIExpression(), !14216)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7a720c0ebbf447f9E"(ptr sret([16 x i8]) align 8 %iterator, ptr align 8 %iter) #19, !dbg !14217
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7a8fb8088cec46bcE"(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %iterator) #19, !dbg !14218
  %lower_bound = load i64, ptr %_5, align 8, !dbg !14219
  store i64 %lower_bound, ptr %lower_bound.dbg.spill, align 8, !dbg !14219
    #dbg_declare(ptr %lower_bound.dbg.spill, !14212, !DIExpression(), !14220)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E(ptr align 8 %self, i64 %lower_bound) #19, !dbg !14221
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %iterator, i64 16, i1 false), !dbg !14222
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17had574af78bd97fe3E(ptr align 8 %_9, ptr align 8 %self) #19, !dbg !14222
  ret void, !dbg !14223
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h1cd7c7d8df82a2caE"(ptr align 8 %_1, i32 signext %c) unnamed_addr #1 !dbg !14224 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !14230, !DIExpression(DW_OP_deref), !14231)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !14229, !DIExpression(), !14232)
  %_3 = load ptr, ptr %_1, align 8, !dbg !14233
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %_3, i32 signext %c) #19, !dbg !14233
  ret void, !dbg !14234
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h5426d63641e7abbcE"(ptr align 8 %_1, i32 signext %c) unnamed_addr #1 !dbg !14235 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !14241, !DIExpression(DW_OP_deref), !14242)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !14240, !DIExpression(), !14243)
  %_3 = load ptr, ptr %_1, align 8, !dbg !14244
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %_3, i32 signext %c) #19, !dbg !14244
  ret void, !dbg !14245
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h64c8678e89c969fbE"(ptr align 8 %_1, i32 signext %c) unnamed_addr #1 !dbg !14246 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !14252, !DIExpression(DW_OP_deref), !14253)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !14251, !DIExpression(), !14254)
  %_3 = load ptr, ptr %_1, align 8, !dbg !14255
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %_3, i32 signext %c) #19, !dbg !14255
  ret void, !dbg !14256
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h85427d273adde416E"(ptr align 8 %_1, i32 signext %c) unnamed_addr #1 !dbg !14257 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !14263, !DIExpression(DW_OP_deref), !14264)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !14262, !DIExpression(), !14265)
  %_3 = load ptr, ptr %_1, align 8, !dbg !14266
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %_3, i32 signext %c) #19, !dbg !14266
  ret void, !dbg !14267
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hc22b9a5f5cbf9e43E"(ptr align 8 %_1, i32 signext %c) unnamed_addr #1 !dbg !14268 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [8 x i8], align 8
  store ptr %_1, ptr %_1.dbg.spill, align 8
    #dbg_declare(ptr %_1.dbg.spill, !14274, !DIExpression(DW_OP_deref), !14275)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !14273, !DIExpression(), !14276)
  %_3 = load ptr, ptr %_1, align 8, !dbg !14277
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %_3, i32 signext %c) #19, !dbg !14277
  ret void, !dbg !14278
}

; <&alloc::string::String as core::str::pattern::Pattern>::into_searcher
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN73_$LT$$RF$alloc..string..String$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h815ac61c6afc7e29E"(ptr sret([104 x i8]) align 8 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !14279 {
start:
  %haystack.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14284, !DIExpression(), !14286)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i64 8
  store i64 %haystack.1, ptr %0, align 8
    #dbg_declare(ptr %haystack.dbg.spill, !14285, !DIExpression(), !14287)
; call <alloc::string::String as core::ops::index::Index<I>>::index
  %1 = call { ptr, i64 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hf73e75d89969b7ceE"(ptr align 8 %self, ptr align 8 @alloc_15c5d354754d7e2685cda16fd1b1c241) #19, !dbg !14288
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !14288
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !14288
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd2bd8ab69edc9fd1E"(ptr sret([104 x i8]) align 8 %_0, ptr align 1 %_3.0, i64 %_3.1, ptr align 1 %haystack.0, i64 %haystack.1) #19, !dbg !14289
  ret void, !dbg !14290
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h203b596375d19e57E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !14291 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14296, !DIExpression(), !14298)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !14297, !DIExpression(), !14299)
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h00d877d5957a177aE"(ptr align 8 %self) #19, !dbg !14300
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14300
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14300
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h401e3d670cc48d35E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f) #19, !dbg !14301
  ret i1 %_0, !dbg !14302
}

; <alloc::string::String as core::fmt::Debug>::fmt
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17hb50fda63c454e2f1E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 !dbg !14303 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14306, !DIExpression(), !14308)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !14307, !DIExpression(), !14309)
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h00d877d5957a177aE"(ptr align 8 %self) #19, !dbg !14310
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14310
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14310
; call <str as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e78d225f156be20E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f) #19, !dbg !14311
  ret i1 %_0, !dbg !14312
}

; <alloc::string::String as core::ops::arith::Add<&str>>::add
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17hb0f30b25982dfb41E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, ptr align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !14313 {
start:
    #dbg_declare(ptr %self, !14318, !DIExpression(), !14320)
  %other.dbg.spill = alloca [16 x i8], align 8
  store ptr %other.0, ptr %other.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %other.dbg.spill, i64 8
  store i64 %other.1, ptr %0, align 8
    #dbg_declare(ptr %other.dbg.spill, !14319, !DIExpression(), !14321)
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %self, ptr align 1 %other.0, i64 %other.1) #19, !dbg !14322
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 24, i1 false), !dbg !14323
  ret void, !dbg !14324
}

; <alloc::string::String as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hf73e75d89969b7ceE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !14325 {
start:
  %index.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14330, !DIExpression(), !14334)
    #dbg_declare(ptr %index.dbg.spill, !14331, !DIExpression(), !14335)
; call alloc::string::String::as_str
  %1 = call { ptr, i64 } @_ZN5alloc6string6String6as_str17hd771ad2969f56027E(ptr align 8 %self) #19, !dbg !14336
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !14336
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !14336
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFull>::index
  %2 = call { ptr, i64 } @"_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h4b496ea6cbc74f3bE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %0) #19, !dbg !14337
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !14337
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !14337
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14338
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !14338
  ret { ptr, i64 } %4, !dbg !14338
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint noredzone nounwind
define internal { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h00d877d5957a177aE"(ptr align 8 %self) unnamed_addr #1 !dbg !14339 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14342, !DIExpression(), !14343)
; call alloc::string::String::as_str
  %0 = call { ptr, i64 } @_ZN5alloc6string6String6as_str17hd771ad2969f56027E(ptr align 8 %self) #19, !dbg !14344
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14344
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14344
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14345
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !14345
  ret { ptr, i64 } %2, !dbg !14345
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hbbd0f04abc7c890fE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !14346 {
start:
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !14349, !DIExpression(), !14350)
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17he2a6fa28c2c08bf7E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) #19, !dbg !14351
  ret void, !dbg !14352
}

; <alloc::string::String as core::convert::From<alloc::boxed::Box<str>>>::from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$GT$$GT$$GT$4from17h9ad89ae0596fa466E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 !dbg !14353 {
start:
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !14356, !DIExpression(), !14357)
; call alloc::str::<impl str>::into_string
  call void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17h8096f41a5a555169E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) #19, !dbg !14358
  ret void, !dbg !14359
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<str>>::from
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc6string107_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$str$GT$$GT$4from17h62d302c685a3a656E"(ptr align 8 %s) unnamed_addr #0 !dbg !14360 {
start:
    #dbg_declare(ptr %s, !14363, !DIExpression(), !14364)
; call alloc::string::String::into_boxed_str
  %0 = call { ptr, i64 } @_ZN5alloc6string6String14into_boxed_str17hfa7d7d177b854f93E(ptr align 8 %s) #19, !dbg !14365
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14365
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14365
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14366
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !14366
  ret { ptr, i64 } %2, !dbg !14366
}

; <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h1a870786092f9a85E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %s) unnamed_addr #0 !dbg !14367 {
start:
    #dbg_declare(ptr %s, !14370, !DIExpression(), !14371)
; call alloc::borrow::Cow<B>::into_owned
  call void @"_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17he85c5a07ac1cd5c4E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %s) #19, !dbg !14372
  ret void, !dbg !14373
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17h9dac9878e3c76fe3E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %string) unnamed_addr #0 !dbg !14374 {
start:
    #dbg_declare(ptr %string, !14377, !DIExpression(), !14378)
; call alloc::string::String::into_bytes
  call void @_ZN5alloc6string6String10into_bytes17he180ecf317f01a82E(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %string) #19, !dbg !14379
  ret void, !dbg !14380
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h6e6ff1aa33bbb4faE"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !14381 {
start:
  %s.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14386, !DIExpression(), !14388)
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %0, align 8
    #dbg_declare(ptr %s.dbg.spill, !14387, !DIExpression(), !14389)
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) #19, !dbg !14390
  store i8 0, ptr %_0, align 1, !dbg !14391
  %1 = load i8, ptr %_0, align 1, !dbg !14392
  %2 = trunc i8 %1 to i1, !dbg !14392
  ret i1 %2, !dbg !14392
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint noredzone nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h0c4aaed91e329fa8E"(ptr align 8 %self, i32 signext %c) unnamed_addr #1 !dbg !14393 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14397, !DIExpression(), !14399)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !14398, !DIExpression(), !14400)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h0289da195591b545E(ptr align 8 %self, i32 signext %c) #19, !dbg !14401
  store i8 0, ptr %_0, align 1, !dbg !14402
  %0 = load i8, ptr %_0, align 1, !dbg !14403
  %1 = trunc i8 %0 to i1, !dbg !14403
  ret i1 %1, !dbg !14403
}

; <alloc::string::Drain as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
define dso_local zeroext i1 @"_ZN57_$LT$alloc..string..Drain$u20$as$u20$core..fmt..Debug$GT$3fmt17h353b067aabf8712cE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 !dbg !14404 {
start:
  %f.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_9 = alloca [16 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14416, !DIExpression(), !14418)
  store ptr %f, ptr %f.dbg.spill, align 8
    #dbg_declare(ptr %f.dbg.spill, !14417, !DIExpression(), !14419)
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17haf38507947b5ac8cE(ptr sret([24 x i8]) align 8 %_5, ptr align 8 %f, ptr align 1 @alloc_7c803916a094a5a08efe0ee16b3f38af, i64 5) #19, !dbg !14420
; call alloc::string::Drain::as_str
  %0 = call { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h2d3f85962d36b861E(ptr align 8 %self) #19, !dbg !14421
  %1 = extractvalue { ptr, i64 } %0, 0, !dbg !14421
  %2 = extractvalue { ptr, i64 } %0, 1, !dbg !14421
  store ptr %1, ptr %_9, align 8, !dbg !14421
  %3 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !14421
  store i64 %2, ptr %3, align 8, !dbg !14421
; call core::fmt::builders::DebugTuple::field
  %_3 = call align 8 ptr @_ZN4core3fmt8builders10DebugTuple5field17h1a192822c3a3497eE(ptr align 8 %_5, ptr align 1 %_9, ptr align 8 @vtable.8) #19, !dbg !14420
; call core::fmt::builders::DebugTuple::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hde08fd6bd9f90069E(ptr align 8 %_3) #19, !dbg !14420
  ret i1 %_0, !dbg !14422
}

; <alloc::string::Drain as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN62_$LT$alloc..string..Drain$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc3b98caee82d348E"(ptr align 8 %self) unnamed_addr #0 !dbg !14423 {
start:
  %self_vec.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_11 = alloca [40 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14429, !DIExpression(), !14432)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14433
  %_15 = load ptr, ptr %0, align 8, !dbg !14433
; call alloc::string::String::as_mut_vec
  %self_vec = call align 8 ptr @_ZN5alloc6string6String10as_mut_vec17h4acfc07818fe6ac5E(ptr align 8 %_15) #19, !dbg !14433
  store ptr %self_vec, ptr %self_vec.dbg.spill, align 8, !dbg !14433
    #dbg_declare(ptr %self_vec.dbg.spill, !14430, !DIExpression(), !14434)
  %1 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !14435
  %_5 = load i64, ptr %1, align 8, !dbg !14435
  %2 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !14436
  %_6 = load i64, ptr %2, align 8, !dbg !14436
  %_4 = icmp ule i64 %_5, %_6, !dbg !14435
  br i1 %_4, label %bb2, label %bb6, !dbg !14435

bb6:                                              ; preds = %bb4, %bb2, %start
  ret void, !dbg !14437

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !14438
  %_8 = load i64, ptr %3, align 8, !dbg !14438
; call alloc::vec::Vec<T,A>::len
  %_9 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self_vec) #19, !dbg !14439
  %_7 = icmp ule i64 %_8, %_9, !dbg !14438
  br i1 %_7, label %bb4, label %bb6, !dbg !14438

bb4:                                              ; preds = %bb2
  %4 = getelementptr inbounds i8, ptr %self, i64 24, !dbg !14440
  %_13 = load i64, ptr %4, align 8, !dbg !14440
  %5 = getelementptr inbounds i8, ptr %self, i64 32, !dbg !14441
  %_14 = load i64, ptr %5, align 8, !dbg !14441
; call alloc::vec::Vec<T,A>::drain
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17heb5cb9bbe7fb049bE"(ptr sret([40 x i8]) align 8 %_11, ptr align 8 %self_vec, i64 %_13, i64 %_14) #19, !dbg !14442
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<u8>>
  call void @"_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17hd26f3abebc46171bE"(ptr align 8 %_11) #19, !dbg !14443
  br label %bb6, !dbg !14443
}

; alloc::string::Drain::as_str
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h2d3f85962d36b861E(ptr align 8 %self) unnamed_addr #0 !dbg !14444 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14449, !DIExpression(), !14450)
; call core::str::iter::Chars::as_str
  %0 = call { ptr, i64 } @_ZN4core3str4iter5Chars6as_str17hbf9dcf7185d94eb6E(ptr align 8 %self) #19, !dbg !14451
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14451
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14451
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14452
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !14452
  ret { ptr, i64 } %2, !dbg !14452
}

; <alloc::string::Drain as core::convert::AsRef<str>>::as_ref
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN72_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h053943ef4fd55fa7E"(ptr align 8 %self) unnamed_addr #0 !dbg !14453 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14456, !DIExpression(), !14457)
; call alloc::string::Drain::as_str
  %0 = call { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h2d3f85962d36b861E(ptr align 8 %self) #19, !dbg !14458
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14458
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14458
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14459
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !14459
  ret { ptr, i64 } %2, !dbg !14459
}

; <alloc::string::Drain as core::convert::AsRef<[u8]>>::as_ref
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN81_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$GT$6as_ref17hccc97f5f6e14b985E"(ptr align 8 %self) unnamed_addr #0 !dbg !14460 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14465, !DIExpression(), !14466)
; call alloc::string::Drain::as_str
  %0 = call { ptr, i64 } @_ZN5alloc6string5Drain6as_str17h2d3f85962d36b861E(ptr align 8 %self) #19, !dbg !14467
  %_2.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14467
  %_2.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14467
  store ptr %_2.0, ptr %self.dbg.spill.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %_2.1, ptr %1, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !14468)
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !14467
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !14467
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14470
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !14470
  ret { ptr, i64 } %3, !dbg !14470
}

; <alloc::string::Drain as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN79_$LT$alloc..string..Drain$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4fb892bef40a2438E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !14471 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14476, !DIExpression(), !14477)
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbd90cf42bfbc2474E"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) #19, !dbg !14478
  ret void, !dbg !14479
}

; alloc::sync::arcinner_layout_for_value_layout
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @_ZN5alloc4sync32arcinner_layout_for_value_layout17h97edac8d781b0355E(i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !14480 {
start:
  %e.i = alloca [0 x i8], align 1
  %layout.dbg.spill = alloca [16 x i8], align 8
  %_6 = alloca [16 x i8], align 8
  %_4 = alloca [24 x i8], align 8
  %_3 = alloca [24 x i8], align 8
  store i64 %layout.0, ptr %layout.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i64 8
  store i64 %layout.1, ptr %0, align 8
    #dbg_declare(ptr %layout.dbg.spill, !14482, !DIExpression(), !14483)
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h7a35f6b498e7089bE() #19, !dbg !14484
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !14484
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !14484
  store i64 %2, ptr %_6, align 8, !dbg !14484
  %4 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !14484
  store i64 %3, ptr %4, align 8, !dbg !14484
; call core::alloc::layout::Layout::extend
  call void @_ZN4core5alloc6layout6Layout6extend17h60352684f0eebe17E(ptr sret([24 x i8]) align 8 %_4, ptr align 8 %_6, i64 %layout.0, i64 %layout.1) #19, !dbg !14484
    #dbg_declare(ptr %_3, !12854, !DIExpression(), !14485)
    #dbg_declare(ptr %_4, !12861, !DIExpression(), !14487)
    #dbg_declare(ptr %e.i, !12862, !DIExpression(), !14488)
  %5 = load i64, ptr %_4, align 8, !dbg !14489
  %6 = icmp eq i64 %5, 0, !dbg !14489
  %_2.i = select i1 %6, i64 1, i64 0, !dbg !14489
  %7 = icmp eq i64 %_2.i, 0, !dbg !14490
  br i1 %7, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha05559181cb40b44E.exit", label %bb2.i, !dbg !14490

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h32e9195b123d06eeE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i, ptr align 8 @vtable.1, ptr align 8 @alloc_0659adea0430e83450adcc76a42e8b50) #20, !dbg !14491
  unreachable, !dbg !14491

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha05559181cb40b44E.exit": ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 24, i1 false), !dbg !14492
; call core::alloc::layout::Layout::pad_to_align
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h2bc6557b92255774E(ptr align 8 %_3) #19, !dbg !14484
  %_0.0 = extractvalue { i64, i64 } %8, 0, !dbg !14484
  %_0.1 = extractvalue { i64, i64 } %8, 1, !dbg !14484
  %9 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !14493
  %10 = insertvalue { i64, i64 } %9, i64 %_0.1, 1, !dbg !14493
  ret { i64, i64 } %10, !dbg !14493
}

; <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbb029c7b50692847E"(ptr align 8 %self) unnamed_addr #0 !dbg !14494 {
start:
  %self.dbg.spill.i7 = alloca [16 x i8], align 8
  %self.dbg.spill.i6 = alloca [8 x i8], align 8
  %self.dbg.spill.i5 = alloca [8 x i8], align 8
  %self.dbg.spill.i3 = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %end.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %_0.i = alloca [8 x i8], align 8
  %to_drop.dbg.spill = alloca [16 x i8], align 8
  %drop_offset.dbg.spill = alloca [8 x i8], align 8
  %vec_ptr.dbg.spill = alloca [8 x i8], align 8
  %drop_ptr.dbg.spill = alloca [8 x i8], align 8
  %drop_len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_guard = alloca [8 x i8], align 8
  %vec = alloca [8 x i8], align 8
  %iter = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14499, !DIExpression(), !14520)
    #dbg_declare(ptr %iter, !14500, !DIExpression(), !14521)
    #dbg_declare(ptr %vec, !14504, !DIExpression(), !14522)
    #dbg_declare(ptr %_guard, !14510, !DIExpression(), !14523)
; call core::mem::take
  %0 = call { ptr, ptr } @_ZN4core3mem4take17hd620c28adb6a0c9eE(ptr align 8 %self) #19, !dbg !14524
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !14524
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !14524
  store ptr %1, ptr %iter, align 8, !dbg !14524
  %3 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !14524
  store ptr %2, ptr %3, align 8, !dbg !14524
  store ptr %iter, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !8535, !DIExpression(), !14525)
  %_6.i = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !14527
  store ptr %_6.i, ptr %self.dbg.spill.i6, align 8
    #dbg_declare(ptr %self.dbg.spill.i6, !8549, !DIExpression(), !14528)
  %end.i = load ptr, ptr %_6.i, align 8, !dbg !14530
  store ptr %end.i, ptr %end.dbg.spill.i, align 8, !dbg !14530
    #dbg_declare(ptr %end.dbg.spill.i, !8544, !DIExpression(), !14531)
  %_7.i = load ptr, ptr %iter, align 8, !dbg !14532
; call core::ptr::non_null::NonNull<T>::sub_ptr
  %4 = call i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hbdfc1a1cb4709f58E"(ptr %end.i, ptr %_7.i) #19, !dbg !14533
  store i64 %4, ptr %_0.i, align 8, !dbg !14533
  %5 = load i64, ptr %_0.i, align 8, !dbg !14534
  store i64 %5, ptr %drop_len.dbg.spill, align 8, !dbg !14535
    #dbg_declare(ptr %drop_len.dbg.spill, !14502, !DIExpression(), !14536)
  %6 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14537
  %7 = load ptr, ptr %6, align 8, !dbg !14537
  store ptr %7, ptr %vec, align 8, !dbg !14537
  br label %bb10, !dbg !14538

bb10:                                             ; preds = %start
  store ptr %self, ptr %_guard, align 8, !dbg !14539
  %8 = icmp eq i64 %5, 0, !dbg !14540
  br i1 %8, label %bb11, label %bb12, !dbg !14540

bb11:                                             ; preds = %bb10
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
  call void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17hd0cd1a95236e015dE"(ptr align 8 %_guard) #19, !dbg !14541
  br label %bb21, !dbg !14541

bb12:                                             ; preds = %bb10
; call core::slice::iter::Iter<T>::as_slice
  %9 = call { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h8f7b268f3d5c7a66E"(ptr align 8 %iter) #19, !dbg !14542
  %_23.0 = extractvalue { ptr, i64 } %9, 0, !dbg !14542
  %_23.1 = extractvalue { ptr, i64 } %9, 1, !dbg !14542
  store ptr %_23.0, ptr %self.dbg.spill.i7, align 8
  %10 = getelementptr inbounds i8, ptr %self.dbg.spill.i7, i64 8
  store i64 %_23.1, ptr %10, align 8
    #dbg_declare(ptr %self.dbg.spill.i7, !2260, !DIExpression(), !14543)
  store ptr %_23.0, ptr %drop_ptr.dbg.spill, align 8, !dbg !14542
    #dbg_declare(ptr %drop_ptr.dbg.spill, !14512, !DIExpression(), !14545)
  store ptr %vec, ptr %self.dbg.spill.i3, align 8
    #dbg_declare(ptr %self.dbg.spill.i3, !14546, !DIExpression(), !14553)
  %_3.i4 = load ptr, ptr %vec, align 8, !dbg !14555
  store ptr %_3.i4, ptr %self.dbg.spill.i5, align 8
    #dbg_declare(ptr %self.dbg.spill.i5, !14556, !DIExpression(), !14562)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %vec_ptr = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %_3.i4) #19, !dbg !14564
  store ptr %vec_ptr, ptr %vec_ptr.dbg.spill, align 8, !dbg !14564
    #dbg_declare(ptr %vec_ptr.dbg.spill, !14514, !DIExpression(), !14565)
; call core::ptr::const_ptr::<impl *const T>::sub_ptr
  %drop_offset = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hfe108b1d41dbe45fE"(ptr %_23.0, ptr %vec_ptr) #19, !dbg !14566
  store i64 %drop_offset, ptr %drop_offset.dbg.spill, align 8, !dbg !14566
    #dbg_declare(ptr %drop_offset.dbg.spill, !14516, !DIExpression(), !14567)
  store ptr %vec_ptr, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !11085, !DIExpression(), !14568)
  store i64 %drop_offset, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !11090, !DIExpression(), !14570)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14571
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !14571

bb2.i:                                            ; preds = %bb12
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %vec_ptr, i64 %drop_offset, i64 1) #19, !dbg !14572
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !14572

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %bb12, %bb2.i
  %_0.i2 = getelementptr inbounds i8, ptr %vec_ptr, i64 %drop_offset, !dbg !14573
; call core::ptr::slice_from_raw_parts_mut
  %11 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbe29bced288f50aaE(ptr %_0.i2, i64 %5) #19, !dbg !14574
  %to_drop.0 = extractvalue { ptr, i64 } %11, 0, !dbg !14574
  %to_drop.1 = extractvalue { ptr, i64 } %11, 1, !dbg !14574
  store ptr %to_drop.0, ptr %to_drop.dbg.spill, align 8, !dbg !14574
  %12 = getelementptr inbounds i8, ptr %to_drop.dbg.spill, i64 8, !dbg !14574
  store i64 %to_drop.1, ptr %12, align 8, !dbg !14574
    #dbg_declare(ptr %to_drop.dbg.spill, !14518, !DIExpression(), !14575)
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
  call void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17hd0cd1a95236e015dE"(ptr align 8 %_guard) #19, !dbg !14541
  br label %bb21, !dbg !14541

bb21:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", %bb11
  ret void, !dbg !14576

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable

bb7:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable
}

; <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he8242861257fb4f1E"(ptr align 8 %self) unnamed_addr #0 !dbg !14577 {
start:
  %count.dbg.spill.i7 = alloca [8 x i8], align 8
  %self.dbg.spill.i8 = alloca [8 x i8], align 8
  %self.dbg.spill.i6 = alloca [8 x i8], align 8
  %self.dbg.spill.i4 = alloca [8 x i8], align 8
  %count.dbg.spill.i2 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %_9.i = alloca [1 x i8], align 1
  %dst.dbg.spill = alloca [8 x i8], align 8
  %src.dbg.spill = alloca [8 x i8], align 8
  %tail.dbg.spill = alloca [8 x i8], align 8
  %start.dbg.spill = alloca [8 x i8], align 8
  %source_vec.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14583, !DIExpression(), !14594)
  %_21 = load ptr, ptr %self, align 8, !dbg !14595
  %0 = getelementptr inbounds i8, ptr %_21, i64 32, !dbg !14595
  %_3 = load i64, ptr %0, align 8, !dbg !14595
  %_2 = icmp ugt i64 %_3, 0, !dbg !14595
  br i1 %_2, label %bb1, label %bb11, !dbg !14595

bb11:                                             ; preds = %bb10, %start
  ret void, !dbg !14596

bb1:                                              ; preds = %start
  %_22 = load ptr, ptr %self, align 8, !dbg !14597
  %_5 = getelementptr inbounds i8, ptr %_22, i64 16, !dbg !14597
  store ptr %_5, ptr %self.dbg.spill.i4, align 8
    #dbg_declare(ptr %self.dbg.spill.i4, !14546, !DIExpression(), !14598)
  %_3.i5 = load ptr, ptr %_5, align 8, !dbg !14600
  store ptr %_3.i5, ptr %self.dbg.spill.i6, align 8
    #dbg_declare(ptr %self.dbg.spill.i6, !14556, !DIExpression(), !14601)
  store ptr %_3.i5, ptr %source_vec.dbg.spill, align 8, !dbg !14597
    #dbg_declare(ptr %source_vec.dbg.spill, !14584, !DIExpression(), !14603)
; call alloc::vec::Vec<T,A>::len
  %start1 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %_3.i5) #19, !dbg !14604
  store i64 %start1, ptr %start.dbg.spill, align 8, !dbg !14604
    #dbg_declare(ptr %start.dbg.spill, !14586, !DIExpression(), !14605)
  %_23 = load ptr, ptr %self, align 8, !dbg !14606
  %1 = getelementptr inbounds i8, ptr %_23, i64 24, !dbg !14606
  %tail = load i64, ptr %1, align 8, !dbg !14606
  store i64 %tail, ptr %tail.dbg.spill, align 8, !dbg !14606
    #dbg_declare(ptr %tail.dbg.spill, !14588, !DIExpression(), !14607)
  %_9 = icmp ne i64 %tail, %start1, !dbg !14608
  br i1 %_9, label %bb4, label %bb9, !dbg !14608

bb9:                                              ; preds = %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit, %bb1
  %_25 = load ptr, ptr %self, align 8, !dbg !14609
  %2 = getelementptr inbounds i8, ptr %_25, i64 32, !dbg !14609
  %_19 = load i64, ptr %2, align 8, !dbg !14609
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %start1, i64 %_19), !dbg !14610
  %_20.0 = extractvalue { i64, i1 } %3, 0, !dbg !14610
  %_20.1 = extractvalue { i64, i1 } %3, 1, !dbg !14610
  br i1 %_20.1, label %panic, label %bb10, !dbg !14610

bb4:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::as_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E"(ptr align 8 %_3.i5) #19, !dbg !14611
  store ptr %_11, ptr %self.dbg.spill.i8, align 8
    #dbg_declare(ptr %self.dbg.spill.i8, !6531, !DIExpression(), !14612)
  store i64 %tail, ptr %count.dbg.spill.i7, align 8
    #dbg_declare(ptr %count.dbg.spill.i7, !6536, !DIExpression(), !14614)
; call core::ub_checks::check_language_ub
  %_3.i9 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14615
  br i1 %_3.i9, label %bb2.i11, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !14615

bb2.i11:                                          ; preds = %bb4
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E"(ptr %_11, i64 %tail, i64 1) #19, !dbg !14616
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !14616

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit": ; preds = %bb4, %bb2.i11
  %_0.i10 = getelementptr inbounds i8, ptr %_11, i64 %tail, !dbg !14617
  store ptr %_0.i10, ptr %src.dbg.spill, align 8, !dbg !14611
    #dbg_declare(ptr %src.dbg.spill, !14590, !DIExpression(), !14618)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %_3.i5) #19, !dbg !14619
  store ptr %_14, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11085, !DIExpression(), !14620)
  store i64 %start1, ptr %count.dbg.spill.i2, align 8
    #dbg_declare(ptr %count.dbg.spill.i2, !11090, !DIExpression(), !14622)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14623
  br i1 %_3.i, label %bb2.i3, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !14623

bb2.i3:                                           ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %_14, i64 %start1, i64 1) #19, !dbg !14624
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !14624

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", %bb2.i3
  %_0.i = getelementptr inbounds i8, ptr %_14, i64 %start1, !dbg !14625
  store ptr %_0.i, ptr %dst.dbg.spill, align 8, !dbg !14619
    #dbg_declare(ptr %dst.dbg.spill, !14592, !DIExpression(), !14626)
  %_24 = load ptr, ptr %self, align 8, !dbg !14627
  %4 = getelementptr inbounds i8, ptr %_24, i64 32, !dbg !14627
  %_16 = load i64, ptr %4, align 8, !dbg !14627
  store ptr %_0.i10, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !13875, !DIExpression(), !14628)
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !13878, !DIExpression(), !14630)
  store i64 %_16, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !13879, !DIExpression(), !14631)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14632
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit, !dbg !14632

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
  %5 = icmp eq i64 %_16, 0, !dbg !14633
  %6 = zext i1 %5 to i8, !dbg !14633
  store i8 %6, ptr %_9.i, align 1, !dbg !14633
  %7 = load i8, ptr %_9.i, align 1, !dbg !14634
  %8 = trunc i8 %7 to i1, !dbg !14634
; call core::intrinsics::copy::precondition_check
  call void @_ZN4core10intrinsics4copy18precondition_check17h22f1a0946e134f3bE(ptr %_0.i10, ptr %_0.i, i64 1, i1 zeroext %8) #19, !dbg !14634
  br label %_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit, !dbg !14634

_ZN4core10intrinsics4copy17h94b876f9f7f938a7E.exit: ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", %bb2.i
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %_0.i, ptr align 1 %_0.i10, i64 %_16, i1 false), !dbg !14635
  br label %bb9, !dbg !14636

bb10:                                             ; preds = %bb9
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %_3.i5, i64 %_20.0) #19, !dbg !14637
  br label %bb11, !dbg !14637

panic:                                            ; preds = %bb9
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 @alloc_c70b18d78de667afe02befc61dda8808) #20, !dbg !14610
  unreachable, !dbg !14610
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h79082c1a5f5ce760E"(ptr align 8 %self, ptr %0, ptr %1, ptr align 8 %2) unnamed_addr #0 !dbg !14638 {
start:
  %slice.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %iterator = alloca [16 x i8], align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14645, !DIExpression(), !14649)
    #dbg_declare(ptr %iterator, !14646, !DIExpression(), !14650)
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h8f7b268f3d5c7a66E"(ptr align 8 %iterator) #19, !dbg !14651
  %slice.0 = extractvalue { ptr, i64 } %4, 0, !dbg !14651
  %slice.1 = extractvalue { ptr, i64 } %4, 1, !dbg !14651
  store ptr %slice.0, ptr %slice.dbg.spill, align 8, !dbg !14651
  %5 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8, !dbg !14651
  store i64 %slice.1, ptr %5, align 8, !dbg !14651
    #dbg_declare(ptr %slice.dbg.spill, !14647, !DIExpression(), !14652)
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h1bfb592e4078a097E"(ptr align 8 %self, ptr %slice.0, i64 %slice.1, ptr align 8 %2) #19, !dbg !14653
  ret void, !dbg !14654
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h4dc4ab64060b6e8fE"(ptr sret([24 x i8]) align 8 %_0) unnamed_addr #1 !dbg !14655 {
start:
; call alloc::raw_vec::RawVec<T>::new
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h19dfa1b128272f2cE"() #19, !dbg !14660
  %_1.0 = extractvalue { i64, ptr } %0, 0, !dbg !14660
  %_1.1 = extractvalue { i64, ptr } %0, 1, !dbg !14660
  store i64 %_1.0, ptr %_0, align 8, !dbg !14661
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !14661
  store ptr %_1.1, ptr %1, align 8, !dbg !14661
  %2 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !14661
  store i64 0, ptr %2, align 8, !dbg !14661
  ret void, !dbg !14662
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, ptr align 8 %0) unnamed_addr #1 !dbg !14663 {
start:
  %capacity.dbg.spill = alloca [8 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !14668, !DIExpression(), !14669)
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf5dfd896da7902efE"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, ptr align 8 %0) #19, !dbg !14670
  ret void, !dbg !14671
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf5dfd896da7902efE"(ptr sret([24 x i8]) align 8 %_0, i64 %capacity, ptr align 8 %0) unnamed_addr #1 !dbg !14672 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [8 x i8], align 8
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !14677, !DIExpression(), !14679)
    #dbg_declare(ptr %alloc.dbg.spill, !14678, !DIExpression(), !14680)
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf98b5c351e817222E"(i64 %capacity, ptr align 8 %0) #19, !dbg !14681
  %_3.0 = extractvalue { i64, ptr } %1, 0, !dbg !14681
  %_3.1 = extractvalue { i64, ptr } %1, 1, !dbg !14681
  store i64 %_3.0, ptr %_0, align 8, !dbg !14682
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !14682
  store ptr %_3.1, ptr %2, align 8, !dbg !14682
  %3 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !14682
  store i64 0, ptr %3, align 8, !dbg !14682
  ret void, !dbg !14683
}

; alloc::vec::Vec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17hf77891917e6c590eE"(ptr sret([24 x i8]) align 8 %_0, ptr %ptr, i64 %length, i64 %capacity) unnamed_addr #1 !dbg !14684 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [8 x i8], align 8
  %length.dbg.spill = alloca [8 x i8], align 8
  %ptr.dbg.spill = alloca [8 x i8], align 8
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
    #dbg_declare(ptr %ptr.dbg.spill, !14689, !DIExpression(), !14693)
  store i64 %length, ptr %length.dbg.spill, align 8
    #dbg_declare(ptr %length.dbg.spill, !14690, !DIExpression(), !14694)
  store i64 %capacity, ptr %capacity.dbg.spill, align 8
    #dbg_declare(ptr %capacity.dbg.spill, !14691, !DIExpression(), !14695)
    #dbg_declare(ptr %alloc.dbg.spill, !14692, !DIExpression(), !14696)
; call alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hee2af04e0fde8fafE"(ptr %ptr, i64 %capacity) #19, !dbg !14697
  %_5.0 = extractvalue { i64, ptr } %0, 0, !dbg !14697
  %_5.1 = extractvalue { i64, ptr } %0, 1, !dbg !14697
  store i64 %_5.0, ptr %_0, align 8, !dbg !14698
  %1 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !14698
  store ptr %_5.1, ptr %1, align 8, !dbg !14698
  %2 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !14698
  store i64 %length, ptr %2, align 8, !dbg !14698
  ret void, !dbg !14699
}

; alloc::vec::Vec<T,A>::into_raw_parts
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hc9f4e0c2ef59f3abE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !14700 {
start:
  %self.dbg.spill.i2 = alloca [8 x i8], align 8
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %me = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !14705, !DIExpression(), !14711)
    #dbg_declare(ptr %me, !14706, !DIExpression(), !14712)
    #dbg_declare(ptr %self, !14713, !DIExpression(), !14719)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %self, i64 24, i1 false), !dbg !14721
  store ptr %me, ptr %self.dbg.spill.i2, align 8
    #dbg_declare(ptr %self.dbg.spill.i2, !14722, !DIExpression(), !14728)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %me) #19, !dbg !14730
  store ptr %me, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !14731, !DIExpression(), !14738)
; call alloc::vec::Vec<T,A>::len
  %_6 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %me) #19, !dbg !14740
  store ptr %me, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !14731, !DIExpression(), !14741)
; call alloc::vec::Vec<T,A>::capacity
  %_9 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE"(ptr align 8 %me) #19, !dbg !14743
  store ptr %_3, ptr %_0, align 8, !dbg !14744
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !14744
  store i64 %_6, ptr %0, align 8, !dbg !14744
  %1 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !14744
  store i64 %_9, ptr %1, align 8, !dbg !14744
  ret void, !dbg !14745
}

; alloc::vec::Vec<T,A>::capacity
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE"(ptr align 8 %self) unnamed_addr #1 !dbg !14746 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14751, !DIExpression(), !14752)
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_0 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE"(ptr align 8 %self) #19, !dbg !14753
  ret i64 %_0, !dbg !14754
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5877bb739ea4e293E"(ptr align 8 %self, i64 %additional, ptr align 8 %0) unnamed_addr #0 !dbg !14755 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14760, !DIExpression(), !14762)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !14761, !DIExpression(), !14763)
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14764
  %_5 = load i64, ptr %1, align 8, !dbg !14764
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfe162141bb17885dE"(ptr align 8 %self, i64 %_5, i64 %additional, ptr align 8 %0) #19, !dbg !14765
  ret void, !dbg !14766
}

; alloc::vec::Vec<T,A>::reserve_exact
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hfe0a39fa792c655aE"(ptr align 8 %self, i64 %additional, ptr align 8 %0) unnamed_addr #0 !dbg !14767 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14770, !DIExpression(), !14772)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !14771, !DIExpression(), !14773)
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14774
  %_5 = load i64, ptr %1, align 8, !dbg !14774
; call alloc::raw_vec::RawVec<T,A>::reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h4fb005f774d65aa5E"(ptr align 8 %self, i64 %_5, i64 %additional, ptr align 8 %0) #19, !dbg !14775
  ret void, !dbg !14776
}

; alloc::vec::Vec<T,A>::try_reserve
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h50abbc23c8017640E"(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !14777 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14782, !DIExpression(), !14784)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !14783, !DIExpression(), !14785)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14786
  %_4 = load i64, ptr %0, align 8, !dbg !14786
; call alloc::raw_vec::RawVec<T,A>::try_reserve
  %1 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h45f419b025448998E"(ptr align 8 %self, i64 %_4, i64 %additional) #19, !dbg !14787
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !14787
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !14787
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !14788
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !14788
  ret { i64, i64 } %3, !dbg !14788
}

; alloc::vec::Vec<T,A>::try_reserve_exact
; Function Attrs: noredzone nounwind
define dso_local { i64, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h014a30c04e6f2f17E"(ptr align 8 %self, i64 %additional) unnamed_addr #0 !dbg !14789 {
start:
  %additional.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14792, !DIExpression(), !14794)
  store i64 %additional, ptr %additional.dbg.spill, align 8
    #dbg_declare(ptr %additional.dbg.spill, !14793, !DIExpression(), !14795)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14796
  %_4 = load i64, ptr %0, align 8, !dbg !14796
; call alloc::raw_vec::RawVec<T,A>::try_reserve_exact
  %1 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h555185e7175c9440E"(ptr align 8 %self, i64 %_4, i64 %additional) #19, !dbg !14797
  %_0.0 = extractvalue { i64, i64 } %1, 0, !dbg !14797
  %_0.1 = extractvalue { i64, i64 } %1, 1, !dbg !14797
  %2 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !14798
  %3 = insertvalue { i64, i64 } %2, i64 %_0.1, 1, !dbg !14798
  ret { i64, i64 } %3, !dbg !14798
}

; alloc::vec::Vec<T,A>::shrink_to_fit
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hf46346819fad11beE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !14799 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14804, !DIExpression(), !14805)
; call alloc::vec::Vec<T,A>::capacity
  %_3 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE"(ptr align 8 %self) #19, !dbg !14806
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14807
  %_5 = load i64, ptr %1, align 8, !dbg !14807
  %_2 = icmp ugt i64 %_3, %_5, !dbg !14806
  br i1 %_2, label %bb2, label %bb3, !dbg !14806

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !14808

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14809
  %_8 = load i64, ptr %2, align 8, !dbg !14809
; call alloc::raw_vec::RawVec<T,A>::shrink_to_fit
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17hdf153631dd09b4f0E"(ptr align 8 %self, i64 %_8, ptr align 8 %0) #19, !dbg !14810
  br label %bb3, !dbg !14810
}

; alloc::vec::Vec<T,A>::into_boxed_slice
; Function Attrs: noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 !dbg !14811 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %buf.dbg.spill = alloca [16 x i8], align 8
  %_5 = alloca [24 x i8], align 8
  %me = alloca [24 x i8], align 8
    #dbg_declare(ptr %self, !14816, !DIExpression(), !14823)
    #dbg_declare(ptr %me, !14817, !DIExpression(), !14824)
; call alloc::vec::Vec<T,A>::shrink_to_fit
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hf46346819fad11beE"(ptr align 8 %self, ptr align 8 %0) #19, !dbg !14825
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %self, i64 24, i1 false), !dbg !14826
    #dbg_declare(ptr %_5, !14713, !DIExpression(), !14827)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %_5, i64 24, i1 false), !dbg !14829
  store ptr %me, ptr %self.dbg.spill.i1, align 8
    #dbg_declare(ptr %self.dbg.spill.i1, !14731, !DIExpression(), !14830)
; call core::ptr::read
  %1 = call { i64, ptr } @_ZN4core3ptr4read17h909e5ee099ae3bacE(ptr %me) #19, !dbg !14832
  %buf.0 = extractvalue { i64, ptr } %1, 0, !dbg !14832
  %buf.1 = extractvalue { i64, ptr } %1, 1, !dbg !14832
  store i64 %buf.0, ptr %buf.dbg.spill, align 8, !dbg !14832
  %2 = getelementptr inbounds i8, ptr %buf.dbg.spill, i64 8, !dbg !14832
  store ptr %buf.1, ptr %2, align 8, !dbg !14832
    #dbg_declare(ptr %buf.dbg.spill, !14819, !DIExpression(), !14833)
  store ptr %me, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !14731, !DIExpression(), !14834)
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %me) #19, !dbg !14836
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !14836
    #dbg_declare(ptr %len.dbg.spill, !14821, !DIExpression(), !14837)
; call alloc::raw_vec::RawVec<T,A>::into_box
  %3 = call { ptr, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h2602add354448feaE"(i64 %buf.0, ptr %buf.1, i64 %len) #19, !dbg !14838
  %_14.0 = extractvalue { ptr, i64 } %3, 0, !dbg !14838
  %_14.1 = extractvalue { ptr, i64 } %3, 1, !dbg !14838
; call alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
  %4 = call { ptr, i64 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17ha700e6df5a143db9E"(ptr align 1 %_14.0, i64 %_14.1) #19, !dbg !14838
  %_0.0 = extractvalue { ptr, i64 } %4, 0, !dbg !14838
  %_0.1 = extractvalue { ptr, i64 } %4, 1, !dbg !14838
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14839
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1, 1, !dbg !14839
  ret { ptr, i64 } %6, !dbg !14839
}

; alloc::vec::Vec<T,A>::as_slice
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h527846da8ec6e886E"(ptr align 8 %self) unnamed_addr #1 !dbg !14840 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14845, !DIExpression(), !14846)
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E"(ptr align 8 %self) #19, !dbg !14847
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14848
  %_3 = load i64, ptr %0, align 8, !dbg !14848
; call core::slice::raw::from_raw_parts
  %1 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h42c262a59a518897E(ptr %_2, i64 %_3) #19, !dbg !14849
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !14849
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !14849
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14850
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !14850
  ret { ptr, i64 } %3, !dbg !14850
}

; alloc::vec::Vec<T,A>::as_mut_slice
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h52bbfb16e1dc50d0E"(ptr align 8 %self) unnamed_addr #1 !dbg !14851 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14856, !DIExpression(), !14857)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_2 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !14858
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14859
  %_3 = load i64, ptr %0, align 8, !dbg !14859
; call core::slice::raw::from_raw_parts_mut
  %1 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h86439c6721016fafE(ptr %_2, i64 %_3) #19, !dbg !14860
  %_0.0 = extractvalue { ptr, i64 } %1, 0, !dbg !14860
  %_0.1 = extractvalue { ptr, i64 } %1, 1, !dbg !14860
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !14861
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1, !dbg !14861
  ret { ptr, i64 } %3, !dbg !14861
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E"(ptr align 8 %self) unnamed_addr #1 !dbg !14862 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14867, !DIExpression(), !14868)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_2 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E"(ptr align 8 %self) #19, !dbg !14869
  ret ptr %_2, !dbg !14870
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint noredzone nounwind
define dso_local ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) unnamed_addr #1 !dbg !14871 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14876, !DIExpression(), !14877)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_0 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E"(ptr align 8 %self) #19, !dbg !14878
  ret ptr %_0, !dbg !14879
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint noredzone nounwind
define dso_local align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h978bd46c0a31e1c3E"(ptr align 8 %self) unnamed_addr #1 !dbg !14880 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14885, !DIExpression(), !14886)
; call alloc::raw_vec::RawVec<T,A>::allocator
  %_0 = call align 1 ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17hb5286c63e3c22fabE"(ptr align 8 %self) #19, !dbg !14887
  ret ptr %_0, !dbg !14888
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %self, i64 %new_len) unnamed_addr #1 !dbg !14889 {
start:
  %new_len.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14894, !DIExpression(), !14896)
  store i64 %new_len, ptr %new_len.dbg.spill, align 8
    #dbg_declare(ptr %new_len.dbg.spill, !14895, !DIExpression(), !14897)
; call alloc::vec::Vec<T,A>::capacity
  %_4 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE"(ptr align 8 %self) #19, !dbg !14898
  %_3 = icmp ule i64 %new_len, %_4, !dbg !14899
  br i1 %_3, label %bb3, label %bb2, !dbg !14899

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1 @alloc_00c4bc2c43db60dab26d25d7c2e3bd2a, i64 44, ptr align 8 @alloc_e8d631727a1005594ce4cdadeb8520ae) #20, !dbg !14900
  unreachable, !dbg !14900

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14901
  store i64 %new_len, ptr %0, align 8, !dbg !14901
  ret void, !dbg !14902
}

; alloc::vec::Vec<T,A>::swap_remove::assert_failed
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11swap_remove13assert_failed17h6c36757cd8817389E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #3 !dbg !14903 {
start:
  %_10 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  %len = alloca [8 x i8], align 8
  %index = alloca [8 x i8], align 8
  store i64 %0, ptr %index, align 8
  store i64 %1, ptr %len, align 8
    #dbg_declare(ptr %index, !14909, !DIExpression(), !14911)
    #dbg_declare(ptr %len, !14910, !DIExpression(), !14912)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_8, ptr align 8 %index) #19, !dbg !14913
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_10, ptr align 8 %len) #19, !dbg !14913
  %3 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 0, !dbg !14913
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_8, i64 16, i1 false), !dbg !14913
  %4 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 1, !dbg !14913
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_10, i64 16, i1 false), !dbg !14913
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h108d6cf26daf898fE(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_503baa8206645801c4d7396accc462a6, ptr align 8 %_7) #19, !dbg !14913
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_4, ptr align 8 %2) #20, !dbg !14913
  unreachable, !dbg !14913
}

; alloc::vec::Vec<T,A>::insert::assert_failed
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6insert13assert_failed17h280863e5b5fc12c6E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #3 !dbg !14914 {
start:
  %_10 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  %len = alloca [8 x i8], align 8
  %index = alloca [8 x i8], align 8
  store i64 %0, ptr %index, align 8
  store i64 %1, ptr %len, align 8
    #dbg_declare(ptr %index, !14917, !DIExpression(), !14919)
    #dbg_declare(ptr %len, !14918, !DIExpression(), !14920)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_8, ptr align 8 %index) #19, !dbg !14921
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_10, ptr align 8 %len) #19, !dbg !14921
  %3 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 0, !dbg !14921
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_8, i64 16, i1 false), !dbg !14921
  %4 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 1, !dbg !14921
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_10, i64 16, i1 false), !dbg !14921
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h108d6cf26daf898fE(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_b612ed5cfc036b9f11e8d618749f21bf, ptr align 8 %_7) #19, !dbg !14921
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_4, ptr align 8 %2) #20, !dbg !14921
  unreachable, !dbg !14921
}

; alloc::vec::Vec<T,A>::remove::assert_failed
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17h2c4a4f2d2b3d09d5E"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #3 !dbg !14922 {
start:
  %_10 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  %len = alloca [8 x i8], align 8
  %index = alloca [8 x i8], align 8
  store i64 %0, ptr %index, align 8
  store i64 %1, ptr %len, align 8
    #dbg_declare(ptr %index, !14925, !DIExpression(), !14927)
    #dbg_declare(ptr %len, !14926, !DIExpression(), !14928)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_8, ptr align 8 %index) #19, !dbg !14929
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_10, ptr align 8 %len) #19, !dbg !14929
  %3 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 0, !dbg !14929
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_8, i64 16, i1 false), !dbg !14929
  %4 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 1, !dbg !14929
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_10, i64 16, i1 false), !dbg !14929
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h108d6cf26daf898fE(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_07bff6ac01d535857c62102c0b9448af, ptr align 8 %_7) #19, !dbg !14929
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_4, ptr align 8 %2) #20, !dbg !14929
  unreachable, !dbg !14929
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h92d949171015b075E"(ptr align 8 %self, i8 zeroext %value, ptr align 8 %0) unnamed_addr #1 !dbg !14930 {
start:
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %value.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14935, !DIExpression(), !14941)
  store i8 %value, ptr %value.dbg.spill, align 1
    #dbg_declare(ptr %value.dbg.spill, !14936, !DIExpression(), !14942)
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14943
  %len = load i64, ptr %1, align 8, !dbg !14943
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !14943
    #dbg_declare(ptr %len.dbg.spill, !14937, !DIExpression(), !14944)
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_5 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE"(ptr align 8 %self) #19, !dbg !14945
  %_4 = icmp eq i64 %len, %_5, !dbg !14946
  br i1 %_4, label %bb2, label %bb3, !dbg !14946

bb3:                                              ; preds = %bb2, %start
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !14947
  store ptr %_10, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11085, !DIExpression(), !14948)
  store i64 %len, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !11090, !DIExpression(), !14950)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14951
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !14951

bb2.i:                                            ; preds = %bb3
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %_10, i64 %len, i64 1) #19, !dbg !14952
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !14952

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %bb3, %bb2.i
  %_0.i = getelementptr inbounds i8, ptr %_10, i64 %len, !dbg !14953
  store ptr %_0.i, ptr %end.dbg.spill, align 8, !dbg !14947
    #dbg_declare(ptr %end.dbg.spill, !14939, !DIExpression(), !14954)
; call core::ptr::write
  call void @_ZN4core3ptr5write17h578f9e803926fa08E(ptr %_0.i, i8 zeroext %value) #19, !dbg !14955
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 1), !dbg !14956
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !14956
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !14956
  br i1 %_12.1, label %panic, label %bb7, !dbg !14956

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVec<T,A>::grow_one
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h6bb6430105e62c38E"(ptr align 8 %self, ptr align 8 %0) #19, !dbg !14957
  br label %bb3, !dbg !14957

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
  %3 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14958
  store i64 %_12.0, ptr %3, align 8, !dbg !14958
  ret void, !dbg !14959

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 %0) #20, !dbg !14956
  unreachable, !dbg !14956
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint noredzone nounwind
define dso_local { i1, i8 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h2d5771bad42b3b66E"(ptr align 8 %self) unnamed_addr #1 !dbg !14960 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14965, !DIExpression(), !14966)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14967
  %_2 = load i64, ptr %0, align 8, !dbg !14967
  %1 = icmp eq i64 %_2, 0, !dbg !14967
  br i1 %1, label %bb1, label %bb2, !dbg !14967

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !14968
  br label %bb10, !dbg !14969

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14970
  %3 = load i64, ptr %2, align 8, !dbg !14970
  %_3.0 = sub i64 %3, 1, !dbg !14970
  %_3.1 = icmp ult i64 %3, 1, !dbg !14970
  br i1 %_3.1, label %panic, label %bb3, !dbg !14970

bb10:                                             ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", %bb1
  %4 = load i8, ptr %_0, align 1, !dbg !14971
  %5 = trunc i8 %4 to i1, !dbg !14971
  %6 = getelementptr inbounds i8, ptr %_0, i64 1, !dbg !14971
  %7 = load i8, ptr %6, align 1, !dbg !14971
  %8 = insertvalue { i1, i8 } poison, i1 %5, 0, !dbg !14971
  %9 = insertvalue { i1, i8 } %8, i8 %7, 1, !dbg !14971
  ret { i1, i8 } %9, !dbg !14971

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14970
  store i64 %_3.0, ptr %10, align 8, !dbg !14970
  %11 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !14972
  %_6 = load i64, ptr %11, align 8, !dbg !14972
; call alloc::vec::Vec<T,A>::capacity
  %_7 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE"(ptr align 8 %self) #19, !dbg !14973
  %_5 = icmp ult i64 %_6, %_7, !dbg !14972
  %12 = zext i1 %_5 to i8
  store i8 %12, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !10133, !DIExpression(), !14974)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14976
  br i1 %_2.i, label %bb2.i1, label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !14976

bb2.i1:                                           ; preds = %bb3
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E(i1 zeroext %_5) #19, !dbg !14977
  br label %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, !dbg !14977

_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit: ; preds = %bb3, %bb2.i1
; call alloc::vec::Vec<T,A>::as_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E"(ptr align 8 %self) #19, !dbg !14978
; call alloc::vec::Vec<T,A>::len
  %_13 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self) #19, !dbg !14979
  store ptr %_11, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !6531, !DIExpression(), !14980)
  store i64 %_13, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !6536, !DIExpression(), !14982)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !14983
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !14983

bb2.i:                                            ; preds = %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E"(ptr %_11, i64 %_13, i64 1) #19, !dbg !14984
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !14984

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit": ; preds = %_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E.exit, %bb2.i
  %_0.i = getelementptr inbounds i8, ptr %_11, i64 %_13, !dbg !14985
; call core::ptr::read
  %_9 = call i8 @_ZN4core3ptr4read17h3f3b527a7d47ec42E(ptr %_0.i) #19, !dbg !14986
  %13 = getelementptr inbounds i8, ptr %_0, i64 1, !dbg !14987
  store i8 %_9, ptr %13, align 1, !dbg !14987
  store i8 1, ptr %_0, align 1, !dbg !14987
  br label %bb10, !dbg !14969

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_39a35524e808b870ab98e7f0383e6fd9) #20, !dbg !14970
  unreachable, !dbg !14970
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h1bfb592e4078a097E"(ptr align 8 %self, ptr %other.0, i64 %other.1, ptr align 8 %0) unnamed_addr #1 !dbg !14988 {
start:
  %count.dbg.spill.i1 = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %dst.dbg.spill.i = alloca [8 x i8], align 8
  %src.dbg.spill.i = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %count.dbg.spill = alloca [8 x i8], align 8
  %other.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !14993, !DIExpression(), !14999)
  store ptr %other.0, ptr %other.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %other.dbg.spill, i64 8
  store i64 %other.1, ptr %1, align 8
    #dbg_declare(ptr %other.dbg.spill, !14994, !DIExpression(), !15000)
  store i64 %other.1, ptr %count.dbg.spill, align 8, !dbg !15001
    #dbg_declare(ptr %count.dbg.spill, !14995, !DIExpression(), !15002)
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5877bb739ea4e293E"(ptr align 8 %self, i64 %other.1, ptr align 8 %0) #19, !dbg !15003
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self) #19, !dbg !15004
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !15004
    #dbg_declare(ptr %len.dbg.spill, !14997, !DIExpression(), !15005)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !15006
  store ptr %_11, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11085, !DIExpression(), !15007)
  store i64 %len, ptr %count.dbg.spill.i1, align 8
    #dbg_declare(ptr %count.dbg.spill.i1, !11090, !DIExpression(), !15009)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !15010
  br i1 %_3.i, label %bb2.i2, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !15010

bb2.i2:                                           ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %_11, i64 %len, i64 1) #19, !dbg !15011
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !15011

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %start, %bb2.i2
  %_0.i = getelementptr inbounds i8, ptr %_11, i64 %len, !dbg !15012
  store ptr %other.0, ptr %src.dbg.spill.i, align 8
    #dbg_declare(ptr %src.dbg.spill.i, !4091, !DIExpression(), !15013)
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 8
    #dbg_declare(ptr %dst.dbg.spill.i, !4094, !DIExpression(), !15015)
  store i64 %other.1, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !4095, !DIExpression(), !15016)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !15017
  br i1 %_4.i, label %bb2.i, label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !15017

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E(ptr %other.0, ptr %_0.i, i64 1, i64 1, i64 %other.1) #19, !dbg !15018
  br label %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit, !dbg !15018

_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit: ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", %bb2.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i, ptr align 1 %other.0, i64 %other.1, i1 false), !dbg !15019
  %2 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15020
  %3 = load i64, ptr %2, align 8, !dbg !15020
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %3, i64 %other.1), !dbg !15020
  %_12.0 = extractvalue { i64, i1 } %4, 0, !dbg !15020
  %_12.1 = extractvalue { i64, i1 } %4, 1, !dbg !15020
  br i1 %_12.1, label %panic, label %bb6, !dbg !15020

bb6:                                              ; preds = %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit
  %5 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15020
  store i64 %_12.0, ptr %5, align 8, !dbg !15020
  ret void, !dbg !15021

panic:                                            ; preds = %_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE.exit
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8 %0) #20, !dbg !15020
  unreachable, !dbg !15020
}

; alloc::vec::Vec<T,A>::drain
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17heb5cb9bbe7fb049bE"(ptr sret([40 x i8]) align 8 %_0, ptr align 8 %self, i64 %range.0, i64 %range.1) unnamed_addr #0 !dbg !15022 {
start:
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %range_slice.dbg.spill = alloca [16 x i8], align 8
  %end.dbg.spill = alloca [8 x i8], align 8
  %start.dbg.spill = alloca [8 x i8], align 8
  %len.dbg.spill = alloca [8 x i8], align 8
  %range.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15028, !DIExpression(), !15037)
  store i64 %range.0, ptr %range.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %range.dbg.spill, i64 8
  store i64 %range.1, ptr %0, align 8
    #dbg_declare(ptr %range.dbg.spill, !15029, !DIExpression(), !15038)
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self) #19, !dbg !15039
  store i64 %len, ptr %len.dbg.spill, align 8, !dbg !15039
    #dbg_declare(ptr %len.dbg.spill, !15030, !DIExpression(), !15040)
; call core::slice::index::range
  %1 = call { i64, i64 } @_ZN4core5slice5index5range17he60eca797cb2ab12E(i64 %range.0, i64 %range.1, i64 %len, ptr align 8 @alloc_5dcdb7a39dd825b3bf7596a49bacf0c5) #19, !dbg !15041
  %_7.0 = extractvalue { i64, i64 } %1, 0, !dbg !15041
  %_7.1 = extractvalue { i64, i64 } %1, 1, !dbg !15041
  store i64 %_7.0, ptr %start.dbg.spill, align 8, !dbg !15042
    #dbg_declare(ptr %start.dbg.spill, !15032, !DIExpression(), !15043)
  store i64 %_7.1, ptr %end.dbg.spill, align 8, !dbg !15044
    #dbg_declare(ptr %end.dbg.spill, !15034, !DIExpression(), !15045)
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE"(ptr align 8 %self, i64 %_7.0) #19, !dbg !15046
; call alloc::vec::Vec<T,A>::as_ptr
  %_12 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E"(ptr align 8 %self) #19, !dbg !15047
  store ptr %_12, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !6531, !DIExpression(), !15048)
  store i64 %_7.0, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !6536, !DIExpression(), !15050)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !15051
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !15051

bb2.i:                                            ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E"(ptr %_12, i64 %_7.0, i64 1) #19, !dbg !15052
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit", !dbg !15052

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit": ; preds = %start, %bb2.i
  %_0.i = getelementptr inbounds i8, ptr %_12, i64 %_7.0, !dbg !15053
  %_15.0 = sub i64 %_7.1, %_7.0, !dbg !15054
  %_15.1 = icmp ult i64 %_7.1, %_7.0, !dbg !15054
  br i1 %_15.1, label %panic, label %bb6, !dbg !15054

bb6:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit"
; call core::slice::raw::from_raw_parts
  %2 = call { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h42c262a59a518897E(ptr %_0.i, i64 %_15.0) #19, !dbg !15055
  %range_slice.0 = extractvalue { ptr, i64 } %2, 0, !dbg !15055
  %range_slice.1 = extractvalue { ptr, i64 } %2, 1, !dbg !15055
  store ptr %range_slice.0, ptr %range_slice.dbg.spill, align 8, !dbg !15055
  %3 = getelementptr inbounds i8, ptr %range_slice.dbg.spill, i64 8, !dbg !15055
  store i64 %range_slice.1, ptr %3, align 8, !dbg !15055
    #dbg_declare(ptr %range_slice.dbg.spill, !15035, !DIExpression(), !15056)
  %_17.0 = sub i64 %len, %_7.1, !dbg !15057
  %_17.1 = icmp ult i64 %len, %_7.1, !dbg !15057
  br i1 %_17.1, label %panic1, label %bb8, !dbg !15057

panic:                                            ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_8d018a6923b2b772addd51fdae94025f) #20, !dbg !15054
  unreachable, !dbg !15054

bb8:                                              ; preds = %bb6
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h938db19c45b87448E"(ptr align 1 %range_slice.0, i64 %range_slice.1) #19, !dbg !15058
  %_18.0 = extractvalue { ptr, ptr } %4, 0, !dbg !15058
  %_18.1 = extractvalue { ptr, ptr } %4, 1, !dbg !15058
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %_19 = call ptr @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17he9510f36408a336bE"(ptr align 8 %self) #19, !dbg !15059
  %5 = getelementptr inbounds i8, ptr %_0, i64 24, !dbg !15060
  store i64 %_7.1, ptr %5, align 8, !dbg !15060
  %6 = getelementptr inbounds i8, ptr %_0, i64 32, !dbg !15060
  store i64 %_17.0, ptr %6, align 8, !dbg !15060
  store ptr %_18.0, ptr %_0, align 8, !dbg !15060
  %7 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !15060
  store ptr %_18.1, ptr %7, align 8, !dbg !15060
  %8 = getelementptr inbounds i8, ptr %_0, i64 16, !dbg !15060
  store ptr %_19, ptr %8, align 8, !dbg !15060
  ret void, !dbg !15061

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_f1378387cf0e6437b81cf2ad3c3c7f63) #20, !dbg !15057
  unreachable, !dbg !15057
}

; alloc::vec::Vec<T,A>::clear
; Function Attrs: inlinehint noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17hdc51e58aca5ba4b9E"(ptr align 8 %self) unnamed_addr #1 !dbg !15062 {
start:
  %elems.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15067, !DIExpression(), !15070)
; call alloc::vec::Vec<T,A>::as_mut_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h52bbfb16e1dc50d0E"(ptr align 8 %self) #19, !dbg !15071
  %_3.0 = extractvalue { ptr, i64 } %0, 0, !dbg !15071
  %_3.1 = extractvalue { ptr, i64 } %0, 1, !dbg !15071
  store ptr %_3.0, ptr %elems.dbg.spill, align 8, !dbg !15071
  %1 = getelementptr inbounds i8, ptr %elems.dbg.spill, i64 8, !dbg !15071
  store i64 %_3.1, ptr %1, align 8, !dbg !15071
    #dbg_declare(ptr %elems.dbg.spill, !15068, !DIExpression(), !15072)
  %2 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15073
  store i64 0, ptr %2, align 8, !dbg !15073
  ret void, !dbg !15074
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint noredzone nounwind
define dso_local i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E"(ptr align 8 %self) unnamed_addr #1 !dbg !15075 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15078, !DIExpression(), !15079)
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15080
  %_0 = load i64, ptr %0, align 8, !dbg !15080
  ret i64 %_0, !dbg !15081
}

; alloc::vec::Vec<T,A>::split_off::assert_failed
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9split_off13assert_failed17h3bf7ef48856a6bffE"(i64 %0, i64 %1, ptr align 8 %2) unnamed_addr #3 !dbg !15082 {
start:
  %_10 = alloca [16 x i8], align 8
  %_8 = alloca [16 x i8], align 8
  %_7 = alloca [32 x i8], align 8
  %_4 = alloca [48 x i8], align 8
  %len = alloca [8 x i8], align 8
  %at = alloca [8 x i8], align 8
  store i64 %0, ptr %at, align 8
  store i64 %1, ptr %len, align 8
    #dbg_declare(ptr %at, !15085, !DIExpression(), !15087)
    #dbg_declare(ptr %len, !15086, !DIExpression(), !15088)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_8, ptr align 8 %at) #19, !dbg !15089
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8 %_10, ptr align 8 %len) #19, !dbg !15089
  %3 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 0, !dbg !15089
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %_8, i64 16, i1 false), !dbg !15089
  %4 = getelementptr inbounds %"core::fmt::rt::Argument<'_>", ptr %_7, i64 1, !dbg !15089
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_10, i64 16, i1 false), !dbg !15089
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h108d6cf26daf898fE(ptr sret([48 x i8]) align 8 %_4, ptr align 8 @alloc_002e02b507288c370be6dc0bd34bc42a, ptr align 8 %_7) #19, !dbg !15089
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8 %_4, ptr align 8 %2) #20, !dbg !15089
  unreachable, !dbg !15089
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h2d201c19034bbe04E"(ptr align 8 %self) unnamed_addr #1 !dbg !15090 {
start:
  %count.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15095, !DIExpression(), !15096)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_4 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !15097
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15098
  %_5 = load i64, ptr %0, align 8, !dbg !15098
  store ptr %_4, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !11085, !DIExpression(), !15099)
  store i64 %_5, ptr %count.dbg.spill.i, align 8
    #dbg_declare(ptr %count.dbg.spill.i, !11090, !DIExpression(), !15101)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E() #19, !dbg !15102
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !15102

bb2.i:                                            ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE"(ptr %_4, i64 %_5, i64 1) #19, !dbg !15103
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit", !dbg !15103

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit": ; preds = %start, %bb2.i
  %_0.i = getelementptr inbounds i8, ptr %_4, i64 %_5, !dbg !15104
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE"(ptr align 8 %self) #19, !dbg !15105
  %1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15106
  %_9 = load i64, ptr %1, align 8, !dbg !15106
  %_10.0 = sub i64 %_7, %_9, !dbg !15105
  %_10.1 = icmp ult i64 %_7, %_9, !dbg !15105
  br i1 %_10.1, label %panic, label %bb4, !dbg !15105

bb4:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
; call core::slice::raw::from_raw_parts_mut
  %2 = call { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hc041fc96cb8d80d6E(ptr %_0.i, i64 %_10.0) #19, !dbg !15107
  %_0.0 = extractvalue { ptr, i64 } %2, 0, !dbg !15107
  %_0.1 = extractvalue { ptr, i64 } %2, 1, !dbg !15107
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !15108
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1, !dbg !15108
  ret { ptr, i64 } %4, !dbg !15108

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8 @alloc_a5deeec27c6c510bd4fc6f2dc8c29929) #20, !dbg !15105
  unreachable, !dbg !15105
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE"(ptr align 8 %self, ptr align 1 %other.0, i64 %other.1, ptr align 8 %0) unnamed_addr #0 !dbg !15109 {
start:
  %other.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15114, !DIExpression(), !15116)
  store ptr %other.0, ptr %other.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %other.dbg.spill, i64 8
  store i64 %other.1, ptr %1, align 8
    #dbg_declare(ptr %other.dbg.spill, !15115, !DIExpression(), !15117)
; call core::slice::<impl [T]>::iter
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h938db19c45b87448E"(ptr align 1 %other.0, i64 %other.1) #19, !dbg !15118
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !15118
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !15118
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h79082c1a5f5ce760E"(ptr align 8 %self, ptr %_3.0, ptr %_3.1, ptr align 8 %0) #19, !dbg !15119
  ret void, !dbg !15120
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %self) unnamed_addr #1 !dbg !15121 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15124, !DIExpression(), !15125)
; call alloc::vec::Vec<T,A>::as_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h527846da8ec6e886E"(ptr align 8 %self) #19, !dbg !15126
  %_0.0 = extractvalue { ptr, i64 } %0, 0, !dbg !15126
  %_0.1 = extractvalue { ptr, i64 } %0, 1, !dbg !15126
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !15127
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1, !dbg !15127
  ret { ptr, i64 } %2, !dbg !15127
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h82cd77fbaeae87fdE"(ptr sret([24 x i8]) align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 !dbg !15128 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15133, !DIExpression(), !15136)
    #dbg_declare(ptr %alloc.dbg.spill, !15134, !DIExpression(), !15137)
; call alloc::vec::Vec<T,A>::allocator
  %_3 = call align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h978bd46c0a31e1c3E"(ptr align 8 %self) #19, !dbg !15138
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h3c1c8386bd0cea87E"(ptr align 1 %_3) #19, !dbg !15138
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %self) #19, !dbg !15139
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !15139
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !15139
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h1cd06a32d75f4646E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_4.0, i64 %_4.1) #19, !dbg !15140
  ret void, !dbg !15141
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone_from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17hc28935a479ab173dE"(ptr align 8 %self, ptr align 8 %source, ptr align 8 %0) unnamed_addr #0 !dbg !15142 {
start:
  %source.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15146, !DIExpression(), !15148)
  store ptr %source, ptr %source.dbg.spill, align 8
    #dbg_declare(ptr %source.dbg.spill, !15147, !DIExpression(), !15149)
; call alloc::vec::Vec<T,A>::as_slice
  %1 = call { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h527846da8ec6e886E"(ptr align 8 %source) #19, !dbg !15150
  %_4.0 = extractvalue { ptr, i64 } %1, 0, !dbg !15150
  %_4.1 = extractvalue { ptr, i64 } %1, 1, !dbg !15150
; call <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
  call void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h5320f0f9405b2486E"(ptr align 1 %_4.0, i64 %_4.1, ptr align 8 %self) #19, !dbg !15151
  ret void, !dbg !15152
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h0df5c7baa51e96abE"(ptr align 8 %self, i64 %index, ptr align 8 %0) unnamed_addr #1 !dbg !15153 {
start:
  %ptr.dbg.spill1.i.i.i = alloca [8 x i8], align 8
  %index.dbg.spill.i.i.i = alloca [8 x i8], align 8
  %ptr.dbg.spill.i.i.i = alloca [16 x i8], align 8
  %ptr.dbg.spill1.i.i = alloca [8 x i8], align 8
  %len.dbg.spill.i.i = alloca [8 x i8], align 8
  %offset.dbg.spill.i.i = alloca [8 x i8], align 8
  %ptr.dbg.spill.i.i = alloca [16 x i8], align 8
  %new_len.dbg.spill.i.i.i = alloca [8 x i8], align 8
  %slice.dbg.spill.i.i.i = alloca [16 x i8], align 8
  %self.dbg.spill.i.i.i = alloca [16 x i8], align 8
  %_7.i.i.i = alloca [16 x i8], align 8
  %slice.dbg.spill.i.i = alloca [16 x i8], align 8
  %self.dbg.spill.i.i = alloca [8 x i8], align 8
  %index.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15158, !DIExpression(), !15161)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !15159, !DIExpression(), !15162)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %self) #19, !dbg !15163
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !15163
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !15163
  store ptr %_3.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %_3.1, ptr %2, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !15164, !DIExpression(), !15171)
  store i64 %index, ptr %index.dbg.spill.i, align 8
    #dbg_declare(ptr %index.dbg.spill.i, !15170, !DIExpression(), !15173)
  store i64 %index, ptr %self.dbg.spill.i.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i.i, !15174, !DIExpression(), !15180)
  store ptr %_3.0, ptr %slice.dbg.spill.i.i, align 8
  %3 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i64 8
  store i64 %_3.1, ptr %3, align 8
    #dbg_declare(ptr %slice.dbg.spill.i.i, !15179, !DIExpression(), !15182)
  store i64 0, ptr %self.dbg.spill.i.i.i, align 8
  %4 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i64 8
  store i64 %index, ptr %4, align 8
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !15183, !DIExpression(), !15191)
  store ptr %_3.0, ptr %slice.dbg.spill.i.i.i, align 8
  %5 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i64 8
  store i64 %_3.1, ptr %5, align 8
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !15188, !DIExpression(), !15193)
; call core::num::<impl usize>::checked_sub
  %6 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h483f8f95fa41d001E"(i64 %index, i64 0) #19, !dbg !15194
  %7 = extractvalue { i64, i64 } %6, 0, !dbg !15194
  %8 = extractvalue { i64, i64 } %6, 1, !dbg !15194
  store i64 %7, ptr %_7.i.i.i, align 8, !dbg !15194
  %9 = getelementptr inbounds i8, ptr %_7.i.i.i, i64 8, !dbg !15194
  store i64 %8, ptr %9, align 8, !dbg !15194
  %_10.i.i.i = load i64, ptr %_7.i.i.i, align 8, !dbg !15194
  %10 = icmp eq i64 %_10.i.i.i, 1, !dbg !15195
  br i1 %10, label %bb2.i.i.i, label %bb3.i.i.i, !dbg !15195

bb2.i.i.i:                                        ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_7.i.i.i, i64 8, !dbg !15196
  %new_len.i.i.i = load i64, ptr %11, align 8, !dbg !15196
  store i64 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 8, !dbg !15196
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !15189, !DIExpression(), !15197)
  %_11.i.i.i = icmp ugt i64 %index, %_3.1, !dbg !15198
  br i1 %_11.i.i.i, label %bb4.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h32c9fe27373cd1d7E.exit", !dbg !15198

bb3.i.i.i:                                        ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hbd20032dde04b2c9E(i64 0, i64 %index, ptr align 8 %0) #20, !dbg !15199
  unreachable, !dbg !15199

bb4.i.i.i:                                        ; preds = %bb2.i.i.i
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h32a5160b7d4ab128E(i64 %index, i64 %_3.1, ptr align 8 %0) #20, !dbg !15200
  unreachable, !dbg !15200

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h32c9fe27373cd1d7E.exit": ; preds = %bb2.i.i.i
  store ptr %_3.0, ptr %ptr.dbg.spill.i.i, align 8
  %12 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i64 8
  store i64 %_3.1, ptr %12, align 8
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !15201, !DIExpression(), !15210)
  store i64 0, ptr %offset.dbg.spill.i.i, align 8
    #dbg_declare(ptr %offset.dbg.spill.i.i, !15206, !DIExpression(), !15212)
  store i64 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 8
    #dbg_declare(ptr %len.dbg.spill.i.i, !15207, !DIExpression(), !15213)
  store ptr %_3.0, ptr %ptr.dbg.spill.i.i.i, align 8
  %13 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i.i, i64 8
  store i64 %_3.1, ptr %13, align 8
    #dbg_declare(ptr %ptr.dbg.spill.i.i.i, !15214, !DIExpression(), !15222)
  store i64 0, ptr %index.dbg.spill.i.i.i, align 8
    #dbg_declare(ptr %index.dbg.spill.i.i.i, !15219, !DIExpression(), !15224)
  store ptr %_3.0, ptr %ptr.dbg.spill1.i.i.i, align 8, !dbg !15225
    #dbg_declare(ptr %ptr.dbg.spill1.i.i.i, !15220, !DIExpression(), !15226)
  store ptr %_3.0, ptr %ptr.dbg.spill1.i.i, align 8, !dbg !15227
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !15208, !DIExpression(), !15228)
  %14 = insertvalue { ptr, i64 } %1, i64 %new_len.i.i.i, 1, !dbg !15229
  %_17.0.i.i.i = extractvalue { ptr, i64 } %14, 0, !dbg !15230
  %_0.0.i.i = extractvalue { ptr, i64 } %14, 0, !dbg !15231
  %_0.0.i = extractvalue { ptr, i64 } %14, 0, !dbg !15232
  %15 = insertvalue { ptr, i64 } %14, i64 %new_len.i.i.i, 1, !dbg !15233
  %_0.0 = extractvalue { ptr, i64 } %15, 0, !dbg !15234
  %_0.1 = extractvalue { ptr, i64 } %15, 1, !dbg !15234
  %16 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !15235
  %17 = insertvalue { ptr, i64 } %16, i64 %_0.1, 1, !dbg !15235
  ret { ptr, i64 } %17, !dbg !15235
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h8701d00ae8a955aeE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 !dbg !15236 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %index.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15240, !DIExpression(), !15243)
    #dbg_declare(ptr %index.dbg.spill, !15241, !DIExpression(), !15244)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %self) #19, !dbg !15245
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !15245
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !15245
  store ptr %_3.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %_3.1, ptr %2, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !15246, !DIExpression(), !15253)
    #dbg_declare(ptr undef, !15251, !DIExpression(), !15255)
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { ptr, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hbb28f37b0fd543b0E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %0) #19, !dbg !15256
  %_0.0.i = extractvalue { ptr, i64 } %3, 0, !dbg !15256
  %_0.1.i = extractvalue { ptr, i64 } %3, 1, !dbg !15256
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !15257
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !15257
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !15258
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !15258
  ret { ptr, i64 } %5, !dbg !15258
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint noredzone nounwind
define dso_local { ptr, i64 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17haf53587d6ad804b1E"(ptr align 8 %self, i64 %index, ptr align 8 %0) unnamed_addr #1 !dbg !15259 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %index.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15263, !DIExpression(), !15266)
  store i64 %index, ptr %index.dbg.spill, align 8
    #dbg_declare(ptr %index.dbg.spill, !15264, !DIExpression(), !15267)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE"(ptr align 8 %self) #19, !dbg !15268
  %_3.0 = extractvalue { ptr, i64 } %1, 0, !dbg !15268
  %_3.1 = extractvalue { ptr, i64 } %1, 1, !dbg !15268
  store ptr %_3.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %_3.1, ptr %2, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !15269, !DIExpression(), !15275)
  store i64 %index, ptr %index.dbg.spill.i, align 8
    #dbg_declare(ptr %index.dbg.spill.i, !15274, !DIExpression(), !15277)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h50fa3c00e89212a4E"(i64 %index, ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %0) #19, !dbg !15278
  %_0.0.i = extractvalue { ptr, i64 } %3, 0, !dbg !15278
  %_0.1.i = extractvalue { ptr, i64 } %3, 1, !dbg !15278
  %_0.0 = extractvalue { ptr, i64 } %3, 0, !dbg !15279
  %_0.1 = extractvalue { ptr, i64 } %3, 1, !dbg !15279
  %4 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0, !dbg !15280
  %5 = insertvalue { ptr, i64 } %4, i64 %_0.1, 1, !dbg !15280
  ret { ptr, i64 } %5, !dbg !15280
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h49c450e26972f9f4E"(ptr align 8 %self, ptr align 1 %iter.0, i64 %iter.1, ptr align 8 %0) unnamed_addr #0 !dbg !15281 {
start:
  %iter.dbg.spill = alloca [16 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15284, !DIExpression(), !15288)
  store ptr %iter.0, ptr %iter.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %iter.dbg.spill, i64 8
  store i64 %iter.1, ptr %1, align 8
    #dbg_declare(ptr %iter.dbg.spill, !15285, !DIExpression(), !15289)
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %2 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hc2e1b85e37379986E"(ptr align 1 %iter.0, i64 %iter.1) #19, !dbg !15290
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !15290
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !15290
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h79082c1a5f5ce760E"(ptr align 8 %self, ptr %_3.0, ptr %_3.1, ptr align 8 %0) #19, !dbg !15291
  ret void, !dbg !15292
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdaf5ef8f0552c2caE"(ptr align 8 %self) unnamed_addr #0 !dbg !15293 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15296, !DIExpression(), !15297)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE"(ptr align 8 %self) #19, !dbg !15298
  %0 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15299
  %_4 = load i64, ptr %0, align 8, !dbg !15299
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbe29bced288f50aaE(ptr %_3, i64 %_4) #19, !dbg !15300
  %_2.0 = extractvalue { ptr, i64 } %1, 0, !dbg !15300
  %_2.1 = extractvalue { ptr, i64 } %1, 1, !dbg !15300
  ret void, !dbg !15301
}

; <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h85dded5f46da42afE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1, ptr align 8 %0) unnamed_addr #0 !dbg !15302 {
start:
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %1, align 8
    #dbg_declare(ptr %s.dbg.spill, !15307, !DIExpression(), !15308)
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hef05650c30b71d4bE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1) #19, !dbg !15309
  ret void, !dbg !15310
}

; <alloc::vec::Vec<u8> as core::convert::From<&str>>::from
; Function Attrs: noredzone nounwind
define dso_local void @"_ZN80_$LT$alloc..vec..Vec$LT$u8$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h3f5014ea632fb998E"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %s.0, i64 %s.1, ptr align 8 %0) unnamed_addr #0 !dbg !15311 {
start:
  %self.dbg.spill.i = alloca [16 x i8], align 8
  %s.dbg.spill = alloca [16 x i8], align 8
  store ptr %s.0, ptr %s.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %s.dbg.spill, i64 8
  store i64 %s.1, ptr %1, align 8
    #dbg_declare(ptr %s.dbg.spill, !15316, !DIExpression(), !15317)
  store ptr %s.0, ptr %self.dbg.spill.i, align 8
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i64 8
  store i64 %s.1, ptr %2, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !4413, !DIExpression(), !15318)
  %3 = insertvalue { ptr, i64 } poison, ptr %s.0, 0, !dbg !15320
  %4 = insertvalue { ptr, i64 } %3, i64 %s.1, 1, !dbg !15320
  %_2.0 = extractvalue { ptr, i64 } %4, 0, !dbg !15321
  %_2.1 = extractvalue { ptr, i64 } %4, 1, !dbg !15321
; call <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from
  call void @"_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h85dded5f46da42afE"(ptr sret([24 x i8]) align 8 %_0, ptr align 1 %_2.0, i64 %_2.1, ptr align 8 %0) #19, !dbg !15322
  ret void, !dbg !15323
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint noredzone nounwind
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h3c1c8386bd0cea87E"(ptr align 1 %self) unnamed_addr #1 !dbg !15324 {
start:
  %self.dbg.spill = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15329, !DIExpression(), !15330)
  ret void, !dbg !15331
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint noredzone nounwind
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h135a58c11680f750E"(ptr align 8 %self) unnamed_addr #1 !dbg !15332 {
start:
  %__self_1.dbg.spill = alloca [8 x i8], align 8
  %__self_0.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !15338, !DIExpression(), !15342)
  %0 = load i64, ptr %self, align 8, !dbg !15342
  %1 = icmp eq i64 %0, 0, !dbg !15342
  %_2 = select i1 %1, i64 0, i64 1, !dbg !15342
  %2 = icmp eq i64 %_2, 0, !dbg !15342
  br i1 %2, label %bb3, label %bb2, !dbg !15342

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !15342
  br label %bb5, !dbg !15342

bb2:                                              ; preds = %start
  store ptr %self, ptr %__self_0.dbg.spill, align 8, !dbg !15343
    #dbg_declare(ptr %__self_0.dbg.spill, !15339, !DIExpression(), !15344)
  %__self_1 = getelementptr inbounds i8, ptr %self, i64 16, !dbg !15345
  store ptr %__self_1, ptr %__self_1.dbg.spill, align 8, !dbg !15345
    #dbg_declare(ptr %__self_1.dbg.spill, !15341, !DIExpression(), !15346)
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %3 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h1712cafb487c0813E"(ptr align 8 %self) #19, !dbg !15344
  %_5.0 = extractvalue { i64, i64 } %3, 0, !dbg !15344
  %_5.1 = extractvalue { i64, i64 } %3, 1, !dbg !15344
  store i64 %_5.0, ptr %_0, align 8, !dbg !15347
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !15347
  store i64 %_5.1, ptr %4, align 8, !dbg !15347
  br label %bb5, !dbg !15348

bb5:                                              ; preds = %bb2, %bb3
  %5 = load i64, ptr %_0, align 8, !dbg !15349
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !15349
  %7 = load i64, ptr %6, align 8, !dbg !15349
  %8 = insertvalue { i64, i64 } poison, i64 %5, 0, !dbg !15349
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !15349
  ret { i64, i64 } %9, !dbg !15349

bb1:                                              ; No predecessors!
  unreachable, !dbg !15342
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #9

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hbdfc1a1cb4709f58E"(ptr, ptr) unnamed_addr #1

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint noredzone nounwind
declare dso_local align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3292520a76dfa431E"(ptr align 8) unnamed_addr #1

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking14panic_nounwind17hfc993481fff279c3E(ptr align 1, i64) unnamed_addr #10

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core5slice5index24slice_end_index_len_fail17h32a5160b7d4ab128E(i64, i64, ptr align 8) unnamed_addr #10

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core5slice5index22slice_index_order_fail17hbd20032dde04b2c9E(i64, i64, ptr align 8) unnamed_addr #10

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h32020fa005a005ebE"(i64, i64, ptr, i64) unnamed_addr #1

; <str as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e78d225f156be20E"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #9

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h2172446e24132f7bE"(ptr align 1, i64) unnamed_addr #1

; core::panicking::panic_const::panic_const_sub_overflow
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h53fb6c3dd8613dddE(ptr align 8) unnamed_addr #10

; core::panicking::panic_bounds_check
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
declare dso_local void @_ZN4core9panicking18panic_bounds_check17h108cc659bbe8a41aE(i64, i64, ptr align 8) unnamed_addr #3

; core::panicking::panic
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking5panic17h7fc528264ed09151E(ptr align 1, i64, ptr align 8) unnamed_addr #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #12

; core::panicking::panic_const::panic_const_add_overflow
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h4c6b9706f31e349eE(ptr align 8) unnamed_addr #10

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @_ZN4core5slice3raw14from_raw_parts17h42c262a59a518897E(ptr, i64) unnamed_addr #1

; Function Attrs: noredzone nounwind
declare dso_local i64 @strlen(ptr) unnamed_addr #0

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h8a931bc535da4445E(ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h3620bb11f995d411E(ptr align 8) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h447db19b7d01ee58E"(ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hfc47f814aa826677E"(ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17h82f9f3e4c5ec98ecE"(ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h3dd1a47b22e61be3E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hd4e86af42a28a756E"(ptr align 8, ptr align 8) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17ha08e884baf93fe5eE"(ptr align 8, ptr align 8) unnamed_addr #0

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6afd0e2edcd8e72E"(ptr align 8, i64) unnamed_addr #1

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h84d3606abc15c5b9E"(i64, i64, i64) unnamed_addr #1

; core::option::Option<T>::is_some
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h7f617821f9074f55E"(ptr align 8) unnamed_addr #1

; Function Attrs: convergent nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.is.constant.i1(i1) #13

; core::fmt::write
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt5write17h09f3fe8c6b03e28fE(ptr align 1, ptr align 8, ptr align 8) unnamed_addr #0

; <core::slice::iter::Iter<T> as core::default::Default>::default
; Function Attrs: noredzone nounwind
declare dso_local { ptr, ptr } @"_ZN75_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h6455e60f8a0ac6a0E"() unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i8, i1 } @llvm.umul.with.overflow.i8(i8, i8) #12

; core::panicking::panic_const::panic_const_mul_overflow
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hd8b965a20a5b4c6fE(ptr align 8) unnamed_addr #10

; core::panicking::panic_const::panic_const_neg_overflow
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const24panic_const_neg_overflow17h46f6b4e5fe3e9b7eE(ptr align 8) unnamed_addr #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.bswap.i16(i16) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; core::panicking::panic_const::panic_const_div_by_zero
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h9baa8b25c99cffa1E(ptr align 8) unnamed_addr #10

; core::panicking::panic_const::panic_const_rem_by_zero
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h33ec7c25b61c77dbE(ptr align 8) unnamed_addr #10

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint noredzone nounwind
declare dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7839b8f23029f390E"(ptr, i64) unnamed_addr #1

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h55bba6fb1b551a04E"(ptr) unnamed_addr #1

; core::ptr::metadata::metadata
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i64 @_ZN4core3ptr8metadata8metadata17h4d1dda34fb850d52E(ptr, i64) unnamed_addr #1

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbe29bced288f50aaE(ptr, i64) unnamed_addr #1

; core::ptr::const_ptr::<impl *const T>::sub_ptr::runtime_ptr_ge
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr14runtime_ptr_ge17hd482217019bb0c37E"(ptr, ptr) unnamed_addr #0

; core::panicking::panic_const::panic_const_shr_overflow
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17he50ba0874cb8eaabE(ptr align 8) unnamed_addr #10

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint noredzone nounwind
declare dso_local align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h570d5c5f6788e5b2E"(ptr align 8) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
declare dso_local align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7eec2262dff7c3c8E"(ptr align 1) unnamed_addr #1

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4e427adaa6e91b0bE"(ptr align 1, ptr align 8) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { i32, i32 } @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h704e9d46e33e2afbE"() unnamed_addr #1

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h938db19c45b87448E"(ptr align 1, i64) unnamed_addr #1

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h8f7b268f3d5c7a66E"(ptr align 8) unnamed_addr #1

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h8291b39f222ede87E"(ptr align 4) unnamed_addr #1

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h86439c6721016fafE(ptr, i64) unnamed_addr #1

; core::char::methods::encode_utf8_raw::do_panic::runtime
; Function Attrs: noredzone noreturn nounwind
declare dso_local void @_ZN4core4char7methods15encode_utf8_raw8do_panic7runtime17h2a2ebb6386513b4dE(i32 signext, i64, i64, ptr align 8) unnamed_addr #7

; core::alloc::layout::Layout::is_size_align_valid
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core5alloc6layout6Layout19is_size_align_valid17h6a649d2c15e763c8E(i64, i64) unnamed_addr #0

; core::ptr::alignment::Alignment::max
; Function Attrs: noredzone nounwind
declare dso_local i64 @_ZN4core3ptr9alignment9Alignment3max17he844b410c894fddbE(i64, i64) unnamed_addr #0

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @_ZN4core3fmt9Arguments9new_const17h37c31df56467d349E(ptr sret([48 x i8]) align 8, ptr align 8) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking9panic_fmt17ha5c3c01f8eac83b3E(ptr align 8, ptr align 8) unnamed_addr #10

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6c98ee10c640cd3cE"(i64, ptr, i64) unnamed_addr #1

; core::ptr::align_offset
; Function Attrs: noredzone nounwind
declare dso_local i64 @_ZN4core3ptr12align_offset17hfd89719bbb2bcfceE(ptr, i64) unnamed_addr #0

; core::slice::<impl [T]>::split_at
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17he8420eb640a4d96bE"(ptr sret([32 x i8]) align 8, ptr align 1, i64, i64, ptr align 8) unnamed_addr #1

; core::slice::<impl [T]>::split_at_unchecked
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h85f8cfc9f7d798cfE"(ptr sret([32 x i8]) align 8, ptr align 1, i64, i64) unnamed_addr #1

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core5slice5index29slice_end_index_overflow_fail17ha5867147dece32e1E(ptr align 8) unnamed_addr #10

; core::slice::index::slice_start_index_overflow_fail
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core5slice5index31slice_start_index_overflow_fail17hc2e48938c05b76a0E(ptr align 8) unnamed_addr #10

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hbb28f37b0fd543b0E"(ptr align 1, i64, ptr align 8) unnamed_addr #1

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h50fa3c00e89212a4E"(i64, ptr align 1, i64, ptr align 8) unnamed_addr #1

; core::slice::memchr::memchr_aligned
; Function Attrs: noredzone nounwind
declare dso_local { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h6b734f4507e90976E(i8 zeroext, ptr align 1, i64) unnamed_addr #0

; core::option::unwrap_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core6option13unwrap_failed17h218570abae70db0dE(ptr align 8) unnamed_addr #10

; core::result::unwrap_failed
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core6result13unwrap_failed17h32e9195b123d06eeE(ptr align 1, i64, ptr align 1, ptr align 8, ptr align 8) unnamed_addr #10

; core::panicking::assert_failed_inner
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
declare dso_local void @_ZN4core9panicking19assert_failed_inner17h0daed3fa3cd6b090E(i8 zeroext, ptr align 1, ptr align 8, ptr align 1, ptr align 8, ptr align 8, ptr align 8) unnamed_addr #3

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hb2e2a778e79e2314E"(ptr, i64) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter9write_str17h7692d295d2a10118E(ptr align 8, ptr align 1, i64) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i8, i1 } @llvm.uadd.with.overflow.i8(i8, i8) #12

; core::str::pattern::StrSearcher::new
; Function Attrs: noredzone nounwind
declare dso_local void @_ZN4core3str7pattern11StrSearcher3new17h1e1bd3b48e5e7882E(ptr sret([104 x i8]) align 8, ptr align 1, i64, ptr align 1, i64) unnamed_addr #0

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h47b966ff4803c6f6E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::Formatter::debug_tuple_field1_finish
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h726b5c23733a7025E(ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #0

; core::str::validations::next_code_point
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { i32, i32 } @_ZN4core3str11validations15next_code_point17hd2852aacb5e6ed22E(ptr align 8) unnamed_addr #1

; core::option::Option<T>::map
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17h55013ac97e6ade84E"(i32, i32) unnamed_addr #1

; core::ptr::non_null::NonNull<T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i64 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h184b0c10dbb2f6e5E"(ptr, ptr) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h69a9823995497ce2E"(i16, i16) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #12

; core::cmp::max
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i64 @_ZN4core3cmp3max17h09455f6077321db0E(i64, i64) unnamed_addr #1

; core::panicking::assert_failed
; Function Attrs: cold minsize noinline noredzone noreturn nounwind optsize
declare dso_local void @_ZN4core9panicking13assert_failed17ha889447e65b19718E(i8 zeroext, ptr align 8, ptr align 8, ptr align 8, ptr align 8) unnamed_addr #3

; Function Attrs: noredzone nounwind allockind("alloc,uninitialized,aligned") allocsize(0)
declare dso_local noalias ptr @__rust_alloc(i64, i64 allocalign) unnamed_addr #14

; Function Attrs: noredzone nounwind allockind("free")
declare dso_local void @__rust_dealloc(ptr allocptr, i64, i64) unnamed_addr #15

; Function Attrs: noredzone nounwind allockind("realloc,aligned") allocsize(3)
declare dso_local noalias ptr @__rust_realloc(ptr allocptr, i64, i64 allocalign, i64) unnamed_addr #16

; Function Attrs: noredzone nounwind allockind("alloc,zeroed,aligned") allocsize(0)
declare dso_local noalias ptr @__rust_alloc_zeroed(i64, i64 allocalign) unnamed_addr #17

; Function Attrs: noredzone noreturn nounwind
declare dso_local void @__rust_alloc_error_handler(i64, i64) unnamed_addr #7

; core::fmt::rt::Argument::new_display
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @_ZN4core3fmt2rt8Argument11new_display17h8062d71330cba43dE(ptr sret([16 x i8]) align 8, ptr align 8) unnamed_addr #1

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @_ZN4core3fmt9Arguments6new_v117ha6a77a92f9f24c92E(ptr sret([48 x i8]) align 8, ptr align 8, ptr align 8) unnamed_addr #1

; core::panicking::panic_nounwind_fmt
; Function Attrs: cold noinline noredzone noreturn nounwind
declare dso_local void @_ZN4core9panicking18panic_nounwind_fmt17hd18759d7b00dd58aE(ptr align 8, i1 zeroext, ptr align 8) unnamed_addr #10

; Function Attrs: cold noreturn nounwind memory(inaccessiblemem: write)
declare void @llvm.trap() #18

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6f5d72278f0336c2E"(i1 zeroext) unnamed_addr #1

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc90fb1daef4651adE"(ptr align 8) unnamed_addr #1

; core::option::Option<T>::is_none
; Function Attrs: inlinehint noredzone nounwind
declare dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17he71727173ad5660aE"(ptr align 8) unnamed_addr #1

; <core::ffi::c_str::CStr as core::fmt::Debug>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN59_$LT$core..ffi..c_str..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h2911853f019f956dE"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @_ZN4core3fmt9Arguments6new_v117h63782da5e03c5a43E(ptr sret([48 x i8]) align 8, ptr align 8, ptr align 8) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h401e3d670cc48d35E"(ptr align 1, i64, ptr align 8) unnamed_addr #0

; <core::str::error::Utf8Error as core::fmt::Display>::fmt
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17heb4a47b0542153a5E"(ptr align 8, ptr align 8) unnamed_addr #0

; <core::str::error::Utf8Error as core::error::Error>::description
; Function Attrs: noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..error..Error$GT$11description17hfdb6b94179120958E"(ptr align 8) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h761462e48c1c349dE"(ptr sret([24 x i8]) align 8, ptr align 8) unnamed_addr #1

; core::unicode::unicode_data::conversions::to_lower
; Function Attrs: noredzone nounwind
declare dso_local void @_ZN4core7unicode12unicode_data11conversions8to_lower17h5a74cdd27a13bdbdE(ptr sret([12 x i8]) align 4, i32 signext) unnamed_addr #0

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hb16c0014501ab2ddE"(ptr align 1, i64, i64, ptr align 8) unnamed_addr #1

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h79f725d0f9a9852dE"(ptr align 1, i64, i64, ptr align 8) unnamed_addr #1

; core::unicode::unicode_data::cased::lookup
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17hc924efbcce64d2fcE(i32 signext) unnamed_addr #0

; core::unicode::unicode_data::case_ignorable::lookup
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17h763c807f6c8ed5d3E(i32 signext) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d1b7bb79df1a3d7E"(ptr, ptr) unnamed_addr #1

; core::unicode::unicode_data::conversions::to_upper
; Function Attrs: noredzone nounwind
declare dso_local void @_ZN4core7unicode12unicode_data11conversions8to_upper17hc934648acf96e392E(ptr sret([12 x i8]) align 4, i32 signext) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd370b081b84c2999E"(i64, i64) unnamed_addr #1

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h49d9c6ac9a42a61fE"(ptr align 8) unnamed_addr #1

; core::str::converts::from_utf8
; Function Attrs: noredzone nounwind
declare dso_local void @_ZN4core3str8converts9from_utf817hdab18433f5fda5bdE(ptr sret([24 x i8]) align 8, ptr align 1, i64) unnamed_addr #0

; core::str::lossy::<impl [u8]>::utf8_chunks
; Function Attrs: noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN4core3str5lossy30_$LT$impl$u20$$u5b$u8$u5d$$GT$11utf8_chunks17h9f42c350fc2b892fE"(ptr align 1, i64) unnamed_addr #0

; <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
; Function Attrs: noredzone nounwind
declare dso_local void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h039d4a0e8ae09119E"(ptr sret([32 x i8]) align 8, ptr align 8) unnamed_addr #0

; core::str::lossy::Utf8Chunk::valid
; Function Attrs: noredzone nounwind
declare dso_local { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk5valid17hc95a3b730b2dec96E(ptr align 8) unnamed_addr #0

; core::str::lossy::Utf8Chunk::invalid
; Function Attrs: noredzone nounwind
declare dso_local { ptr, i64 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h61b99c7f2e978407E(ptr align 8) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h34c67bcdb7a7f834E"(ptr align 1, i64) unnamed_addr #1

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint noredzone nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h84987636a86f045fE"(ptr align 2, i64) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: noredzone nounwind
declare dso_local void @_ZN4core3fmt9Formatter11debug_tuple17haf38507947b5ac8cE(ptr sret([24 x i8]) align 8, ptr align 8, ptr align 1, i64) unnamed_addr #0

; core::fmt::builders::DebugTuple::field
; Function Attrs: noredzone nounwind
declare dso_local align 8 ptr @_ZN4core3fmt8builders10DebugTuple5field17h1a192822c3a3497eE(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #0

; core::fmt::builders::DebugTuple::finish
; Function Attrs: noredzone nounwind
declare dso_local zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hde08fd6bd9f90069E(ptr align 8) unnamed_addr #0

; core::ptr::const_ptr::<impl *const T>::sub_ptr
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hfe108b1d41dbe45fE"(ptr, ptr) unnamed_addr #1

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint noredzone nounwind
declare dso_local void @_ZN4core3fmt9Arguments6new_v117h108d6cf26daf898fE(ptr sret([48 x i8]) align 8, ptr align 8, ptr align 8) unnamed_addr #1

; core::ptr::read
; Function Attrs: inlinehint noredzone nounwind
declare dso_local i8 @_ZN4core3ptr4read17h3f3b527a7d47ec42E(ptr) unnamed_addr #1

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: noredzone nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hc2e1b85e37379986E"(ptr align 1, i64) unnamed_addr #0

attributes #0 = { noredzone nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #1 = { inlinehint noredzone nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #2 = { cold noredzone nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #3 = { cold minsize noinline noredzone noreturn nounwind optsize "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #4 = { noinline noredzone noreturn nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #5 = { noinline noredzone nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #6 = { cold minsize noredzone noreturn nounwind optsize "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #7 = { noredzone noreturn nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #8 = { inlinehint noredzone noreturn nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #9 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #10 = { cold noinline noredzone noreturn nounwind "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #11 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { convergent nocallback nofree nosync nounwind willreturn memory(none) }
attributes #14 = { noredzone nounwind allockind("alloc,uninitialized,aligned") allocsize(0) "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #15 = { noredzone nounwind allockind("free") "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #16 = { noredzone nounwind allockind("realloc,aligned") allocsize(3) "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #17 = { noredzone nounwind allockind("alloc,zeroed,aligned") allocsize(0) "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="generic" "target-features"="+m,+a,+f,+d" }
attributes #18 = { cold noreturn nounwind memory(inaccessiblemem: write) }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }

!llvm.ident = !{!203}
!llvm.module.flags = !{!204, !205, !206}
!llvm.dbg.cu = !{!207}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<core::fmt::Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::fmt::Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !15, identifier: "63674b1f65b2c64bebf83fcfaf1766a6")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !13, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "88bdaad12ab9292616a11cf434e5c7ba")
!13 = !DINamespace(name: "fmt", scope: !14)
!14 = !DINamespace(name: "core", scope: null)
!15 = !{}
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "<core::alloc::layout::LayoutError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !18, isLocal: true, isDefinition: true)
!18 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::alloc::layout::LayoutError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !19, vtableHolder: !24, templateParams: !15, identifier: "4c41886309f81ac29c8d00d501df1c2d")
!19 = !{!20, !21, !22, !23}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !18, file: !2, baseType: !6, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !18, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !18, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !25, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "37092b2118b02d8f439ac079f06d5fd8")
!25 = !DINamespace(name: "layout", scope: !26)
!26 = !DINamespace(name: "alloc", scope: !14)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(name: "<&core::option::Option<u8> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !29, isLocal: true, isDefinition: true)
!29 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::option::Option<u8> as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !30, vtableHolder: !35, templateParams: !15, identifier: "a162cd4ae345764875658bb3cbd44159")
!30 = !{!31, !32, !33, !34}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !29, file: !2, baseType: !6, size: 64, align: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !29, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !29, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !29, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<u8>", baseType: !36, size: 64, align: 64, dwarfAddressSpace: 0)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !37, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !38, templateParams: !15, identifier: "d6f22cc22e45f5f9ab187b52200cd8f")
!37 = !DINamespace(name: "option", scope: !14)
!38 = !{!39}
!39 = !DICompositeType(tag: DW_TAG_variant_part, scope: !36, file: !2, size: 16, align: 8, elements: !40, templateParams: !15, identifier: "a4b7745bcbc13388ebd9a5ae2e02626d", discriminator: !50)
!40 = !{!41, !46}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !39, file: !2, baseType: !42, size: 16, align: 8, extraData: i128 0)
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !36, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !43, identifier: "e75e27fd01985ed823243db98f60256b")
!43 = !{!44}
!44 = !DITemplateTypeParameter(name: "T", type: !45)
!45 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !39, file: !2, baseType: !47, size: 16, align: 8, extraData: i128 1)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !36, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !48, templateParams: !43, identifier: "982ee1d8d7bc989f6182243a83f0e8b8")
!48 = !{!49}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !47, file: !2, baseType: !45, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!50 = !DIDerivedType(tag: DW_TAG_member, scope: !36, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagArtificial)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "<usize as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !53, isLocal: true, isDefinition: true)
!53 = !DICompositeType(tag: DW_TAG_structure_type, name: "<usize as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !54, vtableHolder: !9, templateParams: !15, identifier: "651e42ea9eb042c89f2b7861a55a4456")
!54 = !{!55, !56, !57, !58}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !53, file: !2, baseType: !6, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !53, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !53, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !53, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !61, isLocal: true, isDefinition: true)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !62, vtableHolder: !67, templateParams: !15, identifier: "d2eae5b11831f76cbc4372ca7516e0db")
!62 = !{!63, !64, !65, !66}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !61, file: !2, baseType: !6, size: 64, align: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !61, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !61, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !61, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!68 = !DIGlobalVariableExpression(var: !69, expr: !DIExpression())
!69 = distinct !DIGlobalVariable(name: "<alloc::string::String as core::fmt::Write>::{vtable}", scope: null, file: !2, type: !70, isLocal: true, isDefinition: true)
!70 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::string::String as core::fmt::Write>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !71, vtableHolder: !78, templateParams: !15, identifier: "de84d384ef59952886253fb60dc36eaf")
!71 = !{!72, !73, !74, !75, !76, !77}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !70, file: !2, baseType: !6, size: 64, align: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !70, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !70, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !70, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !70, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !70, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !79, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !81, templateParams: !15, identifier: "b275c777de813c51d4268b3f3840e4a7")
!79 = !DINamespace(name: "string", scope: !80)
!80 = !DINamespace(name: "alloc", scope: null)
!81 = !{!82}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !78, file: !2, baseType: !83, size: 192, align: 64, flags: DIFlagPrivate)
!83 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !84, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !85, templateParams: !117, identifier: "27ecb52cbde396d1cbae4542d3333c15")
!84 = !DINamespace(name: "vec", scope: !80)
!85 = !{!86, !118}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !83, file: !2, baseType: !87, size: 128, align: 64, flags: DIFlagPrivate)
!87 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !88, file: !2, size: 128, align: 64, flags: DIFlagProtected, elements: !89, templateParams: !117, identifier: "3a51bfb4ab6f4c48ba8b5eb870ee92dd")
!88 = !DINamespace(name: "raw_vec", scope: !80)
!89 = !{!90, !116}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !87, file: !2, baseType: !91, size: 128, align: 64, flags: DIFlagPrivate)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVecInner<alloc::alloc::Global>", scope: !88, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !92, templateParams: !114, identifier: "b5b458590724f0b3ea825e5d9279915")
!92 = !{!93, !107, !111}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !91, file: !2, baseType: !94, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!94 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !95, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !97, templateParams: !43, identifier: "ac7a1d5852033f0295dca2fbee0155a0")
!95 = !DINamespace(name: "unique", scope: !96)
!96 = !DINamespace(name: "ptr", scope: !14)
!97 = !{!98, !104}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !94, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagPrivate)
!99 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !101, templateParams: !43, identifier: "80ae125ba1e168585a5b931998775a0e")
!100 = !DINamespace(name: "non_null", scope: !96)
!101 = !{!102}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !99, file: !2, baseType: !103, size: 64, align: 64, flags: DIFlagPrivate)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !94, file: !2, baseType: !105, align: 8, offset: 64, flags: DIFlagPrivate)
!105 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !43, identifier: "8d71d2f11c218c0a0fd6dd24e4ec3cb")
!106 = !DINamespace(name: "marker", scope: !14)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !91, file: !2, baseType: !108, size: 64, align: 64, flags: DIFlagPrivate)
!108 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cap", scope: !88, file: !2, size: 64, align: 64, flags: DIFlagPrivate, elements: !109, templateParams: !15, identifier: "9978f272e6e1d9a576691aa7d593f946")
!109 = !{!110}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !108, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPrivate)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !91, file: !2, baseType: !112, align: 8, offset: 128, flags: DIFlagPrivate)
!112 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !113, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "ba57508d21470679eff9d8c40fa663d3")
!113 = !DINamespace(name: "alloc", scope: !80)
!114 = !{!115}
!115 = !DITemplateTypeParameter(name: "A", type: !112)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !87, file: !2, baseType: !105, align: 8, offset: 128, flags: DIFlagPrivate)
!117 = !{!44, !115}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !83, file: !2, baseType: !9, size: 64, align: 64, offset: 128, flags: DIFlagPrivate)
!119 = !DIGlobalVariableExpression(var: !120, expr: !DIExpression())
!120 = distinct !DIGlobalVariable(name: "<alloc::boxed::convert::{impl#19}::from::StringError as core::error::Error>::{vtable}", scope: null, file: !2, type: !121, isLocal: true, isDefinition: true)
!121 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::boxed::convert::{impl#19}::from::StringError as core::error::Error>::{vtable_type}", file: !2, size: 704, align: 64, flags: DIFlagArtificial, elements: !122, vtableHolder: !134, templateParams: !15, identifier: "36d0c5e6ed10e78e301249503d7e38ca")
!122 = !{!123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !121, file: !2, baseType: !6, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !121, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !121, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "__super_trait_ptr5", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "__method6", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 384)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "__method7", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 448)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__method8", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 512)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "__method9", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 576)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "__method10", scope: !121, file: !2, baseType: !6, size: 64, align: 64, offset: 640)
!134 = !DICompositeType(tag: DW_TAG_structure_type, name: "StringError", scope: !135, file: !2, size: 192, align: 64, flags: DIFlagProtected, elements: !139, templateParams: !15, identifier: "fd2d19de6640a1ec47e221c68d9f48e9")
!135 = !DINamespace(name: "from", scope: !136)
!136 = !DINamespace(name: "{impl#19}", scope: !137)
!137 = !DINamespace(name: "convert", scope: !138)
!138 = !DINamespace(name: "boxed", scope: !80)
!139 = !{!140}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !134, file: !2, baseType: !78, size: 192, align: 64, flags: DIFlagProtected)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "<core::str::error::Utf8Error as core::error::Error>::{vtable}", scope: null, file: !2, type: !143, isLocal: true, isDefinition: true)
!143 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::str::error::Utf8Error as core::error::Error>::{vtable_type}", file: !2, size: 704, align: 64, flags: DIFlagArtificial, elements: !144, vtableHolder: !156, templateParams: !15, identifier: "7608f514707c4a0dc8d2545ede052db4")
!144 = !{!145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !143, file: !2, baseType: !6, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !143, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !143, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "__super_trait_ptr5", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "__method6", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 384)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "__method7", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 448)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "__method8", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 512)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "__method9", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 576)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "__method10", scope: !143, file: !2, baseType: !6, size: 64, align: 64, offset: 640)
!156 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !157, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !159, templateParams: !15, identifier: "55056c068c404bb9ec2d5a49832c9a2b")
!157 = !DINamespace(name: "error", scope: !158)
!158 = !DINamespace(name: "str", scope: !14)
!159 = !{!160, !161}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !156, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagProtected)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !156, file: !2, baseType: !36, size: 16, align: 8, offset: 64, flags: DIFlagProtected)
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "<&str as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !164, isLocal: true, isDefinition: true)
!164 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&str as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !165, vtableHolder: !170, templateParams: !15, identifier: "2ca2f99333556d05226429ca680db30e")
!165 = !{!166, !167, !168, !169}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !164, file: !2, baseType: !6, size: 64, align: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !164, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !164, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !164, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !171, templateParams: !15, identifier: "9277eecd40495f85161460476aacc992")
!171 = !{!172, !174}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !170, file: !2, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !170, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "STATIC_INNER_SLICE", linkageName: "_ZN5alloc4sync18STATIC_INNER_SLICE17h661ba81b17d2f3ceE", scope: !177, file: !178, line: 3479, type: !179, isLocal: false, isDefinition: true, align: 128)
!177 = !DINamespace(name: "sync", scope: !80)
!178 = !DIFile(filename: "src/sync.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "6be3b567802e1e824897f02087cdd71b")
!179 = !DICompositeType(tag: DW_TAG_structure_type, name: "SliceArcInnerForStatic", scope: !177, file: !2, size: 256, align: 128, flags: DIFlagPrivate, elements: !180, templateParams: !15, identifier: "7c28b90c5326406e15fab3251b5d3e")
!180 = !{!181}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !179, file: !2, baseType: !182, size: 192, align: 64, flags: DIFlagPrivate)
!182 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<[u8; 1]>", scope: !177, file: !2, size: 192, align: 64, flags: DIFlagPrivate, elements: !183, templateParams: !201, identifier: "685131b1643234746cca70d4bfe5cd7e")
!183 = !{!184, !196, !197}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !182, file: !2, baseType: !185, size: 64, align: 64, flags: DIFlagPrivate)
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicUsize", scope: !186, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !188, templateParams: !15, identifier: "ca385c94aea77db07e65a571283c8b24")
!186 = !DINamespace(name: "atomic", scope: !187)
!187 = !DINamespace(name: "sync", scope: !14)
!188 = !{!189}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !185, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagPrivate)
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<usize>", scope: !191, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !192, templateParams: !194, identifier: "95e322098fe866402ed4197c5c1e0c32")
!191 = !DINamespace(name: "cell", scope: !14)
!192 = !{!193}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !190, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPrivate)
!194 = !{!195}
!195 = !DITemplateTypeParameter(name: "T", type: !9)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !182, file: !2, baseType: !185, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !182, file: !2, baseType: !198, size: 8, align: 8, offset: 128, flags: DIFlagPrivate)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 8, align: 8, elements: !199)
!199 = !{!200}
!200 = !DISubrange(count: 1, lowerBound: 0)
!201 = !{!202}
!202 = !DITemplateTypeParameter(name: "T", type: !198)
!203 = !{!"rustc version 1.85.0-nightly (c26db435b 2024-12-15)"}
!204 = !{i32 1, !"target-abi", !"lp64"}
!205 = !{i32 2, !"Dwarf Version", i32 4}
!206 = !{i32 2, !"Debug Info Version", i32 3}
!207 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !208, producer: "clang LLVM (rustc version 1.85.0-nightly (c26db435b 2024-12-15))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, globals: !297, splitDebugInlining: false, nameTableKind: None)
!208 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc/src/lib.rs/@/alloc.db98974eb1e1f83e-cgu.0", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc")
!209 = !{!210, !278, !283, !287, !293}
!210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AlignmentEnum", scope: !211, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagEnumClass, elements: !213)
!211 = !DINamespace(name: "alignment", scope: !96)
!212 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!213 = !{!214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277}
!214 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!215 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!216 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!217 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!218 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!219 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!220 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!221 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!222 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!223 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!224 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!225 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!226 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!227 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!228 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!229 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!230 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!231 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!232 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!233 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!234 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!235 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!236 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!237 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!238 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!239 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!240 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!241 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!242 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!243 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!244 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!245 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!246 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!247 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!248 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!249 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!250 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!251 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!252 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!253 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!254 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!255 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!256 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!257 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!258 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!259 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!260 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!261 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!262 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!263 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!264 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!265 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!266 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!267 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!268 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!269 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!270 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!271 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!272 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!273 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!274 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!275 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!276 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!277 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!278 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !13, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagEnumClass, elements: !279)
!279 = !{!280, !281, !282}
!280 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !284, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagEnumClass, elements: !285)
!284 = !DINamespace(name: "rt", scope: !13)
!285 = !{!280, !281, !282, !286}
!286 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !288, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagEnumClass, elements: !289)
!288 = !DINamespace(name: "panicking", scope: !14)
!289 = !{!290, !291, !292}
!290 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!291 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!292 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!293 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !88, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagEnumClass, elements: !294)
!294 = !{!295, !296}
!295 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!296 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!297 = !{!0, !16, !27, !51, !59, !68, !119, !141, !162, !175}
!298 = distinct !DISubprogram(name: "fold<char, core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h003b1cf887d8a7f1E", scope: !300, file: !299, line: 124, type: !304, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !377, retainedNodes: !373)
!299 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "47fd4c3c8424e034238ec6bb5a169812")
!300 = !DINamespace(name: "{impl#2}", scope: !301)
!301 = !DINamespace(name: "map", scope: !302)
!302 = !DINamespace(name: "adapters", scope: !303)
!303 = !DINamespace(name: "iter", scope: !14)
!304 = !DISubroutineType(types: !305)
!305 = !{null, !306, !7, !359}
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", scope: !301, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !307, templateParams: !356, identifier: "4aad6047b70ec19fa5778793d237e14")
!307 = !{!308, !352}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !306, file: !2, baseType: !309, size: 192, align: 64, flags: DIFlagProtected)
!309 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", scope: !310, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !312, templateParams: !350, identifier: "d9bafcad918b471cf8579ab4d6223f0b")
!310 = !DINamespace(name: "decode", scope: !311)
!311 = !DINamespace(name: "char", scope: !14)
!312 = !{!313, !338}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !309, file: !2, baseType: !314, size: 128, align: 64, flags: DIFlagPrivate)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloned<core::slice::iter::Iter<u16>>", scope: !315, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !316, templateParams: !336, identifier: "7af29f51737b84a2aafd11b4938fa597")
!315 = !DINamespace(name: "cloned", scope: !302)
!316 = !{!317}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !314, file: !2, baseType: !318, size: 128, align: 64, flags: DIFlagPrivate)
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u16>", scope: !319, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !321, templateParams: !328, identifier: "2aa791fc0cee8e6a4424c6c5043bbfbf")
!319 = !DINamespace(name: "iter", scope: !320)
!320 = !DINamespace(name: "slice", scope: !14)
!321 = !{!322, !330, !331}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !318, file: !2, baseType: !323, size: 64, align: 64, flags: DIFlagPrivate)
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u16>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !324, templateParams: !328, identifier: "e0fec20ac71245ae6c5f61dc199610fd")
!324 = !{!325}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !323, file: !2, baseType: !326, size: 64, align: 64, flags: DIFlagPrivate)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u16", baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!327 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!328 = !{!329}
!329 = !DITemplateTypeParameter(name: "T", type: !327)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !318, file: !2, baseType: !326, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !318, file: !2, baseType: !332, align: 8, offset: 128, flags: DIFlagPrivate)
!332 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u16>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !333, identifier: "1cb84533730f4ac55fdc5d36c9b3a07")
!333 = !{!334}
!334 = !DITemplateTypeParameter(name: "T", type: !335)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u16", baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!336 = !{!337}
!337 = !DITemplateTypeParameter(name: "I", type: !318)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !309, file: !2, baseType: !339, size: 32, align: 16, offset: 128, flags: DIFlagPrivate)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u16>", scope: !37, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !340, templateParams: !15, identifier: "154332e04d6aba443f9fa47743c46d22")
!340 = !{!341}
!341 = !DICompositeType(tag: DW_TAG_variant_part, scope: !339, file: !2, size: 32, align: 16, elements: !342, templateParams: !15, identifier: "8fa24e1f2baf16866ae0988b9a9601e8", discriminator: !349)
!342 = !{!343, !345}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !341, file: !2, baseType: !344, size: 32, align: 16, extraData: i128 0)
!344 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !339, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !15, templateParams: !328, identifier: "fe51a068183a0a6085b2c83917d0519f")
!345 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !341, file: !2, baseType: !346, size: 32, align: 16, extraData: i128 1)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !339, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !347, templateParams: !328, identifier: "2cdcbc76861ba8039c7ace7a5365d321")
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !346, file: !2, baseType: !327, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!349 = !DIDerivedType(tag: DW_TAG_member, scope: !339, file: !2, baseType: !327, size: 16, align: 16, flags: DIFlagArtificial)
!350 = !{!351}
!351 = !DITemplateTypeParameter(name: "I", type: !314)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !306, file: !2, baseType: !353, align: 8, offset: 192, flags: DIFlagPrivate)
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !354, file: !2, align: 8, elements: !15, identifier: "59915c46f61ca90589c4180b8c621e17")
!354 = !DINamespace(name: "from_utf16_lossy", scope: !355)
!355 = !DINamespace(name: "{impl#0}", scope: !79)
!356 = !{!357, !358}
!357 = !DITemplateTypeParameter(name: "I", type: !309)
!358 = !DITemplateTypeParameter(name: "F", type: !353)
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", scope: !360, file: !2, size: 64, align: 64, elements: !365, templateParams: !15, identifier: "6853fd758cc9132dfd5116f2e2191266")
!360 = !DINamespace(name: "call", scope: !361)
!361 = !DINamespace(name: "for_each", scope: !362)
!362 = !DINamespace(name: "Iterator", scope: !363)
!363 = !DINamespace(name: "iterator", scope: !364)
!364 = !DINamespace(name: "traits", scope: !303)
!365 = !{!366}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !359, file: !2, baseType: !367, size: 64, align: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", scope: !368, file: !2, size: 64, align: 64, elements: !370, templateParams: !15, identifier: "b181d271bc36358fc2ed44929499ced")
!368 = !DINamespace(name: "extend", scope: !369)
!369 = !DINamespace(name: "{impl#13}", scope: !79)
!370 = !{!371}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !367, file: !2, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::String", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!373 = !{!374, !375, !376}
!374 = !DILocalVariable(name: "self", arg: 1, scope: !298, file: !299, line: 124, type: !306)
!375 = !DILocalVariable(name: "init", arg: 2, scope: !298, file: !299, line: 124, type: !7)
!376 = !DILocalVariable(name: "g", arg: 3, scope: !298, file: !299, line: 124, type: !359)
!377 = !{!378, !357, !358, !380, !381}
!378 = !DITemplateTypeParameter(name: "B", type: !379)
!379 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!380 = !DITemplateTypeParameter(name: "Acc", type: !7)
!381 = !DITemplateTypeParameter(name: "G", type: !359)
!382 = !DILocation(line: 124, column: 21, scope: !298)
!383 = !DILocation(line: 124, column: 27, scope: !298)
!384 = !DILocation(line: 124, column: 38, scope: !298)
!385 = !DILocation(line: 128, column: 9, scope: !298)
!386 = !DILocation(line: 128, column: 30, scope: !298)
!387 = !DILocation(line: 129, column: 6, scope: !298)
!388 = distinct !DISubprogram(name: "fold<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0479151a0823b3f7E", scope: !300, file: !299, line: 124, type: !389, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !459, retainedNodes: !455)
!389 = !DISubroutineType(types: !390)
!390 = !{null, !391, !7, !449}
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", scope: !301, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !392, templateParams: !446, identifier: "5ccb7576028f8588718c2eee901708f4")
!392 = !{!393, !443}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !391, file: !2, baseType: !394, size: 128, align: 64, flags: DIFlagProtected)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !310, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !395, templateParams: !441, identifier: "24d947e66bbefeaf5897af30cdf4cb76")
!395 = !{!396, !440}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !394, file: !2, baseType: !397, size: 64, align: 64, flags: DIFlagPrivate)
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", scope: !301, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !398, templateParams: !437, identifier: "aafeb66688d3b6f09ece9fea517a47d2")
!398 = !{!399, !433}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !397, file: !2, baseType: !400, size: 64, align: 64, flags: DIFlagProtected)
!400 = !DICompositeType(tag: DW_TAG_structure_type, name: "Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>", scope: !401, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !402, templateParams: !431, identifier: "863f1a63af63f8ea133ba54534d310c1")
!401 = !DINamespace(name: "copied", scope: !302)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !400, file: !2, baseType: !404, size: 64, align: 64, flags: DIFlagPrivate)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::ArrayChunks<u8, 2>", baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayChunks<u8, 2>", scope: !319, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !406, templateParams: !43, identifier: "d94f6339d5fc600692af2cce53c1e90f")
!406 = !{!407, !426}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !405, file: !2, baseType: !408, size: 128, align: 64, flags: DIFlagPrivate)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<[u8; 2]>", scope: !319, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !409, templateParams: !418, identifier: "e072c42163525fd1a5eadeb2cabd4994")
!409 = !{!410, !420, !421}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !408, file: !2, baseType: !411, size: 64, align: 64, flags: DIFlagPrivate)
!411 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8; 2]>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !412, templateParams: !418, identifier: "3199d0e4ec7110e934df8329834559dc")
!412 = !{!413}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !411, file: !2, baseType: !414, size: 64, align: 64, flags: DIFlagPrivate)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 2]", baseType: !415, size: 64, align: 64, dwarfAddressSpace: 0)
!415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 16, align: 8, elements: !416)
!416 = !{!417}
!417 = !DISubrange(count: 2, lowerBound: 0)
!418 = !{!419}
!419 = !DITemplateTypeParameter(name: "T", type: !415)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !408, file: !2, baseType: !414, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !408, file: !2, baseType: !422, align: 8, offset: 128, flags: DIFlagPrivate)
!422 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&[u8; 2]>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !423, identifier: "9f7726e9a4c0a6265c599e7d27b315bf")
!423 = !{!424}
!424 = !DITemplateTypeParameter(name: "T", type: !425)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 2]", baseType: !415, size: 64, align: 64, dwarfAddressSpace: 0)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !405, file: !2, baseType: !427, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !428, templateParams: !15, identifier: "31681e0c10b314f1f33e38b2779acbb4")
!428 = !{!429, !430}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !427, file: !2, baseType: !173, size: 64, align: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !427, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!431 = !{!432}
!432 = !DITemplateTypeParameter(name: "I", type: !404)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !397, file: !2, baseType: !434, align: 8, offset: 64, flags: DIFlagPrivate)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn([u8; 2]) -> u16", baseType: !435, align: 1, dwarfAddressSpace: 0)
!435 = !DISubroutineType(types: !436)
!436 = !{!327, !415}
!437 = !{!438, !439}
!438 = !DITemplateTypeParameter(name: "I", type: !400)
!439 = !DITemplateTypeParameter(name: "F", type: !434)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !394, file: !2, baseType: !339, size: 32, align: 16, offset: 64, flags: DIFlagPrivate)
!441 = !{!442}
!442 = !DITemplateTypeParameter(name: "I", type: !397)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !391, file: !2, baseType: !444, align: 8, offset: 128, flags: DIFlagPrivate)
!444 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !445, file: !2, align: 8, elements: !15, identifier: "64c7308ff8a184e5af0ba3fb8b97a37e")
!445 = !DINamespace(name: "from_utf16be_lossy", scope: !355)
!446 = !{!447, !448}
!447 = !DITemplateTypeParameter(name: "I", type: !394)
!448 = !DITemplateTypeParameter(name: "F", type: !444)
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", scope: !360, file: !2, size: 64, align: 64, elements: !450, templateParams: !15, identifier: "c8601fed03ccc3077062ee698da98bd7")
!450 = !{!451}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !449, file: !2, baseType: !452, size: 64, align: 64)
!452 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", scope: !368, file: !2, size: 64, align: 64, elements: !453, templateParams: !15, identifier: "a14ca6e1f74b074651f25f19e4c4cf26")
!453 = !{!454}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !452, file: !2, baseType: !372, size: 64, align: 64)
!455 = !{!456, !457, !458}
!456 = !DILocalVariable(name: "self", arg: 1, scope: !388, file: !299, line: 124, type: !391)
!457 = !DILocalVariable(name: "init", arg: 2, scope: !388, file: !299, line: 124, type: !7)
!458 = !DILocalVariable(name: "g", arg: 3, scope: !388, file: !299, line: 124, type: !449)
!459 = !{!378, !447, !448, !380, !460}
!460 = !DITemplateTypeParameter(name: "G", type: !449)
!461 = !DILocation(line: 124, column: 21, scope: !388)
!462 = !DILocation(line: 124, column: 27, scope: !388)
!463 = !DILocation(line: 124, column: 38, scope: !388)
!464 = !DILocation(line: 128, column: 9, scope: !388)
!465 = !DILocation(line: 128, column: 30, scope: !388)
!466 = !DILocation(line: 129, column: 6, scope: !388)
!467 = distinct !DISubprogram(name: "fold<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9531550f4ac50ad4E", scope: !300, file: !299, line: 124, type: !468, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !499, retainedNodes: !495)
!468 = !DISubroutineType(types: !469)
!469 = !{null, !470, !7, !489}
!470 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", scope: !301, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !471, templateParams: !486, identifier: "2ac4b57a07ec1000d25cc4574b498aa4")
!471 = !{!472, !483}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !470, file: !2, baseType: !473, size: 128, align: 64, flags: DIFlagProtected)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !310, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !474, templateParams: !481, identifier: "bfe93bf4584a460db55f4bdb8fb884ab")
!474 = !{!475, !480}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !473, file: !2, baseType: !476, size: 64, align: 64, flags: DIFlagPrivate)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", scope: !301, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !477, templateParams: !437, identifier: "4bd0566fdca909ed23ec3714e0c1e11")
!477 = !{!478, !479}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !476, file: !2, baseType: !400, size: 64, align: 64, flags: DIFlagProtected)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !476, file: !2, baseType: !434, align: 8, offset: 64, flags: DIFlagPrivate)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !473, file: !2, baseType: !339, size: 32, align: 16, offset: 64, flags: DIFlagPrivate)
!481 = !{!482}
!482 = !DITemplateTypeParameter(name: "I", type: !476)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !470, file: !2, baseType: !484, align: 8, offset: 128, flags: DIFlagPrivate)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !485, file: !2, align: 8, elements: !15, identifier: "bceb1d2190eb70cf6b05e6a3e1fc5a40")
!485 = !DINamespace(name: "from_utf16le_lossy", scope: !355)
!486 = !{!487, !488}
!487 = !DITemplateTypeParameter(name: "I", type: !473)
!488 = !DITemplateTypeParameter(name: "F", type: !484)
!489 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", scope: !360, file: !2, size: 64, align: 64, elements: !490, templateParams: !15, identifier: "f4d7fe129feda82fdc9d426261393b2d")
!490 = !{!491}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !489, file: !2, baseType: !492, size: 64, align: 64)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", scope: !368, file: !2, size: 64, align: 64, elements: !493, templateParams: !15, identifier: "e723c78b39ae8ddeb34c970627aa943a")
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !492, file: !2, baseType: !372, size: 64, align: 64)
!495 = !{!496, !497, !498}
!496 = !DILocalVariable(name: "self", arg: 1, scope: !467, file: !299, line: 124, type: !470)
!497 = !DILocalVariable(name: "init", arg: 2, scope: !467, file: !299, line: 124, type: !7)
!498 = !DILocalVariable(name: "g", arg: 3, scope: !467, file: !299, line: 124, type: !489)
!499 = !{!378, !487, !488, !380, !500}
!500 = !DITemplateTypeParameter(name: "G", type: !489)
!501 = !DILocation(line: 124, column: 21, scope: !467)
!502 = !DILocation(line: 124, column: 27, scope: !467)
!503 = !DILocation(line: 124, column: 38, scope: !467)
!504 = !DILocation(line: 128, column: 9, scope: !467)
!505 = !DILocation(line: 128, column: 30, scope: !467)
!506 = !DILocation(line: 129, column: 6, scope: !467)
!507 = distinct !DISubprogram(name: "fold<u8, core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}, u8, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hbae18a08927bccfcE", scope: !300, file: !299, line: 124, type: !508, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !544, retainedNodes: !540)
!508 = !DISubroutineType(types: !509)
!509 = !{!45, !510, !45, !536}
!510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>", scope: !301, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !511, templateParams: !533, identifier: "add041827a17597026af54547419a446")
!511 = !{!512, !529}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !510, file: !2, baseType: !513, size: 128, align: 64, flags: DIFlagProtected)
!513 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bool>", scope: !319, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !514, templateParams: !521, identifier: "65fe84ccc8137f8e234f021cdc49caf0")
!514 = !{!515, !523, !524}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !513, file: !2, baseType: !516, size: 64, align: 64, flags: DIFlagPrivate)
!516 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bool>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !517, templateParams: !521, identifier: "63a9c3899a0878b39d720e426ee09c23")
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !516, file: !2, baseType: !519, size: 64, align: 64, flags: DIFlagPrivate)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bool", baseType: !520, size: 64, align: 64, dwarfAddressSpace: 0)
!520 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!521 = !{!522}
!522 = !DITemplateTypeParameter(name: "T", type: !520)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !513, file: !2, baseType: !519, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !513, file: !2, baseType: !525, align: 8, offset: 128, flags: DIFlagPrivate)
!525 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bool>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !526, identifier: "9752d37f2dede4ef560f1ce1d6ea607a")
!526 = !{!527}
!527 = !DITemplateTypeParameter(name: "T", type: !528)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !520, size: 64, align: 64, dwarfAddressSpace: 0)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !510, file: !2, baseType: !530, align: 8, offset: 128, flags: DIFlagPrivate)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !531, file: !2, align: 8, elements: !15, identifier: "b00e33f3074b95e1965747a9ed77396c")
!531 = !DINamespace(name: "convert_while_ascii", scope: !532)
!532 = !DINamespace(name: "str", scope: !80)
!533 = !{!534, !535}
!534 = !DITemplateTypeParameter(name: "I", type: !513)
!535 = !DITemplateTypeParameter(name: "F", type: !530)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", scope: !537, file: !2, align: 8, elements: !15, identifier: "eccc954ebd0819249c83fbd8002b9855")
!537 = !DINamespace(name: "sum", scope: !538)
!538 = !DINamespace(name: "{impl#28}", scope: !539)
!539 = !DINamespace(name: "accum", scope: !364)
!540 = !{!541, !542, !543}
!541 = !DILocalVariable(name: "self", arg: 1, scope: !507, file: !299, line: 124, type: !510)
!542 = !DILocalVariable(name: "init", arg: 2, scope: !507, file: !299, line: 124, type: !45)
!543 = !DILocalVariable(name: "g", arg: 3, scope: !507, file: !299, line: 124, type: !536)
!544 = !{!545, !534, !535, !546, !547}
!545 = !DITemplateTypeParameter(name: "B", type: !45)
!546 = !DITemplateTypeParameter(name: "Acc", type: !45)
!547 = !DITemplateTypeParameter(name: "G", type: !536)
!548 = !DILocation(line: 124, column: 21, scope: !507)
!549 = !DILocation(line: 124, column: 27, scope: !507)
!550 = !DILocation(line: 124, column: 38, scope: !507)
!551 = !DILocation(line: 128, column: 30, scope: !507)
!552 = !DILocation(line: 128, column: 9, scope: !507)
!553 = !DILocation(line: 129, column: 6, scope: !507)
!554 = distinct !DISubprogram(name: "fold<usize, core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, usize, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hdbff830f5d3b66aaE", scope: !300, file: !299, line: 124, type: !555, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !589, retainedNodes: !585)
!555 = !DISubroutineType(types: !556)
!556 = !{!9, !557, !9, !582}
!557 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", scope: !301, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !558, templateParams: !579, identifier: "862c96185e905bdc25f9d5621425d9fe")
!558 = !{!559, !575}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !557, file: !2, baseType: !560, size: 128, align: 64, flags: DIFlagProtected)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<&str>", scope: !319, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !561, templateParams: !567, identifier: "d7951a08f901cc485797366bf00b985c")
!561 = !{!562, !569, !570}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !560, file: !2, baseType: !563, size: 64, align: 64, flags: DIFlagPrivate)
!563 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&str>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !564, templateParams: !567, identifier: "816d12818e1d0179547036db0045f849")
!564 = !{!565}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !563, file: !2, baseType: !566, size: 64, align: 64, flags: DIFlagPrivate)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !170, size: 64, align: 64, dwarfAddressSpace: 0)
!567 = !{!568}
!568 = !DITemplateTypeParameter(name: "T", type: !170)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !560, file: !2, baseType: !566, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !560, file: !2, baseType: !571, align: 8, offset: 128, flags: DIFlagPrivate)
!571 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&&str>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !572, identifier: "6ee690f8bb445a40a4a03c99ccd3c155")
!572 = !{!573}
!573 = !DITemplateTypeParameter(name: "T", type: !574)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !170, size: 64, align: 64, dwarfAddressSpace: 0)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !557, file: !2, baseType: !576, align: 8, offset: 128, flags: DIFlagPrivate)
!576 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !577, file: !2, align: 8, elements: !15, identifier: "4a8ae1112415dba488eadf7eccdfebed")
!577 = !DINamespace(name: "estimated_capacity", scope: !578)
!578 = !DINamespace(name: "{impl#4}", scope: !13)
!579 = !{!580, !581}
!580 = !DITemplateTypeParameter(name: "I", type: !560)
!581 = !DITemplateTypeParameter(name: "F", type: !576)
!582 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", scope: !583, file: !2, align: 8, elements: !15, identifier: "73b314cb7cb4d17c7a585eaf83f11a4f")
!583 = !DINamespace(name: "sum", scope: !584)
!584 = !DINamespace(name: "{impl#48}", scope: !539)
!585 = !{!586, !587, !588}
!586 = !DILocalVariable(name: "self", arg: 1, scope: !554, file: !299, line: 124, type: !557)
!587 = !DILocalVariable(name: "init", arg: 2, scope: !554, file: !299, line: 124, type: !9)
!588 = !DILocalVariable(name: "g", arg: 3, scope: !554, file: !299, line: 124, type: !582)
!589 = !{!590, !580, !581, !591, !592}
!590 = !DITemplateTypeParameter(name: "B", type: !9)
!591 = !DITemplateTypeParameter(name: "Acc", type: !9)
!592 = !DITemplateTypeParameter(name: "G", type: !582)
!593 = !DILocation(line: 124, column: 21, scope: !554)
!594 = !DILocation(line: 124, column: 27, scope: !554)
!595 = !DILocation(line: 124, column: 38, scope: !554)
!596 = !DILocation(line: 128, column: 30, scope: !554)
!597 = !DILocation(line: 128, column: 9, scope: !554)
!598 = !DILocation(line: 129, column: 6, scope: !554)
!599 = distinct !DISubprogram(name: "next<u16, core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68119ae6bd8b6adcE", scope: !300, file: !299, line: 106, type: !600, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !605, retainedNodes: !603)
!600 = !DISubroutineType(types: !601)
!601 = !{!339, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !397, size: 64, align: 64, dwarfAddressSpace: 0)
!603 = !{!604}
!604 = !DILocalVariable(name: "self", arg: 1, scope: !599, file: !299, line: 106, type: !602)
!605 = !{!606, !438, !439}
!606 = !DITemplateTypeParameter(name: "B", type: !327)
!607 = !DILocation(line: 106, column: 13, scope: !599)
!608 = !DILocation(line: 107, column: 9, scope: !599)
!609 = !DILocation(line: 107, column: 30, scope: !599)
!610 = !DILocation(line: 108, column: 6, scope: !599)
!611 = distinct !DISubprogram(name: "next<u16, core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb76c32654efa819eE", scope: !300, file: !299, line: 106, type: !612, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !628, retainedNodes: !626)
!612 = !DISubroutineType(types: !613)
!613 = !{!339, !614}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !615, size: 64, align: 64, dwarfAddressSpace: 0)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", scope: !301, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !616, templateParams: !624, identifier: "c9a5a23dee5df0616a28da450c271cc")
!616 = !{!617, !623}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !615, file: !2, baseType: !618, size: 256, align: 64, flags: DIFlagProtected)
!618 = !DICompositeType(tag: DW_TAG_structure_type, name: "Copied<core::slice::iter::ArrayChunks<u8, 2>>", scope: !401, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !619, templateParams: !621, identifier: "83876302da5631e6801324bcf780201f")
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !618, file: !2, baseType: !405, size: 256, align: 64, flags: DIFlagPrivate)
!621 = !{!622}
!622 = !DITemplateTypeParameter(name: "I", type: !405)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !615, file: !2, baseType: !434, align: 8, offset: 256, flags: DIFlagPrivate)
!624 = !{!625, !439}
!625 = !DITemplateTypeParameter(name: "I", type: !618)
!626 = !{!627}
!627 = !DILocalVariable(name: "self", arg: 1, scope: !611, file: !299, line: 106, type: !614)
!628 = !{!606, !625, !439}
!629 = !DILocation(line: 106, column: 13, scope: !611)
!630 = !DILocation(line: 107, column: 9, scope: !611)
!631 = !DILocation(line: 107, column: 30, scope: !611)
!632 = !DILocation(line: 108, column: 6, scope: !611)
!633 = distinct !DISubprogram(name: "next<u16, core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcc9d1d3d9e012ba6E", scope: !300, file: !299, line: 106, type: !634, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !628, retainedNodes: !641)
!634 = !DISubroutineType(types: !635)
!635 = !{!339, !636}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !637, size: 64, align: 64, dwarfAddressSpace: 0)
!637 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", scope: !301, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !638, templateParams: !624, identifier: "6ae880fceb8631a8a6a66da4bf5a39a9")
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !637, file: !2, baseType: !618, size: 256, align: 64, flags: DIFlagProtected)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !637, file: !2, baseType: !434, align: 8, offset: 256, flags: DIFlagPrivate)
!641 = !{!642}
!642 = !DILocalVariable(name: "self", arg: 1, scope: !633, file: !299, line: 106, type: !636)
!643 = !DILocation(line: 106, column: 13, scope: !633)
!644 = !DILocation(line: 107, column: 9, scope: !633)
!645 = !DILocation(line: 107, column: 30, scope: !633)
!646 = !DILocation(line: 108, column: 6, scope: !633)
!647 = distinct !DISubprogram(name: "next<u16, core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcece374a8b7cd35fE", scope: !300, file: !299, line: 106, type: !648, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !605, retainedNodes: !651)
!648 = !DISubroutineType(types: !649)
!649 = !{!339, !650}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !476, size: 64, align: 64, dwarfAddressSpace: 0)
!651 = !{!652}
!652 = !DILocalVariable(name: "self", arg: 1, scope: !647, file: !299, line: 106, type: !650)
!653 = !DILocation(line: 106, column: 13, scope: !647)
!654 = !DILocation(line: 107, column: 9, scope: !647)
!655 = !DILocation(line: 107, column: 30, scope: !647)
!656 = !DILocation(line: 108, column: 6, scope: !647)
!657 = distinct !DISubprogram(name: "size_hint<u16, core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h162fd55153b4dc0dE", scope: !300, file: !299, line: 111, type: !658, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !605, retainedNodes: !676)
!658 = !DISubroutineType(types: !659)
!659 = !{!660, !675}
!660 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !661, templateParams: !15, identifier: "8b57707d3cefca1d6351e45655c9b480")
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !660, file: !2, baseType: !9, size: 64, align: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !660, file: !2, baseType: !664, size: 128, align: 64, offset: 64)
!664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !37, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !665, templateParams: !15, identifier: "668838b1d8ded1c93b7e8789c94da2d1")
!665 = !{!666}
!666 = !DICompositeType(tag: DW_TAG_variant_part, scope: !664, file: !2, size: 128, align: 64, elements: !667, templateParams: !15, identifier: "3f0499d6b32debe5137afabbbd84fc1", discriminator: !674)
!667 = !{!668, !670}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !666, file: !2, baseType: !669, size: 128, align: 64, extraData: i128 0)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !664, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !194, identifier: "8d0b5136c2bc787812b6386036a43f1e")
!670 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !666, file: !2, baseType: !671, size: 128, align: 64, extraData: i128 1)
!671 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !664, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !672, templateParams: !194, identifier: "7aecd3dec99cd22a234004f750ec8ffd")
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !671, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!674 = !DIDerivedType(tag: DW_TAG_member, scope: !664, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !476, size: 64, align: 64, dwarfAddressSpace: 0)
!676 = !{!677}
!677 = !DILocalVariable(name: "self", arg: 1, scope: !657, file: !299, line: 111, type: !675)
!678 = !DILocation(line: 111, column: 18, scope: !657)
!679 = !DILocation(line: 112, column: 9, scope: !657)
!680 = !DILocation(line: 113, column: 6, scope: !657)
!681 = distinct !DISubprogram(name: "size_hint<u16, core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h56381cb01a7560a8E", scope: !300, file: !299, line: 111, type: !682, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !628, retainedNodes: !685)
!682 = !DISubroutineType(types: !683)
!683 = !{!660, !684}
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !637, size: 64, align: 64, dwarfAddressSpace: 0)
!685 = !{!686}
!686 = !DILocalVariable(name: "self", arg: 1, scope: !681, file: !299, line: 111, type: !684)
!687 = !DILocation(line: 111, column: 18, scope: !681)
!688 = !DILocation(line: 112, column: 9, scope: !681)
!689 = !DILocation(line: 113, column: 6, scope: !681)
!690 = distinct !DISubprogram(name: "size_hint<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7a8fb8088cec46bcE", scope: !300, file: !299, line: 111, type: !691, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !696, retainedNodes: !694)
!691 = !DISubroutineType(types: !692)
!692 = !{!660, !693}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", baseType: !470, size: 64, align: 64, dwarfAddressSpace: 0)
!694 = !{!695}
!695 = !DILocalVariable(name: "self", arg: 1, scope: !690, file: !299, line: 111, type: !693)
!696 = !{!378, !487, !488}
!697 = !DILocation(line: 111, column: 18, scope: !690)
!698 = !DILocation(line: 112, column: 9, scope: !690)
!699 = !DILocation(line: 113, column: 6, scope: !690)
!700 = distinct !DISubprogram(name: "size_hint<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h872aa59146a7cfa9E", scope: !300, file: !299, line: 111, type: !701, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !706, retainedNodes: !704)
!701 = !DISubroutineType(types: !702)
!702 = !{!660, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", baseType: !391, size: 64, align: 64, dwarfAddressSpace: 0)
!704 = !{!705}
!705 = !DILocalVariable(name: "self", arg: 1, scope: !700, file: !299, line: 111, type: !703)
!706 = !{!378, !447, !448}
!707 = !DILocation(line: 111, column: 18, scope: !700)
!708 = !DILocation(line: 112, column: 9, scope: !700)
!709 = !DILocation(line: 113, column: 6, scope: !700)
!710 = distinct !DISubprogram(name: "size_hint<u16, core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h93fc57080880152fE", scope: !300, file: !299, line: 111, type: !711, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !628, retainedNodes: !714)
!711 = !DISubroutineType(types: !712)
!712 = !{!660, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !615, size: 64, align: 64, dwarfAddressSpace: 0)
!714 = !{!715}
!715 = !DILocalVariable(name: "self", arg: 1, scope: !710, file: !299, line: 111, type: !713)
!716 = !DILocation(line: 111, column: 18, scope: !710)
!717 = !DILocation(line: 112, column: 9, scope: !710)
!718 = !DILocation(line: 113, column: 6, scope: !710)
!719 = distinct !DISubprogram(name: "size_hint<u16, core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17heb596a49b23f6739E", scope: !300, file: !299, line: 111, type: !720, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !605, retainedNodes: !723)
!720 = !DISubroutineType(types: !721)
!721 = !{!660, !722}
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", baseType: !397, size: 64, align: 64, dwarfAddressSpace: 0)
!723 = !{!724}
!724 = !DILocalVariable(name: "self", arg: 1, scope: !719, file: !299, line: 111, type: !722)
!725 = !DILocation(line: 111, column: 18, scope: !719)
!726 = !DILocation(line: 112, column: 9, scope: !719)
!727 = !DILocation(line: 113, column: 6, scope: !719)
!728 = distinct !DISubprogram(name: "size_hint<char, core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf81945ef99946e86E", scope: !300, file: !299, line: 111, type: !729, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !734, retainedNodes: !732)
!729 = !DISubroutineType(types: !730)
!730 = !{!660, !731}
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", baseType: !306, size: 64, align: 64, dwarfAddressSpace: 0)
!732 = !{!733}
!733 = !DILocalVariable(name: "self", arg: 1, scope: !728, file: !299, line: 111, type: !731)
!734 = !{!378, !357, !358}
!735 = !DILocation(line: 111, column: 18, scope: !728)
!736 = !DILocation(line: 112, column: 9, scope: !728)
!737 = !DILocation(line: 113, column: 6, scope: !728)
!738 = distinct !DISubprogram(name: "next<u8, 2>", linkageName: "_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e993169ed0301a1E", scope: !740, file: !739, line: 2363, type: !741, scopeLine: 2363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !754)
!739 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "95196014cc01538cc27e1b3113c17ffb")
!740 = !DINamespace(name: "{impl#113}", scope: !319)
!741 = !DISubroutineType(types: !742)
!742 = !{!743, !404}
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8; 2]>", scope: !37, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !744, templateParams: !15, identifier: "292a2a959715145191eac13f05c2e45d")
!744 = !{!745}
!745 = !DICompositeType(tag: DW_TAG_variant_part, scope: !743, file: !2, size: 64, align: 64, elements: !746, templateParams: !15, identifier: "a87151522e6999b79a4c06942f899e6f", discriminator: !753)
!746 = !{!747, !749}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !745, file: !2, baseType: !748, size: 64, align: 64, extraData: i128 0)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !743, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !423, identifier: "ddc502b9ae92375d589c8d43ab895cea")
!749 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !745, file: !2, baseType: !750, size: 64, align: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !743, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !751, templateParams: !423, identifier: "256a282dbe99af777d748ab2aa4cc3b7")
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !750, file: !2, baseType: !425, size: 64, align: 64, flags: DIFlagPublic)
!753 = !DIDerivedType(tag: DW_TAG_member, scope: !743, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!754 = !{!755}
!755 = !DILocalVariable(name: "self", arg: 1, scope: !738, file: !739, line: 2363, type: !404)
!756 = !DILocation(line: 2363, column: 13, scope: !738)
!757 = !DILocation(line: 2364, column: 9, scope: !738)
!758 = !DILocation(line: 2365, column: 6, scope: !738)
!759 = distinct !DISubprogram(name: "size_hint<u8, 2>", linkageName: "_ZN102_$LT$core..slice..iter..ArrayChunks$LT$T$C$_$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4f47c3f8dfce9377E", scope: !740, file: !739, line: 2368, type: !760, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !763)
!760 = !DISubroutineType(types: !761)
!761 = !{!660, !762}
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::ArrayChunks<u8, 2>", baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!763 = !{!764}
!764 = !DILocalVariable(name: "self", arg: 1, scope: !759, file: !739, line: 2368, type: !762)
!765 = !DILocation(line: 2368, column: 18, scope: !759)
!766 = !DILocation(line: 2369, column: 9, scope: !759)
!767 = !DILocation(line: 2370, column: 6, scope: !759)
!768 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hff3ac44154215173E", scope: !770, file: !769, line: 40, type: !771, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !776, retainedNodes: !774)
!769 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/cloned.rs", directory: "", checksumkind: CSK_MD5, checksum: "bfed33096282515437a01f48265c2199")
!770 = !DINamespace(name: "{impl#1}", scope: !315)
!771 = !DISubroutineType(types: !772)
!772 = !{!339, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>", baseType: !314, size: 64, align: 64, dwarfAddressSpace: 0)
!774 = !{!775}
!775 = !DILocalVariable(name: "self", arg: 1, scope: !768, file: !769, line: 40, type: !773)
!776 = !{!337, !329}
!777 = !DILocation(line: 40, column: 13, scope: !768)
!778 = !DILocation(line: 41, column: 9, scope: !768)
!779 = !DILocation(line: 42, column: 6, scope: !768)
!780 = distinct !DISubprogram(name: "size_hint<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h368b936733322da0E", scope: !770, file: !769, line: 44, type: !781, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !776, retainedNodes: !784)
!781 = !DISubroutineType(types: !782)
!782 = !{!660, !783}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>", baseType: !314, size: 64, align: 64, dwarfAddressSpace: 0)
!784 = !{!785}
!785 = !DILocalVariable(name: "self", arg: 1, scope: !780, file: !769, line: 44, type: !783)
!786 = !DILocation(line: 44, column: 18, scope: !780)
!787 = !DILocation(line: 45, column: 9, scope: !780)
!788 = !DILocation(line: 46, column: 6, scope: !780)
!789 = distinct !DISubprogram(name: "next<&mut core::slice::iter::ArrayChunks<u8, 2>, [u8; 2]>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5fa99f22fd232816E", scope: !791, file: !790, line: 45, type: !792, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !808, retainedNodes: !806)
!790 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/copied.rs", directory: "", checksumkind: CSK_MD5, checksum: "8a783814f88d0c75358355976aa6c8a1")
!791 = !DINamespace(name: "{impl#1}", scope: !401)
!792 = !DISubroutineType(types: !793)
!793 = !{!794, !805}
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<[u8; 2]>", scope: !37, file: !2, size: 24, align: 8, flags: DIFlagPublic, elements: !795, templateParams: !15, identifier: "b15730a65b81202d23bc87daaa5109bf")
!795 = !{!796}
!796 = !DICompositeType(tag: DW_TAG_variant_part, scope: !794, file: !2, size: 24, align: 8, elements: !797, templateParams: !15, identifier: "48c0c362b54292129898ed8f397d8a41", discriminator: !804)
!797 = !{!798, !800}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !796, file: !2, baseType: !799, size: 24, align: 8, extraData: i128 0)
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !794, file: !2, size: 24, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !418, identifier: "19fb0d7483bb9c24100b8f2773eb46d3")
!800 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !796, file: !2, baseType: !801, size: 24, align: 8, extraData: i128 1)
!801 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !794, file: !2, size: 24, align: 8, flags: DIFlagPublic, elements: !802, templateParams: !418, identifier: "43e1d2bbca3cde01735fe7ab9fe697")
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !801, file: !2, baseType: !415, size: 16, align: 8, offset: 8, flags: DIFlagPublic)
!804 = !DIDerivedType(tag: DW_TAG_member, scope: !794, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagArtificial)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>", baseType: !400, size: 64, align: 64, dwarfAddressSpace: 0)
!806 = !{!807}
!807 = !DILocalVariable(name: "self", arg: 1, scope: !789, file: !790, line: 45, type: !805)
!808 = !{!432, !419}
!809 = !DILocation(line: 45, column: 13, scope: !789)
!810 = !DILocation(line: 46, column: 9, scope: !789)
!811 = !DILocation(line: 47, column: 6, scope: !789)
!812 = distinct !DISubprogram(name: "next<core::slice::iter::ArrayChunks<u8, 2>, [u8; 2]>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h75b0106cbd867343E", scope: !791, file: !790, line: 45, type: !813, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !818, retainedNodes: !816)
!813 = !DISubroutineType(types: !814)
!814 = !{!794, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>", baseType: !618, size: 64, align: 64, dwarfAddressSpace: 0)
!816 = !{!817}
!817 = !DILocalVariable(name: "self", arg: 1, scope: !812, file: !790, line: 45, type: !815)
!818 = !{!622, !419}
!819 = !DILocation(line: 45, column: 13, scope: !812)
!820 = !DILocation(line: 46, column: 9, scope: !812)
!821 = !DILocation(line: 47, column: 6, scope: !812)
!822 = distinct !DISubprogram(name: "size_hint<core::slice::iter::ArrayChunks<u8, 2>, [u8; 2]>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h071f82a4bc31955eE", scope: !791, file: !790, line: 58, type: !823, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !818, retainedNodes: !826)
!823 = !DISubroutineType(types: !824)
!824 = !{!660, !825}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>", baseType: !618, size: 64, align: 64, dwarfAddressSpace: 0)
!826 = !{!827}
!827 = !DILocalVariable(name: "self", arg: 1, scope: !822, file: !790, line: 58, type: !825)
!828 = !DILocation(line: 58, column: 18, scope: !822)
!829 = !DILocation(line: 59, column: 9, scope: !822)
!830 = !DILocation(line: 60, column: 6, scope: !822)
!831 = distinct !DISubprogram(name: "size_hint<&mut core::slice::iter::ArrayChunks<u8, 2>, [u8; 2]>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h446c9bbfa4daeae2E", scope: !791, file: !790, line: 58, type: !832, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !808, retainedNodes: !835)
!832 = !DISubroutineType(types: !833)
!833 = !{!660, !834}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>", baseType: !400, size: 64, align: 64, dwarfAddressSpace: 0)
!835 = !{!836}
!836 = !DILocalVariable(name: "self", arg: 1, scope: !831, file: !790, line: 58, type: !834)
!837 = !DILocation(line: 58, column: 18, scope: !831)
!838 = !DILocation(line: 59, column: 9, scope: !831)
!839 = !DILocation(line: 60, column: 6, scope: !831)
!840 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h0bc16a9aaaea1196E", scope: !842, file: !841, line: 372, type: !843, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !905, retainedNodes: !901)
!841 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "2786dbd8628575c12264c51fe9bdf312")
!842 = !DINamespace(name: "{impl#0}", scope: !302)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !845, !7, !895}
!845 = !DICompositeType(tag: DW_TAG_structure_type, name: "GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", scope: !302, file: !2, size: 384, align: 64, flags: DIFlagProtected, elements: !846, templateParams: !892, identifier: "5b49019a7e5d7f4d75adafd0bd8ecdc7")
!846 = !{!847, !854}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !845, file: !2, baseType: !848, size: 320, align: 64, offset: 64, flags: DIFlagPrivate)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !310, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !849, templateParams: !852, identifier: "94c88d685933aa88f933d5e1e770268b")
!849 = !{!850, !851}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !848, file: !2, baseType: !637, size: 256, align: 64, flags: DIFlagPrivate)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !848, file: !2, baseType: !339, size: 32, align: 16, offset: 256, flags: DIFlagPrivate)
!852 = !{!853}
!853 = !DITemplateTypeParameter(name: "I", type: !637)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "residual", scope: !845, file: !2, baseType: !855, size: 64, align: 64, flags: DIFlagPrivate)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !856, size: 64, align: 64, dwarfAddressSpace: 0)
!856 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", scope: !37, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !857, templateParams: !15, identifier: "b41b5e4674cc7ac9f3943953dbb67c11")
!857 = !{!858}
!858 = !DICompositeType(tag: DW_TAG_variant_part, scope: !856, file: !2, size: 32, align: 16, elements: !859, templateParams: !15, identifier: "2379081f61409e67410626c3fef99780", discriminator: !891)
!859 = !{!860, !887}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !858, file: !2, baseType: !861, size: 32, align: 16, extraData: i128 0)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !856, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !15, templateParams: !862, identifier: "5d36d4e8ebe4d14fa9441e1aa3b0892c")
!862 = !{!863}
!863 = !DITemplateTypeParameter(name: "T", type: !864)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>", scope: !865, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !866, templateParams: !15, identifier: "d07c0bf78486eebb9be72b5825b989e5")
!865 = !DINamespace(name: "result", scope: !14)
!866 = !{!867}
!867 = !DICompositeType(tag: DW_TAG_variant_part, scope: !864, file: !2, size: 16, align: 16, elements: !868, templateParams: !15, identifier: "18833a8f3ad60298972bb7fdb06fb098")
!868 = !{!869, !883}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !867, file: !2, baseType: !870, size: 16, align: 16)
!870 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !864, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !871, templateParams: !877, identifier: "cb4f5de8e655fca7522e878d5c3307d4")
!871 = !{!872}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !870, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !874, file: !2, align: 8, flags: DIFlagPublic, elements: !875, templateParams: !15, identifier: "ef64110331f9aeffb221ad1e888f4cdc")
!874 = !DINamespace(name: "convert", scope: !14)
!875 = !{!876}
!876 = !DICompositeType(tag: DW_TAG_variant_part, scope: !873, file: !2, align: 8, elements: !15, identifier: "344fc7b903cca4792d35c980889810b9")
!877 = !{!878, !879}
!878 = !DITemplateTypeParameter(name: "T", type: !873)
!879 = !DITemplateTypeParameter(name: "E", type: !880)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16Error", scope: !310, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !881, templateParams: !15, identifier: "9e1604f8f8f68c77be45f9424eece48e")
!881 = !{!882}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !880, file: !2, baseType: !327, size: 16, align: 16, flags: DIFlagPrivate)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !867, file: !2, baseType: !884, size: 16, align: 16)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !864, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !885, templateParams: !877, identifier: "824ad7d12fd493eacf5fc93e766a19b")
!885 = !{!886}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !884, file: !2, baseType: !880, size: 16, align: 16, flags: DIFlagPublic)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !858, file: !2, baseType: !888, size: 32, align: 16, extraData: i128 1)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !856, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !889, templateParams: !862, identifier: "ffc9054a7ebb22a7b77afad71e1d0095")
!889 = !{!890}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !888, file: !2, baseType: !864, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!891 = !DIDerivedType(tag: DW_TAG_member, scope: !856, file: !2, baseType: !327, size: 16, align: 16, flags: DIFlagArtificial)
!892 = !{!893, !894}
!893 = !DITemplateTypeParameter(name: "I", type: !848)
!894 = !DITemplateTypeParameter(name: "R", type: !864)
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", scope: !360, file: !2, size: 64, align: 64, elements: !896, templateParams: !15, identifier: "cb973cce66962c2ac9102379f79d6ba6")
!896 = !{!897}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !895, file: !2, baseType: !898, size: 64, align: 64)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", scope: !368, file: !2, size: 64, align: 64, elements: !899, templateParams: !15, identifier: "c40cdb65f95e0ca835f25027d73a0f6")
!899 = !{!900}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !898, file: !2, baseType: !372, size: 64, align: 64)
!901 = !{!902, !903, !904}
!902 = !DILocalVariable(name: "self", arg: 1, scope: !840, file: !841, line: 372, type: !845)
!903 = !DILocalVariable(name: "init", arg: 2, scope: !840, file: !841, line: 372, type: !7)
!904 = !DILocalVariable(name: "fold", arg: 3, scope: !840, file: !841, line: 372, type: !895)
!905 = !{!893, !894, !906, !907}
!906 = !DITemplateTypeParameter(name: "AAA", type: !7)
!907 = !DITemplateTypeParameter(name: "FFF", type: !895)
!908 = !DILocation(line: 372, column: 28, scope: !840)
!909 = !DILocation(line: 372, column: 38, scope: !840)
!910 = !DILocation(line: 372, column: 49, scope: !840)
!911 = !DILocation(line: 378, column: 34, scope: !840)
!912 = !DILocation(line: 378, column: 13, scope: !840)
!913 = !DILocation(line: 379, column: 10, scope: !840)
!914 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hd354c25741e129f9E", scope: !842, file: !841, line: 372, type: !915, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !939, retainedNodes: !935)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !917, !7, !929}
!917 = !DICompositeType(tag: DW_TAG_structure_type, name: "GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", scope: !302, file: !2, size: 384, align: 64, flags: DIFlagProtected, elements: !918, templateParams: !927, identifier: "ae0fe3b628ad53329d3bfcd75e7bccdd")
!918 = !{!919, !926}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !917, file: !2, baseType: !920, size: 320, align: 64, offset: 64, flags: DIFlagPrivate)
!920 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !310, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !921, templateParams: !924, identifier: "eb2637a01afd793c51748ce2101893c6")
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !920, file: !2, baseType: !615, size: 256, align: 64, flags: DIFlagPrivate)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !920, file: !2, baseType: !339, size: 32, align: 16, offset: 256, flags: DIFlagPrivate)
!924 = !{!925}
!925 = !DITemplateTypeParameter(name: "I", type: !615)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "residual", scope: !917, file: !2, baseType: !855, size: 64, align: 64, flags: DIFlagPrivate)
!927 = !{!928, !894}
!928 = !DITemplateTypeParameter(name: "I", type: !920)
!929 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", scope: !360, file: !2, size: 64, align: 64, elements: !930, templateParams: !15, identifier: "9fb54e385b3d5d37f5487dc24c445368")
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !929, file: !2, baseType: !932, size: 64, align: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", scope: !368, file: !2, size: 64, align: 64, elements: !933, templateParams: !15, identifier: "1557cf319b7c2aa2a6508d8d1e58215")
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !932, file: !2, baseType: !372, size: 64, align: 64)
!935 = !{!936, !937, !938}
!936 = !DILocalVariable(name: "self", arg: 1, scope: !914, file: !841, line: 372, type: !917)
!937 = !DILocalVariable(name: "init", arg: 2, scope: !914, file: !841, line: 372, type: !7)
!938 = !DILocalVariable(name: "fold", arg: 3, scope: !914, file: !841, line: 372, type: !929)
!939 = !{!928, !894, !906, !940}
!940 = !DITemplateTypeParameter(name: "FFF", type: !929)
!941 = !DILocation(line: 372, column: 28, scope: !914)
!942 = !DILocation(line: 372, column: 38, scope: !914)
!943 = !DILocation(line: 372, column: 49, scope: !914)
!944 = !DILocation(line: 378, column: 34, scope: !914)
!945 = !DILocation(line: 378, column: 13, scope: !914)
!946 = !DILocation(line: 379, column: 10, scope: !914)
!947 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h9c44473518146786E", scope: !842, file: !948, line: 186, type: !949, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !963, retainedNodes: !959)
!948 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "4c59bfaa849ce3b297abd1cf144d192e")
!949 = !DISubroutineType(types: !950)
!950 = !{null, !951, !7, !952}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !845, size: 64, align: 64, dwarfAddressSpace: 0)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", scope: !953, file: !2, size: 64, align: 64, elements: !957, templateParams: !15, identifier: "c83715f06f994b28431d8e05306a51f")
!953 = !DINamespace(name: "wrap_mut_2", scope: !954)
!954 = !DINamespace(name: "{impl#0}", scope: !955)
!955 = !DINamespace(name: "try_trait", scope: !956)
!956 = !DINamespace(name: "ops", scope: !14)
!957 = !{!958}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !952, file: !2, baseType: !895, size: 64, align: 64)
!959 = !{!960, !961, !962}
!960 = !DILocalVariable(name: "self", arg: 1, scope: !947, file: !948, line: 186, type: !951)
!961 = !DILocalVariable(name: "init", arg: 2, scope: !947, file: !948, line: 186, type: !7)
!962 = !DILocalVariable(name: "f", arg: 3, scope: !947, file: !948, line: 186, type: !952)
!963 = !{!893, !894, !964, !965, !966}
!964 = !DITemplateTypeParameter(name: "B", type: !7)
!965 = !DITemplateTypeParameter(name: "F", type: !952)
!966 = !DITemplateTypeParameter(name: "T", type: !967)
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "NeverShortCircuit<()>", scope: !955, file: !2, align: 8, flags: DIFlagProtected, elements: !968, templateParams: !970, identifier: "a0b2b2bafd0fd5dc7f8188d9d337b6e7")
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !967, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!970 = !{!971}
!971 = !DITemplateTypeParameter(name: "T", type: !7)
!972 = !DILocation(line: 186, column: 26, scope: !947)
!973 = !DILocation(line: 186, column: 37, scope: !947)
!974 = !DILocation(line: 186, column: 46, scope: !947)
!975 = !DILocation(line: 191, column: 9, scope: !947)
!976 = !DILocation(line: 192, column: 29, scope: !947)
!977 = !DILocation(line: 200, column: 6, scope: !947)
!978 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17he837e14668a706faE", scope: !842, file: !948, line: 186, type: !979, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !989, retainedNodes: !985)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !981, !7, !982}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !917, size: 64, align: 64, dwarfAddressSpace: 0)
!982 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", scope: !953, file: !2, size: 64, align: 64, elements: !983, templateParams: !15, identifier: "9be45068ad9700de704eab20d536a88a")
!983 = !{!984}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !982, file: !2, baseType: !929, size: 64, align: 64)
!985 = !{!986, !987, !988}
!986 = !DILocalVariable(name: "self", arg: 1, scope: !978, file: !948, line: 186, type: !981)
!987 = !DILocalVariable(name: "init", arg: 2, scope: !978, file: !948, line: 186, type: !7)
!988 = !DILocalVariable(name: "f", arg: 3, scope: !978, file: !948, line: 186, type: !982)
!989 = !{!928, !894, !964, !990, !966}
!990 = !DITemplateTypeParameter(name: "F", type: !982)
!991 = !DILocation(line: 186, column: 26, scope: !978)
!992 = !DILocation(line: 186, column: 37, scope: !978)
!993 = !DILocation(line: 186, column: 46, scope: !978)
!994 = !DILocation(line: 191, column: 9, scope: !978)
!995 = !DILocation(line: 192, column: 29, scope: !978)
!996 = !DILocation(line: 200, column: 6, scope: !978)
!997 = distinct !DISubprogram(name: "{closure#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h1187b641496e956bE", scope: !998, file: !948, line: 192, type: !999, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !963, retainedNodes: !1039)
!998 = !DINamespace(name: "try_fold", scope: !842)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!1001, !1018, !7, !1024}
!1001 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, ()>", scope: !1002, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1003, templateParams: !15, identifier: "f2df776cfd9a3c05fddc23fa92d12366")
!1002 = !DINamespace(name: "control_flow", scope: !956)
!1003 = !{!1004}
!1004 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1001, file: !2, size: 8, align: 8, elements: !1005, templateParams: !15, identifier: "f9f1770c1dd1af1140184dacf6a34ce0", discriminator: !1017)
!1005 = !{!1006, !1013}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1004, file: !2, baseType: !1007, size: 8, align: 8, extraData: i128 0)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1001, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1008, templateParams: !1010, identifier: "8fe8765127dc9a382e2a6517a2cd80bc")
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1007, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!1010 = !{!1011, !1012}
!1011 = !DITemplateTypeParameter(name: "B", type: !967)
!1012 = !DITemplateTypeParameter(name: "C", type: !7)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1004, file: !2, baseType: !1014, size: 8, align: 8, extraData: i128 1)
!1014 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1001, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1015, templateParams: !1010, identifier: "d80c24a9bdca5d9071859a854d076565")
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1014, file: !2, baseType: !967, align: 8, offset: 8, flags: DIFlagPublic)
!1017 = !DIDerivedType(tag: DW_TAG_member, scope: !1001, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagArtificial)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", baseType: !1019, size: 64, align: 64, dwarfAddressSpace: 0)
!1019 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", scope: !998, file: !2, size: 128, align: 64, elements: !1020, templateParams: !15, identifier: "efa259a03e614fdf53309d0d14e2792d")
!1020 = !{!1021, !1023}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !1019, file: !2, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", baseType: !952, size: 64, align: 64, dwarfAddressSpace: 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__residual", scope: !1019, file: !2, baseType: !855, size: 64, align: 64, offset: 64)
!1024 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::decode::DecodeUtf16Error>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1025, templateParams: !15, identifier: "d9fe2db6563817e8da3a987a42765bbd")
!1025 = !{!1026}
!1026 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1024, file: !2, size: 64, align: 32, elements: !1027, templateParams: !15, identifier: "5f7fe1f98bdd73336ae3988e93b09b6a", discriminator: !1038)
!1027 = !{!1028, !1034}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1026, file: !2, baseType: !1029, size: 64, align: 32, extraData: i128 0)
!1029 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1024, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1030, templateParams: !1032, identifier: "9c181814ff7c067f5263651ea711abdb")
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1029, file: !2, baseType: !379, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1032 = !{!1033, !879}
!1033 = !DITemplateTypeParameter(name: "T", type: !379)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1026, file: !2, baseType: !1035, size: 64, align: 32, extraData: i128 1)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1024, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1036, templateParams: !1032, identifier: "9fc17db8f55806c6f8551ba3412ec972")
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1035, file: !2, baseType: !880, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!1038 = !DIDerivedType(tag: DW_TAG_member, scope: !1024, file: !2, baseType: !327, size: 16, align: 16, flags: DIFlagArtificial)
!1039 = !{!1040, !1041, !1042, !1043, !1044, !1046}
!1040 = !DILocalVariable(name: "acc", arg: 2, scope: !997, file: !948, line: 192, type: !7)
!1041 = !DILocalVariable(name: "x", arg: 3, scope: !997, file: !948, line: 192, type: !1024)
!1042 = !DILocalVariable(name: "f", scope: !997, file: !948, line: 186, type: !952, align: 8)
!1043 = !DILocalVariable(name: "self__residual", scope: !997, file: !948, line: 186, type: !856, align: 2)
!1044 = !DILocalVariable(name: "x", scope: !1045, file: !948, line: 193, type: !379, align: 4)
!1045 = distinct !DILexicalBlock(scope: !997, file: !948, line: 193, column: 17)
!1046 = !DILocalVariable(name: "r", scope: !1047, file: !948, line: 194, type: !864, align: 2)
!1047 = distinct !DILexicalBlock(scope: !997, file: !948, line: 194, column: 17)
!1048 = !DILocation(line: 186, column: 50, scope: !997)
!1049 = !DILocation(line: 186, column: 31, scope: !997)
!1050 = !DILocation(line: 192, column: 30, scope: !997)
!1051 = !DILocation(line: 192, column: 35, scope: !997)
!1052 = !DILocation(line: 192, column: 44, scope: !997)
!1053 = !DILocation(line: 192, column: 38, scope: !997)
!1054 = !DILocation(line: 193, column: 39, scope: !997)
!1055 = !DILocation(line: 193, column: 39, scope: !1045)
!1056 = !DILocation(line: 193, column: 67, scope: !1045)
!1057 = !DILocation(line: 193, column: 45, scope: !1045)
!1058 = !DILocation(line: 194, column: 36, scope: !997)
!1059 = !DILocation(line: 194, column: 36, scope: !1047)
!1060 = !DILocation(line: 195, column: 38, scope: !1047)
!1061 = !DILocation(line: 195, column: 21, scope: !1047)
!1062 = !DILocation(line: 196, column: 46, scope: !1047)
!1063 = !DILocation(line: 196, column: 21, scope: !1047)
!1064 = !DILocation(line: 197, column: 17, scope: !997)
!1065 = !DILocation(line: 198, column: 14, scope: !997)
!1066 = distinct !DISubprogram(name: "{closure#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h894d65eb4fc12f09E", scope: !998, file: !948, line: 192, type: !1067, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !989, retainedNodes: !1075)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!1001, !1069, !7, !1024}
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", baseType: !1070, size: 64, align: 64, dwarfAddressSpace: 0)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", scope: !998, file: !2, size: 128, align: 64, elements: !1071, templateParams: !15, identifier: "cdb817de933f7c6bc782ae59012b49d3")
!1071 = !{!1072, !1074}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !1070, file: !2, baseType: !1073, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", baseType: !982, size: 64, align: 64, dwarfAddressSpace: 0)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__residual", scope: !1070, file: !2, baseType: !855, size: 64, align: 64, offset: 64)
!1075 = !{!1076, !1077, !1078, !1079, !1080, !1082}
!1076 = !DILocalVariable(name: "acc", arg: 2, scope: !1066, file: !948, line: 192, type: !7)
!1077 = !DILocalVariable(name: "x", arg: 3, scope: !1066, file: !948, line: 192, type: !1024)
!1078 = !DILocalVariable(name: "f", scope: !1066, file: !948, line: 186, type: !982, align: 8)
!1079 = !DILocalVariable(name: "self__residual", scope: !1066, file: !948, line: 186, type: !856, align: 2)
!1080 = !DILocalVariable(name: "x", scope: !1081, file: !948, line: 193, type: !379, align: 4)
!1081 = distinct !DILexicalBlock(scope: !1066, file: !948, line: 193, column: 17)
!1082 = !DILocalVariable(name: "r", scope: !1083, file: !948, line: 194, type: !864, align: 2)
!1083 = distinct !DILexicalBlock(scope: !1066, file: !948, line: 194, column: 17)
!1084 = !DILocation(line: 186, column: 50, scope: !1066)
!1085 = !DILocation(line: 186, column: 31, scope: !1066)
!1086 = !DILocation(line: 192, column: 30, scope: !1066)
!1087 = !DILocation(line: 192, column: 35, scope: !1066)
!1088 = !DILocation(line: 192, column: 44, scope: !1066)
!1089 = !DILocation(line: 192, column: 38, scope: !1066)
!1090 = !DILocation(line: 193, column: 39, scope: !1066)
!1091 = !DILocation(line: 193, column: 39, scope: !1081)
!1092 = !DILocation(line: 193, column: 67, scope: !1081)
!1093 = !DILocation(line: 193, column: 45, scope: !1081)
!1094 = !DILocation(line: 194, column: 36, scope: !1066)
!1095 = !DILocation(line: 194, column: 36, scope: !1083)
!1096 = !DILocation(line: 195, column: 38, scope: !1083)
!1097 = !DILocation(line: 195, column: 21, scope: !1083)
!1098 = !DILocation(line: 196, column: 46, scope: !1083)
!1099 = !DILocation(line: 196, column: 21, scope: !1083)
!1100 = !DILocation(line: 197, column: 17, scope: !1066)
!1101 = !DILocation(line: 198, column: 14, scope: !1066)
!1102 = distinct !DISubprogram(name: "size_hint<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h053ec0577368bca0E", scope: !842, file: !948, line: 177, type: !1103, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !892, retainedNodes: !1106)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!660, !1105}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !845, size: 64, align: 64, dwarfAddressSpace: 0)
!1106 = !{!1107, !1108}
!1107 = !DILocalVariable(name: "self", arg: 1, scope: !1102, file: !948, line: 177, type: !1105)
!1108 = !DILocalVariable(name: "upper", scope: !1109, file: !948, line: 181, type: !664, align: 8)
!1109 = distinct !DILexicalBlock(scope: !1102, file: !948, line: 181, column: 13)
!1110 = !DILocation(line: 177, column: 18, scope: !1102)
!1111 = !DILocation(line: 178, column: 12, scope: !1102)
!1112 = !DILocation(line: 181, column: 30, scope: !1102)
!1113 = !DILocation(line: 181, column: 21, scope: !1102)
!1114 = !DILocation(line: 181, column: 21, scope: !1109)
!1115 = !DILocation(line: 182, column: 13, scope: !1109)
!1116 = !DILocation(line: 178, column: 9, scope: !1102)
!1117 = !DILocation(line: 179, column: 17, scope: !1102)
!1118 = !DILocation(line: 179, column: 13, scope: !1102)
!1119 = !DILocation(line: 184, column: 6, scope: !1102)
!1120 = distinct !DISubprogram(name: "size_hint<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h1bc7ca62f3cc9270E", scope: !842, file: !948, line: 177, type: !1121, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !927, retainedNodes: !1124)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!660, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !917, size: 64, align: 64, dwarfAddressSpace: 0)
!1124 = !{!1125, !1126}
!1125 = !DILocalVariable(name: "self", arg: 1, scope: !1120, file: !948, line: 177, type: !1123)
!1126 = !DILocalVariable(name: "upper", scope: !1127, file: !948, line: 181, type: !664, align: 8)
!1127 = distinct !DILexicalBlock(scope: !1120, file: !948, line: 181, column: 13)
!1128 = !DILocation(line: 177, column: 18, scope: !1120)
!1129 = !DILocation(line: 178, column: 12, scope: !1120)
!1130 = !DILocation(line: 181, column: 30, scope: !1120)
!1131 = !DILocation(line: 181, column: 21, scope: !1120)
!1132 = !DILocation(line: 181, column: 21, scope: !1127)
!1133 = !DILocation(line: 182, column: 13, scope: !1127)
!1134 = !DILocation(line: 178, column: 9, scope: !1120)
!1135 = !DILocation(line: 179, column: 17, scope: !1120)
!1136 = !DILocation(line: 179, column: 13, scope: !1120)
!1137 = !DILocation(line: 184, column: 6, scope: !1120)
!1138 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7af9b6d4ad70b8deE", scope: !1140, file: !1139, line: 413, type: !1142, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !1166)
!1139 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "baa2a238d3c3ce81e755e760737a6886")
!1140 = !DINamespace(name: "{impl#4}", scope: !1141)
!1141 = !DINamespace(name: "index", scope: !320)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!1144, !1159, !1144}
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !1145, templateParams: !15, identifier: "db45dcd35921c0bf8cede7aaf26b562")
!1145 = !{!1146, !1158}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1144, file: !2, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64, dwarfAddressSpace: 0)
!1148 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !1149, file: !2, size: 8, align: 8, elements: !1151, templateParams: !43, identifier: "7f038d31ee8ff901c502d1c554d048c3")
!1149 = !DINamespace(name: "maybe_uninit", scope: !1150)
!1150 = !DINamespace(name: "mem", scope: !14)
!1151 = !{!1152, !1153}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1148, file: !2, baseType: !7, align: 8)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1148, file: !2, baseType: !1154, size: 8, align: 8)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !1155, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1156, templateParams: !43, identifier: "4ffc3c1826cef9fc7f013a19b3533867")
!1155 = !DINamespace(name: "manually_drop", scope: !1150)
!1156 = !{!1157}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1154, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagPrivate)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1144, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1160, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1161, templateParams: !1164, identifier: "d887f7f6e5501ea7a85c4c08798f9568")
!1160 = !DINamespace(name: "range", scope: !956)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1159, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1159, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!1164 = !{!1165}
!1165 = !DITemplateTypeParameter(name: "Idx", type: !9)
!1166 = !{!1167, !1168, !1169}
!1167 = !DILocalVariable(name: "self", arg: 1, scope: !1138, file: !1139, line: 413, type: !1159)
!1168 = !DILocalVariable(name: "slice", arg: 2, scope: !1138, file: !1139, line: 413, type: !1144)
!1169 = !DILocalVariable(name: "new_len", scope: !1170, file: !1139, line: 425, type: !9, align: 8)
!1170 = distinct !DILexicalBlock(scope: !1138, file: !1139, line: 425, column: 13)
!1171 = !{!1172}
!1172 = !DITemplateTypeParameter(name: "T", type: !1148)
!1173 = !DILocation(line: 413, column: 33, scope: !1138)
!1174 = !DILocation(line: 413, column: 39, scope: !1138)
!1175 = !DILocation(line: 74, column: 35, scope: !1176)
!1176 = !DILexicalBlockFile(scope: !1138, file: !1177, discriminator: 0)
!1177 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ub_checks.rs", directory: "", checksumkind: CSK_MD5, checksum: "b221979bcb7059f22d3ec5c2fe5043e4")
!1178 = !DILocalVariable(name: "self", arg: 1, scope: !1179, file: !1180, line: 1729, type: !1144)
!1179 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h2ea6ad6866f7a125E", scope: !1181, file: !1180, line: 1729, type: !1183, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !1185)
!1180 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "33a7261e86c215bc249b1c0078fe7de5")
!1181 = !DINamespace(name: "{impl#1}", scope: !1182)
!1182 = !DINamespace(name: "mut_ptr", scope: !96)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!9, !1144}
!1185 = !{!1178}
!1186 = !DILocation(line: 1729, column: 22, scope: !1179, inlinedAt: !1187)
!1187 = distinct !DILocation(line: 420, column: 30, scope: !1138)
!1188 = !DILocation(line: 1730, column: 9, scope: !1179, inlinedAt: !1187)
!1189 = !DILocation(line: 75, column: 17, scope: !1176)
!1190 = !DILocation(line: 425, column: 27, scope: !1138)
!1191 = !DILocation(line: 425, column: 17, scope: !1170)
!1192 = !DILocalVariable(name: "ptr", arg: 1, scope: !1193, file: !1139, line: 113, type: !1144)
!1193 = distinct !DISubprogram(name: "get_offset_len_mut_noubcheck<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice5index28get_offset_len_mut_noubcheck17hd08db8c63417ca24E", scope: !1141, file: !1139, line: 112, type: !1194, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !1196)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!1144, !1144, !9, !9}
!1196 = !{!1192, !1197, !1198, !1199}
!1197 = !DILocalVariable(name: "offset", arg: 2, scope: !1193, file: !1139, line: 114, type: !9)
!1198 = !DILocalVariable(name: "len", arg: 3, scope: !1193, file: !1139, line: 115, type: !9)
!1199 = !DILocalVariable(name: "ptr", scope: !1200, file: !1139, line: 118, type: !1201, align: 8)
!1200 = distinct !DILexicalBlock(scope: !1193, file: !1139, line: 118, column: 5)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1148, size: 64, align: 64, dwarfAddressSpace: 0)
!1202 = !DILocation(line: 113, column: 5, scope: !1193, inlinedAt: !1203)
!1203 = distinct !DILocation(line: 426, column: 13, scope: !1170)
!1204 = !DILocation(line: 114, column: 5, scope: !1193, inlinedAt: !1203)
!1205 = !DILocation(line: 115, column: 5, scope: !1193, inlinedAt: !1203)
!1206 = !DILocalVariable(name: "ptr", arg: 1, scope: !1207, file: !1139, line: 94, type: !1144)
!1207 = distinct !DISubprogram(name: "get_mut_noubcheck<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice5index17get_mut_noubcheck17h3760d78f64f9665eE", scope: !1141, file: !1139, line: 94, type: !1208, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !1210)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!1201, !1144, !9}
!1210 = !{!1206, !1211, !1212}
!1211 = !DILocalVariable(name: "index", arg: 2, scope: !1207, file: !1139, line: 94, type: !9)
!1212 = !DILocalVariable(name: "ptr", scope: !1213, file: !1139, line: 95, type: !1201, align: 8)
!1213 = distinct !DILexicalBlock(scope: !1207, file: !1139, line: 95, column: 5)
!1214 = !DILocation(line: 94, column: 38, scope: !1207, inlinedAt: !1215)
!1215 = distinct !DILocation(line: 118, column: 24, scope: !1193, inlinedAt: !1203)
!1216 = !DILocation(line: 94, column: 53, scope: !1207, inlinedAt: !1215)
!1217 = !DILocation(line: 95, column: 15, scope: !1207, inlinedAt: !1215)
!1218 = !DILocation(line: 95, column: 9, scope: !1213, inlinedAt: !1215)
!1219 = !DILocation(line: 97, column: 14, scope: !1213, inlinedAt: !1215)
!1220 = !DILocation(line: 118, column: 24, scope: !1193, inlinedAt: !1203)
!1221 = !DILocation(line: 118, column: 9, scope: !1200, inlinedAt: !1203)
!1222 = !DILocation(line: 120, column: 2, scope: !1193, inlinedAt: !1203)
!1223 = !DILocation(line: 426, column: 13, scope: !1170)
!1224 = !DILocation(line: 428, column: 6, scope: !1138)
!1225 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut18precondition_check17hbf49d1e92a4285adE", scope: !1226, file: !1177, line: 66, type: !1227, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !1229)
!1226 = !DINamespace(name: "get_unchecked_mut", scope: !1140)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{null, !9, !9, !9}
!1229 = !{!1230, !1231, !1232}
!1230 = !DILocalVariable(name: "start", arg: 1, scope: !1225, file: !1177, line: 66, type: !9)
!1231 = !DILocalVariable(name: "end", arg: 2, scope: !1225, file: !1177, line: 66, type: !9)
!1232 = !DILocalVariable(name: "len", arg: 3, scope: !1225, file: !1177, line: 66, type: !9)
!1233 = !DILocation(line: 66, column: 43, scope: !1225)
!1234 = !DILocation(line: 421, column: 18, scope: !1235)
!1235 = !DILexicalBlockFile(scope: !1225, file: !1139, discriminator: 0)
!1236 = !DILocation(line: 68, column: 21, scope: !1225)
!1237 = !DILocation(line: 421, column: 34, scope: !1235)
!1238 = !DILocation(line: 72, column: 14, scope: !1225)
!1239 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h131bfb384e61a5beE", scope: !1240, file: !1139, line: 509, type: !1241, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !1250)
!1240 = !DINamespace(name: "{impl#6}", scope: !1141)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!1243, !1247, !1243}
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !1244, templateParams: !15, identifier: "a10360edaf335c418dbc95bccd0cb05d")
!1244 = !{!1245, !1246}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1243, file: !2, baseType: !173, size: 64, align: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1243, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !1160, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !1248, templateParams: !1164, identifier: "50dcd8ea3d8078d96c2908f8c4803f86")
!1248 = !{!1249}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1247, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!1250 = !{!1251, !1252}
!1251 = !DILocalVariable(name: "self", arg: 1, scope: !1239, file: !1139, line: 509, type: !1247)
!1252 = !DILocalVariable(name: "slice", arg: 2, scope: !1239, file: !1139, line: 509, type: !1243)
!1253 = !DILocation(line: 509, column: 29, scope: !1239)
!1254 = !DILocation(line: 509, column: 35, scope: !1239)
!1255 = !DILocation(line: 511, column: 18, scope: !1239)
!1256 = !DILocation(line: 512, column: 6, scope: !1239)
!1257 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he5773afdf4580b36E", scope: !1240, file: !1139, line: 515, type: !1258, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !1260)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!1144, !1247, !1144}
!1260 = !{!1261, !1262}
!1261 = !DILocalVariable(name: "self", arg: 1, scope: !1257, file: !1139, line: 515, type: !1247)
!1262 = !DILocalVariable(name: "slice", arg: 2, scope: !1257, file: !1139, line: 515, type: !1144)
!1263 = !DILocation(line: 515, column: 33, scope: !1257)
!1264 = !DILocation(line: 515, column: 39, scope: !1257)
!1265 = !DILocation(line: 517, column: 18, scope: !1257)
!1266 = !DILocation(line: 518, column: 6, scope: !1257)
!1267 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha0f5a8aed2ce91e5E", scope: !1268, file: !1139, line: 553, type: !1269, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !1274)
!1268 = !DINamespace(name: "{impl#7}", scope: !1141)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!1144, !1271, !1144}
!1271 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !1160, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !1272, templateParams: !1164, identifier: "329c0783889a5a4c438eba8a56194821")
!1272 = !{!1273}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1271, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPublic)
!1274 = !{!1275, !1276}
!1275 = !DILocalVariable(name: "self", arg: 1, scope: !1267, file: !1139, line: 553, type: !1271)
!1276 = !DILocalVariable(name: "slice", arg: 2, scope: !1267, file: !1139, line: 553, type: !1144)
!1277 = !DILocation(line: 553, column: 33, scope: !1267)
!1278 = !DILocation(line: 553, column: 39, scope: !1267)
!1279 = !DILocation(line: 1729, column: 22, scope: !1179, inlinedAt: !1280)
!1280 = distinct !DILocation(line: 555, column: 31, scope: !1267)
!1281 = !DILocation(line: 1730, column: 9, scope: !1179, inlinedAt: !1280)
!1282 = !DILocation(line: 555, column: 18, scope: !1267)
!1283 = !DILocation(line: 556, column: 6, scope: !1267)
!1284 = distinct !DISubprogram(name: "next_unchecked<[u8; 2]>", linkageName: "_ZN110_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..unchecked_iterator..UncheckedIterator$GT$14next_unchecked17h9bac6f3dfbf9c5adE", scope: !1286, file: !1285, line: 440, type: !1287, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !1290)
!1285 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "59c5b2de2b003ba1decdc62a55c7f20d")
!1286 = !DINamespace(name: "{impl#186}", scope: !319)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!425, !1289}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<[u8; 2]>", baseType: !408, size: 64, align: 64, dwarfAddressSpace: 0)
!1290 = !{!1291}
!1291 = !DILocalVariable(name: "self", arg: 1, scope: !1284, file: !1285, line: 440, type: !1289)
!1292 = !DILocation(line: 440, column: 38, scope: !1284)
!1293 = !DILocalVariable(name: "self", arg: 1, scope: !1294, file: !1285, line: 99, type: !1289)
!1294 = distinct !DISubprogram(name: "post_inc_start<[u8; 2]>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h2f11b725540948ceE", scope: !408, file: !1285, line: 99, type: !1295, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !1297, retainedNodes: !1298)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!411, !1289, !9}
!1297 = !DISubprogram(name: "post_inc_start<[u8; 2]>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h2f11b725540948ceE", scope: !408, file: !1285, line: 99, type: !1295, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!1298 = !{!1293, !1299, !1300, !1302, !1305}
!1299 = !DILocalVariable(name: "offset", arg: 2, scope: !1294, file: !1285, line: 99, type: !9)
!1300 = !DILocalVariable(name: "old", scope: !1301, file: !1285, line: 100, type: !411, align: 8)
!1301 = distinct !DILexicalBlock(scope: !1294, file: !1285, line: 100, column: 17)
!1302 = !DILocalVariable(name: "len", scope: !1303, file: !1285, line: 17, type: !1304, align: 8)
!1303 = distinct !DILexicalBlock(scope: !1301, file: !1285, line: 17, column: 13)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!1305 = !DILocalVariable(name: "_end", scope: !1306, file: !1285, line: 21, type: !1307, align: 8)
!1306 = distinct !DILexicalBlock(scope: !1301, file: !1285, line: 21, column: 13)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<[u8; 2]>", baseType: !411, size: 64, align: 64, dwarfAddressSpace: 0)
!1308 = !DILocation(line: 99, column: 38, scope: !1294, inlinedAt: !1309)
!1309 = distinct !DILocation(line: 443, column: 21, scope: !1284)
!1310 = !DILocation(line: 99, column: 49, scope: !1294, inlinedAt: !1309)
!1311 = !DILocation(line: 100, column: 27, scope: !1294, inlinedAt: !1309)
!1312 = !DILocation(line: 100, column: 21, scope: !1301, inlinedAt: !1309)
!1313 = !DILocation(line: 21, column: 39, scope: !1301, inlinedAt: !1309)
!1314 = !DILocalVariable(name: "self", arg: 1, scope: !1315, file: !1180, line: 44, type: !1320)
!1315 = distinct !DISubprogram(name: "cast<*const [u8; 2], core::ptr::non_null::NonNull<[u8; 2]>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h4ca1ebb504b1baabE", scope: !1316, file: !1180, line: 44, type: !1317, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1322, retainedNodes: !1321)
!1316 = !DINamespace(name: "{impl#0}", scope: !1182)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!1319, !1320}
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ptr::non_null::NonNull<[u8; 2]>", baseType: !411, size: 64, align: 64, dwarfAddressSpace: 0)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *const [u8; 2]", baseType: !414, size: 64, align: 64, dwarfAddressSpace: 0)
!1321 = !{!1314}
!1322 = !{!1323, !1324}
!1323 = !DITemplateTypeParameter(name: "T", type: !414)
!1324 = !DITemplateTypeParameter(name: "U", type: !411)
!1325 = !DILocation(line: 44, column: 26, scope: !1315, inlinedAt: !1326)
!1326 = distinct !DILocation(line: 21, column: 39, scope: !1301, inlinedAt: !1309)
!1327 = !DILocation(line: 21, column: 33, scope: !1301, inlinedAt: !1309)
!1328 = !DILocation(line: 21, column: 17, scope: !1306, inlinedAt: !1309)
!1329 = !DILocation(line: 108, column: 44, scope: !1306, inlinedAt: !1309)
!1330 = !DILocalVariable(name: "self", arg: 1, scope: !1331, file: !1332, line: 562, type: !411)
!1331 = distinct !DISubprogram(name: "add<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17hafbdea9c80d3def9E", scope: !411, file: !1332, line: 562, type: !1333, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !1335, retainedNodes: !1336)
!1332 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "2ada1f00900318f7b15893df56f1ab58")
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!411, !411, !9}
!1335 = !DISubprogram(name: "add<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17hafbdea9c80d3def9E", scope: !411, file: !1332, line: 562, type: !1333, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!1336 = !{!1330, !1337}
!1337 = !DILocalVariable(name: "count", arg: 2, scope: !1331, file: !1332, line: 562, type: !9)
!1338 = !DILocation(line: 562, column: 29, scope: !1331, inlinedAt: !1339)
!1339 = distinct !DILocation(line: 108, column: 44, scope: !1306, inlinedAt: !1309)
!1340 = !DILocation(line: 562, column: 35, scope: !1331, inlinedAt: !1339)
!1341 = !DILocalVariable(name: "self", arg: 1, scope: !1342, file: !1332, line: 339, type: !411)
!1342 = distinct !DISubprogram(name: "as_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hdcb075dd60d440dfE", scope: !411, file: !1332, line: 339, type: !1343, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !1346, retainedNodes: !1347)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!1345, !411}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [u8; 2]", baseType: !415, size: 64, align: 64, dwarfAddressSpace: 0)
!1346 = !DISubprogram(name: "as_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hdcb075dd60d440dfE", scope: !411, file: !1332, line: 339, type: !1343, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!1347 = !{!1341}
!1348 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !1349)
!1349 = distinct !DILocation(line: 570, column: 56, scope: !1331, inlinedAt: !1339)
!1350 = !DILocation(line: 570, column: 37, scope: !1331, inlinedAt: !1339)
!1351 = !DILocation(line: 108, column: 33, scope: !1306, inlinedAt: !1309)
!1352 = !DILocation(line: 443, column: 21, scope: !1284)
!1353 = !DILocalVariable(name: "self", arg: 1, scope: !1354, file: !1332, line: 378, type: !1357)
!1354 = distinct !DISubprogram(name: "as_ref<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hbc12df7dc35b80eeE", scope: !411, file: !1332, line: 378, type: !1355, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !1358, retainedNodes: !1359)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!425, !1357}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8; 2]>", baseType: !411, size: 64, align: 64, dwarfAddressSpace: 0)
!1358 = !DISubprogram(name: "as_ref<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hbc12df7dc35b80eeE", scope: !411, file: !1332, line: 378, type: !1355, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!1359 = !{!1353}
!1360 = !DILocation(line: 378, column: 36, scope: !1354, inlinedAt: !1361)
!1361 = distinct !DILocation(line: 443, column: 21, scope: !1284)
!1362 = !DILocation(line: 382, column: 20, scope: !1354, inlinedAt: !1361)
!1363 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !1364)
!1364 = distinct !DILocation(line: 382, column: 20, scope: !1354, inlinedAt: !1361)
!1365 = !DILocalVariable(name: "self", arg: 1, scope: !1366, file: !1180, line: 120, type: !1345)
!1366 = distinct !DISubprogram(name: "cast_const<[u8; 2]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17he2e5473c0ab8611eE", scope: !1316, file: !1180, line: 120, type: !1367, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !1369)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!414, !1345}
!1369 = !{!1365}
!1370 = !DILocation(line: 120, column: 29, scope: !1366, inlinedAt: !1371)
!1371 = distinct !DILocation(line: 382, column: 20, scope: !1354, inlinedAt: !1361)
!1372 = !DILocation(line: 445, column: 14, scope: !1284)
!1373 = distinct !DISubprogram(name: "next<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h05254696377b7db8E", scope: !1375, file: !1374, line: 44, type: !1377, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1414, retainedNodes: !1417)
!1374 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/skip_while.rs", directory: "", checksumkind: CSK_MD5, checksum: "1d9a0ed5fe0b43f4cb0dfebfdd127e60")
!1375 = !DINamespace(name: "{impl#2}", scope: !1376)
!1376 = !DINamespace(name: "skip_while", scope: !302)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!1379, !1392}
!1379 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !37, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1380, templateParams: !15, identifier: "af6bbd0c3b1a40df5f0f0a54e0adc048")
!1380 = !{!1381}
!1381 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1379, file: !2, size: 32, align: 32, elements: !1382, templateParams: !15, identifier: "922291bf7c054fac30120a4bd4afb38c", discriminator: !1390)
!1382 = !{!1383, !1386}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1381, file: !2, baseType: !1384, size: 32, align: 32, extraData: i128 1114112)
!1384 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1379, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !15, templateParams: !1385, identifier: "f49772c48c5c23eeef57404685d18ae8")
!1385 = !{!1033}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1381, file: !2, baseType: !1387, size: 32, align: 32)
!1387 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1379, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1388, templateParams: !1385, identifier: "2b1a1c97de00782e6674d4c71cccfea4")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1387, file: !2, baseType: !379, size: 32, align: 32, flags: DIFlagPublic)
!1390 = !DIDerivedType(tag: DW_TAG_member, scope: !1379, file: !2, baseType: !1391, size: 32, align: 32, flags: DIFlagArtificial)
!1391 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", baseType: !1393, size: 64, align: 64, dwarfAddressSpace: 0)
!1393 = !DICompositeType(tag: DW_TAG_structure_type, name: "SkipWhile<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", scope: !1376, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1394, templateParams: !1414, identifier: "f1667c4ad268c4064aafc7dc45a75657")
!1394 = !{!1395, !1408, !1409}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1393, file: !2, baseType: !1396, size: 128, align: 64, flags: DIFlagPrivate)
!1396 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !1397, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1398, templateParams: !15, identifier: "fd8740da73a3e0d1aeb6a1f003d0af4c")
!1397 = !DINamespace(name: "iter", scope: !158)
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1396, file: !2, baseType: !1400, size: 128, align: 64, flags: DIFlagProtected)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !319, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1401, templateParams: !43, identifier: "1965905261208044680ceffd8a6e7c06")
!1401 = !{!1402, !1403, !1404}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1400, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagPrivate)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !1400, file: !2, baseType: !103, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1400, file: !2, baseType: !1405, align: 8, offset: 128, flags: DIFlagPrivate)
!1405 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !1406, identifier: "133866deceb52bca8eb5fe656d785bb5")
!1406 = !{!1407}
!1407 = !DITemplateTypeParameter(name: "T", type: !67)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1393, file: !2, baseType: !520, size: 8, align: 8, offset: 128, flags: DIFlagPrivate)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !1393, file: !2, baseType: !1410, align: 8, offset: 136, flags: DIFlagPrivate)
!1410 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::str::iter::Chars>", scope: !1411, file: !2, align: 8, elements: !15, identifier: "a9520c0dc4f0bdf5e3a0247952654ec1")
!1411 = !DINamespace(name: "case_ignorable_then_cased", scope: !1412)
!1412 = !DINamespace(name: "to_lowercase", scope: !1413)
!1413 = !DINamespace(name: "{impl#5}", scope: !532)
!1414 = !{!1415, !1416}
!1415 = !DITemplateTypeParameter(name: "I", type: !1396)
!1416 = !DITemplateTypeParameter(name: "P", type: !1410)
!1417 = !{!1418, !1419, !1422}
!1418 = !DILocalVariable(name: "self", arg: 1, scope: !1373, file: !1374, line: 44, type: !1392)
!1419 = !DILocalVariable(name: "flag", scope: !1420, file: !1374, line: 59, type: !1421, align: 8)
!1420 = distinct !DILexicalBlock(scope: !1373, file: !1374, line: 59, column: 9)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bool", baseType: !520, size: 64, align: 64, dwarfAddressSpace: 0)
!1422 = !DILocalVariable(name: "pred", scope: !1423, file: !1374, line: 60, type: !1424, align: 8)
!1423 = distinct !DILexicalBlock(scope: !1420, file: !1374, line: 60, column: 9)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>", baseType: !1410, size: 64, align: 64, dwarfAddressSpace: 0)
!1425 = !DILocation(line: 44, column: 13, scope: !1373)
!1426 = !DILocation(line: 59, column: 20, scope: !1373)
!1427 = !DILocation(line: 59, column: 13, scope: !1420)
!1428 = !DILocation(line: 60, column: 20, scope: !1420)
!1429 = !DILocation(line: 60, column: 13, scope: !1423)
!1430 = !DILocation(line: 61, column: 24, scope: !1423)
!1431 = !DILocation(line: 61, column: 9, scope: !1423)
!1432 = !DILocation(line: 62, column: 6, scope: !1373)
!1433 = distinct !DISubprogram(name: "next<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha1e2debf19aa7813E", scope: !1375, file: !1374, line: 44, type: !1434, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1449, retainedNodes: !1452)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!1379, !1436}
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", baseType: !1437, size: 64, align: 64, dwarfAddressSpace: 0)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", scope: !1376, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1438, templateParams: !1449, identifier: "9cbac6d49e0ee5072884ec495be565fc")
!1438 = !{!1439, !1446, !1447}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1437, file: !2, baseType: !1440, size: 128, align: 64, flags: DIFlagPrivate)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::str::iter::Chars>", scope: !1441, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1442, templateParams: !1444, identifier: "a0e860bf6e0931cd1e53e1a1fe8625db")
!1441 = !DINamespace(name: "rev", scope: !302)
!1442 = !{!1443}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1440, file: !2, baseType: !1396, size: 128, align: 64, flags: DIFlagPrivate)
!1444 = !{!1445}
!1445 = !DITemplateTypeParameter(name: "T", type: !1396)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1437, file: !2, baseType: !520, size: 8, align: 8, offset: 128, flags: DIFlagPrivate)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !1437, file: !2, baseType: !1448, align: 8, offset: 136, flags: DIFlagPrivate)
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", scope: !1411, file: !2, align: 8, elements: !15, identifier: "4b2103ac77225f3e44b288a74abc606c")
!1449 = !{!1450, !1451}
!1450 = !DITemplateTypeParameter(name: "I", type: !1440)
!1451 = !DITemplateTypeParameter(name: "P", type: !1448)
!1452 = !{!1453, !1454, !1456}
!1453 = !DILocalVariable(name: "self", arg: 1, scope: !1433, file: !1374, line: 44, type: !1436)
!1454 = !DILocalVariable(name: "flag", scope: !1455, file: !1374, line: 59, type: !1421, align: 8)
!1455 = distinct !DILexicalBlock(scope: !1433, file: !1374, line: 59, column: 9)
!1456 = !DILocalVariable(name: "pred", scope: !1457, file: !1374, line: 60, type: !1458, align: 8)
!1457 = distinct !DILexicalBlock(scope: !1455, file: !1374, line: 60, column: 9)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", baseType: !1448, size: 64, align: 64, dwarfAddressSpace: 0)
!1459 = !DILocation(line: 44, column: 13, scope: !1433)
!1460 = !DILocation(line: 59, column: 20, scope: !1433)
!1461 = !DILocation(line: 59, column: 13, scope: !1455)
!1462 = !DILocation(line: 60, column: 20, scope: !1455)
!1463 = !DILocation(line: 60, column: 13, scope: !1457)
!1464 = !DILocation(line: 61, column: 24, scope: !1457)
!1465 = !DILocation(line: 61, column: 9, scope: !1457)
!1466 = !DILocation(line: 62, column: 6, scope: !1433)
!1467 = distinct !DISubprogram(name: "check<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h2e34675695ca28e1E", scope: !1468, file: !1374, line: 45, type: !1469, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1479, retainedNodes: !1476)
!1468 = !DINamespace(name: "next", scope: !1375)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!1471, !1421, !1458}
!1471 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", scope: !1472, file: !2, size: 128, align: 64, elements: !1473, templateParams: !15, identifier: "b4b85d1529a59d7451fee76da01f2b7f")
!1472 = !DINamespace(name: "check", scope: !1468)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1471, file: !2, baseType: !1421, size: 64, align: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1471, file: !2, baseType: !1458, size: 64, align: 64, offset: 64)
!1476 = !{!1477, !1478}
!1477 = !DILocalVariable(name: "flag", arg: 1, scope: !1467, file: !1374, line: 46, type: !1421)
!1478 = !DILocalVariable(name: "pred", arg: 2, scope: !1467, file: !1374, line: 47, type: !1458)
!1479 = !{!1033, !1480}
!1480 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1448)
!1481 = !DILocation(line: 46, column: 13, scope: !1467)
!1482 = !DILocation(line: 47, column: 13, scope: !1467)
!1483 = !DILocation(line: 57, column: 10, scope: !1467)
!1484 = distinct !DISubprogram(name: "check<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17hca7c3cfa00c3dc4bE", scope: !1468, file: !1374, line: 45, type: !1485, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1494, retainedNodes: !1491)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!1487, !1421, !1424}
!1487 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", scope: !1472, file: !2, size: 128, align: 64, elements: !1488, templateParams: !15, identifier: "125361db0a8c73dfe4fbd9a305e44da6")
!1488 = !{!1489, !1490}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1487, file: !2, baseType: !1421, size: 64, align: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1487, file: !2, baseType: !1424, size: 64, align: 64, offset: 64)
!1491 = !{!1492, !1493}
!1492 = !DILocalVariable(name: "flag", arg: 1, scope: !1484, file: !1374, line: 46, type: !1421)
!1493 = !DILocalVariable(name: "pred", arg: 2, scope: !1484, file: !1374, line: 47, type: !1424)
!1494 = !{!1033, !1495}
!1495 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1410)
!1496 = !DILocation(line: 46, column: 13, scope: !1484)
!1497 = !DILocation(line: 47, column: 13, scope: !1484)
!1498 = !DILocation(line: 57, column: 10, scope: !1484)
!1499 = distinct !DISubprogram(name: "{closure#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h921f5f98988e8e66E", scope: !1472, file: !1374, line: 49, type: !1500, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1494, retainedNodes: !1504)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!520, !1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", baseType: !1487, size: 64, align: 64, dwarfAddressSpace: 0)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&char", baseType: !379, size: 64, align: 64, dwarfAddressSpace: 0)
!1504 = !{!1505, !1506, !1507}
!1505 = !DILocalVariable(name: "x", arg: 2, scope: !1499, file: !1374, line: 49, type: !1503)
!1506 = !DILocalVariable(name: "flag", scope: !1499, file: !1374, line: 46, type: !1421, align: 8)
!1507 = !DILocalVariable(name: "pred", scope: !1499, file: !1374, line: 47, type: !1424, align: 8)
!1508 = !DILocation(line: 46, column: 13, scope: !1499)
!1509 = !DILocation(line: 47, column: 13, scope: !1499)
!1510 = !DILocation(line: 49, column: 19, scope: !1499)
!1511 = !DILocation(line: 50, column: 20, scope: !1499)
!1512 = !DILocation(line: 50, column: 30, scope: !1499)
!1513 = !DILocation(line: 51, column: 21, scope: !1499)
!1514 = !DILocation(line: 52, column: 21, scope: !1499)
!1515 = !DILocation(line: 50, column: 17, scope: !1499)
!1516 = !DILocation(line: 54, column: 21, scope: !1499)
!1517 = !DILocation(line: 56, column: 14, scope: !1499)
!1518 = distinct !DISubprogram(name: "{closure#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17he21767f430dc75b6E", scope: !1472, file: !1374, line: 49, type: !1519, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1479, retainedNodes: !1522)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!520, !1521, !1503}
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", baseType: !1471, size: 64, align: 64, dwarfAddressSpace: 0)
!1522 = !{!1523, !1524, !1525}
!1523 = !DILocalVariable(name: "x", arg: 2, scope: !1518, file: !1374, line: 49, type: !1503)
!1524 = !DILocalVariable(name: "flag", scope: !1518, file: !1374, line: 46, type: !1421, align: 8)
!1525 = !DILocalVariable(name: "pred", scope: !1518, file: !1374, line: 47, type: !1458, align: 8)
!1526 = !DILocation(line: 46, column: 13, scope: !1518)
!1527 = !DILocation(line: 47, column: 13, scope: !1518)
!1528 = !DILocation(line: 49, column: 19, scope: !1518)
!1529 = !DILocation(line: 50, column: 20, scope: !1518)
!1530 = !DILocation(line: 50, column: 30, scope: !1518)
!1531 = !DILocation(line: 51, column: 21, scope: !1518)
!1532 = !DILocation(line: 52, column: 21, scope: !1518)
!1533 = !DILocation(line: 50, column: 17, scope: !1518)
!1534 = !DILocation(line: 54, column: 21, scope: !1518)
!1535 = !DILocation(line: 56, column: 14, scope: !1518)
!1536 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hffaef22b86024aceE", scope: !1537, file: !1332, line: 1606, type: !1538, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !1540)
!1537 = !DINamespace(name: "{impl#17}", scope: !100)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!99, !94}
!1540 = !{!1541}
!1541 = !DILocalVariable(name: "unique", arg: 1, scope: !1536, file: !1332, line: 1606, type: !94)
!1542 = !DILocation(line: 1606, column: 13, scope: !1536)
!1543 = !DILocation(line: 1607, column: 9, scope: !1536)
!1544 = !DILocation(line: 1608, column: 6, scope: !1536)
!1545 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hddeb5d4682d2c52eE", scope: !1547, file: !1546, line: 204, type: !1548, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !1550)
!1546 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "0fd90daf603f6865a85defabd8113094")
!1547 = !DINamespace(name: "{impl#12}", scope: !95)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!94, !99}
!1550 = !{!1551}
!1551 = !DILocalVariable(name: "pointer", arg: 1, scope: !1545, file: !1546, line: 204, type: !99)
!1552 = !DILocation(line: 204, column: 13, scope: !1545)
!1553 = !DILocation(line: 206, column: 6, scope: !1545)
!1554 = distinct !DISubprogram(name: "from_iter<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h25f7d85e5ccf0ff4E", scope: !1556, file: !1555, line: 1979, type: !1557, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1576, retainedNodes: !1574)
!1555 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "eaa9bd31f26321d3d2b4c33b461dc35f")
!1556 = !DINamespace(name: "{impl#25}", scope: !865)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!1559, !848}
!1559 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, core::char::decode::DecodeUtf16Error>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1560, templateParams: !15, identifier: "fb647193ed8490e3a63aefb1212df65a")
!1560 = !{!1561}
!1561 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1559, file: !2, size: 192, align: 64, elements: !1562, templateParams: !15, identifier: "443eae40ca88b55cc5e10d4b9ef0b2d8", discriminator: !1573)
!1562 = !{!1563, !1569}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1561, file: !2, baseType: !1564, size: 192, align: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1559, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1565, templateParams: !1567, identifier: "a58b27167ee008fec6e7864f98085c1b")
!1565 = !{!1566}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1564, file: !2, baseType: !78, size: 192, align: 64, flags: DIFlagPublic)
!1567 = !{!1568, !879}
!1568 = !DITemplateTypeParameter(name: "T", type: !78)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1561, file: !2, baseType: !1570, size: 192, align: 64, extraData: i128 9223372036854775808)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1559, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1571, templateParams: !1567, identifier: "3c5d0e327e165d11a97da9b80d9d19a4")
!1571 = !{!1572}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1570, file: !2, baseType: !880, size: 16, align: 16, offset: 64, flags: DIFlagPublic)
!1573 = !DIDerivedType(tag: DW_TAG_member, scope: !1559, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!1574 = !{!1575}
!1575 = !DILocalVariable(name: "iter", arg: 1, scope: !1554, file: !1555, line: 1979, type: !848)
!1576 = !{!1577, !879, !1578, !893}
!1577 = !DITemplateTypeParameter(name: "A", type: !379)
!1578 = !DITemplateTypeParameter(name: "V", type: !78)
!1579 = !DILocation(line: 1979, column: 56, scope: !1554)
!1580 = !DILocation(line: 1980, column: 27, scope: !1554)
!1581 = !DILocation(line: 1980, column: 9, scope: !1554)
!1582 = !DILocation(line: 1981, column: 6, scope: !1554)
!1583 = distinct !DISubprogram(name: "from_iter<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h35457f419b514e9dE", scope: !1556, file: !1555, line: 1979, type: !1584, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1588, retainedNodes: !1586)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!1559, !920}
!1586 = !{!1587}
!1587 = !DILocalVariable(name: "iter", arg: 1, scope: !1583, file: !1555, line: 1979, type: !920)
!1588 = !{!1577, !879, !1578, !928}
!1589 = !DILocation(line: 1979, column: 56, scope: !1583)
!1590 = !DILocation(line: 1980, column: 27, scope: !1583)
!1591 = !DILocation(line: 1980, column: 9, scope: !1583)
!1592 = !DILocation(line: 1981, column: 6, scope: !1583)
!1593 = distinct !DISubprogram(name: "{closure#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h0461c4832ad24d56E", scope: !1594, file: !1555, line: 1980, type: !1595, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1588, retainedNodes: !1599)
!1594 = !DINamespace(name: "from_iter", scope: !1556)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!78, !1597, !917}
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::result::{impl#25}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", baseType: !1598, size: 64, align: 64, dwarfAddressSpace: 0)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", scope: !1594, file: !2, align: 8, elements: !15, identifier: "4e6bca5f7f026764941cdbeb9c19e639")
!1599 = !{!1600, !1601}
!1600 = !DILocalVariable(name: "i", arg: 2, scope: !1593, file: !1555, line: 1980, type: !917)
!1601 = !DILocalVariable(arg: 1, scope: !1593, file: !1555, line: 1980, type: !1597)
!1602 = !DILocation(line: 1980, column: 45, scope: !1593)
!1603 = !DILocation(line: 1980, column: 46, scope: !1593)
!1604 = !DILocation(line: 1980, column: 49, scope: !1593)
!1605 = !DILocation(line: 1980, column: 60, scope: !1593)
!1606 = distinct !DISubprogram(name: "{closure#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h97273b0d57d9a248E", scope: !1594, file: !1555, line: 1980, type: !1607, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1576, retainedNodes: !1611)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!78, !1609, !845}
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::result::{impl#25}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", baseType: !1610, size: 64, align: 64, dwarfAddressSpace: 0)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", scope: !1594, file: !2, align: 8, elements: !15, identifier: "2233c95e058b97572f23c6094530f1fa")
!1611 = !{!1612, !1613}
!1612 = !DILocalVariable(name: "i", arg: 2, scope: !1606, file: !1555, line: 1980, type: !845)
!1613 = !DILocalVariable(arg: 1, scope: !1606, file: !1555, line: 1980, type: !1609)
!1614 = !DILocation(line: 1980, column: 45, scope: !1606)
!1615 = !DILocation(line: 1980, column: 46, scope: !1606)
!1616 = !DILocation(line: 1980, column: 49, scope: !1606)
!1617 = !DILocation(line: 1980, column: 60, scope: !1606)
!1618 = distinct !DISubprogram(name: "from_residual<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h957699daba411201E", scope: !1620, file: !1619, line: 2493, type: !1621, scopeLine: 2493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1629, retainedNodes: !1647)
!1619 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "a1ba070e8aaa8b2f46213856f57839f0")
!1620 = !DINamespace(name: "{impl#40}", scope: !37)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!1623, !1636}
!1623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", scope: !37, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1624, templateParams: !15, identifier: "c280e4a4a737e71a2a0fd551b57c2089")
!1624 = !{!1625}
!1625 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1623, file: !2, size: 64, align: 32, elements: !1626, templateParams: !15, identifier: "755859d5d0955008c932e30a42fd9450", discriminator: !1635)
!1626 = !{!1627, !1631}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1625, file: !2, baseType: !1628, size: 64, align: 32, extraData: i128 2)
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1623, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15, templateParams: !1629, identifier: "d82ffc4d7d158d132999f340d21dfbc")
!1629 = !{!1630}
!1630 = !DITemplateTypeParameter(name: "T", type: !1024)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1625, file: !2, baseType: !1632, size: 64, align: 32)
!1632 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1623, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1633, templateParams: !1629, identifier: "24874dd389fe1d7847c4b8abd9a96859")
!1633 = !{!1634}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1632, file: !2, baseType: !1024, size: 64, align: 32, flags: DIFlagPublic)
!1635 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !2, baseType: !327, size: 16, align: 16, flags: DIFlagArtificial)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !37, file: !2, align: 8, flags: DIFlagPublic, elements: !1637, templateParams: !15, identifier: "2417a799efe1a6e5a7adc3b3fe41938f")
!1637 = !{!1638}
!1638 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1636, file: !2, align: 8, elements: !1639, templateParams: !15, identifier: "5deebb6df1158fa5a2a4f55bd83476e7")
!1639 = !{!1640, !1643}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1638, file: !2, baseType: !1641, align: 8)
!1641 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1636, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !1642, identifier: "b54c0aa24e40d84c448537143fab13f2")
!1642 = !{!878}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1638, file: !2, baseType: !1644, align: 8)
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1636, file: !2, align: 8, flags: DIFlagPublic, elements: !1645, templateParams: !1642, identifier: "f7cb0152a523ab716dbc9407847917f5")
!1645 = !{!1646}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1644, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!1647 = !{!1648, !1649}
!1648 = !DILocalVariable(name: "residual", scope: !1618, file: !1619, line: 2493, type: !1636, align: 1)
!1649 = !DILocalVariable(arg: 1, scope: !1618, file: !1619, line: 2493, type: !1636)
!1650 = !DILocation(line: 2493, column: 22, scope: !1618)
!1651 = !DILocation(line: 2495, column: 21, scope: !1618)
!1652 = !DILocation(line: 2497, column: 6, scope: !1618)
!1653 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h02b0ecdf0f2b0383E", scope: !1654, file: !1555, line: 2007, type: !1655, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1702, retainedNodes: !1698)
!1654 = !DINamespace(name: "{impl#27}", scope: !865)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!1657, !1677, !1690}
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !865, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1658, templateParams: !15, identifier: "ef3708ce76e743abf6e600e83b18b4cd")
!1658 = !{!1659}
!1659 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1657, file: !2, size: 128, align: 64, elements: !1660, templateParams: !15, identifier: "a8aebce97dc126cdb02292c9594f3ec", discriminator: !1676)
!1660 = !{!1661, !1672}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1659, file: !2, baseType: !1662, size: 128, align: 64)
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1657, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1663, templateParams: !1668, identifier: "f1bb754c07ad1fdc198f7df8fd279cd7")
!1663 = !{!1664}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1662, file: !2, baseType: !1665, size: 128, align: 64, flags: DIFlagPublic)
!1665 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !100, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1666, templateParams: !43, identifier: "7d19e1c2e2b8798632b39841b163720e")
!1666 = !{!1667}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1665, file: !2, baseType: !1243, size: 128, align: 64, flags: DIFlagPrivate)
!1668 = !{!1669, !1670}
!1669 = !DITemplateTypeParameter(name: "T", type: !1665)
!1670 = !DITemplateTypeParameter(name: "E", type: !1671)
!1671 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !26, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "d8bbba44fddf7978f9a01a6149e7545a")
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1659, file: !2, baseType: !1673, size: 128, align: 64, extraData: i128 0)
!1673 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1657, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1674, templateParams: !1668, identifier: "2c27a902b73425e4fcb0b43e911b7313")
!1674 = !{!1675}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1673, file: !2, baseType: !1671, align: 8, flags: DIFlagPublic)
!1676 = !DIDerivedType(tag: DW_TAG_member, scope: !1657, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!1677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !865, file: !2, align: 8, flags: DIFlagPublic, elements: !1678, templateParams: !15, identifier: "e2057af5ff5ad51dd1b2b8e3b36d091d")
!1678 = !{!1679}
!1679 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1677, file: !2, align: 8, elements: !1680, templateParams: !15, identifier: "6ec2e66c8c7db6666c2fe6505c2e5ac2")
!1680 = !{!1681, !1686}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1679, file: !2, baseType: !1682, align: 8)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1677, file: !2, align: 8, flags: DIFlagPublic, elements: !1683, templateParams: !1685, identifier: "64ab28235db9572b1af899c1c0653280")
!1683 = !{!1684}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1682, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!1685 = !{!878, !1670}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1679, file: !2, baseType: !1687, align: 8)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1677, file: !2, align: 8, flags: DIFlagPublic, elements: !1688, templateParams: !1685, identifier: "b905380b40d77625ffda9c22ae29d160")
!1688 = !{!1689}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1687, file: !2, baseType: !1671, align: 8, flags: DIFlagPublic)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !1691, size: 64, align: 64, dwarfAddressSpace: 0)
!1691 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !1692, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1694, templateParams: !15, identifier: "a6e291e0e8a17d824f341a115fb53bc3")
!1692 = !DINamespace(name: "location", scope: !1693)
!1693 = !DINamespace(name: "panic", scope: !14)
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1691, file: !2, baseType: !170, size: 128, align: 64, flags: DIFlagPrivate)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1691, file: !2, baseType: !1391, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1691, file: !2, baseType: !1391, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!1698 = !{!1699, !1700}
!1699 = !DILocalVariable(name: "residual", arg: 1, scope: !1653, file: !1555, line: 2007, type: !1677)
!1700 = !DILocalVariable(name: "e", scope: !1701, file: !1555, line: 2009, type: !1671, align: 1)
!1701 = distinct !DILexicalBlock(scope: !1653, file: !1555, line: 2009, column: 13)
!1702 = !{!1669, !1670, !1703}
!1703 = !DITemplateTypeParameter(name: "F", type: !1671)
!1704 = !DILocation(line: 2007, column: 22, scope: !1653)
!1705 = !DILocation(line: 2009, column: 17, scope: !1701)
!1706 = !DILocalVariable(name: "t", arg: 1, scope: !1707, file: !1708, line: 768, type: !1671)
!1707 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h080c08779c5220acE", scope: !1709, file: !1708, line: 768, type: !1710, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1713, retainedNodes: !1712)
!1708 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "da159ddadc0729d78bae61e73fd78caf")
!1709 = !DINamespace(name: "{impl#4}", scope: !874)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !1671}
!1712 = !{!1706}
!1713 = !{!1714}
!1714 = !DITemplateTypeParameter(name: "T", type: !1671)
!1715 = !DILocation(line: 768, column: 13, scope: !1707, inlinedAt: !1716)
!1716 = distinct !DILocation(line: 2009, column: 27, scope: !1701)
!1717 = !DILocation(line: 2009, column: 23, scope: !1701)
!1718 = !DILocation(line: 2011, column: 6, scope: !1653)
!1719 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h33f1e92ae445a6e0E", scope: !1654, file: !1555, line: 2007, type: !1720, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1778, retainedNodes: !1774)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!1722, !1760, !1690}
!1722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !865, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1723, templateParams: !15, identifier: "4d5fea96bd3ff36069ce378820733267")
!1723 = !{!1724}
!1724 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1722, file: !2, size: 128, align: 64, elements: !1725, templateParams: !15, identifier: "f11dc302895f96f6868e054ad81c4a9f", discriminator: !1759)
!1725 = !{!1726, !1755}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1724, file: !2, baseType: !1727, size: 128, align: 64, extraData: i128 9223372036854775809)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1722, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1728, templateParams: !1730, identifier: "a4686ef4d84fb115ff4b6f981845addb")
!1728 = !{!1729}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1727, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!1730 = !{!971, !1731}
!1731 = !DITemplateTypeParameter(name: "E", type: !1732)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !1733, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1734, templateParams: !15, identifier: "f290a3644cb78412e0630ea0922aaa77")
!1733 = !DINamespace(name: "collections", scope: !80)
!1734 = !{!1735}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1732, file: !2, baseType: !1736, size: 128, align: 64, flags: DIFlagPrivate)
!1736 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !1733, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1737, templateParams: !15, identifier: "51adcae7122ae20c5c886ddc98bb4857")
!1737 = !{!1738}
!1738 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1736, file: !2, size: 128, align: 64, elements: !1739, templateParams: !15, identifier: "ce80f39d28b604b23bc9fdd734279171", discriminator: !1754)
!1739 = !{!1740, !1742}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !1738, file: !2, baseType: !1741, size: 128, align: 64, extraData: i128 0)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !1736, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, identifier: "851217a8d92f0211a0a8750f8b0f99d1")
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !1738, file: !2, baseType: !1743, size: 128, align: 64)
!1743 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1736, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1744, templateParams: !15, identifier: "d4db0406ff71315180a4149f54d4269e")
!1744 = !{!1745, !1753}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1743, file: !2, baseType: !1746, size: 128, align: 64, flags: DIFlagPublic)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !25, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1747, templateParams: !15, identifier: "885e0943e88f163b302ec31391a96a8")
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1746, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1746, file: !2, baseType: !1750, size: 64, align: 64, flags: DIFlagPrivate)
!1750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Alignment", scope: !211, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !1751, templateParams: !15, identifier: "91222c6f8ee80a58793dda83dd4c684d")
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1750, file: !2, baseType: !210, size: 64, align: 64, flags: DIFlagPrivate)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !1743, file: !2, baseType: !7, align: 8, offset: 128, flags: DIFlagPublic)
!1754 = !DIDerivedType(tag: DW_TAG_member, scope: !1736, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1724, file: !2, baseType: !1756, size: 128, align: 64)
!1756 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1722, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1757, templateParams: !1730, identifier: "3a6d843d269e5cbc9b84490dc15d6119")
!1757 = !{!1758}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1756, file: !2, baseType: !1732, size: 128, align: 64, flags: DIFlagPublic)
!1759 = !DIDerivedType(tag: DW_TAG_member, scope: !1722, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !865, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1761, templateParams: !15, identifier: "ffa91c18a2353c9c1ce2918486e4a1ee")
!1761 = !{!1762}
!1762 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1760, file: !2, size: 128, align: 64, elements: !1763, templateParams: !15, identifier: "61042ee17f450141fc2207a96174c0a2")
!1763 = !{!1764, !1770}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1762, file: !2, baseType: !1765, size: 128, align: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1760, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1766, templateParams: !1768, identifier: "ca87b2d2cf43bb0eb9dfccd8fba3573e")
!1766 = !{!1767}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1765, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!1768 = !{!878, !1769}
!1769 = !DITemplateTypeParameter(name: "E", type: !1736)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1762, file: !2, baseType: !1771, size: 128, align: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1760, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1772, templateParams: !1768, identifier: "efd941f5a30f1c1f1b06dfe7c9af207e")
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1771, file: !2, baseType: !1736, size: 128, align: 64, flags: DIFlagPublic)
!1774 = !{!1775, !1776}
!1775 = !DILocalVariable(name: "residual", arg: 1, scope: !1719, file: !1555, line: 2007, type: !1760)
!1776 = !DILocalVariable(name: "e", scope: !1777, file: !1555, line: 2009, type: !1736, align: 8)
!1777 = distinct !DILexicalBlock(scope: !1719, file: !1555, line: 2009, column: 13)
!1778 = !{!971, !1769, !1779}
!1779 = !DITemplateTypeParameter(name: "F", type: !1732)
!1780 = !DILocation(line: 2007, column: 22, scope: !1719)
!1781 = !DILocation(line: 2009, column: 17, scope: !1719)
!1782 = !DILocation(line: 2009, column: 17, scope: !1777)
!1783 = !DILocation(line: 2009, column: 27, scope: !1777)
!1784 = !DILocation(line: 2009, column: 23, scope: !1777)
!1785 = !DILocation(line: 2011, column: 6, scope: !1719)
!1786 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5d0f62b03e05f3c2E", scope: !1654, file: !1555, line: 2007, type: !1787, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1806, retainedNodes: !1802)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!1722, !1789, !1690}
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !865, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1790, templateParams: !15, identifier: "7d00d1aa703094bef1c2c07a0998c876")
!1790 = !{!1791}
!1791 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1789, file: !2, size: 128, align: 64, elements: !1792, templateParams: !15, identifier: "dba883ca6485b871eb035e34b408e8")
!1792 = !{!1793, !1798}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1791, file: !2, baseType: !1794, size: 128, align: 64)
!1794 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1789, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1795, templateParams: !1797, identifier: "560dcd241adad0ed38296d252cbf8ed3")
!1795 = !{!1796}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1794, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!1797 = !{!878, !1731}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1791, file: !2, baseType: !1799, size: 128, align: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1789, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1800, templateParams: !1797, identifier: "d79ee3454edb9e6a5d4878f7280f583c")
!1800 = !{!1801}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1799, file: !2, baseType: !1732, size: 128, align: 64, flags: DIFlagPublic)
!1802 = !{!1803, !1804}
!1803 = !DILocalVariable(name: "residual", arg: 1, scope: !1786, file: !1555, line: 2007, type: !1789)
!1804 = !DILocalVariable(name: "e", scope: !1805, file: !1555, line: 2009, type: !1732, align: 8)
!1805 = distinct !DILexicalBlock(scope: !1786, file: !1555, line: 2009, column: 13)
!1806 = !{!971, !1731, !1779}
!1807 = !DILocation(line: 2007, column: 22, scope: !1786)
!1808 = !DILocation(line: 2009, column: 17, scope: !1786)
!1809 = !DILocation(line: 2009, column: 17, scope: !1805)
!1810 = !DILocalVariable(name: "t", arg: 1, scope: !1811, file: !1708, line: 768, type: !1732)
!1811 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h58c5bd86d994e7f5E", scope: !1709, file: !1708, line: 768, type: !1812, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1815, retainedNodes: !1814)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!1732, !1732}
!1814 = !{!1810}
!1815 = !{!1816}
!1816 = !DITemplateTypeParameter(name: "T", type: !1732)
!1817 = !DILocation(line: 768, column: 13, scope: !1811, inlinedAt: !1818)
!1818 = distinct !DILocation(line: 2009, column: 27, scope: !1805)
!1819 = !DILocation(line: 770, column: 6, scope: !1811, inlinedAt: !1818)
!1820 = !DILocation(line: 2009, column: 27, scope: !1805)
!1821 = !DILocation(line: 2009, column: 23, scope: !1805)
!1822 = !DILocation(line: 2011, column: 6, scope: !1786)
!1823 = distinct !DISubprogram(name: "from_residual<alloc::string::String, core::char::decode::DecodeUtf16Error, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb909015815a5ee67E", scope: !1654, file: !1555, line: 2007, type: !1824, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1830, retainedNodes: !1826)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!1559, !864, !1690}
!1826 = !{!1827, !1828}
!1827 = !DILocalVariable(name: "residual", arg: 1, scope: !1823, file: !1555, line: 2007, type: !864)
!1828 = !DILocalVariable(name: "e", scope: !1829, file: !1555, line: 2009, type: !880, align: 2)
!1829 = distinct !DILexicalBlock(scope: !1823, file: !1555, line: 2009, column: 13)
!1830 = !{!1568, !879, !1831}
!1831 = !DITemplateTypeParameter(name: "F", type: !880)
!1832 = !DILocation(line: 2007, column: 22, scope: !1823)
!1833 = !DILocation(line: 2009, column: 17, scope: !1823)
!1834 = !DILocation(line: 2009, column: 17, scope: !1829)
!1835 = !DILocalVariable(name: "t", arg: 1, scope: !1836, file: !1708, line: 768, type: !880)
!1836 = distinct !DISubprogram(name: "from<core::char::decode::DecodeUtf16Error>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8fbf48145df3d321E", scope: !1709, file: !1708, line: 768, type: !1837, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1840, retainedNodes: !1839)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!880, !880}
!1839 = !{!1835}
!1840 = !{!1841}
!1841 = !DITemplateTypeParameter(name: "T", type: !880)
!1842 = !DILocation(line: 768, column: 13, scope: !1836, inlinedAt: !1843)
!1843 = distinct !DILocation(line: 2009, column: 27, scope: !1829)
!1844 = !DILocation(line: 2009, column: 23, scope: !1829)
!1845 = !DILocation(line: 2011, column: 6, scope: !1823)
!1846 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdbba48e631aaff81E", scope: !1654, file: !1555, line: 2007, type: !1847, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1867, retainedNodes: !1863)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!1849, !1789, !1690}
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1850, templateParams: !15, identifier: "4de82cda8bae912c1ef819cbd80db996")
!1850 = !{!1851}
!1851 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1849, file: !2, size: 192, align: 64, elements: !1852, templateParams: !15, identifier: "8beff0a29e8cbd2d1ddefe1e8925bc3", discriminator: !1862)
!1852 = !{!1853, !1858}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1851, file: !2, baseType: !1854, size: 192, align: 64, extraData: i128 0)
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1849, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1855, templateParams: !1857, identifier: "8e1169be5090452a6389ddf2d31189ae")
!1855 = !{!1856}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1854, file: !2, baseType: !1665, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!1857 = !{!1669, !1731}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1851, file: !2, baseType: !1859, size: 192, align: 64, extraData: i128 1)
!1859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1849, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !1860, templateParams: !1857, identifier: "7149617ebe4f801957651ba913931a81")
!1860 = !{!1861}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1859, file: !2, baseType: !1732, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!1862 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!1863 = !{!1864, !1865}
!1864 = !DILocalVariable(name: "residual", arg: 1, scope: !1846, file: !1555, line: 2007, type: !1789)
!1865 = !DILocalVariable(name: "e", scope: !1866, file: !1555, line: 2009, type: !1732, align: 8)
!1866 = distinct !DILexicalBlock(scope: !1846, file: !1555, line: 2009, column: 13)
!1867 = !{!1669, !1731, !1779}
!1868 = !DILocation(line: 2007, column: 22, scope: !1846)
!1869 = !DILocation(line: 2009, column: 17, scope: !1846)
!1870 = !DILocation(line: 2009, column: 17, scope: !1866)
!1871 = !DILocation(line: 768, column: 13, scope: !1811, inlinedAt: !1872)
!1872 = distinct !DILocation(line: 2009, column: 27, scope: !1866)
!1873 = !DILocation(line: 770, column: 6, scope: !1811, inlinedAt: !1872)
!1874 = !DILocation(line: 2009, column: 27, scope: !1866)
!1875 = !DILocation(line: 2009, column: 23, scope: !1866)
!1876 = !DILocation(line: 2011, column: 6, scope: !1846)
!1877 = distinct !DISubprogram(name: "from_residual<()>", linkageName: "_ZN158_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..try_trait..NeverShortCircuitResidual$GT$$GT$13from_residual17hda002c82c25223a6E", scope: !1879, file: !1878, line: 415, type: !1880, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !970, retainedNodes: !1885)
!1878 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ops/try_trait.rs", directory: "", checksumkind: CSK_MD5, checksum: "17cc85f6e77d556167d1d7268f5c9acf")
!1879 = !DINamespace(name: "{impl#2}", scope: !955)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1882}
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "NeverShortCircuitResidual", scope: !955, file: !2, align: 8, flags: DIFlagProtected, elements: !1883, templateParams: !15, identifier: "671793ba429b9ae4ef3d88d0557d3426")
!1883 = !{!1884}
!1884 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1882, file: !2, align: 8, elements: !15, identifier: "e06312adf324fa535cfd0ef145eef5eb")
!1885 = !{!1886, !1887}
!1886 = !DILocalVariable(name: "never", scope: !1877, file: !1878, line: 415, type: !1882, align: 1)
!1887 = !DILocalVariable(arg: 1, scope: !1877, file: !1878, line: 415, type: !1882)
!1888 = !DILocation(line: 415, column: 22, scope: !1877)
!1889 = !DILocation(line: 416, column: 15, scope: !1877)
!1890 = distinct !DISubprogram(name: "from_residual<core::ops::try_trait::NeverShortCircuit<()>, ()>", linkageName: "_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h0ddc44c50adc7e18E", scope: !1892, file: !1891, line: 124, type: !1893, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1010, retainedNodes: !1909)
!1891 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3f54181afa9340624d221410fb16c96")
!1892 = !DINamespace(name: "{impl#1}", scope: !1002)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!1001, !1895}
!1895 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, core::convert::Infallible>", scope: !1002, file: !2, align: 8, flags: DIFlagPublic, elements: !1896, templateParams: !15, identifier: "c0d9b79829babe1347d1646698f3aa8a")
!1896 = !{!1897}
!1897 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1895, file: !2, align: 8, elements: !1898, templateParams: !15, identifier: "5c2c5ab2eea62cad8101cdeeefcfc639")
!1898 = !{!1899, !1905}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1897, file: !2, baseType: !1900, align: 8)
!1900 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1895, file: !2, align: 8, flags: DIFlagPublic, elements: !1901, templateParams: !1903, identifier: "9187c396a1c9edc22e23910620867e99")
!1901 = !{!1902}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1900, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!1903 = !{!1011, !1904}
!1904 = !DITemplateTypeParameter(name: "C", type: !873)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1897, file: !2, baseType: !1906, align: 8)
!1906 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1895, file: !2, align: 8, flags: DIFlagPublic, elements: !1907, templateParams: !1903, identifier: "ea151303e53d8f9cf2f46888c68c68d1")
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1906, file: !2, baseType: !967, align: 8, flags: DIFlagPublic)
!1909 = !{!1910, !1911}
!1910 = !DILocalVariable(name: "residual", arg: 1, scope: !1890, file: !1891, line: 124, type: !1895)
!1911 = !DILocalVariable(name: "b", scope: !1912, file: !1891, line: 126, type: !967, align: 1)
!1912 = distinct !DILexicalBlock(scope: !1890, file: !1891, line: 126, column: 13)
!1913 = !DILocation(line: 124, column: 22, scope: !1890)
!1914 = !DILocation(line: 126, column: 32, scope: !1912)
!1915 = !DILocation(line: 126, column: 38, scope: !1912)
!1916 = !DILocation(line: 128, column: 6, scope: !1890)
!1917 = distinct !DISubprogram(name: "from_residual<char, ()>", linkageName: "_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h877cb5f984e65f0cE", scope: !1892, file: !1891, line: 124, type: !1918, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1928, retainedNodes: !1947)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!1920, !1934}
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<char, ()>", scope: !1002, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1921, templateParams: !15, identifier: "2ee29a3ded86d1816d3db9f492bf8d5b")
!1921 = !{!1922}
!1922 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1920, file: !2, size: 32, align: 32, elements: !1923, templateParams: !15, identifier: "2c56075104225cbcb5d3a00f763d6313", discriminator: !1933)
!1923 = !{!1924, !1929}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1922, file: !2, baseType: !1925, size: 32, align: 32, extraData: i128 1114112)
!1925 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1920, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1926, templateParams: !1928, identifier: "634ff496fdc2556d955b2f7e6cf8a035")
!1926 = !{!1927}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1925, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!1928 = !{!378, !1012}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1922, file: !2, baseType: !1930, size: 32, align: 32)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1920, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1931, templateParams: !1928, identifier: "a3e6b4e05fa0a36541234b6ddbfde211")
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1930, file: !2, baseType: !379, size: 32, align: 32, flags: DIFlagPublic)
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1920, file: !2, baseType: !1391, size: 32, align: 32, flags: DIFlagArtificial)
!1934 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<char, core::convert::Infallible>", scope: !1002, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1935, templateParams: !15, identifier: "551d0598dac407b7ff5c11f410d3db34")
!1935 = !{!1936}
!1936 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1934, file: !2, size: 32, align: 32, elements: !1937, templateParams: !15, identifier: "2c9e28fccdebd442ec9c30b1317e6596")
!1937 = !{!1938, !1943}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1936, file: !2, baseType: !1939, size: 32, align: 32)
!1939 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1934, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1940, templateParams: !1942, identifier: "dff912a09eff9a9de9b3651eefd37112")
!1940 = !{!1941}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1939, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!1942 = !{!378, !1904}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1936, file: !2, baseType: !1944, size: 32, align: 32)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1934, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1945, templateParams: !1942, identifier: "5aa8f7271fabb45a5fc9180129b856f5")
!1945 = !{!1946}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1944, file: !2, baseType: !379, size: 32, align: 32, flags: DIFlagPublic)
!1947 = !{!1948, !1949}
!1948 = !DILocalVariable(name: "residual", arg: 1, scope: !1917, file: !1891, line: 124, type: !1934)
!1949 = !DILocalVariable(name: "b", scope: !1950, file: !1891, line: 126, type: !379, align: 4)
!1950 = distinct !DILexicalBlock(scope: !1917, file: !1891, line: 126, column: 13)
!1951 = !DILocation(line: 124, column: 22, scope: !1917)
!1952 = !DILocation(line: 126, column: 32, scope: !1917)
!1953 = !DILocation(line: 126, column: 32, scope: !1950)
!1954 = !DILocation(line: 126, column: 38, scope: !1950)
!1955 = !DILocation(line: 128, column: 6, scope: !1917)
!1956 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h54ac28b3a129e867E", scope: !1958, file: !1957, line: 2640, type: !1959, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !2012)
!1957 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe29ef83b41586cf578e69a7484a48b7")
!1958 = !DINamespace(name: "{impl#74}", scope: !13)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!1961, !1976, !1977}
!1961 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !865, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1962, templateParams: !15, identifier: "8871ecdf9bfdfd95b6561736c61a6000")
!1962 = !{!1963}
!1963 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1961, file: !2, size: 8, align: 8, elements: !1964, templateParams: !15, identifier: "d88f9726407f038e23d660304b212247", discriminator: !1975)
!1964 = !{!1965, !1971}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1963, file: !2, baseType: !1966, size: 8, align: 8, extraData: i128 0)
!1966 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1961, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1967, templateParams: !1969, identifier: "5e12bae1e92bf11262fc59e46dd03bb")
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1966, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!1969 = !{!971, !1970}
!1970 = !DITemplateTypeParameter(name: "E", type: !12)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1963, file: !2, baseType: !1972, size: 8, align: 8, extraData: i128 1)
!1972 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1961, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1973, templateParams: !1969, identifier: "9e8c6d4e7b157ad4997227fb66848958")
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1972, file: !2, baseType: !12, align: 8, offset: 8, flags: DIFlagPublic)
!1975 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagArtificial)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u8", baseType: !67, size: 64, align: 64, dwarfAddressSpace: 0)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !1978, size: 64, align: 64, dwarfAddressSpace: 0)
!1978 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !13, file: !2, size: 512, align: 64, flags: DIFlagPublic, elements: !1979, templateParams: !15, identifier: "b8ff3b3ca6f359f82addd57f3988ef76")
!1979 = !{!1980, !2001}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1978, file: !2, baseType: !1981, size: 384, align: 64, flags: DIFlagPrivate)
!1981 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormattingOptions", scope: !13, file: !2, size: 384, align: 64, flags: DIFlagPublic, elements: !1982, templateParams: !15, identifier: "474ae249afccb92b97746d3344af8ce9")
!1982 = !{!1983, !1984, !1985, !1999, !2000}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1981, file: !2, baseType: !1391, size: 32, align: 32, offset: 288, flags: DIFlagPrivate)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1981, file: !2, baseType: !379, size: 32, align: 32, offset: 256, flags: DIFlagPrivate)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1981, file: !2, baseType: !1986, size: 8, align: 8, offset: 320, flags: DIFlagPrivate)
!1986 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Alignment>", scope: !37, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1987, templateParams: !15, identifier: "bccad4d5f038d26fc00ee30bbcf72b93")
!1987 = !{!1988}
!1988 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1986, file: !2, size: 8, align: 8, elements: !1989, templateParams: !15, identifier: "7bc6e24228f012389aa5af2d59da776c", discriminator: !1998)
!1989 = !{!1990, !1994}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1988, file: !2, baseType: !1991, size: 8, align: 8, extraData: i128 3)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1986, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !1992, identifier: "7e9ac2dc2277b1e55bb6b80a9ab4a8c3")
!1992 = !{!1993}
!1993 = !DITemplateTypeParameter(name: "T", type: !278)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1988, file: !2, baseType: !1995, size: 8, align: 8)
!1995 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1986, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1996, templateParams: !1992, identifier: "b3c944b197a840df22508616eb70ae53")
!1996 = !{!1997}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1995, file: !2, baseType: !278, size: 8, align: 8, flags: DIFlagPublic)
!1998 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagArtificial)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1981, file: !2, baseType: !664, size: 128, align: 64, flags: DIFlagPrivate)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1981, file: !2, baseType: !664, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1978, file: !2, baseType: !2002, size: 128, align: 64, offset: 384, flags: DIFlagPrivate)
!2002 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !2003, templateParams: !15, identifier: "cff29158adda24b8997eef0fb867342e")
!2003 = !{!2004, !2007}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2002, file: !2, baseType: !2005, size: 64, align: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64, align: 64, dwarfAddressSpace: 0)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !15, identifier: "e404a1bc00eda93b7974aff617a262ab")
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2002, file: !2, baseType: !2008, size: 64, align: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 6]", baseType: !2009, size: 64, align: 64, dwarfAddressSpace: 0)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 384, align: 64, elements: !2010)
!2010 = !{!2011}
!2011 = !DISubrange(count: 6, lowerBound: 0)
!2012 = !{!2013, !2014}
!2013 = !DILocalVariable(name: "self", arg: 1, scope: !1956, file: !1957, line: 2640, type: !1976)
!2014 = !DILocalVariable(name: "f", arg: 2, scope: !1956, file: !1957, line: 2640, type: !1977)
!2015 = !DILocation(line: 2640, column: 20, scope: !1956)
!2016 = !DILocation(line: 2640, column: 27, scope: !1956)
!2017 = !DILocation(line: 2640, column: 71, scope: !1956)
!2018 = !DILocation(line: 2640, column: 62, scope: !1956)
!2019 = !DILocation(line: 2640, column: 84, scope: !1956)
!2020 = distinct !DISubprogram(name: "fmt<core::option::Option<u8>>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb01e2dcb36eedd7cE", scope: !1958, file: !1957, line: 2640, type: !2021, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2027, retainedNodes: !2024)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!1961, !2023, !1977}
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&core::option::Option<u8>", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!2024 = !{!2025, !2026}
!2025 = !DILocalVariable(name: "self", arg: 1, scope: !2020, file: !1957, line: 2640, type: !2023)
!2026 = !DILocalVariable(name: "f", arg: 2, scope: !2020, file: !1957, line: 2640, type: !1977)
!2027 = !{!2028}
!2028 = !DITemplateTypeParameter(name: "T", type: !36)
!2029 = !DILocation(line: 2640, column: 20, scope: !2020)
!2030 = !DILocation(line: 2640, column: 27, scope: !2020)
!2031 = !DILocation(line: 2640, column: 71, scope: !2020)
!2032 = !DILocation(line: 2640, column: 62, scope: !2020)
!2033 = !DILocation(line: 2640, column: 84, scope: !2020)
!2034 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hce3520abf5f196dbE", scope: !1958, file: !1957, line: 2640, type: !2035, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !2037)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!1961, !574, !1977}
!2037 = !{!2038, !2039}
!2038 = !DILocalVariable(name: "self", arg: 1, scope: !2034, file: !1957, line: 2640, type: !574)
!2039 = !DILocalVariable(name: "f", arg: 2, scope: !2034, file: !1957, line: 2640, type: !1977)
!2040 = !DILocation(line: 2640, column: 20, scope: !2034)
!2041 = !DILocation(line: 2640, column: 27, scope: !2034)
!2042 = !DILocation(line: 2640, column: 71, scope: !2034)
!2043 = !DILocation(line: 2640, column: 62, scope: !2034)
!2044 = !DILocation(line: 2640, column: 84, scope: !2034)
!2045 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core10intrinsics11write_bytes18precondition_check17he7d582f03055b4ecE", scope: !2046, file: !1177, line: 66, type: !2048, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2050)
!2046 = !DINamespace(name: "write_bytes", scope: !2047)
!2047 = !DINamespace(name: "intrinsics", scope: !14)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{null, !6, !9, !520}
!2050 = !{!2051, !2052, !2053}
!2051 = !DILocalVariable(name: "addr", arg: 1, scope: !2045, file: !1177, line: 66, type: !6)
!2052 = !DILocalVariable(name: "align", arg: 2, scope: !2045, file: !1177, line: 66, type: !9)
!2053 = !DILocalVariable(name: "zero_size", arg: 3, scope: !2045, file: !1177, line: 66, type: !520)
!2054 = !DILocation(line: 66, column: 43, scope: !2045)
!2055 = !DILocation(line: 4523, column: 18, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !2045, file: !2057, discriminator: 0)
!2057 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b46141abc1a394e277cd59ec5a475341")
!2058 = !DILocation(line: 68, column: 21, scope: !2045)
!2059 = !DILocation(line: 72, column: 14, scope: !2045)
!2060 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17h6ecae3d14bae3163E", scope: !2061, file: !1177, line: 66, type: !2062, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2065)
!2061 = !DINamespace(name: "copy_nonoverlapping", scope: !2047)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !6, !2064, !9, !9, !9}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!2065 = !{!2066, !2067, !2068, !2069, !2070, !2071}
!2066 = !DILocalVariable(name: "src", arg: 1, scope: !2060, file: !1177, line: 66, type: !6)
!2067 = !DILocalVariable(name: "dst", arg: 2, scope: !2060, file: !1177, line: 66, type: !2064)
!2068 = !DILocalVariable(name: "size", arg: 3, scope: !2060, file: !1177, line: 66, type: !9)
!2069 = !DILocalVariable(name: "align", arg: 4, scope: !2060, file: !1177, line: 66, type: !9)
!2070 = !DILocalVariable(name: "count", arg: 5, scope: !2060, file: !1177, line: 66, type: !9)
!2071 = !DILocalVariable(name: "zero_size", scope: !2072, file: !2057, line: 4336, type: !520, align: 1)
!2072 = distinct !DILexicalBlock(scope: !2060, file: !2057, line: 4336, column: 13)
!2073 = !DILocation(line: 66, column: 43, scope: !2060)
!2074 = !DILocation(line: 4336, column: 17, scope: !2072)
!2075 = !DILocation(line: 4336, column: 29, scope: !2076)
!2076 = !DILexicalBlockFile(scope: !2060, file: !2057, discriminator: 0)
!2077 = !DILocation(line: 4336, column: 43, scope: !2076)
!2078 = !DILocation(line: 4337, column: 66, scope: !2072)
!2079 = !DILocation(line: 4337, column: 13, scope: !2072)
!2080 = !DILocation(line: 4338, column: 73, scope: !2072)
!2081 = !DILocation(line: 4338, column: 20, scope: !2072)
!2082 = !DILocation(line: 4339, column: 20, scope: !2072)
!2083 = !DILocation(line: 4335, column: 14, scope: !2076)
!2084 = !DILocation(line: 68, column: 21, scope: !2060)
!2085 = !DILocation(line: 72, column: 14, scope: !2060)
!2086 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core10intrinsics4copy18precondition_check17h22f1a0946e134f3bE", scope: !2087, file: !1177, line: 66, type: !2088, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2090)
!2087 = !DINamespace(name: "copy", scope: !2047)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !6, !2064, !9, !520}
!2090 = !{!2091, !2092, !2093, !2094}
!2091 = !DILocalVariable(name: "src", arg: 1, scope: !2086, file: !1177, line: 66, type: !6)
!2092 = !DILocalVariable(name: "dst", arg: 2, scope: !2086, file: !1177, line: 66, type: !2064)
!2093 = !DILocalVariable(name: "align", arg: 3, scope: !2086, file: !1177, line: 66, type: !9)
!2094 = !DILocalVariable(name: "zero_size", arg: 4, scope: !2086, file: !1177, line: 66, type: !520)
!2095 = !DILocation(line: 66, column: 43, scope: !2086)
!2096 = !DILocation(line: 4442, column: 13, scope: !2097)
!2097 = !DILexicalBlockFile(scope: !2086, file: !2057, discriminator: 0)
!2098 = !DILocation(line: 68, column: 21, scope: !2086)
!2099 = !DILocation(line: 4443, column: 20, scope: !2097)
!2100 = !DILocation(line: 72, column: 14, scope: !2086)
!2101 = distinct !DISubprogram(name: "cold_path", linkageName: "_ZN4core10intrinsics9cold_path17h7bc7d849f0520b83E", scope: !2047, file: !2057, line: 1488, type: !2102, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null}
!2104 = !DILocation(line: 1488, column: 28, scope: !2101)
!2105 = distinct !DISubprogram(name: "of<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core3any6TypeId2of17h800f12e433303fc0E", scope: !2107, file: !2106, line: 638, type: !2115, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2118, declaration: !2117, retainedNodes: !2120)
!2106 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/any.rs", directory: "", checksumkind: CSK_MD5, checksum: "0087a1760c969bbcbc35dbc5796998ca")
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "TypeId", scope: !2108, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2109, templateParams: !15, identifier: "14dada22b8d5321f814010dffda99152")
!2108 = !DINamespace(name: "any", scope: !14)
!2109 = !{!2110}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !2107, file: !2, baseType: !2111, size: 128, align: 64, flags: DIFlagPrivate)
!2111 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, u64)", file: !2, size: 128, align: 64, elements: !2112, templateParams: !15, identifier: "19e9be5b2400f26b5a124525aae10cbb")
!2112 = !{!2113, !2114}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2111, file: !2, baseType: !212, size: 64, align: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2111, file: !2, baseType: !212, size: 64, align: 64, offset: 64)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{!2107}
!2117 = !DISubprogram(name: "of<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core3any6TypeId2of17h800f12e433303fc0E", scope: !2107, file: !2106, line: 638, type: !2115, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2118)
!2118 = !{!2119}
!2119 = !DITemplateTypeParameter(name: "T", type: !134)
!2120 = !{!2121, !2124, !2126}
!2121 = !DILocalVariable(name: "t", scope: !2122, file: !2106, line: 639, type: !2123, align: 16)
!2122 = distinct !DILexicalBlock(scope: !2105, file: !2106, line: 639, column: 9)
!2123 = !DIBasicType(name: "u128", size: 128, encoding: DW_ATE_unsigned)
!2124 = !DILocalVariable(name: "t1", scope: !2125, file: !2106, line: 641, type: !212, align: 8)
!2125 = distinct !DILexicalBlock(scope: !2122, file: !2106, line: 641, column: 9)
!2126 = !DILocalVariable(name: "t2", scope: !2127, file: !2106, line: 642, type: !212, align: 8)
!2127 = distinct !DILexicalBlock(scope: !2125, file: !2106, line: 642, column: 9)
!2128 = !DILocation(line: 639, column: 23, scope: !2105)
!2129 = !DILocation(line: 639, column: 13, scope: !2122)
!2130 = !DILocation(line: 641, column: 18, scope: !2122)
!2131 = !DILocation(line: 641, column: 13, scope: !2125)
!2132 = !DILocation(line: 642, column: 18, scope: !2125)
!2133 = !DILocation(line: 642, column: 13, scope: !2127)
!2134 = !DILocation(line: 644, column: 6, scope: !2105)
!2135 = distinct !DISubprogram(name: "of<core::str::error::Utf8Error>", linkageName: "_ZN4core3any6TypeId2of17hb25573cdebddc43eE", scope: !2107, file: !2106, line: 638, type: !2115, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2137, declaration: !2136, retainedNodes: !2139)
!2136 = !DISubprogram(name: "of<core::str::error::Utf8Error>", linkageName: "_ZN4core3any6TypeId2of17hb25573cdebddc43eE", scope: !2107, file: !2106, line: 638, type: !2115, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2137)
!2137 = !{!2138}
!2138 = !DITemplateTypeParameter(name: "T", type: !156)
!2139 = !{!2140, !2142, !2144}
!2140 = !DILocalVariable(name: "t", scope: !2141, file: !2106, line: 639, type: !2123, align: 16)
!2141 = distinct !DILexicalBlock(scope: !2135, file: !2106, line: 639, column: 9)
!2142 = !DILocalVariable(name: "t1", scope: !2143, file: !2106, line: 641, type: !212, align: 8)
!2143 = distinct !DILexicalBlock(scope: !2141, file: !2106, line: 641, column: 9)
!2144 = !DILocalVariable(name: "t2", scope: !2145, file: !2106, line: 642, type: !212, align: 8)
!2145 = distinct !DILexicalBlock(scope: !2143, file: !2106, line: 642, column: 9)
!2146 = !DILocation(line: 639, column: 23, scope: !2135)
!2147 = !DILocation(line: 639, column: 13, scope: !2141)
!2148 = !DILocation(line: 641, column: 18, scope: !2141)
!2149 = !DILocation(line: 641, column: 13, scope: !2143)
!2150 = !DILocation(line: 642, column: 18, scope: !2143)
!2151 = !DILocation(line: 642, column: 13, scope: !2145)
!2152 = !DILocation(line: 644, column: 6, scope: !2135)
!2153 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h32b2d2bf6c473d80E", scope: !2155, file: !2154, line: 1636, type: !2158, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2160)
!2154 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "6514baa4261f88fbee4787020ca20aad")
!2155 = !DINamespace(name: "{impl#22}", scope: !2156)
!2156 = !DINamespace(name: "impls", scope: !2157)
!2157 = !DINamespace(name: "cmp", scope: !14)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!520, !67, !67}
!2160 = !{!2161, !2162}
!2161 = !DILocalVariable(name: "self", arg: 1, scope: !2153, file: !2154, line: 1636, type: !67)
!2162 = !DILocalVariable(name: "other", arg: 2, scope: !2153, file: !2154, line: 1636, type: !67)
!2163 = !DILocation(line: 1636, column: 23, scope: !2153)
!2164 = !DILocation(line: 1636, column: 30, scope: !2153)
!2165 = !DILocation(line: 1636, column: 52, scope: !2153)
!2166 = !DILocation(line: 1636, column: 63, scope: !2153)
!2167 = !DILocation(line: 1636, column: 73, scope: !2153)
!2168 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h614f779dfc56329fE", scope: !2169, file: !2154, line: 1636, type: !2170, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2173)
!2169 = !DINamespace(name: "{impl#21}", scope: !2156)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{!520, !2172, !2172}
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!2173 = !{!2174, !2175}
!2174 = !DILocalVariable(name: "self", arg: 1, scope: !2168, file: !2154, line: 1636, type: !2172)
!2175 = !DILocalVariable(name: "other", arg: 2, scope: !2168, file: !2154, line: 1636, type: !2172)
!2176 = !DILocation(line: 1636, column: 23, scope: !2168)
!2177 = !DILocation(line: 1636, column: 30, scope: !2168)
!2178 = !DILocation(line: 1636, column: 52, scope: !2168)
!2179 = !DILocation(line: 1636, column: 63, scope: !2168)
!2180 = !DILocation(line: 1636, column: 73, scope: !2168)
!2181 = distinct !DISubprogram(name: "to_bytes_with_nul", linkageName: "_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E", scope: !2183, file: !2182, line: 622, type: !2188, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2195, retainedNodes: !2196)
!2182 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "357610aca784765e9800310679cd1c8c")
!2183 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !2184, file: !2, align: 8, flags: DIFlagPublic, elements: !2186, templateParams: !15, identifier: "26fbb402c688bff6297b8fb6e79ebfe9")
!2184 = !DINamespace(name: "c_str", scope: !2185)
!2185 = !DINamespace(name: "ffi", scope: !14)
!2186 = !{!2187}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2183, file: !2, baseType: !45, align: 8, flags: DIFlagPrivate)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!427, !2190}
!2190 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !2191, templateParams: !15, identifier: "c2b7fd2eba011fc33a86dc75f8a65b88")
!2191 = !{!2192, !2194}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2190, file: !2, baseType: !2193, size: 64, align: 64)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64, align: 64, dwarfAddressSpace: 0)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2190, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2195 = !DISubprogram(name: "to_bytes_with_nul", linkageName: "_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17haf7b1cd4724fd351E", scope: !2183, file: !2182, line: 622, type: !2188, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2196 = !{!2197}
!2197 = !DILocalVariable(name: "self", arg: 1, scope: !2181, file: !2182, line: 622, type: !2190)
!2198 = !DILocation(line: 622, column: 36, scope: !2181)
!2199 = !DILocation(line: 626, column: 6, scope: !2181)
!2200 = distinct !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha6543f6aaea04575E", scope: !2183, file: !2182, line: 412, type: !2201, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2203, retainedNodes: !2204)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!2190, !427}
!2203 = !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha6543f6aaea04575E", scope: !2183, file: !2182, line: 412, type: !2201, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2204 = !{!2205}
!2205 = !DILocalVariable(name: "bytes", arg: 1, scope: !2200, file: !2182, line: 412, type: !427)
!2206 = !DILocation(line: 412, column: 55, scope: !2200)
!2207 = !DILocation(line: 3840, column: 9, scope: !2208)
!2208 = !DILexicalBlockFile(scope: !2200, file: !2057, discriminator: 0)
!2209 = !DILocation(line: 442, column: 6, scope: !2200)
!2210 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7runtime17hf4ecf365b496096eE", scope: !2211, file: !2057, line: 3828, type: !2201, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2213)
!2211 = !DINamespace(name: "from_bytes_with_nul_unchecked", scope: !2212)
!2212 = !DINamespace(name: "{impl#6}", scope: !2184)
!2213 = !{!2214}
!2214 = !DILocalVariable(name: "bytes", arg: 1, scope: !2210, file: !2057, line: 3828, type: !427)
!2215 = !DILocation(line: 3828, column: 22, scope: !2210)
!2216 = !DILocation(line: 432, column: 32, scope: !2217)
!2217 = !DILexicalBlockFile(scope: !2210, file: !2182, discriminator: 0)
!2218 = !DILocation(line: 432, column: 58, scope: !2217)
!2219 = !DILocation(line: 335, column: 13, scope: !2220)
!2220 = !DILexicalBlockFile(scope: !2210, file: !2221, discriminator: 0)
!2221 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "03446a917ebd0f3a11fd725e56bfddaf")
!2222 = !DILocation(line: 432, column: 52, scope: !2217)
!2223 = !DILocation(line: 3830, column: 10, scope: !2210)
!2224 = distinct !DISubprogram(name: "from_ptr", linkageName: "_ZN4core3ffi5c_str4CStr8from_ptr17heec05a6e074ea783E", scope: !2183, file: !2182, line: 276, type: !2225, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2227, retainedNodes: !2228)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!2190, !103}
!2227 = !DISubprogram(name: "from_ptr", linkageName: "_ZN4core3ffi5c_str4CStr8from_ptr17heec05a6e074ea783E", scope: !2183, file: !2182, line: 276, type: !2225, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2228 = !{!2229, !2230}
!2229 = !DILocalVariable(name: "ptr", arg: 1, scope: !2224, file: !2182, line: 276, type: !103)
!2230 = !DILocalVariable(name: "len", scope: !2231, file: !2182, line: 279, type: !9, align: 8)
!2231 = distinct !DILexicalBlock(scope: !2224, file: !2182, line: 279, column: 9)
!2232 = !DILocation(line: 276, column: 38, scope: !2224)
!2233 = !DILocation(line: 279, column: 28, scope: !2224)
!2234 = !DILocation(line: 279, column: 13, scope: !2231)
!2235 = !DILocalVariable(name: "self", arg: 1, scope: !2236, file: !2237, line: 62, type: !103)
!2236 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hba148231706357abE", scope: !2238, file: !2237, line: 62, type: !2240, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2243, retainedNodes: !2242)
!2237 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "10b35840aca18f521b8813608a7dd0c0")
!2238 = !DINamespace(name: "{impl#0}", scope: !2239)
!2239 = !DINamespace(name: "const_ptr", scope: !96)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!103, !103}
!2242 = !{!2235}
!2243 = !{!44, !2244}
!2244 = !DITemplateTypeParameter(name: "U", type: !45)
!2245 = !DILocation(line: 62, column: 26, scope: !2236, inlinedAt: !2246)
!2246 = distinct !DILocation(line: 287, column: 76, scope: !2231)
!2247 = !DILocation(line: 287, column: 88, scope: !2231)
!2248 = !DILocation(line: 287, column: 54, scope: !2231)
!2249 = !DILocation(line: 287, column: 18, scope: !2231)
!2250 = !DILocation(line: 288, column: 6, scope: !2224)
!2251 = distinct !DISubprogram(name: "to_bytes", linkageName: "_ZN4core3ffi5c_str4CStr8to_bytes17h40a5d5761cbaddacE", scope: !2183, file: !2182, line: 593, type: !2188, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2252, retainedNodes: !2253)
!2252 = !DISubprogram(name: "to_bytes", linkageName: "_ZN4core3ffi5c_str4CStr8to_bytes17h40a5d5761cbaddacE", scope: !2183, file: !2182, line: 593, type: !2188, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2253 = !{!2254, !2255}
!2254 = !DILocalVariable(name: "self", arg: 1, scope: !2251, file: !2182, line: 593, type: !2190)
!2255 = !DILocalVariable(name: "bytes", scope: !2256, file: !2182, line: 594, type: !427, align: 8)
!2256 = distinct !DILexicalBlock(scope: !2251, file: !2182, line: 594, column: 9)
!2257 = !DILocation(line: 593, column: 27, scope: !2251)
!2258 = !DILocation(line: 594, column: 21, scope: !2251)
!2259 = !DILocation(line: 594, column: 13, scope: !2256)
!2260 = !DILocalVariable(name: "self", arg: 1, scope: !2261, file: !2262, line: 742, type: !427)
!2261 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4417618930606de1E", scope: !2263, file: !2262, line: 742, type: !2264, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !2266)
!2262 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "36fc5f91fa3806fb8289ffc48048bad5")
!2263 = !DINamespace(name: "{impl#0}", scope: !320)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!103, !427}
!2266 = !{!2260}
!2267 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !2268)
!2268 = distinct !DILocation(line: 597, column: 40, scope: !2256)
!2269 = !DILocation(line: 597, column: 56, scope: !2256)
!2270 = !DILocation(line: 597, column: 18, scope: !2256)
!2271 = !DILocation(line: 598, column: 6, scope: !2251)
!2272 = distinct !DISubprogram(name: "strlen", linkageName: "_ZN4core3ffi5c_str6strlen17hfb36e049099ff8d1E", scope: !2184, file: !2182, line: 733, type: !2273, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!9, !103}
!2275 = !{!2276}
!2276 = !DILocalVariable(name: "ptr", arg: 1, scope: !2272, file: !2182, line: 733, type: !103)
!2277 = !DILocation(line: 733, column: 24, scope: !2272)
!2278 = !DILocation(line: 3840, column: 9, scope: !2279)
!2279 = !DILexicalBlockFile(scope: !2272, file: !2057, discriminator: 0)
!2280 = !DILocation(line: 755, column: 2, scope: !2272)
!2281 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ffi5c_str6strlen7runtime17h429f74902c896c11E", scope: !2282, file: !2057, line: 3828, type: !2273, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2283)
!2282 = !DINamespace(name: "strlen", scope: !2184)
!2283 = !{!2284}
!2284 = !DILocalVariable(name: "s", arg: 1, scope: !2281, file: !2057, line: 3828, type: !103)
!2285 = !DILocation(line: 3828, column: 22, scope: !2281)
!2286 = !DILocation(line: 752, column: 22, scope: !2287)
!2287 = !DILexicalBlockFile(scope: !2281, file: !2182, discriminator: 0)
!2288 = !DILocation(line: 3830, column: 10, scope: !2281)
!2289 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h9607ef3dfbebba9bE", scope: !2291, file: !2290, line: 180, type: !2293, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2295)
!2290 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "82da16f8ad76d92c56ed073973d216f1")
!2291 = !DINamespace(name: "{impl#84}", scope: !2292)
!2292 = !DINamespace(name: "num", scope: !13)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!1961, !67, !1977}
!2295 = !{!2296, !2297}
!2296 = !DILocalVariable(name: "self", arg: 1, scope: !2289, file: !2290, line: 180, type: !67)
!2297 = !DILocalVariable(name: "f", arg: 2, scope: !2289, file: !2290, line: 180, type: !1977)
!2298 = !DILocation(line: 180, column: 24, scope: !2289)
!2299 = !DILocation(line: 180, column: 31, scope: !2289)
!2300 = !DILocation(line: 181, column: 24, scope: !2289)
!2301 = !DILocation(line: 183, column: 31, scope: !2289)
!2302 = !DILocation(line: 182, column: 25, scope: !2289)
!2303 = !DILocation(line: 186, column: 25, scope: !2289)
!2304 = !DILocation(line: 184, column: 25, scope: !2289)
!2305 = !DILocation(line: 188, column: 18, scope: !2289)
!2306 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h8901250f82f506b0E", scope: !2307, file: !2290, line: 180, type: !2308, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2310)
!2307 = !DINamespace(name: "{impl#89}", scope: !2292)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!1961, !2172, !1977}
!2310 = !{!2311, !2312}
!2311 = !DILocalVariable(name: "self", arg: 1, scope: !2306, file: !2290, line: 180, type: !2172)
!2312 = !DILocalVariable(name: "f", arg: 2, scope: !2306, file: !2290, line: 180, type: !1977)
!2313 = !DILocation(line: 180, column: 24, scope: !2306)
!2314 = !DILocation(line: 180, column: 31, scope: !2306)
!2315 = !DILocation(line: 181, column: 24, scope: !2306)
!2316 = !DILocation(line: 183, column: 31, scope: !2306)
!2317 = !DILocation(line: 182, column: 25, scope: !2306)
!2318 = !DILocation(line: 186, column: 25, scope: !2306)
!2319 = !DILocation(line: 184, column: 25, scope: !2306)
!2320 = !DILocation(line: 188, column: 18, scope: !2306)
!2321 = distinct !DISubprogram(name: "write_fmt<alloc::string::String>", linkageName: "_ZN4core3fmt5Write9write_fmt17h17a6868f9c748f56E", scope: !2322, file: !1957, line: 215, type: !2323, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2412, retainedNodes: !2409)
!2322 = !DINamespace(name: "Write", scope: !13)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!1961, !372, !2325}
!2325 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !13, file: !2, size: 384, align: 64, flags: DIFlagPublic, elements: !2326, templateParams: !15, identifier: "d8c0aabee56d3790fc66686fbbff0149")
!2326 = !{!2327, !2333, !2375}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !2325, file: !2, baseType: !2328, size: 128, align: 64, flags: DIFlagPrivate)
!2328 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !2329, templateParams: !15, identifier: "4e66b00a376d6af5b8765440fb2839f")
!2329 = !{!2330, !2332}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2328, file: !2, baseType: !2331, size: 64, align: 64)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64, align: 64, dwarfAddressSpace: 0)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2328, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !2325, file: !2, baseType: !2334, size: 128, align: 64, offset: 256, flags: DIFlagPrivate)
!2334 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !37, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2335, templateParams: !15, identifier: "8ee0245babf9cf7f3411d618dd90c5c4")
!2335 = !{!2336}
!2336 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2334, file: !2, size: 128, align: 64, elements: !2337, templateParams: !15, identifier: "f1d34e03a6a773a4dadb68b453b56ac", discriminator: !2374)
!2337 = !{!2338, !2370}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2336, file: !2, baseType: !2339, size: 128, align: 64, extraData: i128 0)
!2339 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2334, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !2340, identifier: "2e19e77e6f5f239f3ac55a70ab21cc63")
!2340 = !{!2341}
!2341 = !DITemplateTypeParameter(name: "T", type: !2342)
!2342 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 128, align: 64, elements: !2343, templateParams: !15, identifier: "1b3912325d7d2fa0cae4d4a7e1caff0f")
!2343 = !{!2344, !2369}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2342, file: !2, baseType: !2345, size: 64, align: 64)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64, align: 64, dwarfAddressSpace: 0)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !284, file: !2, size: 448, align: 64, flags: DIFlagPublic, elements: !2347, templateParams: !15, identifier: "75de71fd801b7e66e54c8f7375570edb")
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2368}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2346, file: !2, baseType: !9, size: 64, align: 64, offset: 256, flags: DIFlagPublic)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2346, file: !2, baseType: !379, size: 32, align: 32, offset: 320, flags: DIFlagPublic)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2346, file: !2, baseType: !283, size: 8, align: 8, offset: 384, flags: DIFlagPublic)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2346, file: !2, baseType: !1391, size: 32, align: 32, offset: 352, flags: DIFlagPublic)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2346, file: !2, baseType: !2353, size: 128, align: 64, flags: DIFlagPublic)
!2353 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !284, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2354, templateParams: !15, identifier: "6b52a92e34ddacfc759a1f7c77e67d0f")
!2354 = !{!2355}
!2355 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2353, file: !2, size: 128, align: 64, elements: !2356, templateParams: !15, identifier: "a0a9482332c7817160dfc3c1fd519ac1", discriminator: !2367)
!2356 = !{!2357, !2361, !2365}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !2355, file: !2, baseType: !2358, size: 128, align: 64, extraData: i128 0)
!2358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !2353, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2359, templateParams: !15, identifier: "6c865bf11107f413dd0b7c8bc80b0876")
!2359 = !{!2360}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2358, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !2355, file: !2, baseType: !2362, size: 128, align: 64, extraData: i128 1)
!2362 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !2353, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2363, templateParams: !15, identifier: "ce6972b6cb1c67c4d434261e9bf38904")
!2363 = !{!2364}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2362, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !2355, file: !2, baseType: !2366, size: 128, align: 64, extraData: i128 2)
!2366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !2353, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, identifier: "d76898c102c58eebfedc2424dde5a7a4")
!2367 = !DIDerivedType(tag: DW_TAG_member, scope: !2353, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2346, file: !2, baseType: !2353, size: 128, align: 64, offset: 128, flags: DIFlagPublic)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2342, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2336, file: !2, baseType: !2371, size: 128, align: 64)
!2371 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2334, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2372, templateParams: !2340, identifier: "9e0e4e0db8fd875bd25a5cbaa454ef89")
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2371, file: !2, baseType: !2342, size: 128, align: 64, flags: DIFlagPublic)
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2334, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2325, file: !2, baseType: !2376, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!2376 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 128, align: 64, elements: !2377, templateParams: !15, identifier: "a8916b1612290a0ff5ab52598c207c58")
!2377 = !{!2378, !2408}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2376, file: !2, baseType: !2379, size: 64, align: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64, align: 64, dwarfAddressSpace: 0)
!2380 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !284, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2381, templateParams: !15, identifier: "af343355da5f8ea292e7d3b2878559cb")
!2381 = !{!2382}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !2380, file: !2, baseType: !2383, size: 128, align: 64, flags: DIFlagPrivate)
!2383 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentType", scope: !284, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !2384, templateParams: !15, identifier: "d447aa14eb31a50c23c7d152e677724c")
!2384 = !{!2385}
!2385 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2383, file: !2, size: 128, align: 64, elements: !2386, templateParams: !15, identifier: "d06fb0c768a782e6d61e487be3587e7", discriminator: !2407)
!2386 = !{!2387, !2403}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "Placeholder", scope: !2385, file: !2, baseType: !2388, size: 128, align: 64)
!2388 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !2383, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !2389, templateParams: !15, identifier: "dc03a5e086d9ebf44259508022e9322b")
!2389 = !{!2390, !2394, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2388, file: !2, baseType: !2391, size: 64, align: 64, flags: DIFlagPrivate)
!2391 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !2392, templateParams: !970, identifier: "8da5b98fa2067177c8db748f4baf2533")
!2392 = !{!2393}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2391, file: !2, baseType: !6, size: 64, align: 64, flags: DIFlagPrivate)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !2388, file: !2, baseType: !2395, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe fn(core::ptr::non_null::NonNull<()>, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2396, size: 64, align: 64, dwarfAddressSpace: 0)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!1961, !2391, !1977}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_lifetime", scope: !2388, file: !2, baseType: !2399, align: 8, offset: 128, flags: DIFlagPrivate)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&()>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !2400, identifier: "75f97097ebc4212ac7e3971d5e6f6020")
!2400 = !{!2401}
!2401 = !DITemplateTypeParameter(name: "T", type: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2385, file: !2, baseType: !2404, size: 128, align: 64, extraData: i128 0)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !2383, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !2405, templateParams: !15, identifier: "958ed7fbe99676cefda3c9656af122bb")
!2405 = !{!2406}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2404, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!2407 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2376, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2409 = !{!2410, !2411}
!2410 = !DILocalVariable(name: "self", arg: 1, scope: !2321, file: !1957, line: 215, type: !372)
!2411 = !DILocalVariable(name: "args", arg: 2, scope: !2321, file: !1957, line: 215, type: !2325)
!2412 = !{!2413}
!2413 = !DITemplateTypeParameter(name: "Self", type: !78)
!2414 = !DILocation(line: 215, column: 18, scope: !2321)
!2415 = !DILocation(line: 215, column: 29, scope: !2321)
!2416 = !DILocation(line: 244, column: 9, scope: !2321)
!2417 = !DILocation(line: 245, column: 6, scope: !2321)
!2418 = distinct !DISubprogram(name: "estimated_capacity", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity17h0aa853e31d84981cE", scope: !2325, file: !1957, line: 626, type: !2419, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2422, retainedNodes: !2423)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!9, !2421}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !2325, size: 64, align: 64, dwarfAddressSpace: 0)
!2422 = !DISubprogram(name: "estimated_capacity", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity17h0aa853e31d84981cE", scope: !2325, file: !1957, line: 626, type: !2419, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2423 = !{!2424, !2425}
!2424 = !DILocalVariable(name: "self", arg: 1, scope: !2418, file: !1957, line: 626, type: !2421)
!2425 = !DILocalVariable(name: "pieces_length", scope: !2426, file: !1957, line: 627, type: !9, align: 8)
!2426 = distinct !DILexicalBlock(scope: !2418, file: !1957, line: 627, column: 9)
!2427 = !DILocation(line: 626, column: 31, scope: !2418)
!2428 = !DILocation(line: 627, column: 36, scope: !2418)
!2429 = !DILocation(line: 627, column: 13, scope: !2426)
!2430 = !DILocation(line: 629, column: 12, scope: !2426)
!2431 = !DILocation(line: 631, column: 20, scope: !2426)
!2432 = !DILocation(line: 630, column: 13, scope: !2426)
!2433 = !DILocation(line: 629, column: 9, scope: !2426)
!2434 = !DILocation(line: 631, column: 46, scope: !2426)
!2435 = !DILocation(line: 640, column: 13, scope: !2426)
!2436 = !DILocation(line: 631, column: 75, scope: !2426)
!2437 = !DILocation(line: 635, column: 13, scope: !2426)
!2438 = !DILocation(line: 631, column: 16, scope: !2426)
!2439 = !DILocation(line: 642, column: 6, scope: !2418)
!2440 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17h84118b2ebfb16d0bE", scope: !577, file: !1957, line: 627, type: !2441, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2444)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!9, !2443, !574}
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::{impl#4}::estimated_capacity::{closure_env#0}", baseType: !576, size: 64, align: 64, dwarfAddressSpace: 0)
!2444 = !{!2445, !2446}
!2445 = !DILocalVariable(name: "x", arg: 2, scope: !2440, file: !1957, line: 627, type: !574)
!2446 = !DILocalVariable(arg: 1, scope: !2440, file: !1957, line: 627, type: !2443)
!2447 = !DILocation(line: 627, column: 59, scope: !2440)
!2448 = !DILocation(line: 627, column: 60, scope: !2440)
!2449 = !DILocation(line: 627, column: 63, scope: !2440)
!2450 = !DILocation(line: 627, column: 70, scope: !2440)
!2451 = distinct !DISubprogram(name: "as_statically_known_str", linkageName: "_ZN4core3fmt9Arguments23as_statically_known_str17h798a4b7fe9c92c9eE", scope: !2325, file: !1957, line: 703, type: !2452, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2465, retainedNodes: !2466)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!2454, !2421}
!2454 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !37, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2455, templateParams: !15, identifier: "f79e48556073979efe736b226a5ae3e3")
!2455 = !{!2456}
!2456 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2454, file: !2, size: 128, align: 64, elements: !2457, templateParams: !15, identifier: "7ff638751dab703b8a23a0100705d8c2", discriminator: !2464)
!2457 = !{!2458, !2460}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2456, file: !2, baseType: !2459, size: 128, align: 64, extraData: i128 0)
!2459 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2454, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !567, identifier: "1ca5f39df5798e1b71c9e662c75f6b99")
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2456, file: !2, baseType: !2461, size: 128, align: 64)
!2461 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2454, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !2462, templateParams: !567, identifier: "f707c1db350093851aabb3493ee98f45")
!2462 = !{!2463}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2461, file: !2, baseType: !170, size: 128, align: 64, flags: DIFlagPublic)
!2464 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!2465 = !DISubprogram(name: "as_statically_known_str", linkageName: "_ZN4core3fmt9Arguments23as_statically_known_str17h798a4b7fe9c92c9eE", scope: !2325, file: !1957, line: 703, type: !2452, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2466 = !{!2467, !2468}
!2467 = !DILocalVariable(name: "self", arg: 1, scope: !2451, file: !1957, line: 703, type: !2421)
!2468 = !DILocalVariable(name: "s", scope: !2469, file: !1957, line: 704, type: !2454, align: 8)
!2469 = distinct !DILexicalBlock(scope: !2451, file: !1957, line: 704, column: 9)
!2470 = !DILocation(line: 703, column: 32, scope: !2451)
!2471 = !DILocation(line: 704, column: 13, scope: !2469)
!2472 = !DILocation(line: 704, column: 17, scope: !2451)
!2473 = !DILocation(line: 705, column: 54, scope: !2469)
!2474 = !DILocation(line: 705, column: 12, scope: !2469)
!2475 = !DILocation(line: 705, column: 80, scope: !2469)
!2476 = !DILocation(line: 705, column: 9, scope: !2469)
!2477 = !DILocation(line: 705, column: 69, scope: !2469)
!2478 = !DILocation(line: 706, column: 6, scope: !2451)
!2479 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17h07f759ec19814b9cE", scope: !2325, file: !1957, line: 692, type: !2452, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2480, retainedNodes: !2481)
!2480 = !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17h07f759ec19814b9cE", scope: !2325, file: !1957, line: 692, type: !2452, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2481 = !{!2482, !2483}
!2482 = !DILocalVariable(name: "self", arg: 1, scope: !2479, file: !1957, line: 692, type: !2421)
!2483 = !DILocalVariable(name: "s", scope: !2484, file: !1957, line: 695, type: !574, align: 8)
!2484 = distinct !DILexicalBlock(scope: !2479, file: !1957, line: 695, column: 13)
!2485 = !DILocation(line: 692, column: 25, scope: !2479)
!2486 = !DILocation(line: 693, column: 16, scope: !2479)
!2487 = !DILocation(line: 693, column: 29, scope: !2479)
!2488 = !DILocation(line: 693, column: 15, scope: !2479)
!2489 = !DILocation(line: 694, column: 14, scope: !2479)
!2490 = !DILocation(line: 694, column: 18, scope: !2479)
!2491 = !DILocation(line: 695, column: 14, scope: !2479)
!2492 = !DILocation(line: 694, column: 25, scope: !2479)
!2493 = !DILocation(line: 694, column: 32, scope: !2479)
!2494 = !DILocation(line: 696, column: 18, scope: !2479)
!2495 = !DILocation(line: 698, column: 6, scope: !2479)
!2496 = !DILocation(line: 695, column: 19, scope: !2479)
!2497 = !DILocation(line: 695, column: 15, scope: !2479)
!2498 = !DILocation(line: 695, column: 15, scope: !2484)
!2499 = !DILocation(line: 695, column: 31, scope: !2484)
!2500 = !DILocation(line: 695, column: 26, scope: !2484)
!2501 = !DILocation(line: 695, column: 32, scope: !2479)
!2502 = distinct !DISubprogram(name: "write_fmt", linkageName: "_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E", scope: !1978, file: !1957, line: 1905, type: !2503, scopeLine: 1905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !2505, retainedNodes: !2506)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!1961, !1977, !2325}
!2505 = !DISubprogram(name: "write_fmt", linkageName: "_ZN4core3fmt9Formatter9write_fmt17h2ed4d43cb43cb8e6E", scope: !1978, file: !1957, line: 1905, type: !2503, scopeLine: 1905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!2506 = !{!2507, !2508, !2509}
!2507 = !DILocalVariable(name: "self", arg: 1, scope: !2502, file: !1957, line: 1905, type: !1977)
!2508 = !DILocalVariable(name: "fmt", arg: 2, scope: !2502, file: !1957, line: 1905, type: !2325)
!2509 = !DILocalVariable(name: "s", scope: !2510, file: !1957, line: 1906, type: !170, align: 8)
!2510 = distinct !DILexicalBlock(scope: !2502, file: !1957, line: 1906, column: 56)
!2511 = !DILocation(line: 1905, column: 22, scope: !2502)
!2512 = !DILocation(line: 1905, column: 33, scope: !2502)
!2513 = !DILocation(line: 1906, column: 26, scope: !2510)
!2514 = !DILocation(line: 1906, column: 16, scope: !2510)
!2515 = !DILocation(line: 1906, column: 21, scope: !2510)
!2516 = !DILocation(line: 1907, column: 13, scope: !2510)
!2517 = !DILocation(line: 1909, column: 19, scope: !2502)
!2518 = !DILocation(line: 1909, column: 13, scope: !2502)
!2519 = !DILocation(line: 1911, column: 6, scope: !2502)
!2520 = !DILocation(line: 1905, column: 5, scope: !2502)
!2521 = distinct !DISubprogram(name: "size_of_val_raw<[u8]>", linkageName: "_ZN4core3mem15size_of_val_raw17hfc037130fcee5e8fE", scope: !1150, file: !2522, line: 393, type: !2523, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !2525)
!2522 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "408297ea3ba2b216bae291af4d890f84")
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!9, !1243}
!2525 = !{!2526}
!2526 = !DILocalVariable(name: "val", arg: 1, scope: !2521, file: !2522, line: 393, type: !1243)
!2527 = !DILocation(line: 393, column: 48, scope: !2521)
!2528 = !DILocation(line: 395, column: 14, scope: !2521)
!2529 = !DILocation(line: 396, column: 2, scope: !2521)
!2530 = distinct !DISubprogram(name: "align_of_val_raw<[u8]>", linkageName: "_ZN4core3mem16align_of_val_raw17he49e2e6348a68ebfE", scope: !1150, file: !2522, line: 536, type: !2523, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !2531)
!2531 = !{!2532}
!2532 = !DILocalVariable(name: "val", arg: 1, scope: !2530, file: !2522, line: 536, type: !1243)
!2533 = !DILocation(line: 536, column: 49, scope: !2530)
!2534 = !DILocation(line: 538, column: 14, scope: !2530)
!2535 = !DILocation(line: 539, column: 2, scope: !2530)
!2536 = distinct !DISubprogram(name: "take<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem4take17h8d397c24782aadc6E", scope: !1150, file: !2522, line: 793, type: !2537, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !2544)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!2539, !2543}
!2539 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2540, templateParams: !15, identifier: "f71799fde8f4cad76d3d857b85b119c5")
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2539, file: !2, baseType: !173, size: 64, align: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2539, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !2539, size: 64, align: 64, dwarfAddressSpace: 0)
!2544 = !{!2545}
!2545 = !DILocalVariable(name: "dest", arg: 1, scope: !2536, file: !2522, line: 793, type: !2543)
!2546 = !{!2547}
!2547 = !DITemplateTypeParameter(name: "T", type: !2539)
!2548 = !DILocation(line: 793, column: 25, scope: !2536)
!2549 = !DILocation(line: 794, column: 19, scope: !2536)
!2550 = !DILocation(line: 794, column: 5, scope: !2536)
!2551 = !DILocation(line: 795, column: 2, scope: !2536)
!2552 = distinct !DISubprogram(name: "take<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem4take17hd620c28adb6a0c9eE", scope: !1150, file: !2522, line: 793, type: !2553, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2558, retainedNodes: !2556)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!1400, !2555}
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !1400, size: 64, align: 64, dwarfAddressSpace: 0)
!2556 = !{!2557}
!2557 = !DILocalVariable(name: "dest", arg: 1, scope: !2552, file: !2522, line: 793, type: !2555)
!2558 = !{!2559}
!2559 = !DITemplateTypeParameter(name: "T", type: !1400)
!2560 = !DILocation(line: 793, column: 25, scope: !2552)
!2561 = !DILocation(line: 794, column: 19, scope: !2552)
!2562 = !DILocation(line: 794, column: 5, scope: !2552)
!2563 = !DILocation(line: 795, column: 2, scope: !2552)
!2564 = distinct !DISubprogram(name: "replace<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem7replace17h3e76aae5b8fff781E", scope: !1150, file: !2522, line: 860, type: !2565, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !2567)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!2539, !2543, !2539}
!2567 = !{!2568, !2569, !2570}
!2568 = !DILocalVariable(name: "dest", arg: 1, scope: !2564, file: !2522, line: 860, type: !2543)
!2569 = !DILocalVariable(name: "src", arg: 2, scope: !2564, file: !2522, line: 860, type: !2539)
!2570 = !DILocalVariable(name: "result", scope: !2571, file: !2522, line: 869, type: !2539, align: 8)
!2571 = distinct !DILexicalBlock(scope: !2564, file: !2522, line: 869, column: 9)
!2572 = !DILocation(line: 860, column: 25, scope: !2564)
!2573 = !DILocation(line: 860, column: 39, scope: !2564)
!2574 = !DILocation(line: 869, column: 22, scope: !2564)
!2575 = !DILocation(line: 869, column: 13, scope: !2571)
!2576 = !DILocation(line: 870, column: 9, scope: !2571)
!2577 = !DILocation(line: 873, column: 2, scope: !2564)
!2578 = distinct !DISubprogram(name: "replace<core::option::Option<u16>>", linkageName: "_ZN4core3mem7replace17h4ac15aa4e8b140cfE", scope: !1150, file: !2522, line: 860, type: !2579, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2587, retainedNodes: !2582)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!339, !2581, !339}
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<u16>", baseType: !339, size: 64, align: 64, dwarfAddressSpace: 0)
!2582 = !{!2583, !2584, !2585}
!2583 = !DILocalVariable(name: "dest", arg: 1, scope: !2578, file: !2522, line: 860, type: !2581)
!2584 = !DILocalVariable(name: "src", arg: 2, scope: !2578, file: !2522, line: 860, type: !339)
!2585 = !DILocalVariable(name: "result", scope: !2586, file: !2522, line: 869, type: !339, align: 2)
!2586 = distinct !DILexicalBlock(scope: !2578, file: !2522, line: 869, column: 9)
!2587 = !{!2588}
!2588 = !DITemplateTypeParameter(name: "T", type: !339)
!2589 = !DILocation(line: 860, column: 25, scope: !2578)
!2590 = !DILocation(line: 860, column: 39, scope: !2578)
!2591 = !DILocation(line: 869, column: 22, scope: !2578)
!2592 = !DILocation(line: 869, column: 13, scope: !2586)
!2593 = !DILocation(line: 870, column: 9, scope: !2586)
!2594 = !DILocation(line: 873, column: 2, scope: !2578)
!2595 = distinct !DISubprogram(name: "replace<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem7replace17hbf0915b005fb72f6E", scope: !1150, file: !2522, line: 860, type: !2596, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2558, retainedNodes: !2598)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{!1400, !2555, !1400}
!2598 = !{!2599, !2600, !2601}
!2599 = !DILocalVariable(name: "dest", arg: 1, scope: !2595, file: !2522, line: 860, type: !2555)
!2600 = !DILocalVariable(name: "src", arg: 2, scope: !2595, file: !2522, line: 860, type: !1400)
!2601 = !DILocalVariable(name: "result", scope: !2602, file: !2522, line: 869, type: !1400, align: 8)
!2602 = distinct !DILexicalBlock(scope: !2595, file: !2522, line: 869, column: 9)
!2603 = !DILocation(line: 860, column: 25, scope: !2595)
!2604 = !DILocation(line: 860, column: 39, scope: !2595)
!2605 = !DILocation(line: 869, column: 22, scope: !2595)
!2606 = !DILocation(line: 869, column: 13, scope: !2602)
!2607 = !DILocation(line: 870, column: 9, scope: !2602)
!2608 = !DILocation(line: 873, column: 2, scope: !2595)
!2609 = distinct !DISubprogram(name: "is_ascii_lowercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17hd7e0b550fd0e3e2eE", scope: !2611, file: !2610, line: 837, type: !2613, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2615)
!2610 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e67ee6767a7a49077a52676961dbfc97")
!2611 = !DINamespace(name: "{impl#6}", scope: !2612)
!2612 = !DINamespace(name: "num", scope: !14)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!520, !67}
!2615 = !{!2616}
!2616 = !DILocalVariable(name: "self", arg: 1, scope: !2609, file: !2610, line: 837, type: !67)
!2617 = !DILocation(line: 837, column: 37, scope: !2609)
!2618 = !DILocation(line: 838, column: 25, scope: !2609)
!2619 = !DILocation(line: 477, column: 18, scope: !2620)
!2620 = !DILexicalBlockFile(scope: !2609, file: !2221, discriminator: 0)
!2621 = !DILocation(line: 839, column: 6, scope: !2609)
!2622 = distinct !DISubprogram(name: "is_ascii_uppercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17hcf2c6ea93f31546cE", scope: !2611, file: !2610, line: 803, type: !2613, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2623)
!2623 = !{!2624}
!2624 = !DILocalVariable(name: "self", arg: 1, scope: !2622, file: !2610, line: 803, type: !67)
!2625 = !DILocation(line: 803, column: 37, scope: !2622)
!2626 = !DILocation(line: 804, column: 25, scope: !2622)
!2627 = !DILocation(line: 477, column: 18, scope: !2628)
!2628 = !DILexicalBlockFile(scope: !2622, file: !2221, discriminator: 0)
!2629 = !DILocation(line: 805, column: 6, scope: !2622)
!2630 = distinct !DISubprogram(name: "to_ascii_lowercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h86adba17fc20bfc9E", scope: !2611, file: !2610, line: 655, type: !2631, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2633)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!45, !67}
!2633 = !{!2634}
!2634 = !DILocalVariable(name: "self", arg: 1, scope: !2630, file: !2610, line: 655, type: !67)
!2635 = !DILocation(line: 655, column: 37, scope: !2630)
!2636 = !DILocation(line: 657, column: 9, scope: !2630)
!2637 = !DILocation(line: 657, column: 18, scope: !2630)
!2638 = !DILocation(line: 657, column: 17, scope: !2630)
!2639 = !DILocation(line: 658, column: 6, scope: !2630)
!2640 = distinct !DISubprogram(name: "to_ascii_uppercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17h27d67ee103102a11E", scope: !2611, file: !2610, line: 630, type: !2631, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2641)
!2641 = !{!2642}
!2642 = !DILocalVariable(name: "self", arg: 1, scope: !2640, file: !2610, line: 630, type: !67)
!2643 = !DILocation(line: 630, column: 37, scope: !2640)
!2644 = !DILocation(line: 632, column: 9, scope: !2640)
!2645 = !DILocation(line: 632, column: 19, scope: !2640)
!2646 = !DILocation(line: 632, column: 18, scope: !2640)
!2647 = !DILocation(line: 632, column: 17, scope: !2640)
!2648 = !DILocation(line: 633, column: 6, scope: !2640)
!2649 = distinct !DISubprogram(name: "abs", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$3abs17h5b6bed69db1a7108E", scope: !2651, file: !2650, line: 3341, type: !2652, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2655)
!2650 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "b32c400df5496e7b5c2ca5058f458cd4")
!2651 = !DINamespace(name: "{impl#2}", scope: !2612)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!2654, !2654}
!2654 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!2655 = !{!2656}
!2656 = !DILocalVariable(name: "self", arg: 1, scope: !2649, file: !2650, line: 3341, type: !2654)
!2657 = !DILocation(line: 3341, column: 26, scope: !2649)
!2658 = !DILocalVariable(name: "self", arg: 1, scope: !2659, file: !2650, line: 3458, type: !2654)
!2659 = distinct !DISubprogram(name: "is_negative", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$11is_negative17h81f530d7a88a7588E", scope: !2651, file: !2650, line: 3458, type: !2660, scopeLine: 3458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2662)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!520, !2654}
!2662 = !{!2658}
!2663 = !DILocation(line: 3458, column: 34, scope: !2659, inlinedAt: !2664)
!2664 = distinct !DILocation(line: 3345, column: 16, scope: !2649)
!2665 = !DILocation(line: 3458, column: 50, scope: !2659, inlinedAt: !2664)
!2666 = !DILocation(line: 3345, column: 16, scope: !2649)
!2667 = !DILocation(line: 3348, column: 17, scope: !2649)
!2668 = !DILocation(line: 3345, column: 13, scope: !2649)
!2669 = !DILocation(line: 3346, column: 17, scope: !2649)
!2670 = !DILocation(line: 3350, column: 10, scope: !2649)
!2671 = distinct !DISubprogram(name: "from_be_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_be_bytes17h5d55dbcf25f37a80E", scope: !2673, file: !2672, line: 3274, type: !435, scopeLine: 3274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2674)
!2672 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "073d4c02c8397ce655ad22efce2cc263")
!2673 = !DINamespace(name: "{impl#7}", scope: !2612)
!2674 = !{!2675}
!2675 = !DILocalVariable(name: "bytes", arg: 1, scope: !2671, file: !2672, line: 3274, type: !415)
!2676 = !DILocation(line: 3274, column: 36, scope: !2671)
!2677 = !DILocation(line: 3275, column: 27, scope: !2671)
!2678 = !DILocalVariable(name: "x", arg: 1, scope: !2679, file: !2672, line: 355, type: !327)
!2679 = distinct !DISubprogram(name: "from_be", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$7from_be17h93ecf3d0e16491ceE", scope: !2673, file: !2672, line: 355, type: !2680, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2682)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!327, !327}
!2682 = !{!2678}
!2683 = !DILocation(line: 355, column: 30, scope: !2679, inlinedAt: !2684)
!2684 = distinct !DILocation(line: 3275, column: 13, scope: !2671)
!2685 = !DILocalVariable(name: "self", arg: 1, scope: !2686, file: !2672, line: 306, type: !327)
!2686 = distinct !DISubprogram(name: "swap_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$10swap_bytes17h77ac093ef5f6f913E", scope: !2673, file: !2672, line: 306, type: !2680, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2687)
!2687 = !{!2685}
!2688 = !DILocation(line: 306, column: 33, scope: !2686, inlinedAt: !2689)
!2689 = distinct !DILocation(line: 362, column: 17, scope: !2679, inlinedAt: !2684)
!2690 = !DILocation(line: 307, column: 13, scope: !2686, inlinedAt: !2689)
!2691 = !DILocation(line: 3276, column: 10, scope: !2671)
!2692 = distinct !DISubprogram(name: "from_le_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17hf064cb1cd367c2e9E", scope: !2673, file: !2672, line: 3303, type: !435, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2693)
!2693 = !{!2694}
!2694 = !DILocalVariable(name: "bytes", arg: 1, scope: !2692, file: !2672, line: 3303, type: !415)
!2695 = !DILocation(line: 3303, column: 36, scope: !2692)
!2696 = !DILocation(line: 3304, column: 27, scope: !2692)
!2697 = !DILocalVariable(name: "x", arg: 1, scope: !2698, file: !2672, line: 388, type: !327)
!2698 = distinct !DISubprogram(name: "from_le", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$7from_le17hf9245b8694cda897E", scope: !2673, file: !2672, line: 388, type: !2680, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2699)
!2699 = !{!2697}
!2700 = !DILocation(line: 388, column: 30, scope: !2698, inlinedAt: !2701)
!2701 = distinct !DILocation(line: 3304, column: 13, scope: !2692)
!2702 = !DILocation(line: 3305, column: 10, scope: !2692)
!2703 = distinct !DISubprogram(name: "from_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h4fee0b590fc22014E", scope: !2673, file: !2672, line: 3345, type: !435, scopeLine: 3345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2704)
!2704 = !{!2705}
!2705 = !DILocalVariable(name: "bytes", arg: 1, scope: !2703, file: !2672, line: 3345, type: !415)
!2706 = !DILocation(line: 3345, column: 36, scope: !2703)
!2707 = !DILocation(line: 3347, column: 22, scope: !2703)
!2708 = !DILocation(line: 3348, column: 10, scope: !2703)
!2709 = distinct !DISubprogram(name: "is_utf16_surrogate", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hfe25fbb9c2d48aa9E", scope: !2673, file: !2610, line: 1218, type: !2710, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2712)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!520, !327}
!2712 = !{!2713}
!2713 = !DILocalVariable(name: "self", arg: 1, scope: !2709, file: !2610, line: 1218, type: !327)
!2714 = !DILocation(line: 1218, column: 37, scope: !2709)
!2715 = !DILocation(line: 1219, column: 24, scope: !2709)
!2716 = !DILocation(line: 477, column: 18, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !2709, file: !2221, discriminator: 0)
!2718 = !DILocation(line: 1220, column: 6, scope: !2709)
!2719 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h48a215522464fcacE", scope: !2720, file: !2672, line: 486, type: !2721, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2723)
!2720 = !DINamespace(name: "{impl#11}", scope: !2612)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!664, !9, !9}
!2723 = !{!2724, !2725}
!2724 = !DILocalVariable(name: "self", arg: 1, scope: !2719, file: !2672, line: 486, type: !9)
!2725 = !DILocalVariable(name: "rhs", arg: 2, scope: !2719, file: !2672, line: 486, type: !9)
!2726 = !DILocation(line: 486, column: 34, scope: !2719)
!2727 = !DILocation(line: 486, column: 40, scope: !2719)
!2728 = !DILocation(line: 494, column: 37, scope: !2719)
!2729 = !DILocalVariable(name: "b", arg: 1, scope: !2730, file: !2057, line: 1527, type: !520)
!2730 = distinct !DISubprogram(name: "unlikely", linkageName: "_ZN4core10intrinsics8unlikely17hf21b1b0cde1b5737E", scope: !2047, file: !2057, line: 1527, type: !2731, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2733)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!520, !520}
!2733 = !{!2729}
!2734 = !DILocation(line: 1527, column: 23, scope: !2730, inlinedAt: !2735)
!2735 = distinct !DILocation(line: 494, column: 16, scope: !2719)
!2736 = !DILocation(line: 1528, column: 8, scope: !2730, inlinedAt: !2735)
!2737 = !DILocation(line: 1532, column: 9, scope: !2730, inlinedAt: !2735)
!2738 = !DILocation(line: 1528, column: 5, scope: !2730, inlinedAt: !2735)
!2739 = !DILocation(line: 1530, column: 9, scope: !2730, inlinedAt: !2735)
!2740 = !DILocation(line: 1534, column: 2, scope: !2730, inlinedAt: !2735)
!2741 = !DILocation(line: 494, column: 16, scope: !2719)
!2742 = !DILocation(line: 498, column: 31, scope: !2719)
!2743 = !DILocation(line: 498, column: 17, scope: !2719)
!2744 = !DILocation(line: 494, column: 13, scope: !2719)
!2745 = !DILocation(line: 495, column: 17, scope: !2719)
!2746 = !DILocation(line: 500, column: 10, scope: !2719)
!2747 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h1099cb059e25569fE", scope: !2720, file: !2672, line: 870, type: !2721, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2748)
!2748 = !{!2749, !2750, !2751, !2753}
!2749 = !DILocalVariable(name: "self", arg: 1, scope: !2747, file: !2672, line: 870, type: !9)
!2750 = !DILocalVariable(name: "rhs", arg: 2, scope: !2747, file: !2672, line: 870, type: !9)
!2751 = !DILocalVariable(name: "a", scope: !2752, file: !2672, line: 871, type: !9, align: 8)
!2752 = distinct !DILexicalBlock(scope: !2747, file: !2672, line: 871, column: 13)
!2753 = !DILocalVariable(name: "b", scope: !2752, file: !2672, line: 871, type: !520, align: 1)
!2754 = !DILocation(line: 870, column: 34, scope: !2747)
!2755 = !DILocation(line: 870, column: 40, scope: !2747)
!2756 = !DILocalVariable(name: "self", arg: 1, scope: !2757, file: !2672, line: 2528, type: !9)
!2757 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hbca14cc29a81be02E", scope: !2720, file: !2672, line: 2528, type: !2758, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2764)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!2760, !9, !9}
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !2761, templateParams: !15, identifier: "27740540e143dfa26ed1fad06735e263")
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2760, file: !2, baseType: !9, size: 64, align: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2760, file: !2, baseType: !520, size: 8, align: 8, offset: 64)
!2764 = !{!2756, !2765, !2766, !2768}
!2765 = !DILocalVariable(name: "rhs", arg: 2, scope: !2757, file: !2672, line: 2528, type: !9)
!2766 = !DILocalVariable(name: "a", scope: !2767, file: !2672, line: 2529, type: !212, align: 8)
!2767 = distinct !DILexicalBlock(scope: !2757, file: !2672, line: 2529, column: 13)
!2768 = !DILocalVariable(name: "b", scope: !2767, file: !2672, line: 2529, type: !520, align: 1)
!2769 = !DILocation(line: 2528, column: 38, scope: !2757, inlinedAt: !2770)
!2770 = distinct !DILocation(line: 871, column: 26, scope: !2747)
!2771 = !DILocation(line: 2528, column: 44, scope: !2757, inlinedAt: !2770)
!2772 = !DILocation(line: 2529, column: 26, scope: !2757, inlinedAt: !2770)
!2773 = !DILocation(line: 2529, column: 18, scope: !2757, inlinedAt: !2770)
!2774 = !DILocation(line: 2529, column: 18, scope: !2767, inlinedAt: !2770)
!2775 = !DILocation(line: 2529, column: 21, scope: !2757, inlinedAt: !2770)
!2776 = !DILocation(line: 2529, column: 21, scope: !2767, inlinedAt: !2770)
!2777 = !DILocation(line: 871, column: 26, scope: !2747)
!2778 = !DILocation(line: 871, column: 18, scope: !2747)
!2779 = !DILocation(line: 871, column: 18, scope: !2752)
!2780 = !DILocation(line: 871, column: 21, scope: !2747)
!2781 = !DILocation(line: 871, column: 21, scope: !2752)
!2782 = !DILocation(line: 1527, column: 23, scope: !2730, inlinedAt: !2783)
!2783 = distinct !DILocation(line: 872, column: 16, scope: !2752)
!2784 = !DILocation(line: 1528, column: 8, scope: !2730, inlinedAt: !2783)
!2785 = !DILocation(line: 1532, column: 9, scope: !2730, inlinedAt: !2783)
!2786 = !DILocation(line: 1528, column: 5, scope: !2730, inlinedAt: !2783)
!2787 = !DILocation(line: 1530, column: 9, scope: !2730, inlinedAt: !2783)
!2788 = !DILocation(line: 1534, column: 2, scope: !2730, inlinedAt: !2783)
!2789 = !DILocation(line: 872, column: 16, scope: !2752)
!2790 = !DILocation(line: 872, column: 56, scope: !2752)
!2791 = !DILocation(line: 872, column: 13, scope: !2752)
!2792 = !DILocation(line: 872, column: 42, scope: !2752)
!2793 = !DILocation(line: 873, column: 10, scope: !2747)
!2794 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h483f8f95fa41d001E", scope: !2720, file: !2672, line: 653, type: !2721, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2795)
!2795 = !{!2796, !2797}
!2796 = !DILocalVariable(name: "self", arg: 1, scope: !2794, file: !2672, line: 653, type: !9)
!2797 = !DILocalVariable(name: "rhs", arg: 2, scope: !2794, file: !2672, line: 653, type: !9)
!2798 = !DILocation(line: 653, column: 34, scope: !2794)
!2799 = !DILocation(line: 653, column: 40, scope: !2794)
!2800 = !DILocation(line: 659, column: 16, scope: !2794)
!2801 = !DILocation(line: 663, column: 31, scope: !2794)
!2802 = !DILocation(line: 663, column: 17, scope: !2794)
!2803 = !DILocation(line: 659, column: 13, scope: !2794)
!2804 = !DILocation(line: 660, column: 17, scope: !2794)
!2805 = !DILocation(line: 665, column: 10, scope: !2794)
!2806 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h90ef0525d3a3b7c6E", scope: !2807, file: !1177, line: 66, type: !2808, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2810)
!2807 = !DINamespace(name: "unchecked_add", scope: !2720)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{null, !9, !9}
!2810 = !{!2811, !2812}
!2811 = !DILocalVariable(name: "lhs", arg: 1, scope: !2806, file: !1177, line: 66, type: !9)
!2812 = !DILocalVariable(name: "rhs", arg: 2, scope: !2806, file: !1177, line: 66, type: !9)
!2813 = !DILocation(line: 66, column: 43, scope: !2806)
!2814 = !DILocalVariable(name: "self", arg: 1, scope: !2815, file: !2672, line: 2306, type: !9)
!2815 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h07ddc1edfacba731E", scope: !2720, file: !2672, line: 2306, type: !2758, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2816)
!2816 = !{!2814, !2817, !2818, !2820}
!2817 = !DILocalVariable(name: "rhs", arg: 2, scope: !2815, file: !2672, line: 2306, type: !9)
!2818 = !DILocalVariable(name: "a", scope: !2819, file: !2672, line: 2307, type: !212, align: 8)
!2819 = distinct !DILexicalBlock(scope: !2815, file: !2672, line: 2307, column: 13)
!2820 = !DILocalVariable(name: "b", scope: !2819, file: !2672, line: 2307, type: !520, align: 1)
!2821 = !DILocation(line: 2306, column: 38, scope: !2815, inlinedAt: !2822)
!2822 = distinct !DILocation(line: 567, column: 23, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2806, file: !2672, discriminator: 0)
!2824 = !DILocation(line: 2306, column: 44, scope: !2815, inlinedAt: !2822)
!2825 = !DILocation(line: 2307, column: 26, scope: !2815, inlinedAt: !2822)
!2826 = !DILocation(line: 2307, column: 18, scope: !2815, inlinedAt: !2822)
!2827 = !DILocation(line: 2307, column: 18, scope: !2819, inlinedAt: !2822)
!2828 = !DILocation(line: 2307, column: 21, scope: !2815, inlinedAt: !2822)
!2829 = !DILocation(line: 2307, column: 21, scope: !2819, inlinedAt: !2822)
!2830 = !DILocation(line: 567, column: 23, scope: !2823)
!2831 = !DILocation(line: 72, column: 14, scope: !2806)
!2832 = !DILocation(line: 68, column: 21, scope: !2806)
!2833 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h6a26816055385cd9E", scope: !2834, file: !1177, line: 66, type: !2808, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2835)
!2834 = !DINamespace(name: "unchecked_mul", scope: !2720)
!2835 = !{!2836, !2837}
!2836 = !DILocalVariable(name: "lhs", arg: 1, scope: !2833, file: !1177, line: 66, type: !9)
!2837 = !DILocalVariable(name: "rhs", arg: 2, scope: !2833, file: !1177, line: 66, type: !9)
!2838 = !DILocation(line: 66, column: 43, scope: !2833)
!2839 = !DILocation(line: 2528, column: 38, scope: !2757, inlinedAt: !2840)
!2840 = distinct !DILocation(line: 940, column: 23, scope: !2841)
!2841 = !DILexicalBlockFile(scope: !2833, file: !2672, discriminator: 0)
!2842 = !DILocation(line: 2528, column: 44, scope: !2757, inlinedAt: !2840)
!2843 = !DILocation(line: 2529, column: 26, scope: !2757, inlinedAt: !2840)
!2844 = !DILocation(line: 2529, column: 18, scope: !2757, inlinedAt: !2840)
!2845 = !DILocation(line: 2529, column: 18, scope: !2767, inlinedAt: !2840)
!2846 = !DILocation(line: 2529, column: 21, scope: !2757, inlinedAt: !2840)
!2847 = !DILocation(line: 2529, column: 21, scope: !2767, inlinedAt: !2840)
!2848 = !DILocation(line: 940, column: 23, scope: !2841)
!2849 = !DILocation(line: 72, column: 14, scope: !2833)
!2850 = !DILocation(line: 68, column: 21, scope: !2833)
!2851 = distinct !DISubprogram(name: "abs_diff", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17ha9257a7921bb32bdE", scope: !2720, file: !2672, line: 2492, type: !2852, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2854)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{!9, !9, !9}
!2854 = !{!2855, !2856}
!2855 = !DILocalVariable(name: "self", arg: 1, scope: !2851, file: !2672, line: 2492, type: !9)
!2856 = !DILocalVariable(name: "other", arg: 2, scope: !2851, file: !2672, line: 2492, type: !9)
!2857 = !DILocation(line: 2492, column: 31, scope: !2851)
!2858 = !DILocation(line: 2492, column: 37, scope: !2851)
!2859 = !DILocation(line: 2493, column: 16, scope: !2851)
!2860 = !DILocation(line: 2496, column: 17, scope: !2851)
!2861 = !DILocation(line: 2496, column: 44, scope: !2851)
!2862 = !DILocalVariable(name: "self", arg: 1, scope: !2863, file: !2650, line: 1931, type: !2654)
!2863 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_sub17h900e6cb4eda18b73E", scope: !2651, file: !2650, line: 1931, type: !2864, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2866)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!2654, !2654, !2654}
!2866 = !{!2862, !2867}
!2867 = !DILocalVariable(name: "rhs", arg: 2, scope: !2863, file: !2650, line: 1931, type: !2654)
!2868 = !DILocation(line: 1931, column: 35, scope: !2863, inlinedAt: !2869)
!2869 = distinct !DILocation(line: 2496, column: 17, scope: !2851)
!2870 = !DILocation(line: 1931, column: 41, scope: !2863, inlinedAt: !2869)
!2871 = !DILocation(line: 1932, column: 13, scope: !2863, inlinedAt: !2869)
!2872 = !DILocation(line: 2493, column: 13, scope: !2851)
!2873 = !DILocation(line: 2498, column: 20, scope: !2851)
!2874 = !DILocation(line: 2504, column: 10, scope: !2851)
!2875 = !DILocation(line: 2501, column: 21, scope: !2851)
!2876 = !DILocation(line: 2499, column: 21, scope: !2851)
!2877 = !DILocation(line: 2498, column: 17, scope: !2851)
!2878 = distinct !DISubprogram(name: "div_ceil", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h2de3562e702c6931E", scope: !2720, file: !2672, line: 2961, type: !2879, scopeLine: 2961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !2881)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!9, !9, !9, !1690}
!2881 = !{!2882, !2883, !2884, !2886}
!2882 = !DILocalVariable(name: "self", arg: 1, scope: !2878, file: !2672, line: 2961, type: !9)
!2883 = !DILocalVariable(name: "rhs", arg: 2, scope: !2878, file: !2672, line: 2961, type: !9)
!2884 = !DILocalVariable(name: "d", scope: !2885, file: !2672, line: 2962, type: !9, align: 8)
!2885 = distinct !DILexicalBlock(scope: !2878, file: !2672, line: 2962, column: 13)
!2886 = !DILocalVariable(name: "r", scope: !2887, file: !2672, line: 2963, type: !9, align: 8)
!2887 = distinct !DILexicalBlock(scope: !2885, file: !2672, line: 2963, column: 13)
!2888 = !DILocation(line: 2961, column: 31, scope: !2878)
!2889 = !DILocation(line: 2961, column: 37, scope: !2878)
!2890 = !DILocation(line: 2962, column: 21, scope: !2878)
!2891 = !DILocation(line: 2962, column: 17, scope: !2885)
!2892 = !DILocation(line: 2963, column: 21, scope: !2885)
!2893 = !DILocation(line: 2963, column: 17, scope: !2887)
!2894 = !DILocation(line: 2964, column: 16, scope: !2887)
!2895 = !DILocation(line: 2967, column: 17, scope: !2887)
!2896 = !DILocation(line: 2964, column: 13, scope: !2887)
!2897 = !DILocation(line: 2965, column: 17, scope: !2887)
!2898 = !DILocation(line: 2969, column: 10, scope: !2878)
!2899 = distinct !DISubprogram(name: "break_value<char, ()>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h931e6ead3df1050fE", scope: !1920, file: !1891, line: 182, type: !2900, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1928, declaration: !2902, retainedNodes: !2903)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{!1379, !1920}
!2902 = !DISubprogram(name: "break_value<char, ()>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h931e6ead3df1050fE", scope: !1920, file: !1891, line: 182, type: !2900, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1928)
!2903 = !{!2904, !2905}
!2904 = !DILocalVariable(name: "self", arg: 1, scope: !2899, file: !1891, line: 182, type: !1920)
!2905 = !DILocalVariable(name: "x", scope: !2906, file: !1891, line: 185, type: !379, align: 4)
!2906 = distinct !DILexicalBlock(scope: !2899, file: !1891, line: 185, column: 13)
!2907 = !DILocation(line: 182, column: 24, scope: !2899)
!2908 = !DILocation(line: 183, column: 15, scope: !2899)
!2909 = !DILocation(line: 183, column: 9, scope: !2899)
!2910 = !DILocation(line: 184, column: 42, scope: !2899)
!2911 = !DILocation(line: 185, column: 32, scope: !2899)
!2912 = !DILocation(line: 185, column: 32, scope: !2906)
!2913 = !DILocation(line: 185, column: 38, scope: !2906)
!2914 = !DILocation(line: 185, column: 44, scope: !2899)
!2915 = !DILocation(line: 187, column: 5, scope: !2899)
!2916 = !DILocation(line: 187, column: 6, scope: !2899)
!2917 = distinct !DISubprogram(name: "from_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h1caaea004344712eE", scope: !1001, file: !1891, line: 238, type: !2918, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2921, declaration: !2920, retainedNodes: !2923)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!1001, !967}
!2920 = !DISubprogram(name: "from_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h1caaea004344712eE", scope: !1001, file: !1891, line: 238, type: !2918, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2921)
!2921 = !{!2922}
!2922 = !DITemplateTypeParameter(name: "R", type: !967)
!2923 = !{!2924, !2925, !2927}
!2924 = !DILocalVariable(name: "r", arg: 1, scope: !2917, file: !1891, line: 238, type: !967)
!2925 = !DILocalVariable(name: "v", scope: !2926, file: !1891, line: 240, type: !7, align: 1)
!2926 = distinct !DILexicalBlock(scope: !2917, file: !1891, line: 240, column: 13)
!2927 = !DILocalVariable(name: "v", scope: !2928, file: !1891, line: 241, type: !1882, align: 1)
!2928 = distinct !DILexicalBlock(scope: !2917, file: !1891, line: 241, column: 13)
!2929 = !DILocation(line: 238, column: 28, scope: !2917)
!2930 = !DILocation(line: 240, column: 35, scope: !2926)
!2931 = !DILocation(line: 241, column: 32, scope: !2928)
!2932 = !DILocation(line: 239, column: 15, scope: !2917)
!2933 = !DILocation(line: 239, column: 9, scope: !2917)
!2934 = !DILocation(line: 240, column: 41, scope: !2926)
!2935 = !DILocation(line: 240, column: 64, scope: !2917)
!2936 = !DILocation(line: 243, column: 6, scope: !2917)
!2937 = !DILocation(line: 241, column: 57, scope: !2928)
!2938 = !DILocation(line: 241, column: 38, scope: !2928)
!2939 = !DILocation(line: 241, column: 76, scope: !2917)
!2940 = distinct !DISubprogram(name: "into_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17heb5fe5b30a334288E", scope: !1001, file: !1891, line: 247, type: !2941, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2921, declaration: !2943, retainedNodes: !2944)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{null, !1001}
!2943 = !DISubprogram(name: "into_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17heb5fe5b30a334288E", scope: !1001, file: !1891, line: 247, type: !2941, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2921)
!2944 = !{!2945, !2946, !2948}
!2945 = !DILocalVariable(name: "self", arg: 1, scope: !2940, file: !1891, line: 247, type: !1001)
!2946 = !DILocalVariable(name: "v", scope: !2947, file: !1891, line: 249, type: !7, align: 1)
!2947 = distinct !DILexicalBlock(scope: !2940, file: !1891, line: 249, column: 13)
!2948 = !DILocalVariable(name: "v", scope: !2949, file: !1891, line: 250, type: !967, align: 1)
!2949 = distinct !DILexicalBlock(scope: !2940, file: !1891, line: 250, column: 13)
!2950 = !DILocation(line: 247, column: 28, scope: !2940)
!2951 = !DILocation(line: 249, column: 35, scope: !2947)
!2952 = !DILocation(line: 250, column: 32, scope: !2949)
!2953 = !DILocation(line: 248, column: 15, scope: !2940)
!2954 = !DILocation(line: 248, column: 9, scope: !2940)
!2955 = !DILocation(line: 249, column: 41, scope: !2947)
!2956 = !DILocation(line: 250, column: 38, scope: !2940)
!2957 = !DILocation(line: 252, column: 6, scope: !2940)
!2958 = distinct !DISubprogram(name: "call_mut<fn([u8; 2]) -> u16, ([u8; 2])>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17h7989d0ab572576f1E", scope: !2960, file: !2959, line: 166, type: !2962, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2971, retainedNodes: !2965)
!2959 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "27f40bbdeb6cc525c0d0d7cf434d92c4")
!2960 = !DINamespace(name: "FnMut", scope: !2961)
!2961 = !DINamespace(name: "function", scope: !956)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!327, !2964, !415}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut fn([u8; 2]) -> u16", baseType: !434, size: 64, align: 64, dwarfAddressSpace: 0)
!2965 = !{!2966, !2967}
!2966 = !DILocalVariable(arg: 1, scope: !2958, file: !2959, line: 166, type: !2964)
!2967 = !DILocalVariable(arg: 2, scope: !2958, file: !2959, line: 166, type: !2968)
!2968 = !DICompositeType(tag: DW_TAG_structure_type, name: "([u8; 2])", file: !2, size: 16, align: 8, elements: !2969, templateParams: !15, identifier: "311940ec5c448cf92e41f4b15e815764")
!2969 = !{!2970}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2968, file: !2, baseType: !415, size: 16, align: 8)
!2971 = !{!2972, !2973}
!2972 = !DITemplateTypeParameter(name: "Self", type: !434)
!2973 = !DITemplateTypeParameter(name: "Args", type: !2968)
!2974 = !DILocation(line: 166, column: 5, scope: !2958)
!2975 = distinct !DISubprogram(name: "call_mut<fn([u8; 2]) -> u16, ([u8; 2])>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17hbbad6afb38ae9aacE", scope: !2960, file: !2959, line: 166, type: !2962, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2971, retainedNodes: !2976)
!2976 = !{!2977, !2978}
!2977 = !DILocalVariable(arg: 1, scope: !2975, file: !2959, line: 166, type: !2964)
!2978 = !DILocalVariable(arg: 2, scope: !2975, file: !2959, line: 166, type: !2968)
!2979 = !DILocation(line: 166, column: 5, scope: !2975)
!2980 = distinct !DISubprogram(name: "call_once<([u8; 2]), fn([u8; 2]) -> u16>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h2f73320d6fb7f6d0E", scope: !2981, file: !2959, line: 304, type: !2962, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2986, retainedNodes: !2983)
!2981 = !DINamespace(name: "{impl#4}", scope: !2982)
!2982 = !DINamespace(name: "impls", scope: !2961)
!2983 = !{!2984, !2985}
!2984 = !DILocalVariable(name: "self", arg: 1, scope: !2980, file: !2959, line: 304, type: !2964)
!2985 = !DILocalVariable(name: "args", arg: 2, scope: !2980, file: !2959, line: 304, type: !2968)
!2986 = !{!2987, !439}
!2987 = !DITemplateTypeParameter(name: "A", type: !2968)
!2988 = !DILocation(line: 304, column: 41, scope: !2980)
!2989 = !DILocation(line: 304, column: 47, scope: !2980)
!2990 = !DILocation(line: 305, column: 13, scope: !2980)
!2991 = !DILocation(line: 306, column: 10, scope: !2980)
!2992 = distinct !DISubprogram(name: "call_once<([u8; 2]), fn([u8; 2]) -> u16>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17he49726397a5040ccE", scope: !2981, file: !2959, line: 304, type: !2962, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2986, retainedNodes: !2993)
!2993 = !{!2994, !2995}
!2994 = !DILocalVariable(name: "self", arg: 1, scope: !2992, file: !2959, line: 304, type: !2964)
!2995 = !DILocalVariable(name: "args", arg: 2, scope: !2992, file: !2959, line: 304, type: !2968)
!2996 = !DILocation(line: 304, column: 41, scope: !2992)
!2997 = !DILocation(line: 304, column: 47, scope: !2992)
!2998 = !DILocation(line: 305, column: 13, scope: !2992)
!2999 = !DILocation(line: 306, column: 10, scope: !2992)
!3000 = distinct !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h98dfac8b1641c412E", scope: !967, file: !1878, line: 391, type: !3001, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3004, declaration: !3003, retainedNodes: !3007)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!982, !929}
!3003 = !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h98dfac8b1641c412E", scope: !967, file: !1878, line: 391, type: !3001, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3004)
!3004 = !{!971, !3005, !378, !3006}
!3005 = !DITemplateTypeParameter(name: "A", type: !7)
!3006 = !DITemplateTypeParameter(name: "impl FnMut(A, B) -> T", type: !929)
!3007 = !{!3008}
!3008 = !DILocalVariable(name: "f", arg: 1, scope: !3000, file: !1878, line: 391, type: !929)
!3009 = !DILocation(line: 391, column: 29, scope: !3000)
!3010 = !DILocation(line: 393, column: 6, scope: !3000)
!3011 = distinct !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217hf7734f8bacd29157E", scope: !967, file: !1878, line: 391, type: !3012, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3015, declaration: !3014, retainedNodes: !3017)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!952, !895}
!3014 = !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217hf7734f8bacd29157E", scope: !967, file: !1878, line: 391, type: !3012, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3015)
!3015 = !{!971, !3005, !378, !3016}
!3016 = !DITemplateTypeParameter(name: "impl FnMut(A, B) -> T", type: !895)
!3017 = !{!3018}
!3018 = !DILocalVariable(name: "f", arg: 1, scope: !3011, file: !1878, line: 391, type: !895)
!3019 = !DILocation(line: 391, column: 29, scope: !3011)
!3020 = !DILocation(line: 393, column: 6, scope: !3011)
!3021 = distinct !DISubprogram(name: "{closure#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h1641c08e0e8259a1E", scope: !953, file: !1878, line: 392, type: !3022, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3004, retainedNodes: !3024)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{null, !1073, !7, !379}
!3024 = !{!3025, !3026, !3027}
!3025 = !DILocalVariable(name: "a", arg: 2, scope: !3021, file: !1878, line: 392, type: !7)
!3026 = !DILocalVariable(name: "b", arg: 3, scope: !3021, file: !1878, line: 392, type: !379)
!3027 = !DILocalVariable(name: "f", scope: !3021, file: !1878, line: 391, type: !929, align: 8)
!3028 = !DILocation(line: 391, column: 33, scope: !3021)
!3029 = !DILocation(line: 392, column: 15, scope: !3021)
!3030 = !DILocation(line: 392, column: 18, scope: !3021)
!3031 = !DILocation(line: 392, column: 39, scope: !3021)
!3032 = !DILocation(line: 392, column: 47, scope: !3021)
!3033 = distinct !DISubprogram(name: "{closure#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17hf30d866d56315808E", scope: !953, file: !1878, line: 392, type: !3034, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3015, retainedNodes: !3036)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{null, !1022, !7, !379}
!3036 = !{!3037, !3038, !3039}
!3037 = !DILocalVariable(name: "a", arg: 2, scope: !3033, file: !1878, line: 392, type: !7)
!3038 = !DILocalVariable(name: "b", arg: 3, scope: !3033, file: !1878, line: 392, type: !379)
!3039 = !DILocalVariable(name: "f", scope: !3033, file: !1878, line: 391, type: !895, align: 8)
!3040 = !DILocation(line: 391, column: 33, scope: !3033)
!3041 = !DILocation(line: 392, column: 15, scope: !3033)
!3042 = !DILocation(line: 392, column: 18, scope: !3033)
!3043 = !DILocation(line: 392, column: 39, scope: !3033)
!3044 = !DILocation(line: 392, column: 47, scope: !3033)
!3045 = distinct !DISubprogram(name: "read_volatile<u8>", linkageName: "_ZN4core3ptr13read_volatile17h714bdb722e2b088bE", scope: !96, file: !3046, line: 1739, type: !3047, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !3049)
!3046 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c4372d8d4e9c5be9f7a711407f134f72")
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!45, !103}
!3049 = !{!3050}
!3050 = !DILocalVariable(name: "src", arg: 1, scope: !3045, file: !3046, line: 1739, type: !103)
!3051 = !DILocation(line: 1739, column: 32, scope: !3045)
!3052 = !DILocation(line: 74, column: 35, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3045, file: !1177, discriminator: 0)
!3054 = !DILocation(line: 1751, column: 9, scope: !3045)
!3055 = !DILocation(line: 1753, column: 2, scope: !3045)
!3056 = !DILocation(line: 75, column: 17, scope: !3053)
!3057 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr13read_volatile18precondition_check17hca0cf469d8ed1accE", scope: !3058, file: !1177, line: 66, type: !2048, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3059)
!3058 = !DINamespace(name: "read_volatile", scope: !96)
!3059 = !{!3060, !3061, !3062}
!3060 = !DILocalVariable(name: "addr", arg: 1, scope: !3057, file: !1177, line: 66, type: !6)
!3061 = !DILocalVariable(name: "align", arg: 2, scope: !3057, file: !1177, line: 66, type: !9)
!3062 = !DILocalVariable(name: "is_zst", arg: 3, scope: !3057, file: !1177, line: 66, type: !520)
!3063 = !DILocation(line: 66, column: 43, scope: !3057)
!3064 = !DILocation(line: 1749, column: 18, scope: !3065)
!3065 = !DILexicalBlockFile(scope: !3057, file: !3046, discriminator: 0)
!3066 = !DILocation(line: 68, column: 21, scope: !3057)
!3067 = !DILocation(line: 72, column: 14, scope: !3057)
!3068 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17hd0cd1a95236e015dE", scope: !96, file: !3046, line: 522, type: !3069, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3093, retainedNodes: !3091)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{null, !3071}
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>", baseType: !3072, size: 64, align: 64, dwarfAddressSpace: 0)
!3072 = !DICompositeType(tag: DW_TAG_structure_type, name: "DropGuard<u8, alloc::alloc::Global>", scope: !3073, file: !2, size: 64, align: 64, flags: DIFlagProtected, elements: !3076, templateParams: !117, identifier: "9cbbdf574fab09eaef01739c9dfc42f6")
!3073 = !DINamespace(name: "drop", scope: !3074)
!3074 = !DINamespace(name: "{impl#7}", scope: !3075)
!3075 = !DINamespace(name: "drain", scope: !84)
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3072, file: !2, baseType: !3078, size: 64, align: 64, flags: DIFlagProtected)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::drain::Drain<u8, alloc::alloc::Global>", baseType: !3079, size: 64, align: 64, dwarfAddressSpace: 0)
!3079 = !DICompositeType(tag: DW_TAG_structure_type, name: "Drain<u8, alloc::alloc::Global>", scope: !3075, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !3080, templateParams: !117, identifier: "2defe92e18b3e0f4ef19c720c12e66ec")
!3080 = !{!3081, !3082, !3083, !3084}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "tail_start", scope: !3079, file: !2, baseType: !9, size: 64, align: 64, offset: 192, flags: DIFlagProtected)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "tail_len", scope: !3079, file: !2, baseType: !9, size: 64, align: 64, offset: 256, flags: DIFlagProtected)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3079, file: !2, baseType: !1400, size: 128, align: 64, flags: DIFlagProtected)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3079, file: !2, baseType: !3085, size: 64, align: 64, offset: 128, flags: DIFlagProtected)
!3085 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3086, templateParams: !3089, identifier: "11ceb8d7e9a2f87428a961a08a27b556")
!3086 = !{!3087}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3085, file: !2, baseType: !3088, size: 64, align: 64, flags: DIFlagPrivate)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!3089 = !{!3090}
!3090 = !DITemplateTypeParameter(name: "T", type: !83)
!3091 = !{!3092}
!3092 = !DILocalVariable(arg: 1, scope: !3068, file: !3046, line: 522, type: !3071)
!3093 = !{!3094}
!3094 = !DITemplateTypeParameter(name: "T", type: !3072)
!3095 = !DILocation(line: 522, column: 1, scope: !3068)
!3096 = distinct !DISubprogram(name: "slice_from_raw_parts<[u8; 2]>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h93ab6bc7c634651bE", scope: !96, file: !3046, line: 888, type: !3097, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !3104)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!3099, !414, !9}
!3099 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [[u8; 2]]", file: !2, size: 128, align: 64, elements: !3100, templateParams: !15, identifier: "aa4a881786dcca5f1ab55632f8245566")
!3100 = !{!3101, !3103}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3099, file: !2, baseType: !3102, size: 64, align: 64)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64, dwarfAddressSpace: 0)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3099, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3104 = !{!3105, !3106}
!3105 = !DILocalVariable(name: "data", arg: 1, scope: !3096, file: !3046, line: 888, type: !414)
!3106 = !DILocalVariable(name: "len", arg: 2, scope: !3096, file: !3046, line: 888, type: !9)
!3107 = !DILocation(line: 888, column: 38, scope: !3096)
!3108 = !DILocation(line: 888, column: 54, scope: !3096)
!3109 = !DILocation(line: 889, column: 5, scope: !3096)
!3110 = !DILocation(line: 890, column: 2, scope: !3096)
!3111 = distinct !DISubprogram(name: "slice_from_raw_parts<u16>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hc2637c05955ff3d5E", scope: !96, file: !3046, line: 888, type: !3112, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, retainedNodes: !3119)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!3114, !326, !9}
!3114 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u16]", file: !2, size: 128, align: 64, elements: !3115, templateParams: !15, identifier: "de993e7563790f266b94c839cccaa312")
!3115 = !{!3116, !3118}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3114, file: !2, baseType: !3117, size: 64, align: 64)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3114, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3119 = !{!3120, !3121}
!3120 = !DILocalVariable(name: "data", arg: 1, scope: !3111, file: !3046, line: 888, type: !326)
!3121 = !DILocalVariable(name: "len", arg: 2, scope: !3111, file: !3046, line: 888, type: !9)
!3122 = !DILocation(line: 888, column: 38, scope: !3111)
!3123 = !DILocation(line: 888, column: 54, scope: !3111)
!3124 = !DILocation(line: 889, column: 5, scope: !3111)
!3125 = !DILocation(line: 890, column: 2, scope: !3111)
!3126 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17hdd2efb14eebc5b8bE", scope: !96, file: !3046, line: 522, type: !3127, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2118, retainedNodes: !3130)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !3129}
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::convert::{impl#19}::from::StringError", baseType: !134, size: 64, align: 64, dwarfAddressSpace: 0)
!3130 = !{!3131}
!3131 = !DILocalVariable(arg: 1, scope: !3126, file: !3046, line: 522, type: !3129)
!3132 = !DILocation(line: 522, column: 1, scope: !3126)
!3133 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h6d5a020ae49863f9E", scope: !96, file: !3046, line: 934, type: !3134, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !3136)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{!1144, !1201, !9}
!3136 = !{!3137, !3138}
!3137 = !DILocalVariable(name: "data", arg: 1, scope: !3133, file: !3046, line: 934, type: !1201)
!3138 = !DILocalVariable(name: "len", arg: 2, scope: !3133, file: !3046, line: 934, type: !9)
!3139 = !DILocation(line: 934, column: 42, scope: !3133)
!3140 = !DILocation(line: 934, column: 56, scope: !3133)
!3141 = !DILocation(line: 935, column: 5, scope: !3133)
!3142 = !DILocation(line: 936, column: 2, scope: !3133)
!3143 = distinct !DISubprogram(name: "drop_in_place<usize>", linkageName: "_ZN4core3ptr26drop_in_place$LT$usize$GT$17h26cff127ab46f82eE", scope: !96, file: !3046, line: 522, type: !3144, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !194, retainedNodes: !3147)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{null, !3146}
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3147 = !{!3148}
!3148 = !DILocalVariable(arg: 1, scope: !3143, file: !3046, line: 522, type: !3146)
!3149 = !DILocation(line: 522, column: 1, scope: !3143)
!3150 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h2e76790e6722d9caE", scope: !96, file: !3046, line: 522, type: !3151, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1406, retainedNodes: !3154)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{null, !3153}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !67, size: 64, align: 64, dwarfAddressSpace: 0)
!3154 = !{!3155}
!3155 = !DILocalVariable(arg: 1, scope: !3150, file: !3046, line: 522, type: !3153)
!3156 = !DILocation(line: 522, column: 1, scope: !3150)
!3157 = distinct !DISubprogram(name: "drop_in_place<&str>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h1698b470aad21974E", scope: !96, file: !3046, line: 522, type: !3158, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !567, retainedNodes: !3161)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{null, !3160}
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &str", baseType: !170, size: 64, align: 64, dwarfAddressSpace: 0)
!3161 = !{!3162}
!3162 = !DILocalVariable(arg: 1, scope: !3157, file: !3046, line: 522, type: !3160)
!3163 = !DILocation(line: 522, column: 1, scope: !3157)
!3164 = distinct !DISubprogram(name: "drop_in_place<core::fmt::Error>", linkageName: "_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17heda7b8d9e9a04d0aE", scope: !96, file: !3046, line: 522, type: !3165, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3170, retainedNodes: !3168)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{null, !3167}
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::fmt::Error", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!3168 = !{!3169}
!3169 = !DILocalVariable(arg: 1, scope: !3164, file: !3046, line: 522, type: !3167)
!3170 = !{!3171}
!3171 = !DITemplateTypeParameter(name: "T", type: !12)
!3172 = !DILocation(line: 522, column: 1, scope: !3164)
!3173 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h31e63b34b99b1b14E", scope: !96, file: !3046, line: 522, type: !3174, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3179, retainedNodes: !3177)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{null, !3176}
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!3177 = !{!3178}
!3178 = !DILocalVariable(arg: 1, scope: !3173, file: !3046, line: 522, type: !3176)
!3179 = !{!1568}
!3180 = !DILocation(line: 522, column: 1, scope: !3173)
!3181 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h3e5ac1a2fc7a82ffE", scope: !96, file: !3046, line: 522, type: !3182, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, retainedNodes: !3185)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{null, !3184}
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!3185 = !{!3186}
!3186 = !DILocalVariable(arg: 1, scope: !3181, file: !3046, line: 522, type: !3184)
!3187 = !DILocation(line: 522, column: 1, scope: !3181)
!3188 = distinct !DISubprogram(name: "drop_in_place<core::str::error::Utf8Error>", linkageName: "_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h3769aa7d242c253dE", scope: !96, file: !3046, line: 522, type: !3189, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2137, retainedNodes: !3192)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{null, !3191}
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::str::error::Utf8Error", baseType: !156, size: 64, align: 64, dwarfAddressSpace: 0)
!3192 = !{!3193}
!3193 = !DILocalVariable(arg: 1, scope: !3188, file: !3046, line: 522, type: !3191)
!3194 = !DILocation(line: 522, column: 1, scope: !3188)
!3195 = distinct !DISubprogram(name: "drop_in_place<alloc::string::FromUtf8Error>", linkageName: "_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h4655c8c2d5c9086eE", scope: !96, file: !3046, line: 522, type: !3196, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3205, retainedNodes: !3203)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{null, !3198}
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::FromUtf8Error", baseType: !3199, size: 64, align: 64, dwarfAddressSpace: 0)
!3199 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf8Error", scope: !79, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !3200, templateParams: !15, identifier: "3f7666c6394bfbf5989fe39771264203")
!3200 = !{!3201, !3202}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3199, file: !2, baseType: !83, size: 192, align: 64, flags: DIFlagPrivate)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3199, file: !2, baseType: !156, size: 128, align: 64, offset: 192, flags: DIFlagPrivate)
!3203 = !{!3204}
!3204 = !DILocalVariable(arg: 1, scope: !3195, file: !3046, line: 522, type: !3198)
!3205 = !{!3206}
!3206 = !DITemplateTypeParameter(name: "T", type: !3199)
!3207 = !DILocation(line: 522, column: 1, scope: !3195)
!3208 = distinct !DISubprogram(name: "read<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h2e437cd775b4c54bE", scope: !96, file: !3046, line: 1336, type: !3209, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !3212)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!2539, !3211}
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !2539, size: 64, align: 64, dwarfAddressSpace: 0)
!3212 = !{!3213}
!3213 = !DILocalVariable(name: "src", arg: 1, scope: !3208, file: !3046, line: 1336, type: !3211)
!3214 = !DILocation(line: 1336, column: 29, scope: !3208)
!3215 = !DILocation(line: 74, column: 35, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3208, file: !1177, discriminator: 0)
!3217 = !DILocation(line: 1375, column: 9, scope: !3208)
!3218 = !DILocation(line: 1377, column: 2, scope: !3208)
!3219 = !DILocation(line: 75, column: 17, scope: !3216)
!3220 = distinct !DISubprogram(name: "read<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h909e5ee099ae3bacE", scope: !96, file: !3046, line: 1336, type: !3221, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3226, retainedNodes: !3224)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!87, !3223}
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!3224 = !{!3225}
!3225 = !DILocalVariable(name: "src", arg: 1, scope: !3220, file: !3046, line: 1336, type: !3223)
!3226 = !{!3227}
!3227 = !DITemplateTypeParameter(name: "T", type: !87)
!3228 = !DILocation(line: 1336, column: 29, scope: !3220)
!3229 = !DILocation(line: 74, column: 35, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3220, file: !1177, discriminator: 0)
!3231 = !DILocation(line: 1375, column: 9, scope: !3220)
!3232 = !DILocation(line: 1377, column: 2, scope: !3220)
!3233 = !DILocation(line: 75, column: 17, scope: !3230)
!3234 = distinct !DISubprogram(name: "read<core::option::Option<u16>>", linkageName: "_ZN4core3ptr4read17h9d8e0c1e8c9002dbE", scope: !96, file: !3046, line: 1336, type: !3235, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2587, retainedNodes: !3238)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!339, !3237}
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<u16>", baseType: !339, size: 64, align: 64, dwarfAddressSpace: 0)
!3238 = !{!3239}
!3239 = !DILocalVariable(name: "src", arg: 1, scope: !3234, file: !3046, line: 1336, type: !3237)
!3240 = !DILocation(line: 1336, column: 29, scope: !3234)
!3241 = !DILocation(line: 74, column: 35, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3234, file: !1177, discriminator: 0)
!3243 = !DILocation(line: 1375, column: 9, scope: !3234)
!3244 = !DILocation(line: 1377, column: 2, scope: !3234)
!3245 = !DILocation(line: 75, column: 17, scope: !3242)
!3246 = distinct !DISubprogram(name: "read<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr4read17he810e9133f8e596eE", scope: !96, file: !3046, line: 1336, type: !3247, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2558, retainedNodes: !3250)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!1400, !3249}
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::slice::iter::Iter<u8>", baseType: !1400, size: 64, align: 64, dwarfAddressSpace: 0)
!3250 = !{!3251}
!3251 = !DILocalVariable(name: "src", arg: 1, scope: !3246, file: !3046, line: 1336, type: !3249)
!3252 = !DILocation(line: 1336, column: 29, scope: !3246)
!3253 = !DILocation(line: 74, column: 35, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3246, file: !1177, discriminator: 0)
!3255 = !DILocation(line: 1375, column: 9, scope: !3246)
!3256 = !DILocation(line: 1377, column: 2, scope: !3246)
!3257 = !DILocation(line: 75, column: 17, scope: !3254)
!3258 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17hf0e7eddf83f137d7E", scope: !96, file: !3046, line: 1336, type: !3259, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3264, retainedNodes: !3262)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{null, !3261}
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::alloc::Global", baseType: !112, size: 64, align: 64, dwarfAddressSpace: 0)
!3262 = !{!3263}
!3263 = !DILocalVariable(name: "src", arg: 1, scope: !3258, file: !3046, line: 1336, type: !3261)
!3264 = !{!3265}
!3265 = !DITemplateTypeParameter(name: "T", type: !112)
!3266 = !DILocation(line: 1336, column: 29, scope: !3258)
!3267 = !DILocation(line: 74, column: 35, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3258, file: !1177, discriminator: 0)
!3269 = !DILocation(line: 1377, column: 2, scope: !3258)
!3270 = !DILocation(line: 75, column: 17, scope: !3268)
!3271 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr4read18precondition_check17h054b16bd3f39bfc0E", scope: !3272, file: !1177, line: 66, type: !2048, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3273)
!3272 = !DINamespace(name: "read", scope: !96)
!3273 = !{!3274, !3275, !3276}
!3274 = !DILocalVariable(name: "addr", arg: 1, scope: !3271, file: !1177, line: 66, type: !6)
!3275 = !DILocalVariable(name: "align", arg: 2, scope: !3271, file: !1177, line: 66, type: !9)
!3276 = !DILocalVariable(name: "is_zst", arg: 3, scope: !3271, file: !1177, line: 66, type: !520)
!3277 = !DILocation(line: 66, column: 43, scope: !3271)
!3278 = !DILocation(line: 1373, column: 18, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3271, file: !3046, discriminator: 0)
!3280 = !DILocation(line: 68, column: 21, scope: !3271)
!3281 = !DILocation(line: 72, column: 14, scope: !3271)
!3282 = distinct !DISubprogram(name: "drop_in_place<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h19dd7d46e4d6a260E", scope: !96, file: !3046, line: 522, type: !3283, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3303, retainedNodes: !3301)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !3285}
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::borrow::Cow<str>", baseType: !3286, size: 64, align: 64, dwarfAddressSpace: 0)
!3286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<str>", scope: !3287, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !3288, templateParams: !15, identifier: "1d5582bdbeee7ae560aa06e923549629")
!3287 = !DINamespace(name: "borrow", scope: !80)
!3288 = !{!3289}
!3289 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3286, file: !2, size: 192, align: 64, elements: !3290, templateParams: !15, identifier: "c0203ac5c041f4dc8ed0835242ae1ac3", discriminator: !3300)
!3290 = !{!3291, !3296}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !3289, file: !2, baseType: !3292, size: 192, align: 64, extraData: i128 9223372036854775808)
!3292 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !3286, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !3293, templateParams: !3295, identifier: "ae5ac11646ec8aa3e9b72232caec8328")
!3293 = !{!3294}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3292, file: !2, baseType: !170, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!3295 = !{!545}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !3289, file: !2, baseType: !3297, size: 192, align: 64)
!3297 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !3286, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !3298, templateParams: !3295, identifier: "8b4712ccd157f2928122166a21cb10c0")
!3298 = !{!3299}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3297, file: !2, baseType: !78, size: 192, align: 64, flags: DIFlagPublic)
!3300 = !DIDerivedType(tag: DW_TAG_member, scope: !3286, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!3301 = !{!3302}
!3302 = !DILocalVariable(arg: 1, scope: !3282, file: !3046, line: 522, type: !3285)
!3303 = !{!3304}
!3304 = !DITemplateTypeParameter(name: "T", type: !3286)
!3305 = !DILocation(line: 522, column: 1, scope: !3282)
!3306 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hdae0bff5a98dabeeE", scope: !96, file: !3046, line: 522, type: !3307, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3226, retainedNodes: !3310)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{null, !3309}
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!3310 = !{!3311}
!3311 = !DILocalVariable(arg: 1, scope: !3306, file: !3046, line: 522, type: !3309)
!3312 = !DILocation(line: 522, column: 1, scope: !3306)
!3313 = distinct !DISubprogram(name: "drop_in_place<core::alloc::layout::LayoutError>", linkageName: "_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17hc51ec1a8ee64cbf5E", scope: !96, file: !3046, line: 522, type: !3314, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3319, retainedNodes: !3317)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{null, !3316}
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::alloc::layout::LayoutError", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!3317 = !{!3318}
!3318 = !DILocalVariable(arg: 1, scope: !3313, file: !3046, line: 522, type: !3316)
!3319 = !{!3320}
!3320 = !DITemplateTypeParameter(name: "T", type: !24)
!3321 = !DILocation(line: 522, column: 1, scope: !3313)
!3322 = distinct !DISubprogram(name: "drop_in_place<&core::option::Option<u8>>", linkageName: "_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17hec7bea8fa6c5667fE", scope: !96, file: !3046, line: 522, type: !3323, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3328, retainedNodes: !3326)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{null, !3325}
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &core::option::Option<u8>", baseType: !35, size: 64, align: 64, dwarfAddressSpace: 0)
!3326 = !{!3327}
!3327 = !DILocalVariable(arg: 1, scope: !3322, file: !3046, line: 522, type: !3325)
!3328 = !{!3329}
!3329 = !DITemplateTypeParameter(name: "T", type: !35)
!3330 = !DILocation(line: 522, column: 1, scope: !3322)
!3331 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::drain::Drain<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17hd26f3abebc46171bE", scope: !96, file: !3046, line: 522, type: !3332, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3337, retainedNodes: !3335)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{null, !3334}
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::drain::Drain<u8, alloc::alloc::Global>", baseType: !3079, size: 64, align: 64, dwarfAddressSpace: 0)
!3335 = !{!3336}
!3336 = !DILocalVariable(arg: 1, scope: !3331, file: !3046, line: 522, type: !3334)
!3337 = !{!3338}
!3338 = !DITemplateTypeParameter(name: "T", type: !3079)
!3339 = !DILocation(line: 522, column: 1, scope: !3331)
!3340 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hbf51f9f937146909E", scope: !96, file: !3046, line: 522, type: !3341, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !3344)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{null, !3343}
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !2539, size: 64, align: 64, dwarfAddressSpace: 0)
!3344 = !{!3345}
!3345 = !DILocalVariable(arg: 1, scope: !3340, file: !3046, line: 522, type: !3343)
!3346 = !DILocation(line: 522, column: 1, scope: !3340)
!3347 = distinct !DISubprogram(name: "write<core::option::Option<u16>>", linkageName: "_ZN4core3ptr5write17h3dda0bd55031b673E", scope: !96, file: !3046, line: 1556, type: !3348, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2587, retainedNodes: !3351)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !3350, !339}
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<u16>", baseType: !339, size: 64, align: 64, dwarfAddressSpace: 0)
!3351 = !{!3352, !3353}
!3352 = !DILocalVariable(name: "dst", arg: 1, scope: !3347, file: !3046, line: 1556, type: !3350)
!3353 = !DILocalVariable(name: "src", arg: 2, scope: !3347, file: !3046, line: 1556, type: !339)
!3354 = !DILocation(line: 1556, column: 30, scope: !3347)
!3355 = !DILocation(line: 1556, column: 43, scope: !3347)
!3356 = !DILocation(line: 74, column: 35, scope: !3357)
!3357 = !DILexicalBlockFile(scope: !3347, file: !1177, discriminator: 0)
!3358 = !DILocation(line: 1579, column: 9, scope: !3347)
!3359 = !DILocation(line: 1581, column: 2, scope: !3347)
!3360 = !DILocation(line: 75, column: 17, scope: !3357)
!3361 = distinct !DISubprogram(name: "write<u8>", linkageName: "_ZN4core3ptr5write17h578f9e803926fa08E", scope: !96, file: !3046, line: 1556, type: !3362, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !3365)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{null, !3364, !45}
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!3365 = !{!3366, !3367}
!3366 = !DILocalVariable(name: "dst", arg: 1, scope: !3361, file: !3046, line: 1556, type: !3364)
!3367 = !DILocalVariable(name: "src", arg: 2, scope: !3361, file: !3046, line: 1556, type: !45)
!3368 = !DILocation(line: 1556, column: 30, scope: !3361)
!3369 = !DILocation(line: 1556, column: 43, scope: !3361)
!3370 = !DILocation(line: 74, column: 35, scope: !3371)
!3371 = !DILexicalBlockFile(scope: !3361, file: !1177, discriminator: 0)
!3372 = !DILocation(line: 1579, column: 9, scope: !3361)
!3373 = !DILocation(line: 1581, column: 2, scope: !3361)
!3374 = !DILocation(line: 75, column: 17, scope: !3371)
!3375 = distinct !DISubprogram(name: "write<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3ptr5write17hd2da871d5984becbE", scope: !96, file: !3046, line: 1556, type: !3376, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2558, retainedNodes: !3379)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{null, !3378, !1400}
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::slice::iter::Iter<u8>", baseType: !1400, size: 64, align: 64, dwarfAddressSpace: 0)
!3379 = !{!3380, !3381}
!3380 = !DILocalVariable(name: "dst", arg: 1, scope: !3375, file: !3046, line: 1556, type: !3378)
!3381 = !DILocalVariable(name: "src", arg: 2, scope: !3375, file: !3046, line: 1556, type: !1400)
!3382 = !DILocation(line: 1556, column: 30, scope: !3375)
!3383 = !DILocation(line: 1556, column: 43, scope: !3375)
!3384 = !DILocation(line: 74, column: 35, scope: !3385)
!3385 = !DILexicalBlockFile(scope: !3375, file: !1177, discriminator: 0)
!3386 = !DILocation(line: 1579, column: 9, scope: !3375)
!3387 = !DILocation(line: 1581, column: 2, scope: !3375)
!3388 = !DILocation(line: 75, column: 17, scope: !3385)
!3389 = distinct !DISubprogram(name: "write<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr5write17he9b8da1104db5e9fE", scope: !96, file: !3046, line: 1556, type: !3390, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !3392)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !3343, !2539}
!3392 = !{!3393, !3394}
!3393 = !DILocalVariable(name: "dst", arg: 1, scope: !3389, file: !3046, line: 1556, type: !3343)
!3394 = !DILocalVariable(name: "src", arg: 2, scope: !3389, file: !3046, line: 1556, type: !2539)
!3395 = !DILocation(line: 1556, column: 30, scope: !3389)
!3396 = !DILocation(line: 1556, column: 43, scope: !3389)
!3397 = !DILocation(line: 74, column: 35, scope: !3398)
!3398 = !DILexicalBlockFile(scope: !3389, file: !1177, discriminator: 0)
!3399 = !DILocation(line: 1579, column: 9, scope: !3389)
!3400 = !DILocation(line: 1581, column: 2, scope: !3389)
!3401 = !DILocation(line: 75, column: 17, scope: !3398)
!3402 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr5write18precondition_check17h1f9c7ca54558bd85E", scope: !3403, file: !1177, line: 66, type: !3404, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3406)
!3403 = !DINamespace(name: "write", scope: !96)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{null, !2064, !9, !520}
!3406 = !{!3407, !3408, !3409}
!3407 = !DILocalVariable(name: "addr", arg: 1, scope: !3402, file: !1177, line: 66, type: !2064)
!3408 = !DILocalVariable(name: "align", arg: 2, scope: !3402, file: !1177, line: 66, type: !9)
!3409 = !DILocalVariable(name: "is_zst", arg: 3, scope: !3402, file: !1177, line: 66, type: !520)
!3410 = !DILocation(line: 66, column: 43, scope: !3402)
!3411 = !DILocation(line: 1577, column: 18, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3402, file: !3046, discriminator: 0)
!3413 = !DILocation(line: 68, column: 21, scope: !3402)
!3414 = !DILocation(line: 72, column: 14, scope: !3402)
!3415 = distinct !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1ccfc74c589b8c82E", scope: !3416, file: !1546, line: 88, type: !3428, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, declaration: !3430, retainedNodes: !3431)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !95, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3417, templateParams: !1171, identifier: "a4a794e9bab8e2f07931778e3c7fefb4")
!3417 = !{!3418, !3426}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3416, file: !2, baseType: !3419, size: 128, align: 64, flags: DIFlagPrivate)
!3419 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !100, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3420, templateParams: !1171, identifier: "ed3b7d513347db8879bd19668c3864")
!3420 = !{!3421}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3419, file: !2, baseType: !3422, size: 128, align: 64, flags: DIFlagPrivate)
!3422 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3423, templateParams: !15, identifier: "9c61f5ebec075ab0d50f2e0dc6f27181")
!3423 = !{!3424, !3425}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3422, file: !2, baseType: !1147, size: 64, align: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3422, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3416, file: !2, baseType: !3427, align: 8, offset: 128, flags: DIFlagPrivate)
!3427 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !1171, identifier: "740b3f48bec0055b21e8abd0fd63e966")
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!3416, !1144}
!3430 = !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1ccfc74c589b8c82E", scope: !3416, file: !1546, line: 88, type: !3428, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1171)
!3431 = !{!3432}
!3432 = !DILocalVariable(name: "ptr", arg: 1, scope: !3415, file: !1546, line: 88, type: !1144)
!3433 = !DILocation(line: 88, column: 39, scope: !3415)
!3434 = !DILocation(line: 90, column: 36, scope: !3415)
!3435 = !DILocation(line: 91, column: 6, scope: !3415)
!3436 = distinct !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5b03a388edb65e62E", scope: !3437, file: !1546, line: 88, type: !3451, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3447, declaration: !3457, retainedNodes: !3458)
!3437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<core::ffi::c_str::CStr>", scope: !95, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3438, templateParams: !3447, identifier: "daa56408f16e58bfd28a1b854e7f439")
!3438 = !{!3439, !3449}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3437, file: !2, baseType: !3440, size: 128, align: 64, flags: DIFlagPrivate)
!3440 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<core::ffi::c_str::CStr>", scope: !100, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3441, templateParams: !3447, identifier: "9183d724904d19b67a62ae0200f47fd3")
!3441 = !{!3442}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3440, file: !2, baseType: !3443, size: 128, align: 64, flags: DIFlagPrivate)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !3444, templateParams: !15, identifier: "4ac69bf43ed1948828c5cf891969f52c")
!3444 = !{!3445, !3446}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3443, file: !2, baseType: !2193, size: 64, align: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3443, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3447 = !{!3448}
!3448 = !DITemplateTypeParameter(name: "T", type: !2183)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3437, file: !2, baseType: !3450, align: 8, offset: 128, flags: DIFlagPrivate)
!3450 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<core::ffi::c_str::CStr>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !3447, identifier: "1dc9e445a92d08cd898810ec14e956b6")
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!3437, !3453}
!3453 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !3454, templateParams: !15, identifier: "360de4f4bce98e3a1ae563b1af03b2e6")
!3454 = !{!3455, !3456}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3453, file: !2, baseType: !2193, size: 64, align: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3453, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3457 = !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5b03a388edb65e62E", scope: !3437, file: !1546, line: 88, type: !3451, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3447)
!3458 = !{!3459}
!3459 = !DILocalVariable(name: "ptr", arg: 1, scope: !3436, file: !1546, line: 88, type: !3453)
!3460 = !DILocation(line: 88, column: 39, scope: !3436)
!3461 = !DILocation(line: 90, column: 36, scope: !3436)
!3462 = !DILocation(line: 91, column: 6, scope: !3436)
!3463 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc18eeea7ef5fa95bE", scope: !3464, file: !1546, line: 88, type: !3469, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3475, retainedNodes: !3476)
!3464 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !95, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3465, templateParams: !43, identifier: "809f806a940ab1ffec29595b49044c5a")
!3465 = !{!3466, !3467}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3464, file: !2, baseType: !1665, size: 128, align: 64, flags: DIFlagPrivate)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3464, file: !2, baseType: !3468, align: 8, offset: 128, flags: DIFlagPrivate)
!3468 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !43, identifier: "91e4fa4a5ad6ee5a7ec42da78410446d")
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!3464, !3471}
!3471 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !3472, templateParams: !15, identifier: "eb80752d8dc9079cf56e9f0de61d8d5f")
!3472 = !{!3473, !3474}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3471, file: !2, baseType: !173, size: 64, align: 64)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3471, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3475 = !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc18eeea7ef5fa95bE", scope: !3464, file: !1546, line: 88, type: !3469, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3476 = !{!3477}
!3477 = !DILocalVariable(name: "ptr", arg: 1, scope: !3463, file: !1546, line: 88, type: !3471)
!3478 = !DILocation(line: 88, column: 39, scope: !3463)
!3479 = !DILocation(line: 90, column: 36, scope: !3463)
!3480 = !DILocation(line: 91, column: 6, scope: !3463)
!3481 = distinct !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hcfa3c6ac58bfea4aE", scope: !3482, file: !1546, line: 88, type: !3494, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3500, retainedNodes: !3501)
!3482 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<str>", scope: !95, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3483, templateParams: !43, identifier: "fb8d9e0fb2c60faf717bb40641d17aa6")
!3483 = !{!3484, !3492}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3482, file: !2, baseType: !3485, size: 128, align: 64, flags: DIFlagPrivate)
!3485 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<str>", scope: !100, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3486, templateParams: !43, identifier: "95e2e7b613715f575caf2af0bb6ef056")
!3486 = !{!3487}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3485, file: !2, baseType: !3488, size: 128, align: 64, flags: DIFlagPrivate)
!3488 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !3489, templateParams: !15, identifier: "238a44609877474087c05adf26cd41fa")
!3489 = !{!3490, !3491}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3488, file: !2, baseType: !173, size: 64, align: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3488, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3482, file: !2, baseType: !3493, align: 8, offset: 128, flags: DIFlagPrivate)
!3493 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<str>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !43, identifier: "b547dbf5bd5d809b69cbad124ed0fec9")
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!3482, !3496}
!3496 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut str", file: !2, size: 128, align: 64, elements: !3497, templateParams: !15, identifier: "40e18fd27f75bcf67a53e523348b3b8e")
!3497 = !{!3498, !3499}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3496, file: !2, baseType: !173, size: 64, align: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3496, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3500 = !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hcfa3c6ac58bfea4aE", scope: !3482, file: !1546, line: 88, type: !3494, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3501 = !{!3502}
!3502 = !DILocalVariable(name: "ptr", arg: 1, scope: !3481, file: !1546, line: 88, type: !3496)
!3503 = !DILocation(line: 88, column: 39, scope: !3481)
!3504 = !DILocation(line: 90, column: 36, scope: !3481)
!3505 = !DILocation(line: 91, column: 6, scope: !3481)
!3506 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd8a863cceea1dd7cE", scope: !94, file: !1546, line: 88, type: !3507, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3509, retainedNodes: !3510)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!94, !3364}
!3509 = !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hd8a863cceea1dd7cE", scope: !94, file: !1546, line: 88, type: !3507, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3510 = !{!3511}
!3511 = !DILocalVariable(name: "ptr", arg: 1, scope: !3506, file: !1546, line: 88, type: !3364)
!3512 = !DILocation(line: 88, column: 39, scope: !3506)
!3513 = !DILocation(line: 90, column: 36, scope: !3506)
!3514 = !DILocation(line: 91, column: 6, scope: !3506)
!3515 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h01259becb5e317e0E", scope: !94, file: !1546, line: 113, type: !1538, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3516, retainedNodes: !3517)
!3516 = !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h01259becb5e317e0E", scope: !94, file: !1546, line: 113, type: !1538, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3517 = !{!3518}
!3518 = !DILocalVariable(name: "self", arg: 1, scope: !3515, file: !1546, line: 113, type: !94)
!3519 = !DILocation(line: 113, column: 34, scope: !3515)
!3520 = !DILocation(line: 115, column: 6, scope: !3515)
!3521 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h868fc1eb7ffbefb1E", scope: !3464, file: !1546, line: 146, type: !3522, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2243, declaration: !3524, retainedNodes: !3525)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!94, !3464}
!3524 = !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h868fc1eb7ffbefb1E", scope: !3464, file: !1546, line: 146, type: !3522, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2243)
!3525 = !{!3526}
!3526 = !DILocalVariable(name: "self", arg: 1, scope: !3521, file: !1546, line: 146, type: !3464)
!3527 = !DILocation(line: 146, column: 26, scope: !3521)
!3528 = !DILocation(line: 149, column: 27, scope: !3521)
!3529 = !DILocation(line: 150, column: 6, scope: !3521)
!3530 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hb7f0e71d357e661aE", scope: !94, file: !1546, line: 146, type: !3531, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2243, declaration: !3533, retainedNodes: !3534)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!94, !94}
!3533 = !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hb7f0e71d357e661aE", scope: !94, file: !1546, line: 146, type: !3531, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2243)
!3534 = !{!3535}
!3535 = !DILocalVariable(name: "self", arg: 1, scope: !3530, file: !1546, line: 146, type: !94)
!3536 = !DILocation(line: 146, column: 26, scope: !3530)
!3537 = !DILocation(line: 149, column: 27, scope: !3530)
!3538 = !DILocation(line: 150, column: 6, scope: !3530)
!3539 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h57809246cddec3c6E", scope: !3464, file: !1546, line: 106, type: !3540, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3542, retainedNodes: !3543)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{!3471, !3464}
!3542 = !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h57809246cddec3c6E", scope: !3464, file: !1546, line: 106, type: !3540, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3543 = !{!3544}
!3544 = !DILocalVariable(name: "self", arg: 1, scope: !3539, file: !1546, line: 106, type: !3464)
!3545 = !DILocation(line: 106, column: 25, scope: !3539)
!3546 = !DILocalVariable(name: "self", arg: 1, scope: !3547, file: !1332, line: 339, type: !1665)
!3547 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcfea2416f41b257dE", scope: !1665, file: !1332, line: 339, type: !3548, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3550, retainedNodes: !3551)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!3471, !1665}
!3550 = !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcfea2416f41b257dE", scope: !1665, file: !1332, line: 339, type: !3548, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3551 = !{!3546}
!3552 = !DILocation(line: 339, column: 25, scope: !3547, inlinedAt: !3553)
!3553 = distinct !DILocation(line: 107, column: 9, scope: !3539)
!3554 = !DILocation(line: 346, column: 6, scope: !3547, inlinedAt: !3553)
!3555 = !DILocation(line: 107, column: 9, scope: !3539)
!3556 = !DILocation(line: 108, column: 6, scope: !3539)
!3557 = distinct !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hc032be863a5aadc0E", scope: !3558, file: !1546, line: 74, type: !3572, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3568, declaration: !3574)
!3558 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8; 0]>", scope: !95, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3559, templateParams: !3568, identifier: "5b56be479b7e15e941f2c221670657fd")
!3559 = !{!3560, !3570}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3558, file: !2, baseType: !3561, size: 64, align: 64, flags: DIFlagPrivate)
!3561 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8; 0]>", scope: !100, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3562, templateParams: !3568, identifier: "79c5932eaebd7a584e11cb9a1b75c4b5")
!3562 = !{!3563}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3561, file: !2, baseType: !3564, size: 64, align: 64, flags: DIFlagPrivate)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 0]", baseType: !3565, size: 64, align: 64, dwarfAddressSpace: 0)
!3565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, align: 8, elements: !3566)
!3566 = !{!3567}
!3567 = !DISubrange(count: 0, lowerBound: 0)
!3568 = !{!3569}
!3569 = !DITemplateTypeParameter(name: "T", type: !3565)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3558, file: !2, baseType: !3571, align: 8, offset: 64, flags: DIFlagPrivate)
!3571 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8; 0]>", scope: !106, file: !2, align: 8, flags: DIFlagPublic, elements: !15, templateParams: !3568, identifier: "1a0240052d6dc71fd7d6be9faa239db2")
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!3558}
!3574 = !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hc032be863a5aadc0E", scope: !3558, file: !1546, line: 74, type: !3572, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3568)
!3575 = !DILocation(line: 76, column: 27, scope: !3557)
!3576 = !DILocation(line: 77, column: 6, scope: !3557)
!3577 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h0b063de72bc850aeE", scope: !3578, file: !1177, line: 66, type: !3579, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3581)
!3578 = !DINamespace(name: "add", scope: !1316)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{null, !6, !9, !9}
!3581 = !{!3582, !3583, !3584}
!3582 = !DILocalVariable(name: "this", arg: 1, scope: !3577, file: !1177, line: 66, type: !6)
!3583 = !DILocalVariable(name: "count", arg: 2, scope: !3577, file: !1177, line: 66, type: !9)
!3584 = !DILocalVariable(name: "size", arg: 3, scope: !3577, file: !1177, line: 66, type: !9)
!3585 = !DILocation(line: 66, column: 43, scope: !3577)
!3586 = !DILocation(line: 1023, column: 18, scope: !3587)
!3587 = !DILexicalBlockFile(scope: !3577, file: !1180, discriminator: 0)
!3588 = !DILocation(line: 68, column: 21, scope: !3577)
!3589 = !DILocation(line: 72, column: 14, scope: !3577)
!3590 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h71a7edaff8983bf7E", scope: !3578, file: !1180, line: 1000, type: !3591, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3593)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!520, !6, !9, !9}
!3593 = !{!3594, !3595, !3596}
!3594 = !DILocalVariable(name: "this", arg: 1, scope: !3590, file: !1180, line: 1000, type: !6)
!3595 = !DILocalVariable(name: "count", arg: 2, scope: !3590, file: !1180, line: 1000, type: !9)
!3596 = !DILocalVariable(name: "size", arg: 3, scope: !3590, file: !1180, line: 1000, type: !9)
!3597 = !DILocation(line: 1000, column: 37, scope: !3590)
!3598 = !DILocation(line: 1000, column: 54, scope: !3590)
!3599 = !DILocation(line: 1000, column: 68, scope: !3590)
!3600 = !DILocation(line: 3840, column: 27, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3590, file: !2057, discriminator: 0)
!3602 = !DILocation(line: 3840, column: 9, scope: !3601)
!3603 = !DILocation(line: 1013, column: 10, scope: !3590)
!3604 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17he1785df49f7b348aE", scope: !3605, file: !2057, line: 3828, type: !3591, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3606)
!3605 = !DINamespace(name: "runtime_add_nowrap", scope: !3578)
!3606 = !{!3607, !3608, !3609, !3610, !3612}
!3607 = !DILocalVariable(name: "this", arg: 1, scope: !3604, file: !2057, line: 3828, type: !6)
!3608 = !DILocalVariable(name: "count", arg: 2, scope: !3604, file: !2057, line: 3828, type: !9)
!3609 = !DILocalVariable(name: "size", arg: 3, scope: !3604, file: !2057, line: 3828, type: !9)
!3610 = !DILocalVariable(name: "byte_offset", scope: !3611, file: !1180, line: 1006, type: !9, align: 8)
!3611 = distinct !DILexicalBlock(scope: !3604, file: !1180, line: 1006, column: 21)
!3612 = !DILocalVariable(name: "overflow", scope: !3613, file: !1180, line: 1009, type: !520, align: 1)
!3613 = distinct !DILexicalBlock(scope: !3611, file: !1180, line: 1009, column: 21)
!3614 = !DILocation(line: 3828, column: 22, scope: !3604)
!3615 = !DILocation(line: 1006, column: 45, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3604, file: !1180, discriminator: 0)
!3617 = !DILocation(line: 1006, column: 25, scope: !3616)
!3618 = !DILocation(line: 1006, column: 30, scope: !3616)
!3619 = !DILocation(line: 1006, column: 30, scope: !3611)
!3620 = !DILocalVariable(name: "self", arg: 1, scope: !3621, file: !2237, line: 162, type: !6)
!3621 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hfb26732143cabae8E", scope: !2238, file: !2237, line: 162, type: !3622, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !970, retainedNodes: !3624)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!9, !6}
!3624 = !{!3620}
!3625 = !DILocation(line: 162, column: 17, scope: !3621, inlinedAt: !3626)
!3626 = distinct !DILocation(line: 1009, column: 41, scope: !3611)
!3627 = !DILocalVariable(name: "self", arg: 1, scope: !3628, file: !2237, line: 62, type: !6)
!3628 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17haab7ceddc1b1e7dfE", scope: !2238, file: !2237, line: 62, type: !3629, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3632, retainedNodes: !3631)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{!6, !6}
!3631 = !{!3627}
!3632 = !{!971, !3633}
!3633 = !DITemplateTypeParameter(name: "U", type: !7)
!3634 = !DILocation(line: 62, column: 26, scope: !3628, inlinedAt: !3635)
!3635 = distinct !DILocation(line: 168, column: 33, scope: !3621, inlinedAt: !3626)
!3636 = !DILocation(line: 168, column: 18, scope: !3621, inlinedAt: !3626)
!3637 = !DILocation(line: 2306, column: 38, scope: !2815, inlinedAt: !3638)
!3638 = distinct !DILocation(line: 1009, column: 41, scope: !3611)
!3639 = !DILocation(line: 2306, column: 44, scope: !2815, inlinedAt: !3638)
!3640 = !DILocation(line: 2307, column: 26, scope: !2815, inlinedAt: !3638)
!3641 = !DILocation(line: 2307, column: 18, scope: !2815, inlinedAt: !3638)
!3642 = !DILocation(line: 2307, column: 18, scope: !2819, inlinedAt: !3638)
!3643 = !DILocation(line: 2307, column: 21, scope: !2815, inlinedAt: !3638)
!3644 = !DILocation(line: 2307, column: 21, scope: !2819, inlinedAt: !3638)
!3645 = !DILocation(line: 1009, column: 41, scope: !3611)
!3646 = !DILocation(line: 1009, column: 29, scope: !3611)
!3647 = !DILocation(line: 1009, column: 29, scope: !3613)
!3648 = !DILocation(line: 1010, column: 21, scope: !3613)
!3649 = !DILocation(line: 1007, column: 32, scope: !3616)
!3650 = !DILocation(line: 1007, column: 25, scope: !3616)
!3651 = !DILocation(line: 1010, column: 61, scope: !3613)
!3652 = !DILocation(line: 3830, column: 10, scope: !3604)
!3653 = !DILocation(line: 3828, column: 9, scope: !3604)
!3654 = distinct !DISubprogram(name: "is_null<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7ca6d387f0c6f0a1E", scope: !1316, file: !1180, line: 35, type: !3655, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !970, retainedNodes: !3657)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!520, !2064}
!3657 = !{!3658}
!3658 = !DILocalVariable(name: "self", arg: 1, scope: !3654, file: !1180, line: 35, type: !2064)
!3659 = !DILocation(line: 35, column: 26, scope: !3654)
!3660 = !DILocalVariable(name: "self", arg: 1, scope: !3661, file: !1180, line: 120, type: !2064)
!3661 = distinct !DISubprogram(name: "cast_const<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17h8f360bd4f35f006aE", scope: !1316, file: !1180, line: 120, type: !3662, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !970, retainedNodes: !3664)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!6, !2064}
!3664 = !{!3660}
!3665 = !DILocation(line: 120, column: 29, scope: !3661, inlinedAt: !3666)
!3666 = distinct !DILocation(line: 36, column: 9, scope: !3654)
!3667 = !DILocation(line: 36, column: 9, scope: !3654)
!3668 = !DILocation(line: 37, column: 6, scope: !3654)
!3669 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h9974e5af26a1ad9bE", scope: !1316, file: !1180, line: 35, type: !3670, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !3672)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{!520, !3364}
!3672 = !{!3673}
!3673 = !DILocalVariable(name: "self", arg: 1, scope: !3669, file: !1180, line: 35, type: !3364)
!3674 = !DILocation(line: 35, column: 26, scope: !3669)
!3675 = !DILocalVariable(name: "self", arg: 1, scope: !3676, file: !1180, line: 120, type: !3364)
!3676 = distinct !DISubprogram(name: "cast_const<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17hc9bd0e5f7a639353E", scope: !1316, file: !1180, line: 120, type: !3677, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !3679)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!103, !3364}
!3679 = !{!3675}
!3680 = !DILocation(line: 120, column: 29, scope: !3676, inlinedAt: !3681)
!3681 = distinct !DILocation(line: 36, column: 9, scope: !3669)
!3682 = !DILocation(line: 36, column: 9, scope: !3669)
!3683 = !DILocation(line: 37, column: 6, scope: !3669)
!3684 = distinct !DISubprogram(name: "sub_ptr<u16>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h6486c3ed35f5c567E", scope: !1316, file: !1180, line: 917, type: !3685, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, retainedNodes: !3688)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!9, !3687, !326}
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u16", baseType: !327, size: 64, align: 64, dwarfAddressSpace: 0)
!3688 = !{!3689, !3690}
!3689 = !DILocalVariable(name: "self", arg: 1, scope: !3684, file: !1180, line: 917, type: !3687)
!3690 = !DILocalVariable(name: "origin", arg: 2, scope: !3684, file: !1180, line: 917, type: !326)
!3691 = !DILocation(line: 917, column: 33, scope: !3684)
!3692 = !DILocation(line: 917, column: 39, scope: !3684)
!3693 = !DILocation(line: 922, column: 18, scope: !3684)
!3694 = !DILocation(line: 923, column: 6, scope: !3684)
!3695 = distinct !DISubprogram(name: "sub_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h7a367b3b04a95fb4E", scope: !1316, file: !1180, line: 917, type: !3696, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!9, !1345, !414}
!3698 = !{!3699, !3700}
!3699 = !DILocalVariable(name: "self", arg: 1, scope: !3695, file: !1180, line: 917, type: !1345)
!3700 = !DILocalVariable(name: "origin", arg: 2, scope: !3695, file: !1180, line: 917, type: !414)
!3701 = !DILocation(line: 917, column: 33, scope: !3695)
!3702 = !DILocation(line: 917, column: 39, scope: !3695)
!3703 = !DILocation(line: 922, column: 18, scope: !3695)
!3704 = !DILocation(line: 923, column: 6, scope: !3695)
!3705 = distinct !DISubprogram(name: "sub_ptr<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7sub_ptr17h8a482fb13ea87352E", scope: !1316, file: !1180, line: 917, type: !3706, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, retainedNodes: !3709)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!9, !3708, !519}
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bool", baseType: !520, size: 64, align: 64, dwarfAddressSpace: 0)
!3709 = !{!3710, !3711}
!3710 = !DILocalVariable(name: "self", arg: 1, scope: !3705, file: !1180, line: 917, type: !3708)
!3711 = !DILocalVariable(name: "origin", arg: 2, scope: !3705, file: !1180, line: 917, type: !519)
!3712 = !DILocation(line: 917, column: 33, scope: !3705)
!3713 = !DILocation(line: 917, column: 39, scope: !3705)
!3714 = !DILocation(line: 922, column: 18, scope: !3705)
!3715 = !DILocation(line: 923, column: 6, scope: !3705)
!3716 = distinct !DISubprogram(name: "from_raw_parts<[[u8; 2]], [u8; 2]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h05bc0f2b21cd6fd0E", scope: !3718, file: !3717, line: 109, type: !3097, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3722, retainedNodes: !3719)
!3717 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "70241dbecb47b7090893af786056740d")
!3718 = !DINamespace(name: "metadata", scope: !96)
!3719 = !{!3720, !3721}
!3720 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3716, file: !3717, line: 110, type: !414)
!3721 = !DILocalVariable(name: "metadata", arg: 2, scope: !3716, file: !3717, line: 111, type: !9)
!3722 = !{!419, !3723}
!3723 = !DITemplateTypeParameter(name: "impl Thin", type: !415)
!3724 = !DILocation(line: 110, column: 5, scope: !3716)
!3725 = !DILocation(line: 111, column: 5, scope: !3716)
!3726 = !DILocation(line: 114, column: 2, scope: !3716)
!3727 = distinct !DISubprogram(name: "from_raw_parts<[u16], u16>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17had41452b219de104E", scope: !3718, file: !3717, line: 109, type: !3112, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3731, retainedNodes: !3728)
!3728 = !{!3729, !3730}
!3729 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3727, file: !3717, line: 110, type: !326)
!3730 = !DILocalVariable(name: "metadata", arg: 2, scope: !3727, file: !3717, line: 111, type: !9)
!3731 = !{!329, !3732}
!3732 = !DITemplateTypeParameter(name: "impl Thin", type: !327)
!3733 = !DILocation(line: 110, column: 5, scope: !3727)
!3734 = !DILocation(line: 111, column: 5, scope: !3727)
!3735 = !DILocation(line: 114, column: 2, scope: !3727)
!3736 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>], core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hfd111c9dff9c7b33E", scope: !3718, file: !3717, line: 122, type: !3134, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3740, retainedNodes: !3737)
!3737 = !{!3738, !3739}
!3738 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3736, file: !3717, line: 123, type: !1201)
!3739 = !DILocalVariable(name: "metadata", arg: 2, scope: !3736, file: !3717, line: 124, type: !9)
!3740 = !{!1172, !3741}
!3741 = !DITemplateTypeParameter(name: "impl Thin", type: !1148)
!3742 = !DILocation(line: 123, column: 5, scope: !3736)
!3743 = !DILocation(line: 124, column: 5, scope: !3736)
!3744 = !DILocation(line: 127, column: 2, scope: !3736)
!3745 = distinct !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10390270927a683aE", scope: !3419, file: !1332, line: 193, type: !3746, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, declaration: !3748, retainedNodes: !3749)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!3419, !1144}
!3748 = !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10390270927a683aE", scope: !3419, file: !1332, line: 193, type: !3746, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1171)
!3749 = !{!3750}
!3750 = !DILocalVariable(name: "ptr", arg: 1, scope: !3745, file: !1332, line: 193, type: !1144)
!3751 = !DILocation(line: 193, column: 39, scope: !3745)
!3752 = !DILocation(line: 74, column: 35, scope: !3753)
!3753 = !DILexicalBlockFile(scope: !3745, file: !1177, discriminator: 0)
!3754 = !DILocation(line: 203, column: 6, scope: !3745)
!3755 = !DILocation(line: 75, column: 17, scope: !3753)
!3756 = distinct !DISubprogram(name: "new_unchecked<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h24ab239f65b2e2fdE", scope: !3561, file: !1332, line: 193, type: !3757, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3568, declaration: !3760, retainedNodes: !3761)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!3561, !3759}
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [u8; 0]", baseType: !3565, size: 64, align: 64, dwarfAddressSpace: 0)
!3760 = !DISubprogram(name: "new_unchecked<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h24ab239f65b2e2fdE", scope: !3561, file: !1332, line: 193, type: !3757, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3568)
!3761 = !{!3762}
!3762 = !DILocalVariable(name: "ptr", arg: 1, scope: !3756, file: !1332, line: 193, type: !3759)
!3763 = !DILocation(line: 193, column: 39, scope: !3756)
!3764 = !DILocation(line: 74, column: 35, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !3756, file: !1177, discriminator: 0)
!3766 = !DILocation(line: 203, column: 6, scope: !3756)
!3767 = !DILocation(line: 75, column: 17, scope: !3765)
!3768 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8604ea24a1f3cfe7E", scope: !1665, file: !1332, line: 193, type: !3769, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3771, retainedNodes: !3772)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!1665, !3471}
!3771 = !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8604ea24a1f3cfe7E", scope: !1665, file: !1332, line: 193, type: !3769, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3772 = !{!3773}
!3773 = !DILocalVariable(name: "ptr", arg: 1, scope: !3768, file: !1332, line: 193, type: !3471)
!3774 = !DILocation(line: 193, column: 39, scope: !3768)
!3775 = !DILocation(line: 74, column: 35, scope: !3776)
!3776 = !DILexicalBlockFile(scope: !3768, file: !1177, discriminator: 0)
!3777 = !DILocation(line: 203, column: 6, scope: !3768)
!3778 = !DILocation(line: 75, column: 17, scope: !3776)
!3779 = distinct !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8e18d9a642bc4dcbE", scope: !3440, file: !1332, line: 193, type: !3780, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3447, declaration: !3782, retainedNodes: !3783)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!3440, !3453}
!3782 = !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8e18d9a642bc4dcbE", scope: !3440, file: !1332, line: 193, type: !3780, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3447)
!3783 = !{!3784}
!3784 = !DILocalVariable(name: "ptr", arg: 1, scope: !3779, file: !1332, line: 193, type: !3453)
!3785 = !DILocation(line: 193, column: 39, scope: !3779)
!3786 = !DILocation(line: 74, column: 35, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !3779, file: !1177, discriminator: 0)
!3788 = !DILocation(line: 203, column: 6, scope: !3779)
!3789 = !DILocation(line: 75, column: 17, scope: !3787)
!3790 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdd2dd5e2574d3004E", scope: !99, file: !1332, line: 193, type: !3791, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3793, retainedNodes: !3794)
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!99, !3364}
!3793 = !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hdd2dd5e2574d3004E", scope: !99, file: !1332, line: 193, type: !3791, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3794 = !{!3795}
!3795 = !DILocalVariable(name: "ptr", arg: 1, scope: !3790, file: !1332, line: 193, type: !3364)
!3796 = !DILocation(line: 193, column: 39, scope: !3790)
!3797 = !DILocation(line: 74, column: 35, scope: !3798)
!3798 = !DILexicalBlockFile(scope: !3790, file: !1177, discriminator: 0)
!3799 = !DILocation(line: 203, column: 6, scope: !3790)
!3800 = !DILocation(line: 75, column: 17, scope: !3798)
!3801 = distinct !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf86ddfcb6acb57ebE", scope: !3485, file: !1332, line: 193, type: !3802, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3804, retainedNodes: !3805)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!3485, !3496}
!3804 = !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf86ddfcb6acb57ebE", scope: !3485, file: !1332, line: 193, type: !3802, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3805 = !{!3806}
!3806 = !DILocalVariable(name: "ptr", arg: 1, scope: !3801, file: !1332, line: 193, type: !3496)
!3807 = !DILocation(line: 193, column: 39, scope: !3801)
!3808 = !DILocation(line: 74, column: 35, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3801, file: !1177, discriminator: 0)
!3810 = !DILocation(line: 203, column: 6, scope: !3801)
!3811 = !DILocation(line: 75, column: 17, scope: !3809)
!3812 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17ha16e958b9f91f015E", scope: !3813, file: !1177, line: 66, type: !3815, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !3817)
!3813 = !DINamespace(name: "new_unchecked", scope: !3814)
!3814 = !DINamespace(name: "{impl#3}", scope: !100)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{null, !2064}
!3817 = !{!3818}
!3818 = !DILocalVariable(name: "ptr", arg: 1, scope: !3812, file: !1177, line: 66, type: !2064)
!3819 = !DILocation(line: 66, column: 43, scope: !3812)
!3820 = !DILocation(line: 199, column: 53, scope: !3821)
!3821 = !DILexicalBlockFile(scope: !3812, file: !1332, discriminator: 0)
!3822 = !DILocation(line: 72, column: 14, scope: !3812)
!3823 = !DILocation(line: 68, column: 21, scope: !3812)
!3824 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hf35a6d062855dc58E", scope: !99, file: !1332, line: 222, type: !3825, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3840, retainedNodes: !3841)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{!3827, !3364}
!3827 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !37, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3828, templateParams: !15, identifier: "454bf90b862d200d5492ad6c35101150")
!3828 = !{!3829}
!3829 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3827, file: !2, size: 64, align: 64, elements: !3830, templateParams: !15, identifier: "74632065978b5d87d4ab1d454e73c011", discriminator: !3839)
!3830 = !{!3831, !3835}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3829, file: !2, baseType: !3832, size: 64, align: 64, extraData: i128 0)
!3832 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3827, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !3833, identifier: "6e4ac485fc9a148fdf71270b9befc671")
!3833 = !{!3834}
!3834 = !DITemplateTypeParameter(name: "T", type: !99)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3829, file: !2, baseType: !3836, size: 64, align: 64)
!3836 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3827, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !3837, templateParams: !3833, identifier: "c1dab954a95adb723f82106f83fb2ff8")
!3837 = !{!3838}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3836, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagPublic)
!3839 = !DIDerivedType(tag: DW_TAG_member, scope: !3827, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!3840 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hf35a6d062855dc58E", scope: !99, file: !1332, line: 222, type: !3825, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3841 = !{!3842}
!3842 = !DILocalVariable(name: "ptr", arg: 1, scope: !3824, file: !1332, line: 222, type: !3364)
!3843 = !DILocation(line: 222, column: 22, scope: !3824)
!3844 = !DILocation(line: 223, column: 13, scope: !3824)
!3845 = !DILocation(line: 225, column: 27, scope: !3824)
!3846 = !DILocation(line: 225, column: 13, scope: !3824)
!3847 = !DILocation(line: 223, column: 9, scope: !3824)
!3848 = !DILocation(line: 227, column: 13, scope: !3824)
!3849 = !DILocation(line: 229, column: 6, scope: !3824)
!3850 = distinct !DISubprogram(name: "cast<[bool], bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5f80deec9184cfdeE", scope: !3851, file: !1332, line: 440, type: !3859, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3862, declaration: !3861, retainedNodes: !3864)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[bool]>", scope: !100, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3852, templateParams: !521, identifier: "61aac5701e53855790d000e93f4b8b3d")
!3852 = !{!3853}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3851, file: !2, baseType: !3854, size: 128, align: 64, flags: DIFlagPrivate)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bool]", file: !2, size: 128, align: 64, elements: !3855, templateParams: !15, identifier: "112b6c5c019cc9a0fb9b617b6325895")
!3855 = !{!3856, !3858}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3854, file: !2, baseType: !3857, size: 64, align: 64)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64, align: 64, dwarfAddressSpace: 0)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3854, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!516, !3851}
!3861 = !DISubprogram(name: "cast<[bool], bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5f80deec9184cfdeE", scope: !3851, file: !1332, line: 440, type: !3859, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3862)
!3862 = !{!522, !3863}
!3863 = !DITemplateTypeParameter(name: "U", type: !520)
!3864 = !{!3865}
!3865 = !DILocalVariable(name: "self", arg: 1, scope: !3850, file: !1332, line: 440, type: !3851)
!3866 = !DILocation(line: 440, column: 26, scope: !3850)
!3867 = !DILocalVariable(name: "self", arg: 1, scope: !3868, file: !1332, line: 339, type: !3851)
!3868 = distinct !DISubprogram(name: "as_ptr<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h23df9a853d8907c5E", scope: !3851, file: !1332, line: 339, type: !3869, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, declaration: !3875, retainedNodes: !3876)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!3871, !3851}
!3871 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bool]", file: !2, size: 128, align: 64, elements: !3872, templateParams: !15, identifier: "edacd3b4198ccbfd12db79ea199d1979")
!3872 = !{!3873, !3874}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3871, file: !2, baseType: !3857, size: 64, align: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3871, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3875 = !DISubprogram(name: "as_ptr<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h23df9a853d8907c5E", scope: !3851, file: !1332, line: 339, type: !3869, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !521)
!3876 = !{!3867}
!3877 = !DILocation(line: 339, column: 25, scope: !3868, inlinedAt: !3878)
!3878 = distinct !DILocation(line: 442, column: 37, scope: !3850)
!3879 = !DILocation(line: 346, column: 6, scope: !3868, inlinedAt: !3878)
!3880 = !DILocation(line: 442, column: 37, scope: !3850)
!3881 = !DILocation(line: 443, column: 6, scope: !3850)
!3882 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7778508a78035cbaE", scope: !99, file: !1332, line: 440, type: !3883, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2243, declaration: !3885, retainedNodes: !3886)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!99, !99}
!3885 = !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7778508a78035cbaE", scope: !99, file: !1332, line: 440, type: !3883, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2243)
!3886 = !{!3887}
!3887 = !DILocalVariable(name: "self", arg: 1, scope: !3882, file: !1332, line: 440, type: !99)
!3888 = !DILocation(line: 440, column: 26, scope: !3882)
!3889 = !DILocalVariable(name: "self", arg: 1, scope: !3890, file: !1332, line: 339, type: !99)
!3890 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h89e8f2230da44e85E", scope: !99, file: !1332, line: 339, type: !3891, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !3893, retainedNodes: !3894)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!3364, !99}
!3893 = !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h89e8f2230da44e85E", scope: !99, file: !1332, line: 339, type: !3891, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!3894 = !{!3889}
!3895 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !3896)
!3896 = distinct !DILocation(line: 442, column: 37, scope: !3882)
!3897 = !DILocation(line: 443, column: 6, scope: !3882)
!3898 = distinct !DISubprogram(name: "cast<[[u8; 2]], [u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haa995a3a05901304E", scope: !3899, file: !1332, line: 440, type: !3902, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3905, declaration: !3904, retainedNodes: !3907)
!3899 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[[u8; 2]]>", scope: !100, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !3900, templateParams: !418, identifier: "afc914c9ab432017f9b6b37356150102")
!3900 = !{!3901}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3899, file: !2, baseType: !3099, size: 128, align: 64, flags: DIFlagPrivate)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!411, !3899}
!3904 = !DISubprogram(name: "cast<[[u8; 2]], [u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haa995a3a05901304E", scope: !3899, file: !1332, line: 440, type: !3902, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3905)
!3905 = !{!419, !3906}
!3906 = !DITemplateTypeParameter(name: "U", type: !415)
!3907 = !{!3908}
!3908 = !DILocalVariable(name: "self", arg: 1, scope: !3898, file: !1332, line: 440, type: !3899)
!3909 = !DILocation(line: 440, column: 26, scope: !3898)
!3910 = !DILocalVariable(name: "self", arg: 1, scope: !3911, file: !1332, line: 339, type: !3899)
!3911 = distinct !DISubprogram(name: "as_ptr<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5809bb4af412b90aE", scope: !3899, file: !1332, line: 339, type: !3912, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !3918, retainedNodes: !3919)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!3914, !3899}
!3914 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [[u8; 2]]", file: !2, size: 128, align: 64, elements: !3915, templateParams: !15, identifier: "6ebb3c361bd4528de1ffb74f672cc644")
!3915 = !{!3916, !3917}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3914, file: !2, baseType: !3102, size: 64, align: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3914, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3918 = !DISubprogram(name: "as_ptr<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5809bb4af412b90aE", scope: !3899, file: !1332, line: 339, type: !3912, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!3919 = !{!3910}
!3920 = !DILocation(line: 339, column: 25, scope: !3911, inlinedAt: !3921)
!3921 = distinct !DILocation(line: 442, column: 37, scope: !3898)
!3922 = !DILocation(line: 346, column: 6, scope: !3911, inlinedAt: !3921)
!3923 = !DILocation(line: 442, column: 37, scope: !3898)
!3924 = !DILocation(line: 443, column: 6, scope: !3898)
!3925 = distinct !DISubprogram(name: "sub_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h468fa7823ca4adccE", scope: !516, file: !1332, line: 861, type: !3926, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, declaration: !3928, retainedNodes: !3929)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!9, !516, !516}
!3928 = !DISubprogram(name: "sub_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h468fa7823ca4adccE", scope: !516, file: !1332, line: 861, type: !3926, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !521)
!3929 = !{!3930, !3931}
!3930 = !DILocalVariable(name: "self", arg: 1, scope: !3925, file: !1332, line: 861, type: !516)
!3931 = !DILocalVariable(name: "subtracted", arg: 2, scope: !3925, file: !1332, line: 861, type: !516)
!3932 = !DILocation(line: 861, column: 33, scope: !3925)
!3933 = !DILocation(line: 861, column: 39, scope: !3925)
!3934 = !DILocalVariable(name: "self", arg: 1, scope: !3935, file: !1332, line: 339, type: !516)
!3935 = distinct !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hdfd321d44c29d6bbE", scope: !516, file: !1332, line: 339, type: !3936, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, declaration: !3938, retainedNodes: !3939)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!3708, !516}
!3938 = !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hdfd321d44c29d6bbE", scope: !516, file: !1332, line: 339, type: !3936, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !521)
!3939 = !{!3934}
!3940 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !3941)
!3941 = distinct !DILocation(line: 866, column: 18, scope: !3925)
!3942 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !3943)
!3943 = distinct !DILocation(line: 866, column: 40, scope: !3925)
!3944 = !DILocation(line: 866, column: 18, scope: !3925)
!3945 = !DILocation(line: 867, column: 6, scope: !3925)
!3946 = distinct !DISubprogram(name: "sub_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h4dfe548463abd778E", scope: !323, file: !1332, line: 861, type: !3947, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, declaration: !3949, retainedNodes: !3950)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!9, !323, !323}
!3949 = !DISubprogram(name: "sub_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17h4dfe548463abd778E", scope: !323, file: !1332, line: 861, type: !3947, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !328)
!3950 = !{!3951, !3952}
!3951 = !DILocalVariable(name: "self", arg: 1, scope: !3946, file: !1332, line: 861, type: !323)
!3952 = !DILocalVariable(name: "subtracted", arg: 2, scope: !3946, file: !1332, line: 861, type: !323)
!3953 = !DILocation(line: 861, column: 33, scope: !3946)
!3954 = !DILocation(line: 861, column: 39, scope: !3946)
!3955 = !DILocalVariable(name: "self", arg: 1, scope: !3956, file: !1332, line: 339, type: !323)
!3956 = distinct !DISubprogram(name: "as_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1005f72a2e0f7eb1E", scope: !323, file: !1332, line: 339, type: !3957, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, declaration: !3959, retainedNodes: !3960)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!3687, !323}
!3959 = !DISubprogram(name: "as_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1005f72a2e0f7eb1E", scope: !323, file: !1332, line: 339, type: !3957, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !328)
!3960 = !{!3955}
!3961 = !DILocation(line: 339, column: 25, scope: !3956, inlinedAt: !3962)
!3962 = distinct !DILocation(line: 866, column: 18, scope: !3946)
!3963 = !DILocation(line: 339, column: 25, scope: !3956, inlinedAt: !3964)
!3964 = distinct !DILocation(line: 866, column: 40, scope: !3946)
!3965 = !DILocation(line: 866, column: 18, scope: !3946)
!3966 = !DILocation(line: 867, column: 6, scope: !3946)
!3967 = distinct !DISubprogram(name: "sub_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hcd8796171527ec9bE", scope: !411, file: !1332, line: 861, type: !3968, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !3970, retainedNodes: !3971)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!9, !411, !411}
!3970 = !DISubprogram(name: "sub_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$7sub_ptr17hcd8796171527ec9bE", scope: !411, file: !1332, line: 861, type: !3968, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!3971 = !{!3972, !3973}
!3972 = !DILocalVariable(name: "self", arg: 1, scope: !3967, file: !1332, line: 861, type: !411)
!3973 = !DILocalVariable(name: "subtracted", arg: 2, scope: !3967, file: !1332, line: 861, type: !411)
!3974 = !DILocation(line: 861, column: 33, scope: !3967)
!3975 = !DILocation(line: 861, column: 39, scope: !3967)
!3976 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !3977)
!3977 = distinct !DILocation(line: 866, column: 18, scope: !3967)
!3978 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !3979)
!3979 = distinct !DILocation(line: 866, column: 40, scope: !3967)
!3980 = !DILocation(line: 866, column: 18, scope: !3967)
!3981 = !DILocation(line: 867, column: 6, scope: !3967)
!3982 = distinct !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h7f837a49b7871e24E", scope: !3561, file: !1332, line: 111, type: !3983, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3568, declaration: !3985, retainedNodes: !3986)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!3561}
!3985 = !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h7f837a49b7871e24E", scope: !3561, file: !1332, line: 111, type: !3983, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3568)
!3986 = !{!3987}
!3987 = !DILocalVariable(name: "ptr", scope: !3988, file: !1332, line: 114, type: !3759, align: 8)
!3988 = distinct !DILexicalBlock(scope: !3982, file: !1332, line: 114, column: 13)
!3989 = !DILocation(line: 114, column: 23, scope: !3982)
!3990 = !DILocalVariable(name: "addr", arg: 1, scope: !3991, file: !3046, line: 640, type: !9)
!3991 = distinct !DISubprogram(name: "without_provenance_mut<[u8; 0]>", linkageName: "_ZN4core3ptr22without_provenance_mut17he349b74959458a61E", scope: !96, file: !3046, line: 640, type: !3992, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3568, retainedNodes: !3994)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!3759, !9}
!3994 = !{!3990}
!3995 = !DILocation(line: 640, column: 40, scope: !3991, inlinedAt: !3996)
!3996 = distinct !DILocation(line: 663, column: 5, scope: !3997, inlinedAt: !4000)
!3997 = distinct !DISubprogram(name: "dangling_mut<[u8; 0]>", linkageName: "_ZN4core3ptr12dangling_mut17h116e5d89cdbfdcc3E", scope: !96, file: !3046, line: 662, type: !3998, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3568)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!3759}
!4000 = distinct !DILocation(line: 114, column: 23, scope: !3982)
!4001 = !DILocation(line: 114, column: 17, scope: !3988)
!4002 = !DILocation(line: 115, column: 13, scope: !3988)
!4003 = !DILocation(line: 117, column: 6, scope: !3982)
!4004 = distinct !DISubprogram(name: "from_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h244efbe8644ce377E", scope: !3085, file: !1332, line: 242, type: !4005, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, declaration: !4008, retainedNodes: !4009)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!3085, !4007}
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!4008 = !DISubprogram(name: "from_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h244efbe8644ce377E", scope: !3085, file: !1332, line: 242, type: !4005, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3089)
!4009 = !{!4010}
!4010 = !DILocalVariable(name: "r", arg: 1, scope: !4004, file: !1332, line: 242, type: !4007)
!4011 = !DILocation(line: 242, column: 27, scope: !4004)
!4012 = !DILocation(line: 245, column: 6, scope: !4004)
!4013 = distinct !DISubprogram(name: "from_ref<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h77f7fcff4f678f3eE", scope: !3899, file: !1332, line: 234, type: !4014, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !4020, retainedNodes: !4021)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!3899, !4016}
!4016 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[[u8; 2]]", file: !2, size: 128, align: 64, elements: !4017, templateParams: !15, identifier: "beceb233fb91699effa3217003f94d12")
!4017 = !{!4018, !4019}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4016, file: !2, baseType: !3102, size: 64, align: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4016, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4020 = !DISubprogram(name: "from_ref<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h77f7fcff4f678f3eE", scope: !3899, file: !1332, line: 234, type: !4014, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!4021 = !{!4022}
!4022 = !DILocalVariable(name: "r", arg: 1, scope: !4013, file: !1332, line: 234, type: !4016)
!4023 = !DILocation(line: 234, column: 27, scope: !4013)
!4024 = !DILocation(line: 237, column: 6, scope: !4013)
!4025 = distinct !DISubprogram(name: "from_ref<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17ha943e422435483a1E", scope: !3851, file: !1332, line: 234, type: !4026, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, declaration: !4032, retainedNodes: !4033)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!3851, !4028}
!4028 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bool]", file: !2, size: 128, align: 64, elements: !4029, templateParams: !15, identifier: "ec7aa1ae4cf8db3cda3ded1628757579")
!4029 = !{!4030, !4031}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4028, file: !2, baseType: !3857, size: 64, align: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4028, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4032 = !DISubprogram(name: "from_ref<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17ha943e422435483a1E", scope: !3851, file: !1332, line: 234, type: !4026, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !521)
!4033 = !{!4034}
!4034 = !DILocalVariable(name: "r", arg: 1, scope: !4025, file: !1332, line: 234, type: !4028)
!4035 = !DILocation(line: 234, column: 27, scope: !4025)
!4036 = !DILocation(line: 237, column: 6, scope: !4025)
!4037 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8ea954c26f14c1dfE", scope: !1665, file: !1332, line: 1385, type: !4038, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !4040, retainedNodes: !4041)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!3364, !1665}
!4040 = !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8ea954c26f14c1dfE", scope: !1665, file: !1332, line: 1385, type: !4038, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!4041 = !{!4042}
!4042 = !DILocalVariable(name: "self", arg: 1, scope: !4037, file: !1332, line: 1385, type: !1665)
!4043 = !DILocation(line: 1385, column: 29, scope: !4037)
!4044 = !DILocation(line: 1386, column: 9, scope: !4037)
!4045 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !4046)
!4046 = distinct !DILocation(line: 1386, column: 9, scope: !4037)
!4047 = !DILocation(line: 1387, column: 6, scope: !4037)
!4048 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2099230a19b7993fE", scope: !1665, file: !1332, line: 1366, type: !4049, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !4051, retainedNodes: !4052)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!99, !1665}
!4051 = !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2099230a19b7993fE", scope: !1665, file: !1332, line: 1366, type: !4049, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!4052 = !{!4053}
!4053 = !DILocalVariable(name: "self", arg: 1, scope: !4048, file: !1332, line: 1366, type: !1665)
!4054 = !DILocation(line: 1366, column: 34, scope: !4048)
!4055 = !DILocation(line: 1367, column: 9, scope: !4048)
!4056 = !DILocation(line: 1368, column: 6, scope: !4048)
!4057 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E", scope: !1665, file: !1332, line: 1306, type: !4058, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !4060, retainedNodes: !4061)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!1665, !99, !9}
!4060 = !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17ha26c90167a515517E", scope: !1665, file: !1332, line: 1306, type: !4058, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!4061 = !{!4062, !4063}
!4062 = !DILocalVariable(name: "data", arg: 1, scope: !4057, file: !1332, line: 1306, type: !99)
!4063 = !DILocalVariable(name: "len", arg: 2, scope: !4057, file: !1332, line: 1306, type: !9)
!4064 = !DILocation(line: 1306, column: 39, scope: !4057)
!4065 = !DILocation(line: 1306, column: 57, scope: !4057)
!4066 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !4067)
!4067 = distinct !DILocation(line: 1308, column: 70, scope: !4057)
!4068 = !DILocation(line: 1308, column: 38, scope: !4057)
!4069 = !DILocation(line: 1308, column: 18, scope: !4057)
!4070 = !DILocation(line: 1309, column: 6, scope: !4057)
!4071 = distinct !DISubprogram(name: "as_usize", linkageName: "_ZN4core3ptr9alignment9Alignment8as_usize17h577df9ed10743be2E", scope: !1750, file: !4072, line: 90, type: !4073, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !4075, retainedNodes: !4076)
!4072 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ptr/alignment.rs", directory: "", checksumkind: CSK_MD5, checksum: "fb8a5e724336e1b6765797ec96c9adff")
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!9, !1750}
!4075 = !DISubprogram(name: "as_usize", linkageName: "_ZN4core3ptr9alignment9Alignment8as_usize17h577df9ed10743be2E", scope: !1750, file: !4072, line: 90, type: !4073, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!4076 = !{!4077}
!4077 = !DILocalVariable(name: "self", arg: 1, scope: !4071, file: !4072, line: 90, type: !1750)
!4078 = !DILocation(line: 90, column: 27, scope: !4071)
!4079 = !DILocation(line: 91, column: 9, scope: !4071)
!4080 = !DILocation(line: 92, column: 6, scope: !4071)
!4081 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h7c7f21c0a2a81ed1E", scope: !2238, file: !2237, line: 1331, type: !4082, scopeLine: 1331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !4084)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{null, !103, !3364, !9}
!4084 = !{!4085, !4086, !4087}
!4085 = !DILocalVariable(name: "self", arg: 1, scope: !4081, file: !2237, line: 1331, type: !103)
!4086 = !DILocalVariable(name: "dest", arg: 2, scope: !4081, file: !2237, line: 1331, type: !3364)
!4087 = !DILocalVariable(name: "count", arg: 3, scope: !4081, file: !2237, line: 1331, type: !9)
!4088 = !DILocation(line: 1331, column: 48, scope: !4081)
!4089 = !DILocation(line: 1331, column: 54, scope: !4081)
!4090 = !DILocation(line: 1331, column: 68, scope: !4081)
!4091 = !DILocalVariable(name: "src", arg: 1, scope: !4092, file: !2057, line: 4316, type: !103)
!4092 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17ha4ad480d41891a7fE", scope: !2047, file: !2057, line: 4316, type: !4082, scopeLine: 4316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !4093)
!4093 = !{!4091, !4094, !4095}
!4094 = !DILocalVariable(name: "dst", arg: 2, scope: !4092, file: !2057, line: 4316, type: !3364)
!4095 = !DILocalVariable(name: "count", arg: 3, scope: !4092, file: !2057, line: 4316, type: !9)
!4096 = !DILocation(line: 4316, column: 44, scope: !4092, inlinedAt: !4097)
!4097 = distinct !DILocation(line: 1336, column: 18, scope: !4081)
!4098 = !DILocation(line: 4316, column: 59, scope: !4092, inlinedAt: !4097)
!4099 = !DILocation(line: 4316, column: 72, scope: !4092, inlinedAt: !4097)
!4100 = !DILocation(line: 74, column: 35, scope: !4101, inlinedAt: !4097)
!4101 = !DILexicalBlockFile(scope: !4092, file: !1177, discriminator: 0)
!4102 = !DILocation(line: 75, column: 17, scope: !4101, inlinedAt: !4097)
!4103 = !DILocation(line: 4345, column: 14, scope: !4092, inlinedAt: !4097)
!4104 = !DILocation(line: 1337, column: 6, scope: !4081)
!4105 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h24f79034fd5dd2d0E", scope: !4106, file: !1177, line: 66, type: !3579, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4107)
!4106 = !DINamespace(name: "add", scope: !2238)
!4107 = !{!4108, !4109, !4110}
!4108 = !DILocalVariable(name: "this", arg: 1, scope: !4105, file: !1177, line: 66, type: !6)
!4109 = !DILocalVariable(name: "count", arg: 2, scope: !4105, file: !1177, line: 66, type: !9)
!4110 = !DILocalVariable(name: "size", arg: 3, scope: !4105, file: !1177, line: 66, type: !9)
!4111 = !DILocation(line: 66, column: 43, scope: !4105)
!4112 = !DILocation(line: 945, column: 18, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !4105, file: !2237, discriminator: 0)
!4114 = !DILocation(line: 68, column: 21, scope: !4105)
!4115 = !DILocation(line: 72, column: 14, scope: !4105)
!4116 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h2e43117cd2c59ea1E", scope: !4106, file: !2237, line: 922, type: !3591, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4117)
!4117 = !{!4118, !4119, !4120}
!4118 = !DILocalVariable(name: "this", arg: 1, scope: !4116, file: !2237, line: 922, type: !6)
!4119 = !DILocalVariable(name: "count", arg: 2, scope: !4116, file: !2237, line: 922, type: !9)
!4120 = !DILocalVariable(name: "size", arg: 3, scope: !4116, file: !2237, line: 922, type: !9)
!4121 = !DILocation(line: 922, column: 37, scope: !4116)
!4122 = !DILocation(line: 922, column: 54, scope: !4116)
!4123 = !DILocation(line: 922, column: 68, scope: !4116)
!4124 = !DILocation(line: 3840, column: 27, scope: !4125)
!4125 = !DILexicalBlockFile(scope: !4116, file: !2057, discriminator: 0)
!4126 = !DILocation(line: 3840, column: 9, scope: !4125)
!4127 = !DILocation(line: 935, column: 10, scope: !4116)
!4128 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17h281ce41416f38da5E", scope: !4129, file: !2057, line: 3828, type: !3591, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4130)
!4129 = !DINamespace(name: "runtime_add_nowrap", scope: !4106)
!4130 = !{!4131, !4132, !4133, !4134, !4136}
!4131 = !DILocalVariable(name: "this", arg: 1, scope: !4128, file: !2057, line: 3828, type: !6)
!4132 = !DILocalVariable(name: "count", arg: 2, scope: !4128, file: !2057, line: 3828, type: !9)
!4133 = !DILocalVariable(name: "size", arg: 3, scope: !4128, file: !2057, line: 3828, type: !9)
!4134 = !DILocalVariable(name: "byte_offset", scope: !4135, file: !2237, line: 928, type: !9, align: 8)
!4135 = distinct !DILexicalBlock(scope: !4128, file: !2237, line: 928, column: 21)
!4136 = !DILocalVariable(name: "overflow", scope: !4137, file: !2237, line: 931, type: !520, align: 1)
!4137 = distinct !DILexicalBlock(scope: !4135, file: !2237, line: 931, column: 21)
!4138 = !DILocation(line: 3828, column: 22, scope: !4128)
!4139 = !DILocation(line: 928, column: 45, scope: !4140)
!4140 = !DILexicalBlockFile(scope: !4128, file: !2237, discriminator: 0)
!4141 = !DILocation(line: 928, column: 25, scope: !4140)
!4142 = !DILocation(line: 928, column: 30, scope: !4140)
!4143 = !DILocation(line: 928, column: 30, scope: !4135)
!4144 = !DILocation(line: 162, column: 17, scope: !3621, inlinedAt: !4145)
!4145 = distinct !DILocation(line: 931, column: 41, scope: !4135)
!4146 = !DILocation(line: 62, column: 26, scope: !3628, inlinedAt: !4147)
!4147 = distinct !DILocation(line: 168, column: 33, scope: !3621, inlinedAt: !4145)
!4148 = !DILocation(line: 168, column: 18, scope: !3621, inlinedAt: !4145)
!4149 = !DILocation(line: 2306, column: 38, scope: !2815, inlinedAt: !4150)
!4150 = distinct !DILocation(line: 931, column: 41, scope: !4135)
!4151 = !DILocation(line: 2306, column: 44, scope: !2815, inlinedAt: !4150)
!4152 = !DILocation(line: 2307, column: 26, scope: !2815, inlinedAt: !4150)
!4153 = !DILocation(line: 2307, column: 18, scope: !2815, inlinedAt: !4150)
!4154 = !DILocation(line: 2307, column: 18, scope: !2819, inlinedAt: !4150)
!4155 = !DILocation(line: 2307, column: 21, scope: !2815, inlinedAt: !4150)
!4156 = !DILocation(line: 2307, column: 21, scope: !2819, inlinedAt: !4150)
!4157 = !DILocation(line: 931, column: 41, scope: !4135)
!4158 = !DILocation(line: 931, column: 29, scope: !4135)
!4159 = !DILocation(line: 931, column: 29, scope: !4137)
!4160 = !DILocation(line: 932, column: 21, scope: !4137)
!4161 = !DILocation(line: 929, column: 32, scope: !4140)
!4162 = !DILocation(line: 929, column: 25, scope: !4140)
!4163 = !DILocation(line: 932, column: 61, scope: !4137)
!4164 = !DILocation(line: 3830, column: 10, scope: !4128)
!4165 = !DILocation(line: 3828, column: 9, scope: !4128)
!4166 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf87342fe1dcf4495E", scope: !2238, file: !2237, line: 36, type: !4167, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !4169)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!520, !103}
!4169 = !{!4170, !4171}
!4170 = !DILocalVariable(name: "self", arg: 1, scope: !4166, file: !2237, line: 36, type: !103)
!4171 = !DILocalVariable(name: "ptr", scope: !4172, file: !2237, line: 39, type: !103, align: 8)
!4172 = distinct !DILexicalBlock(scope: !4166, file: !2237, line: 39, column: 9)
!4173 = !DILocation(line: 36, column: 26, scope: !4166)
!4174 = !DILocation(line: 39, column: 19, scope: !4166)
!4175 = !DILocation(line: 39, column: 13, scope: !4172)
!4176 = !DILocation(line: 3840, column: 9, scope: !4177)
!4177 = !DILexicalBlockFile(scope: !4172, file: !2057, discriminator: 0)
!4178 = !DILocation(line: 55, column: 6, scope: !4166)
!4179 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null7runtime17hbe7b8461a255eb05E", scope: !4180, file: !2057, line: 3828, type: !4167, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4181)
!4180 = !DINamespace(name: "is_null", scope: !2238)
!4181 = !{!4182}
!4182 = !DILocalVariable(name: "ptr", arg: 1, scope: !4179, file: !2057, line: 3828, type: !103)
!4183 = !DILocation(line: 3828, column: 22, scope: !4179)
!4184 = !DILocalVariable(name: "self", arg: 1, scope: !4185, file: !2237, line: 162, type: !103)
!4185 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hc7bfd6d795a8627dE", scope: !2238, file: !2237, line: 162, type: !2273, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !4186)
!4186 = !{!4184}
!4187 = !DILocation(line: 162, column: 17, scope: !4185, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 52, column: 17, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !4179, file: !2237, discriminator: 0)
!4190 = !DILocalVariable(name: "self", arg: 1, scope: !4191, file: !2237, line: 62, type: !103)
!4191 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb09c5506fe83f5f1E", scope: !2238, file: !2237, line: 62, type: !4192, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4195, retainedNodes: !4194)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!6, !103}
!4194 = !{!4190}
!4195 = !{!44, !3633}
!4196 = !DILocation(line: 62, column: 26, scope: !4191, inlinedAt: !4197)
!4197 = distinct !DILocation(line: 168, column: 33, scope: !4185, inlinedAt: !4188)
!4198 = !DILocation(line: 168, column: 18, scope: !4185, inlinedAt: !4188)
!4199 = !DILocation(line: 52, column: 17, scope: !4189)
!4200 = !DILocation(line: 3830, column: 10, scope: !4179)
!4201 = distinct !DISubprogram(name: "sub_ptr<bool>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17h9539228fdfdd35ccE", scope: !2238, file: !2237, line: 756, type: !4202, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!9, !519, !519}
!4204 = !{!4205, !4206, !4207}
!4205 = !DILocalVariable(name: "self", arg: 1, scope: !4201, file: !2237, line: 756, type: !519)
!4206 = !DILocalVariable(name: "origin", arg: 2, scope: !4201, file: !2237, line: 756, type: !519)
!4207 = !DILocalVariable(name: "pointee_size", scope: !4208, file: !2237, line: 781, type: !9, align: 8)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !2237, line: 781, column: 9)
!4209 = !DILocation(line: 756, column: 33, scope: !4201)
!4210 = !DILocation(line: 756, column: 39, scope: !4201)
!4211 = !DILocation(line: 74, column: 35, scope: !4212)
!4212 = !DILexicalBlockFile(scope: !4201, file: !1177, discriminator: 0)
!4213 = !DILocation(line: 781, column: 28, scope: !4201)
!4214 = !DILocation(line: 781, column: 13, scope: !4208)
!4215 = !DILocation(line: 782, column: 17, scope: !4208)
!4216 = !DILocation(line: 75, column: 17, scope: !4212)
!4217 = !DILocation(line: 782, column: 9, scope: !4208)
!4218 = !DILocation(line: 782, column: 37, scope: !4208)
!4219 = !DILocation(line: 784, column: 18, scope: !4208)
!4220 = !DILocation(line: 785, column: 6, scope: !4201)
!4221 = distinct !DISubprogram(name: "sub_ptr<u16>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17hbee069a125a583b1E", scope: !2238, file: !2237, line: 756, type: !4222, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!9, !326, !326}
!4224 = !{!4225, !4226, !4227}
!4225 = !DILocalVariable(name: "self", arg: 1, scope: !4221, file: !2237, line: 756, type: !326)
!4226 = !DILocalVariable(name: "origin", arg: 2, scope: !4221, file: !2237, line: 756, type: !326)
!4227 = !DILocalVariable(name: "pointee_size", scope: !4228, file: !2237, line: 781, type: !9, align: 8)
!4228 = distinct !DILexicalBlock(scope: !4221, file: !2237, line: 781, column: 9)
!4229 = !DILocation(line: 756, column: 33, scope: !4221)
!4230 = !DILocation(line: 756, column: 39, scope: !4221)
!4231 = !DILocation(line: 74, column: 35, scope: !4232)
!4232 = !DILexicalBlockFile(scope: !4221, file: !1177, discriminator: 0)
!4233 = !DILocation(line: 781, column: 28, scope: !4221)
!4234 = !DILocation(line: 781, column: 13, scope: !4228)
!4235 = !DILocation(line: 782, column: 17, scope: !4228)
!4236 = !DILocation(line: 75, column: 17, scope: !4232)
!4237 = !DILocation(line: 782, column: 9, scope: !4228)
!4238 = !DILocation(line: 782, column: 37, scope: !4228)
!4239 = !DILocation(line: 784, column: 18, scope: !4228)
!4240 = !DILocation(line: 785, column: 6, scope: !4221)
!4241 = distinct !DISubprogram(name: "sub_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr17he3e986582cfad05cE", scope: !2238, file: !2237, line: 756, type: !4242, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !4244)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!9, !414, !414}
!4244 = !{!4245, !4246, !4247}
!4245 = !DILocalVariable(name: "self", arg: 1, scope: !4241, file: !2237, line: 756, type: !414)
!4246 = !DILocalVariable(name: "origin", arg: 2, scope: !4241, file: !2237, line: 756, type: !414)
!4247 = !DILocalVariable(name: "pointee_size", scope: !4248, file: !2237, line: 781, type: !9, align: 8)
!4248 = distinct !DILexicalBlock(scope: !4241, file: !2237, line: 781, column: 9)
!4249 = !DILocation(line: 756, column: 33, scope: !4241)
!4250 = !DILocation(line: 756, column: 39, scope: !4241)
!4251 = !DILocation(line: 74, column: 35, scope: !4252)
!4252 = !DILexicalBlockFile(scope: !4241, file: !1177, discriminator: 0)
!4253 = !DILocation(line: 781, column: 28, scope: !4241)
!4254 = !DILocation(line: 781, column: 13, scope: !4248)
!4255 = !DILocation(line: 782, column: 17, scope: !4248)
!4256 = !DILocation(line: 75, column: 17, scope: !4252)
!4257 = !DILocation(line: 782, column: 9, scope: !4248)
!4258 = !DILocation(line: 782, column: 37, scope: !4248)
!4259 = !DILocation(line: 784, column: 18, scope: !4248)
!4260 = !DILocation(line: 785, column: 6, scope: !4241)
!4261 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7sub_ptr18precondition_check17hcc37f6d62006b3bdE", scope: !4262, file: !1177, line: 66, type: !4263, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4265)
!4262 = !DINamespace(name: "sub_ptr", scope: !2238)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{null, !6, !6}
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "this", arg: 1, scope: !4261, file: !1177, line: 66, type: !6)
!4267 = !DILocalVariable(name: "origin", arg: 2, scope: !4261, file: !1177, line: 66, type: !6)
!4268 = !DILocation(line: 66, column: 43, scope: !4261)
!4269 = !DILocation(line: 778, column: 18, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !4261, file: !2237, discriminator: 0)
!4271 = !DILocation(line: 68, column: 21, scope: !4261)
!4272 = !DILocation(line: 72, column: 14, scope: !4261)
!4273 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17hdbc2e47bbbbdc5feE", scope: !4275, file: !4274, line: 11, type: !4276, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4278)
!4274 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "a4a45de78dea33cfe057fdcff86aba8b")
!4275 = !DINamespace(name: "validations", scope: !158)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!1391, !45, !1391}
!4278 = !{!4279, !4280}
!4279 = !DILocalVariable(name: "byte", arg: 1, scope: !4273, file: !4274, line: 11, type: !45)
!4280 = !DILocalVariable(name: "width", arg: 2, scope: !4273, file: !4274, line: 11, type: !1391)
!4281 = !DILocation(line: 11, column: 26, scope: !4273)
!4282 = !DILocation(line: 11, column: 36, scope: !4273)
!4283 = !DILocation(line: 12, column: 13, scope: !4273)
!4284 = !DILocation(line: 12, column: 5, scope: !4273)
!4285 = !DILocation(line: 13, column: 2, scope: !4273)
!4286 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h0eb7cfc992066ddbE", scope: !4275, file: !4274, line: 24, type: !4287, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!520, !45}
!4289 = !{!4290}
!4290 = !DILocalVariable(name: "byte", arg: 1, scope: !4286, file: !4274, line: 24, type: !45)
!4291 = !DILocation(line: 24, column: 39, scope: !4286)
!4292 = !DILocation(line: 25, column: 5, scope: !4286)
!4293 = !DILocation(line: 26, column: 2, scope: !4286)
!4294 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h3c53666c4e6aadefE", scope: !4275, file: !4274, line: 17, type: !4295, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4297)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!1391, !1391, !45}
!4297 = !{!4298, !4299}
!4298 = !DILocalVariable(name: "ch", arg: 1, scope: !4294, file: !4274, line: 17, type: !1391)
!4299 = !DILocalVariable(name: "byte", arg: 2, scope: !4294, file: !4274, line: 17, type: !45)
!4300 = !DILocation(line: 17, column: 29, scope: !4294)
!4301 = !DILocation(line: 17, column: 38, scope: !4294)
!4302 = !DILocation(line: 18, column: 5, scope: !4294)
!4303 = !DILocation(line: 18, column: 17, scope: !4294)
!4304 = !DILocation(line: 19, column: 2, scope: !4294)
!4305 = distinct !DISubprogram(name: "next_code_point_reverse<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations23next_code_point_reverse17h6940c3b67ca13fe1E", scope: !4275, file: !4274, line: 79, type: !4306, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4342, retainedNodes: !4321)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!4308, !2555}
!4308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !37, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4309, templateParams: !15, identifier: "953f108989bb2c6820f84dfb6279d4ca")
!4309 = !{!4310}
!4310 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4308, file: !2, size: 64, align: 32, elements: !4311, templateParams: !15, identifier: "f65808a5038244a2454e65766e7112c", discriminator: !4320)
!4311 = !{!4312, !4316}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4310, file: !2, baseType: !4313, size: 64, align: 32, extraData: i128 0)
!4313 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4308, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15, templateParams: !4314, identifier: "ff5dec3649b873af331c352b26e6a563")
!4314 = !{!4315}
!4315 = !DITemplateTypeParameter(name: "T", type: !1391)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4310, file: !2, baseType: !4317, size: 64, align: 32, extraData: i128 1)
!4317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4308, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4318, templateParams: !4314, identifier: "aafb8feeb49e1e23703308a1e0a8f785")
!4318 = !{!4319}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4317, file: !2, baseType: !1391, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!4320 = !DIDerivedType(tag: DW_TAG_member, scope: !4308, file: !2, baseType: !1391, size: 32, align: 32, flags: DIFlagArtificial)
!4321 = !{!4322, !4323, !4325, !4327, !4329, !4331, !4332, !4334, !4336, !4338, !4340}
!4322 = !DILocalVariable(name: "bytes", arg: 1, scope: !4305, file: !4274, line: 79, type: !2555)
!4323 = !DILocalVariable(name: "w", scope: !4324, file: !4274, line: 84, type: !45, align: 1)
!4324 = distinct !DILexicalBlock(scope: !4305, file: !4274, line: 84, column: 5)
!4325 = !DILocalVariable(name: "residual", scope: !4326, file: !4274, line: 84, type: !1636, align: 1)
!4326 = distinct !DILexicalBlock(scope: !4305, file: !4274, line: 84, column: 37)
!4327 = !DILocalVariable(name: "val", scope: !4328, file: !4274, line: 84, type: !67, align: 8)
!4328 = distinct !DILexicalBlock(scope: !4305, file: !4274, line: 84, column: 20)
!4329 = !DILocalVariable(name: "next_byte", scope: !4330, file: !4274, line: 85, type: !45, align: 1)
!4330 = distinct !DILexicalBlock(scope: !4305, file: !4274, line: 85, column: 9)
!4331 = !DILocalVariable(name: "next_byte", scope: !4330, file: !4274, line: 85, type: !67, align: 8)
!4332 = !DILocalVariable(name: "back_byte", scope: !4333, file: !4274, line: 86, type: !45, align: 1)
!4333 = distinct !DILexicalBlock(scope: !4305, file: !4274, line: 86, column: 9)
!4334 = !DILocalVariable(name: "ch", scope: !4335, file: !4274, line: 91, type: !1391, align: 4)
!4335 = distinct !DILexicalBlock(scope: !4324, file: !4274, line: 91, column: 5)
!4336 = !DILocalVariable(name: "z", scope: !4337, file: !4274, line: 94, type: !45, align: 1)
!4337 = distinct !DILexicalBlock(scope: !4335, file: !4274, line: 94, column: 5)
!4338 = !DILocalVariable(name: "y", scope: !4339, file: !4274, line: 99, type: !45, align: 1)
!4339 = distinct !DILexicalBlock(scope: !4337, file: !4274, line: 99, column: 9)
!4340 = !DILocalVariable(name: "x", scope: !4341, file: !4274, line: 104, type: !45, align: 1)
!4341 = distinct !DILexicalBlock(scope: !4339, file: !4274, line: 104, column: 13)
!4342 = !{!4343}
!4343 = !DITemplateTypeParameter(name: "I", type: !1400)
!4344 = !DILocation(line: 79, column: 53, scope: !4305)
!4345 = !DILocation(line: 91, column: 9, scope: !4335)
!4346 = !DILocation(line: 84, column: 37, scope: !4326)
!4347 = !DILocation(line: 84, column: 20, scope: !4305)
!4348 = !DILocation(line: 84, column: 20, scope: !4328)
!4349 = !DILocation(line: 85, column: 9, scope: !4330)
!4350 = !DILocation(line: 85, column: 22, scope: !4305)
!4351 = !DILocation(line: 84, column: 20, scope: !4326)
!4352 = !DILocation(line: 86, column: 9, scope: !4305)
!4353 = !DILocation(line: 84, column: 9, scope: !4324)
!4354 = !DILocation(line: 86, column: 9, scope: !4333)
!4355 = !DILocation(line: 94, column: 23, scope: !4335)
!4356 = !DILocation(line: 94, column: 22, scope: !4335)
!4357 = !DILocation(line: 94, column: 9, scope: !4337)
!4358 = !DILocation(line: 95, column: 10, scope: !4337)
!4359 = !DILocation(line: 95, column: 5, scope: !4337)
!4360 = !DILocation(line: 96, column: 8, scope: !4337)
!4361 = !DILocation(line: 85, column: 9, scope: !4305)
!4362 = !DILocation(line: 85, column: 53, scope: !4330)
!4363 = !DILocation(line: 85, column: 48, scope: !4330)
!4364 = !DILocation(line: 0, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4305, file: !4366, discriminator: 0)
!4366 = !DIFile(filename: "src/lib.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "d02dc8f312f7973ddf971206e3c412e5")
!4367 = !DILocation(line: 110, column: 29, scope: !4337)
!4368 = !DILocation(line: 110, column: 10, scope: !4337)
!4369 = !DILocation(line: 110, column: 5, scope: !4337)
!4370 = !DILocation(line: 112, column: 10, scope: !4337)
!4371 = !DILocation(line: 112, column: 5, scope: !4337)
!4372 = !DILocation(line: 113, column: 2, scope: !4305)
!4373 = !DILocation(line: 99, column: 27, scope: !4337)
!4374 = !DILocation(line: 99, column: 26, scope: !4337)
!4375 = !DILocation(line: 99, column: 13, scope: !4339)
!4376 = !DILocation(line: 100, column: 14, scope: !4339)
!4377 = !DILocation(line: 100, column: 9, scope: !4339)
!4378 = !DILocation(line: 101, column: 12, scope: !4339)
!4379 = !DILocation(line: 108, column: 33, scope: !4339)
!4380 = !DILocation(line: 108, column: 14, scope: !4339)
!4381 = !DILocation(line: 108, column: 9, scope: !4339)
!4382 = !DILocation(line: 96, column: 5, scope: !4337)
!4383 = !DILocation(line: 104, column: 31, scope: !4339)
!4384 = !DILocation(line: 104, column: 30, scope: !4339)
!4385 = !DILocation(line: 104, column: 17, scope: !4341)
!4386 = !DILocation(line: 105, column: 18, scope: !4341)
!4387 = !DILocation(line: 105, column: 13, scope: !4341)
!4388 = !DILocation(line: 106, column: 37, scope: !4341)
!4389 = !DILocation(line: 106, column: 18, scope: !4341)
!4390 = !DILocation(line: 106, column: 13, scope: !4341)
!4391 = !DILocation(line: 101, column: 9, scope: !4339)
!4392 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h09ad5fa2dba47c47E", scope: !4394, file: !4393, line: 921, type: !4395, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4401)
!4393 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "c712966553e63907a5ac514e3020288d")
!4394 = !DINamespace(name: "{impl#0}", scope: !158)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!4397, !170}
!4397 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharIndices", scope: !1397, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !4398, templateParams: !15, identifier: "879cc9fcc89ea8493c7541c4d7d5952f")
!4398 = !{!4399, !4400}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "front_offset", scope: !4397, file: !2, baseType: !9, size: 64, align: 64, offset: 128, flags: DIFlagProtected)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !4397, file: !2, baseType: !1396, size: 128, align: 64, flags: DIFlagProtected)
!4401 = !{!4402}
!4402 = !DILocalVariable(name: "self", arg: 1, scope: !4392, file: !4393, line: 921, type: !170)
!4403 = !DILocation(line: 921, column: 25, scope: !4392)
!4404 = !DILocation(line: 922, column: 46, scope: !4392)
!4405 = !DILocation(line: 922, column: 9, scope: !4392)
!4406 = !DILocation(line: 923, column: 6, scope: !4392)
!4407 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hea9710fd3f44ef8fE", scope: !4394, file: !4393, line: 140, type: !4408, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4410)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!9, !170}
!4410 = !{!4411}
!4411 = !DILocalVariable(name: "self", arg: 1, scope: !4407, file: !4393, line: 140, type: !170)
!4412 = !DILocation(line: 140, column: 22, scope: !4407)
!4413 = !DILocalVariable(name: "self", arg: 1, scope: !4414, file: !4393, line: 303, type: !170)
!4414 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h257ba70115da09f6E", scope: !4394, file: !4393, line: 303, type: !4415, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!427, !170}
!4417 = !{!4413}
!4418 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !4419)
!4419 = distinct !DILocation(line: 141, column: 9, scope: !4407)
!4420 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !4419)
!4421 = !DILocation(line: 141, column: 9, scope: !4407)
!4422 = !DILocation(line: 142, column: 6, scope: !4407)
!4423 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hb2e95cef6820fa16E", scope: !4394, file: !4393, line: 864, type: !4424, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4426)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{!1396, !170}
!4426 = !{!4427}
!4427 = !DILocalVariable(name: "self", arg: 1, scope: !4423, file: !4393, line: 864, type: !170)
!4428 = !DILocation(line: 864, column: 18, scope: !4423)
!4429 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !4430)
!4430 = distinct !DILocation(line: 865, column: 23, scope: !4423)
!4431 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !4430)
!4432 = !DILocation(line: 865, column: 23, scope: !4423)
!4433 = !DILocation(line: 866, column: 6, scope: !4423)
!4434 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h9c00469c59768be4E", scope: !4394, file: !4393, line: 159, type: !4435, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4437)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!520, !170}
!4437 = !{!4438}
!4438 = !DILocalVariable(name: "self", arg: 1, scope: !4434, file: !4393, line: 159, type: !170)
!4439 = !DILocation(line: 159, column: 27, scope: !4434)
!4440 = !DILocation(line: 160, column: 9, scope: !4434)
!4441 = !DILocation(line: 161, column: 6, scope: !4434)
!4442 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17hbf9dcf7185d94eb6E", scope: !1396, file: !4443, line: 159, type: !4444, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !4447, retainedNodes: !4448)
!4443 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "e806c02460809b3786cdd980540ca301")
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!170, !4446}
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Chars", baseType: !1396, size: 64, align: 64, dwarfAddressSpace: 0)
!4447 = !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17hbf9dcf7185d94eb6E", scope: !1396, file: !4443, line: 159, type: !4444, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!4448 = !{!4449}
!4449 = !DILocalVariable(name: "self", arg: 1, scope: !4442, file: !4443, line: 159, type: !4446)
!4450 = !DILocation(line: 159, column: 19, scope: !4442)
!4451 = !DILocation(line: 161, column: 38, scope: !4442)
!4452 = !DILocation(line: 161, column: 18, scope: !4442)
!4453 = !DILocation(line: 162, column: 6, scope: !4442)
!4454 = distinct !DISubprogram(name: "valid_up_to", linkageName: "_ZN4core3str5error9Utf8Error11valid_up_to17h8bc2250ad0907e27E", scope: !156, file: !4455, line: 79, type: !4456, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !4459, retainedNodes: !4460)
!4455 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/error.rs", directory: "", checksumkind: CSK_MD5, checksum: "06285f610cd3e44614b51f9c6d8a5191")
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!9, !4458}
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::error::Utf8Error", baseType: !156, size: 64, align: 64, dwarfAddressSpace: 0)
!4459 = !DISubprogram(name: "valid_up_to", linkageName: "_ZN4core3str5error9Utf8Error11valid_up_to17h8bc2250ad0907e27E", scope: !156, file: !4455, line: 79, type: !4456, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!4460 = !{!4461}
!4461 = !DILocalVariable(name: "self", arg: 1, scope: !4454, file: !4455, line: 79, type: !4458)
!4462 = !DILocation(line: 79, column: 30, scope: !4454)
!4463 = !DILocation(line: 80, column: 9, scope: !4454)
!4464 = !DILocation(line: 81, column: 6, scope: !4454)
!4465 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h4b496ea6cbc74f3bE", scope: !4467, file: !4466, line: 114, type: !4469, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4472)
!4466 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "a345b6a4dd7e707bc8f2b6de50bf1a43")
!4467 = !DINamespace(name: "{impl#6}", scope: !4468)
!4468 = !DINamespace(name: "traits", scope: !158)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!170, !4471, !170, !1690}
!4471 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !1160, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "95b3f7f7b15c85d2d4b88af2a2f12ad2")
!4472 = !{!4473, !4474, !4475}
!4473 = !DILocalVariable(name: "self", scope: !4465, file: !4466, line: 114, type: !4471, align: 1)
!4474 = !DILocalVariable(name: "slice", arg: 2, scope: !4465, file: !4466, line: 114, type: !170)
!4475 = !DILocalVariable(arg: 1, scope: !4465, file: !4466, line: 114, type: !4471)
!4476 = !DILocation(line: 114, column: 14, scope: !4465)
!4477 = !DILocation(line: 114, column: 20, scope: !4465)
!4478 = !DILocation(line: 116, column: 6, scope: !4465)
!4479 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h586e219a711934d3E", scope: !4481, file: !4480, line: 171, type: !4482, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4484)
!4480 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "6661364ec9ad7f830622374466da881f")
!4481 = !DINamespace(name: "converts", scope: !158)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!170, !427}
!4484 = !{!4485}
!4485 = !DILocalVariable(name: "v", arg: 1, scope: !4479, file: !4480, line: 171, type: !427)
!4486 = !DILocation(line: 171, column: 41, scope: !4479)
!4487 = !DILocation(line: 175, column: 2, scope: !4479)
!4488 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17hc8acc460f02bdb05E", scope: !4481, file: !4480, line: 199, type: !4489, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4499)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!4491, !4495}
!4491 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 128, align: 64, elements: !4492, templateParams: !15, identifier: "3faee8808ecf9985e5103add9ac29d3c")
!4492 = !{!4493, !4494}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4491, file: !2, baseType: !173, size: 64, align: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4491, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4495 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !4496, templateParams: !15, identifier: "bdfeb4840e2373d8742974745efe30b6")
!4496 = !{!4497, !4498}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4495, file: !2, baseType: !173, size: 64, align: 64)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4495, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4499 = !{!4500}
!4500 = !DILocalVariable(name: "v", arg: 1, scope: !4488, file: !4480, line: 199, type: !4495)
!4501 = !DILocation(line: 199, column: 45, scope: !4488)
!4502 = !DILocation(line: 205, column: 2, scope: !4488)
!4503 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char6decode12decode_utf1617h0b47d97373ff380fE", scope: !310, file: !4504, line: 35, type: !4505, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !852, retainedNodes: !4507)
!4504 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/char/decode.rs", directory: "", checksumkind: CSK_MD5, checksum: "76e30bde440ded1d4c198b2c15eaee8b")
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!848, !637}
!4507 = !{!4508}
!4508 = !DILocalVariable(name: "iter", arg: 1, scope: !4503, file: !4504, line: 35, type: !637)
!4509 = !DILocation(line: 35, column: 57, scope: !4503)
!4510 = !DILocation(line: 36, column: 25, scope: !4503)
!4511 = !DILocation(line: 36, column: 48, scope: !4503)
!4512 = !DILocation(line: 36, column: 5, scope: !4503)
!4513 = !DILocation(line: 37, column: 2, scope: !4503)
!4514 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char6decode12decode_utf1617h1703b70183967a11E", scope: !310, file: !4504, line: 35, type: !4515, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !441, retainedNodes: !4517)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!394, !397}
!4517 = !{!4518}
!4518 = !DILocalVariable(name: "iter", arg: 1, scope: !4514, file: !4504, line: 35, type: !397)
!4519 = !DILocation(line: 35, column: 57, scope: !4514)
!4520 = !DILocation(line: 36, column: 25, scope: !4514)
!4521 = !DILocation(line: 36, column: 48, scope: !4514)
!4522 = !DILocation(line: 36, column: 5, scope: !4514)
!4523 = !DILocation(line: 37, column: 2, scope: !4514)
!4524 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char6decode12decode_utf1617h3028414e3463fb59E", scope: !310, file: !4504, line: 35, type: !4525, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !481, retainedNodes: !4527)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!473, !476}
!4527 = !{!4528}
!4528 = !DILocalVariable(name: "iter", arg: 1, scope: !4524, file: !4504, line: 35, type: !476)
!4529 = !DILocation(line: 35, column: 57, scope: !4524)
!4530 = !DILocation(line: 36, column: 25, scope: !4524)
!4531 = !DILocation(line: 36, column: 48, scope: !4524)
!4532 = !DILocation(line: 36, column: 5, scope: !4524)
!4533 = !DILocation(line: 37, column: 2, scope: !4524)
!4534 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN4core4char6decode12decode_utf1617h91a339d79c3e52fbE", scope: !310, file: !4504, line: 35, type: !4535, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !350, retainedNodes: !4537)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!309, !314}
!4537 = !{!4538}
!4538 = !DILocalVariable(name: "iter", arg: 1, scope: !4534, file: !4504, line: 35, type: !314)
!4539 = !DILocation(line: 35, column: 57, scope: !4534)
!4540 = !DILocation(line: 36, column: 25, scope: !4534)
!4541 = !DILocation(line: 36, column: 48, scope: !4534)
!4542 = !DILocation(line: 36, column: 5, scope: !4534)
!4543 = !DILocation(line: 37, column: 2, scope: !4534)
!4544 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char6decode12decode_utf1617hcad077c67ae8a70aE", scope: !310, file: !4504, line: 35, type: !4545, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !924, retainedNodes: !4547)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!920, !615}
!4547 = !{!4548}
!4548 = !DILocalVariable(name: "iter", arg: 1, scope: !4544, file: !4504, line: 35, type: !615)
!4549 = !DILocation(line: 35, column: 57, scope: !4544)
!4550 = !DILocation(line: 36, column: 25, scope: !4544)
!4551 = !DILocation(line: 36, column: 48, scope: !4544)
!4552 = !DILocation(line: 36, column: 5, scope: !4544)
!4553 = !DILocation(line: 37, column: 2, scope: !4544)
!4554 = distinct !DISubprogram(name: "char_try_from_u32", linkageName: "_ZN4core4char7convert17char_try_from_u3217h162de07bac142c13E", scope: !4556, file: !4555, line: 232, type: !4557, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4577)
!4555 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "c8c0a9f8d9d9817697e7deae04c5d729")
!4556 = !DINamespace(name: "convert", scope: !311)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!4559, !1391}
!4559 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::convert::CharTryFromError>", scope: !865, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4560, templateParams: !15, identifier: "8b717de7093aeb26d61c43298c036cda")
!4560 = !{!4561}
!4561 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4559, file: !2, size: 32, align: 32, elements: !4562, templateParams: !15, identifier: "1135f6faef69fabff98c260aace0cc7f", discriminator: !4576)
!4562 = !{!4563, !4572}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4561, file: !2, baseType: !4564, size: 32, align: 32)
!4564 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4559, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4565, templateParams: !4567, identifier: "cbc11af6c22021239e7c69d8d6409993")
!4565 = !{!4566}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4564, file: !2, baseType: !379, size: 32, align: 32, flags: DIFlagPublic)
!4567 = !{!1033, !4568}
!4568 = !DITemplateTypeParameter(name: "E", type: !4569)
!4569 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharTryFromError", scope: !4556, file: !2, align: 8, flags: DIFlagPublic, elements: !4570, templateParams: !15, identifier: "b06d52a58ca8dc9ba1392e94e5b69bb4")
!4570 = !{!4571}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4569, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4561, file: !2, baseType: !4573, size: 32, align: 32, extraData: i128 1114112)
!4573 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4559, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4574, templateParams: !4567, identifier: "2ecec4ec3dd67ea54edb4e1eba1abda8")
!4574 = !{!4575}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4573, file: !2, baseType: !4569, align: 8, flags: DIFlagPublic)
!4576 = !DIDerivedType(tag: DW_TAG_member, scope: !4559, file: !2, baseType: !1391, size: 32, align: 32, flags: DIFlagArtificial)
!4577 = !{!4578}
!4578 = !DILocalVariable(name: "i", arg: 1, scope: !4554, file: !4555, line: 232, type: !1391)
!4579 = !DILocation(line: 232, column: 28, scope: !4554)
!4580 = !DILocation(line: 246, column: 8, scope: !4554)
!4581 = !DILocalVariable(name: "self", arg: 1, scope: !4582, file: !2672, line: 1977, type: !1391)
!4582 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17h5debb811d733e88dE", scope: !4583, file: !2672, line: 1977, type: !4584, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4586)
!4583 = !DINamespace(name: "{impl#8}", scope: !2612)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!1391, !1391, !1391}
!4586 = !{!4581, !4587}
!4587 = !DILocalVariable(name: "rhs", arg: 2, scope: !4582, file: !2672, line: 1977, type: !1391)
!4588 = !DILocation(line: 1977, column: 35, scope: !4582, inlinedAt: !4589)
!4589 = distinct !DILocation(line: 246, column: 8, scope: !4554)
!4590 = !DILocation(line: 1977, column: 41, scope: !4582, inlinedAt: !4589)
!4591 = !DILocation(line: 1978, column: 13, scope: !4582, inlinedAt: !4589)
!4592 = !DILocation(line: 250, column: 9, scope: !4554)
!4593 = !DILocation(line: 246, column: 5, scope: !4554)
!4594 = !DILocation(line: 247, column: 9, scope: !4554)
!4595 = !DILocation(line: 252, column: 2, scope: !4554)
!4596 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17hbc43b081bf89d100E", scope: !4556, file: !4555, line: 24, type: !4597, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4599)
!4597 = !DISubroutineType(types: !4598)
!4598 = !{!379, !1391}
!4599 = !{!4600}
!4600 = !DILocalVariable(name: "i", arg: 1, scope: !4596, file: !4555, line: 24, type: !1391)
!4601 = !DILocation(line: 24, column: 47, scope: !4596)
!4602 = !DILocation(line: 74, column: 35, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4596, file: !1177, discriminator: 0)
!4604 = !DILocation(line: 34, column: 2, scope: !4596)
!4605 = !DILocation(line: 75, column: 17, scope: !4603)
!4606 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core4char7convert18from_u32_unchecked18precondition_check17he1ca9fbbaedd9952E", scope: !4607, file: !1177, line: 66, type: !4608, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4610)
!4607 = !DINamespace(name: "from_u32_unchecked", scope: !4556)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{null, !1391}
!4610 = !{!4611}
!4611 = !DILocalVariable(name: "i", arg: 1, scope: !4606, file: !1177, line: 66, type: !1391)
!4612 = !DILocation(line: 66, column: 43, scope: !4606)
!4613 = !DILocation(line: 30, column: 29, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4606, file: !4555, discriminator: 0)
!4615 = !DILocation(line: 68, column: 21, scope: !4606)
!4616 = !DILocation(line: 72, column: 14, scope: !4606)
!4617 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h01bc9f5882b54548E", scope: !4619, file: !4618, line: 1792, type: !4620, scopeLine: 1792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4622)
!4618 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "992a908090131713afe777ef2abaef11")
!4619 = !DINamespace(name: "methods", scope: !311)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!4495, !1391, !4495}
!4622 = !{!4623, !4624, !4625, !4627, !4630, !4632, !4633, !4635, !4636, !4637, !4639, !4640, !4641}
!4623 = !DILocalVariable(name: "code", arg: 1, scope: !4617, file: !4618, line: 1792, type: !1391)
!4624 = !DILocalVariable(name: "dst", arg: 2, scope: !4617, file: !4618, line: 1792, type: !4495)
!4625 = !DILocalVariable(name: "len", scope: !4626, file: !4618, line: 1793, type: !9, align: 8)
!4626 = distinct !DILexicalBlock(scope: !4617, file: !4618, line: 1793, column: 5)
!4627 = !DILocalVariable(name: "a", scope: !4628, file: !4618, line: 1795, type: !4629, align: 8)
!4628 = distinct !DILexicalBlock(scope: !4626, file: !4618, line: 1795, column: 9)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !45, size: 64, align: 64, dwarfAddressSpace: 0)
!4630 = !DILocalVariable(name: "a", scope: !4631, file: !4618, line: 1798, type: !4629, align: 8)
!4631 = distinct !DILexicalBlock(scope: !4626, file: !4618, line: 1798, column: 9)
!4632 = !DILocalVariable(name: "b", scope: !4631, file: !4618, line: 1798, type: !4629, align: 8)
!4633 = !DILocalVariable(name: "a", scope: !4634, file: !4618, line: 1802, type: !4629, align: 8)
!4634 = distinct !DILexicalBlock(scope: !4626, file: !4618, line: 1802, column: 9)
!4635 = !DILocalVariable(name: "b", scope: !4634, file: !4618, line: 1802, type: !4629, align: 8)
!4636 = !DILocalVariable(name: "c", scope: !4634, file: !4618, line: 1802, type: !4629, align: 8)
!4637 = !DILocalVariable(name: "a", scope: !4638, file: !4618, line: 1807, type: !4629, align: 8)
!4638 = distinct !DILexicalBlock(scope: !4626, file: !4618, line: 1807, column: 9)
!4639 = !DILocalVariable(name: "b", scope: !4638, file: !4618, line: 1807, type: !4629, align: 8)
!4640 = !DILocalVariable(name: "c", scope: !4638, file: !4618, line: 1807, type: !4629, align: 8)
!4641 = !DILocalVariable(name: "d", scope: !4638, file: !4618, line: 1807, type: !4629, align: 8)
!4642 = !DILocation(line: 1792, column: 30, scope: !4617)
!4643 = !DILocation(line: 1792, column: 41, scope: !4617)
!4644 = !DILocation(line: 1793, column: 15, scope: !4617)
!4645 = !DILocation(line: 1793, column: 9, scope: !4626)
!4646 = !DILocation(line: 1794, column: 11, scope: !4626)
!4647 = !DILocation(line: 1794, column: 5, scope: !4626)
!4648 = !DILocalVariable(name: "code", arg: 1, scope: !4649, file: !4650, line: 211, type: !1391)
!4649 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core4char7methods15encode_utf8_raw8do_panic17h5b12becac0c7b519E", scope: !4651, file: !4650, line: 211, type: !4652, scopeLine: 211, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4654)
!4650 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "725080d2f99fe21a7eb82f11acde0c6b")
!4651 = !DINamespace(name: "encode_utf8_raw", scope: !4619)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{null, !1391, !9, !9, !1690}
!4654 = !{!4648, !4655, !4656}
!4655 = !DILocalVariable(name: "len", arg: 2, scope: !4649, file: !4650, line: 211, type: !9)
!4656 = !DILocalVariable(name: "dst_len", arg: 3, scope: !4649, file: !4650, line: 211, type: !9)
!4657 = !DILocation(line: 211, column: 29, scope: !4649, inlinedAt: !4658)
!4658 = distinct !DILocation(line: 223, column: 9, scope: !4659)
!4659 = !DILexicalBlockFile(scope: !4626, file: !4650, discriminator: 0)
!4660 = !DILocation(line: 3840, column: 27, scope: !4661, inlinedAt: !4658)
!4661 = !DILexicalBlockFile(scope: !4649, file: !2057, discriminator: 0)
!4662 = !DILocation(line: 3840, column: 9, scope: !4661, inlinedAt: !4658)
!4663 = !DILocation(line: 223, column: 9, scope: !4659)
!4664 = !DILocation(line: 1795, column: 13, scope: !4626)
!4665 = !DILocation(line: 1798, column: 13, scope: !4626)
!4666 = !DILocation(line: 1802, column: 13, scope: !4626)
!4667 = !DILocation(line: 1807, column: 13, scope: !4626)
!4668 = !DILocation(line: 1795, column: 14, scope: !4626)
!4669 = !DILocation(line: 1795, column: 14, scope: !4628)
!4670 = !DILocation(line: 1796, column: 13, scope: !4628)
!4671 = !DILocation(line: 1797, column: 9, scope: !4626)
!4672 = !DILocalVariable(name: "self", arg: 1, scope: !4673, file: !2262, line: 773, type: !4495)
!4673 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h75e0a7cf05ba14fdE", scope: !2263, file: !2262, line: 773, type: !4674, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !4676)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!3364, !4495}
!4676 = !{!4672}
!4677 = !DILocation(line: 773, column: 29, scope: !4673, inlinedAt: !4678)
!4678 = distinct !DILocation(line: 1824, column: 40, scope: !4626)
!4679 = !DILocation(line: 1824, column: 14, scope: !4626)
!4680 = !DILocation(line: 1825, column: 2, scope: !4617)
!4681 = !DILocation(line: 1798, column: 14, scope: !4626)
!4682 = !DILocation(line: 1798, column: 14, scope: !4631)
!4683 = !DILocation(line: 1798, column: 17, scope: !4626)
!4684 = !DILocation(line: 1798, column: 17, scope: !4631)
!4685 = !DILocation(line: 1799, column: 19, scope: !4631)
!4686 = !DILocation(line: 1799, column: 18, scope: !4631)
!4687 = !DILocation(line: 1799, column: 13, scope: !4631)
!4688 = !DILocation(line: 1800, column: 18, scope: !4631)
!4689 = !DILocation(line: 1800, column: 13, scope: !4631)
!4690 = !DILocation(line: 1801, column: 9, scope: !4626)
!4691 = !DILocation(line: 1802, column: 14, scope: !4626)
!4692 = !DILocation(line: 1802, column: 14, scope: !4634)
!4693 = !DILocation(line: 1802, column: 17, scope: !4626)
!4694 = !DILocation(line: 1802, column: 17, scope: !4634)
!4695 = !DILocation(line: 1802, column: 20, scope: !4626)
!4696 = !DILocation(line: 1802, column: 20, scope: !4634)
!4697 = !DILocation(line: 1803, column: 19, scope: !4634)
!4698 = !DILocation(line: 1803, column: 18, scope: !4634)
!4699 = !DILocation(line: 1803, column: 13, scope: !4634)
!4700 = !DILocation(line: 1804, column: 19, scope: !4634)
!4701 = !DILocation(line: 1804, column: 18, scope: !4634)
!4702 = !DILocation(line: 1804, column: 13, scope: !4634)
!4703 = !DILocation(line: 1805, column: 18, scope: !4634)
!4704 = !DILocation(line: 1805, column: 13, scope: !4634)
!4705 = !DILocation(line: 1806, column: 9, scope: !4626)
!4706 = !DILocation(line: 1807, column: 14, scope: !4626)
!4707 = !DILocation(line: 1807, column: 14, scope: !4638)
!4708 = !DILocation(line: 1807, column: 17, scope: !4626)
!4709 = !DILocation(line: 1807, column: 17, scope: !4638)
!4710 = !DILocation(line: 1807, column: 20, scope: !4626)
!4711 = !DILocation(line: 1807, column: 20, scope: !4638)
!4712 = !DILocation(line: 1807, column: 23, scope: !4626)
!4713 = !DILocation(line: 1807, column: 23, scope: !4638)
!4714 = !DILocation(line: 1808, column: 19, scope: !4638)
!4715 = !DILocation(line: 1808, column: 18, scope: !4638)
!4716 = !DILocation(line: 1808, column: 13, scope: !4638)
!4717 = !DILocation(line: 1809, column: 19, scope: !4638)
!4718 = !DILocation(line: 1809, column: 18, scope: !4638)
!4719 = !DILocation(line: 1809, column: 13, scope: !4638)
!4720 = !DILocation(line: 1810, column: 19, scope: !4638)
!4721 = !DILocation(line: 1810, column: 18, scope: !4638)
!4722 = !DILocation(line: 1810, column: 13, scope: !4638)
!4723 = !DILocation(line: 1811, column: 18, scope: !4638)
!4724 = !DILocation(line: 1811, column: 13, scope: !4638)
!4725 = !DILocation(line: 1812, column: 9, scope: !4626)
!4726 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h60efe6d0691b73e0E", scope: !4727, file: !4618, line: 698, type: !4728, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4730)
!4727 = !DINamespace(name: "{impl#0}", scope: !4619)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!4491, !379, !4495}
!4730 = !{!4731, !4732}
!4731 = !DILocalVariable(name: "self", arg: 1, scope: !4726, file: !4618, line: 698, type: !379)
!4732 = !DILocalVariable(name: "dst", arg: 2, scope: !4726, file: !4618, line: 698, type: !4495)
!4733 = !DILocation(line: 698, column: 30, scope: !4726)
!4734 = !DILocation(line: 698, column: 36, scope: !4726)
!4735 = !DILocation(line: 700, column: 42, scope: !4726)
!4736 = !DILocation(line: 700, column: 18, scope: !4726)
!4737 = !DILocation(line: 701, column: 6, scope: !4726)
!4738 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h12b41fdca0170b9cE", scope: !4727, file: !4618, line: 139, type: !4545, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !924, retainedNodes: !4739)
!4739 = !{!4740}
!4740 = !DILocalVariable(name: "iter", arg: 1, scope: !4738, file: !4618, line: 139, type: !615)
!4741 = !DILocation(line: 139, column: 54, scope: !4738)
!4742 = !DILocation(line: 140, column: 9, scope: !4738)
!4743 = !DILocation(line: 141, column: 6, scope: !4738)
!4744 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h283c6ab00d45c069E", scope: !4727, file: !4618, line: 139, type: !4505, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !852, retainedNodes: !4745)
!4745 = !{!4746}
!4746 = !DILocalVariable(name: "iter", arg: 1, scope: !4744, file: !4618, line: 139, type: !637)
!4747 = !DILocation(line: 139, column: 54, scope: !4744)
!4748 = !DILocation(line: 140, column: 9, scope: !4744)
!4749 = !DILocation(line: 141, column: 6, scope: !4744)
!4750 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h47d56a1480061c49E", scope: !4727, file: !4618, line: 139, type: !4535, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !350, retainedNodes: !4751)
!4751 = !{!4752}
!4752 = !DILocalVariable(name: "iter", arg: 1, scope: !4750, file: !4618, line: 139, type: !314)
!4753 = !DILocation(line: 139, column: 54, scope: !4750)
!4754 = !DILocation(line: 140, column: 9, scope: !4750)
!4755 = !DILocation(line: 141, column: 6, scope: !4750)
!4756 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617ha7f27074dfcbfff2E", scope: !4727, file: !4618, line: 139, type: !4525, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !481, retainedNodes: !4757)
!4757 = !{!4758}
!4758 = !DILocalVariable(name: "iter", arg: 1, scope: !4756, file: !4618, line: 139, type: !476)
!4759 = !DILocation(line: 139, column: 54, scope: !4756)
!4760 = !DILocation(line: 140, column: 9, scope: !4756)
!4761 = !DILocation(line: 141, column: 6, scope: !4756)
!4762 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hbb124aef0346177bE", scope: !4727, file: !4618, line: 139, type: !4515, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !441, retainedNodes: !4763)
!4763 = !{!4764}
!4764 = !DILocalVariable(name: "iter", arg: 1, scope: !4762, file: !4618, line: 139, type: !397)
!4765 = !DILocation(line: 139, column: 54, scope: !4762)
!4766 = !DILocation(line: 140, column: 9, scope: !4762)
!4767 = !DILocation(line: 141, column: 6, scope: !4762)
!4768 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h240e2d54db5f8e91E", scope: !4727, file: !4618, line: 226, type: !4597, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4769)
!4769 = !{!4770}
!4770 = !DILocalVariable(name: "i", arg: 1, scope: !4768, file: !4618, line: 226, type: !1391)
!4771 = !DILocation(line: 226, column: 44, scope: !4768)
!4772 = !DILocation(line: 228, column: 18, scope: !4768)
!4773 = !DILocation(line: 229, column: 6, scope: !4768)
!4774 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hae25e11b0f9236eaE", scope: !4727, file: !4618, line: 629, type: !4775, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4777)
!4775 = !DISubroutineType(types: !4776)
!4776 = !{!9, !379}
!4777 = !{!4778}
!4778 = !DILocalVariable(name: "self", arg: 1, scope: !4774, file: !4618, line: 629, type: !379)
!4779 = !DILocation(line: 629, column: 27, scope: !4774)
!4780 = !DILocation(line: 630, column: 9, scope: !4774)
!4781 = !DILocation(line: 631, column: 6, scope: !4774)
!4782 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h9e59d66ee1377312E", scope: !4619, file: !4618, line: 1761, type: !4783, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4785)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!9, !1391}
!4785 = !{!4786}
!4786 = !DILocalVariable(name: "code", arg: 1, scope: !4782, file: !4618, line: 1761, type: !1391)
!4787 = !DILocation(line: 1761, column: 19, scope: !4782)
!4788 = !DILocation(line: 1763, column: 9, scope: !4782)
!4789 = !DILocation(line: 1764, column: 9, scope: !4782)
!4790 = !DILocation(line: 1763, column: 24, scope: !4782)
!4791 = !DILocation(line: 1765, column: 9, scope: !4782)
!4792 = !DILocation(line: 1764, column: 24, scope: !4782)
!4793 = !DILocation(line: 1766, column: 14, scope: !4782)
!4794 = !DILocation(line: 1765, column: 26, scope: !4782)
!4795 = !DILocation(line: 1768, column: 2, scope: !4782)
!4796 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core4hint16assert_unchecked18precondition_check17h46d91998b39731b6E", scope: !4797, file: !1177, line: 66, type: !4799, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !4801)
!4797 = !DINamespace(name: "assert_unchecked", scope: !4798)
!4798 = !DINamespace(name: "hint", scope: !14)
!4799 = !DISubroutineType(types: !4800)
!4800 = !{null, !520}
!4801 = !{!4802}
!4802 = !DILocalVariable(name: "cond", arg: 1, scope: !4796, file: !1177, line: 66, type: !520)
!4803 = !DILocation(line: 66, column: 43, scope: !4796)
!4804 = !DILocation(line: 206, column: 36, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4796, file: !4806, discriminator: 0)
!4806 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "74a4d757e2c25cd53bc30e9481332d4b")
!4807 = !DILocation(line: 68, column: 21, scope: !4796)
!4808 = !DILocation(line: 72, column: 14, scope: !4796)
!4809 = distinct !DISubprogram(name: "rfind<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17h2da5168dd0ac4589E", scope: !4811, file: !4810, line: 356, type: !4813, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4819, retainedNodes: !4816)
!4810 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/traits/double_ended.rs", directory: "", checksumkind: CSK_MD5, checksum: "93e9e7a1882aacb10bdd7ccc4ec9ff25")
!4811 = !DINamespace(name: "DoubleEndedIterator", scope: !4812)
!4812 = !DINamespace(name: "double_ended", scope: !364)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{!1379, !4815, !1471}
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !1396, size: 64, align: 64, dwarfAddressSpace: 0)
!4816 = !{!4817, !4818}
!4817 = !DILocalVariable(name: "self", arg: 1, scope: !4809, file: !4810, line: 356, type: !4815)
!4818 = !DILocalVariable(name: "predicate", arg: 2, scope: !4809, file: !4810, line: 356, type: !1471)
!4819 = !{!4820, !4821}
!4820 = !DITemplateTypeParameter(name: "Self", type: !1396)
!4821 = !DITemplateTypeParameter(name: "P", type: !1471)
!4822 = !DILocation(line: 356, column: 17, scope: !4809)
!4823 = !DILocation(line: 356, column: 28, scope: !4809)
!4824 = !DILocation(line: 368, column: 28, scope: !4809)
!4825 = !DILocation(line: 368, column: 9, scope: !4809)
!4826 = !DILocation(line: 369, column: 6, scope: !4809)
!4827 = distinct !DISubprogram(name: "check<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17hfe9393dd7e939bf1E", scope: !4828, file: !4810, line: 362, type: !4829, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4837, retainedNodes: !4835)
!4828 = !DINamespace(name: "rfind", scope: !4811)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!4831, !1471}
!4831 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", scope: !4832, file: !2, size: 128, align: 64, elements: !4833, templateParams: !15, identifier: "54c0c86aa0fc4c9e167d35db85023ab7")
!4832 = !DINamespace(name: "check", scope: !4828)
!4833 = !{!4834}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !4831, file: !2, baseType: !1471, size: 128, align: 64)
!4835 = !{!4836}
!4836 = !DILocalVariable(name: "predicate", arg: 1, scope: !4827, file: !4810, line: 362, type: !1471)
!4837 = !{!1033, !4838}
!4838 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1471)
!4839 = !DILocation(line: 362, column: 21, scope: !4827)
!4840 = !DILocation(line: 366, column: 10, scope: !4827)
!4841 = distinct !DISubprogram(name: "{closure#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h3a8fd10beb12bdceE", scope: !4832, file: !4810, line: 363, type: !4842, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4837, retainedNodes: !4845)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!1920, !4844, !7, !379}
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", baseType: !4831, size: 64, align: 64, dwarfAddressSpace: 0)
!4845 = !{!4846, !4847, !4848}
!4846 = !DILocalVariable(name: "x", arg: 3, scope: !4841, file: !4810, line: 363, type: !379)
!4847 = !DILocalVariable(name: "predicate", scope: !4841, file: !4810, line: 362, type: !1471, align: 8)
!4848 = !DILocalVariable(arg: 2, scope: !4841, file: !4810, line: 363, type: !7)
!4849 = !DILocation(line: 362, column: 25, scope: !4841)
!4850 = !DILocation(line: 363, column: 19, scope: !4841)
!4851 = !DILocation(line: 363, column: 23, scope: !4841)
!4852 = !DILocation(line: 364, column: 20, scope: !4841)
!4853 = !DILocation(line: 364, column: 67, scope: !4841)
!4854 = !DILocation(line: 364, column: 17, scope: !4841)
!4855 = !DILocation(line: 364, column: 55, scope: !4841)
!4856 = !DILocation(line: 364, column: 36, scope: !4841)
!4857 = !DILocation(line: 365, column: 13, scope: !4841)
!4858 = !DILocation(line: 365, column: 14, scope: !4841)
!4859 = distinct !DISubprogram(name: "try_rfold<core::str::iter::Chars, (), core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>, core::ops::control_flow::ControlFlow<char, ()>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17h396b0b9a45fcbd56E", scope: !4811, file: !4810, line: 230, type: !4860, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4874, retainedNodes: !4862)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!1920, !4815, !7, !4831}
!4862 = !{!4863, !4864, !4865, !4866, !4868, !4870, !4872}
!4863 = !DILocalVariable(name: "self", arg: 1, scope: !4859, file: !4810, line: 230, type: !4815)
!4864 = !DILocalVariable(name: "init", arg: 2, scope: !4859, file: !4810, line: 230, type: !7)
!4865 = !DILocalVariable(name: "f", arg: 3, scope: !4859, file: !4810, line: 230, type: !4831)
!4866 = !DILocalVariable(name: "accum", scope: !4867, file: !4810, line: 236, type: !7, align: 1)
!4867 = distinct !DILexicalBlock(scope: !4859, file: !4810, line: 236, column: 9)
!4868 = !DILocalVariable(name: "x", scope: !4869, file: !4810, line: 237, type: !379, align: 4)
!4869 = distinct !DILexicalBlock(scope: !4867, file: !4810, line: 237, column: 46)
!4870 = !DILocalVariable(name: "residual", scope: !4871, file: !4810, line: 238, type: !1934, align: 4)
!4871 = distinct !DILexicalBlock(scope: !4869, file: !4810, line: 238, column: 32)
!4872 = !DILocalVariable(name: "val", scope: !4873, file: !4810, line: 238, type: !7, align: 1)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !4810, line: 238, column: 21)
!4874 = !{!4820, !964, !4875, !4876}
!4875 = !DITemplateTypeParameter(name: "F", type: !4831)
!4876 = !DITemplateTypeParameter(name: "R", type: !1920)
!4877 = !DILocation(line: 230, column: 27, scope: !4859)
!4878 = !DILocation(line: 230, column: 38, scope: !4859)
!4879 = !DILocation(line: 230, column: 47, scope: !4859)
!4880 = !DILocation(line: 236, column: 13, scope: !4867)
!4881 = !DILocation(line: 238, column: 21, scope: !4873)
!4882 = !DILocation(line: 237, column: 9, scope: !4867)
!4883 = !DILocation(line: 237, column: 29, scope: !4869)
!4884 = !DILocation(line: 237, column: 19, scope: !4869)
!4885 = !DILocation(line: 237, column: 24, scope: !4869)
!4886 = !DILocation(line: 238, column: 21, scope: !4869)
!4887 = !DILocation(line: 240, column: 15, scope: !4867)
!4888 = !DILocation(line: 241, column: 5, scope: !4859)
!4889 = !DILocation(line: 238, column: 32, scope: !4869)
!4890 = !DILocation(line: 238, column: 32, scope: !4871)
!4891 = !DILocation(line: 238, column: 21, scope: !4871)
!4892 = !DILocation(line: 241, column: 6, scope: !4859)
!4893 = distinct !DISubprogram(name: "skip_while<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10skip_while17h6c8fe23524f7a929E", scope: !362, file: !4894, line: 1094, type: !4895, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4900, retainedNodes: !4897)
!4894 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "77259128776c283b6b5d2a1cb574b6b4")
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!1437, !1440, !1448}
!4897 = !{!4898, !4899}
!4898 = !DILocalVariable(name: "self", arg: 1, scope: !4893, file: !4894, line: 1094, type: !1440)
!4899 = !DILocalVariable(name: "predicate", arg: 2, scope: !4893, file: !4894, line: 1094, type: !1448)
!4900 = !{!4901, !1451}
!4901 = !DITemplateTypeParameter(name: "Self", type: !1440)
!4902 = !DILocation(line: 1094, column: 22, scope: !4893)
!4903 = !DILocation(line: 1094, column: 28, scope: !4893)
!4904 = !DILocation(line: 1099, column: 9, scope: !4893)
!4905 = !DILocation(line: 1100, column: 6, scope: !4893)
!4906 = distinct !DISubprogram(name: "skip_while<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10skip_while17ha8f7b67b0c9d095cE", scope: !362, file: !4894, line: 1094, type: !4907, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4912, retainedNodes: !4909)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!1393, !1396, !1410}
!4909 = !{!4910, !4911}
!4910 = !DILocalVariable(name: "self", arg: 1, scope: !4906, file: !4894, line: 1094, type: !1396)
!4911 = !DILocalVariable(name: "predicate", arg: 2, scope: !4906, file: !4894, line: 1094, type: !1410)
!4912 = !{!4820, !1416}
!4913 = !DILocation(line: 1094, column: 22, scope: !4906)
!4914 = !DILocation(line: 1094, column: 28, scope: !4906)
!4915 = !DILocation(line: 1099, column: 9, scope: !4906)
!4916 = !DILocation(line: 1100, column: 6, scope: !4906)
!4917 = distinct !DISubprogram(name: "map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, u16, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h0488d6703bae2120E", scope: !362, file: !4894, line: 745, type: !4918, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4923, retainedNodes: !4920)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!615, !618, !434}
!4920 = !{!4921, !4922}
!4921 = !DILocalVariable(name: "self", arg: 1, scope: !4917, file: !4894, line: 745, type: !618)
!4922 = !DILocalVariable(name: "f", arg: 2, scope: !4917, file: !4894, line: 745, type: !434)
!4923 = !{!4924, !606, !439}
!4924 = !DITemplateTypeParameter(name: "Self", type: !618)
!4925 = !DILocation(line: 745, column: 18, scope: !4917)
!4926 = !DILocation(line: 745, column: 24, scope: !4917)
!4927 = !DILocation(line: 750, column: 9, scope: !4917)
!4928 = !DILocation(line: 751, column: 6, scope: !4917)
!4929 = distinct !DISubprogram(name: "map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, u16, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h2b793ebf5abc8fb7E", scope: !362, file: !4894, line: 745, type: !4930, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4923, retainedNodes: !4932)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{!637, !618, !434}
!4932 = !{!4933, !4934}
!4933 = !DILocalVariable(name: "self", arg: 1, scope: !4929, file: !4894, line: 745, type: !618)
!4934 = !DILocalVariable(name: "f", arg: 2, scope: !4929, file: !4894, line: 745, type: !434)
!4935 = !DILocation(line: 745, column: 18, scope: !4929)
!4936 = !DILocation(line: 745, column: 24, scope: !4929)
!4937 = !DILocation(line: 750, column: 9, scope: !4929)
!4938 = !DILocation(line: 751, column: 6, scope: !4929)
!4939 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h4102d12a4a4a27b0E", scope: !362, file: !4894, line: 745, type: !4940, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4945, retainedNodes: !4942)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{!557, !560, !576}
!4942 = !{!4943, !4944}
!4943 = !DILocalVariable(name: "self", arg: 1, scope: !4939, file: !4894, line: 745, type: !560)
!4944 = !DILocalVariable(name: "f", arg: 2, scope: !4939, file: !4894, line: 745, type: !576)
!4945 = !{!4946, !590, !581}
!4946 = !DITemplateTypeParameter(name: "Self", type: !560)
!4947 = !DILocation(line: 745, column: 18, scope: !4939)
!4948 = !DILocation(line: 745, column: 24, scope: !4939)
!4949 = !DILocation(line: 750, column: 9, scope: !4939)
!4950 = !DILocation(line: 751, column: 6, scope: !4939)
!4951 = distinct !DISubprogram(name: "map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, char, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h7e93eb40b89a0ba1E", scope: !362, file: !4894, line: 745, type: !4952, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4957, retainedNodes: !4954)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!306, !309, !353}
!4954 = !{!4955, !4956}
!4955 = !DILocalVariable(name: "self", arg: 1, scope: !4951, file: !4894, line: 745, type: !309)
!4956 = !DILocalVariable(name: "f", arg: 2, scope: !4951, file: !4894, line: 745, type: !353)
!4957 = !{!4958, !378, !358}
!4958 = !DITemplateTypeParameter(name: "Self", type: !309)
!4959 = !DILocation(line: 745, column: 18, scope: !4951)
!4960 = !DILocation(line: 745, column: 24, scope: !4951)
!4961 = !DILocation(line: 750, column: 9, scope: !4951)
!4962 = !DILocation(line: 751, column: 6, scope: !4951)
!4963 = distinct !DISubprogram(name: "map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, u16, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h832a46cb60f3481fE", scope: !362, file: !4894, line: 745, type: !4964, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4969, retainedNodes: !4966)
!4964 = !DISubroutineType(types: !4965)
!4965 = !{!476, !400, !434}
!4966 = !{!4967, !4968}
!4967 = !DILocalVariable(name: "self", arg: 1, scope: !4963, file: !4894, line: 745, type: !400)
!4968 = !DILocalVariable(name: "f", arg: 2, scope: !4963, file: !4894, line: 745, type: !434)
!4969 = !{!4970, !606, !439}
!4970 = !DITemplateTypeParameter(name: "Self", type: !400)
!4971 = !DILocation(line: 745, column: 18, scope: !4963)
!4972 = !DILocation(line: 745, column: 24, scope: !4963)
!4973 = !DILocation(line: 750, column: 9, scope: !4963)
!4974 = !DILocation(line: 751, column: 6, scope: !4963)
!4975 = distinct !DISubprogram(name: "map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, u16, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h98616424182e2e07E", scope: !362, file: !4894, line: 745, type: !4976, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4969, retainedNodes: !4978)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!397, !400, !434}
!4978 = !{!4979, !4980}
!4979 = !DILocalVariable(name: "self", arg: 1, scope: !4975, file: !4894, line: 745, type: !400)
!4980 = !DILocalVariable(name: "f", arg: 2, scope: !4975, file: !4894, line: 745, type: !434)
!4981 = !DILocation(line: 745, column: 18, scope: !4975)
!4982 = !DILocation(line: 745, column: 24, scope: !4975)
!4983 = !DILocation(line: 750, column: 9, scope: !4975)
!4984 = !DILocation(line: 751, column: 6, scope: !4975)
!4985 = distinct !DISubprogram(name: "map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, char, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h9fcd208123266eb4E", scope: !362, file: !4894, line: 745, type: !4986, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !4991, retainedNodes: !4988)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!391, !394, !444}
!4988 = !{!4989, !4990}
!4989 = !DILocalVariable(name: "self", arg: 1, scope: !4985, file: !4894, line: 745, type: !394)
!4990 = !DILocalVariable(name: "f", arg: 2, scope: !4985, file: !4894, line: 745, type: !444)
!4991 = !{!4992, !378, !448}
!4992 = !DITemplateTypeParameter(name: "Self", type: !394)
!4993 = !DILocation(line: 745, column: 18, scope: !4985)
!4994 = !DILocation(line: 745, column: 24, scope: !4985)
!4995 = !DILocation(line: 750, column: 9, scope: !4985)
!4996 = !DILocation(line: 751, column: 6, scope: !4985)
!4997 = distinct !DISubprogram(name: "map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, char, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17ha571727d7e3dd24dE", scope: !362, file: !4894, line: 745, type: !4998, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5003, retainedNodes: !5000)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!470, !473, !484}
!5000 = !{!5001, !5002}
!5001 = !DILocalVariable(name: "self", arg: 1, scope: !4997, file: !4894, line: 745, type: !473)
!5002 = !DILocalVariable(name: "f", arg: 2, scope: !4997, file: !4894, line: 745, type: !484)
!5003 = !{!5004, !378, !488}
!5004 = !DITemplateTypeParameter(name: "Self", type: !473)
!5005 = !DILocation(line: 745, column: 18, scope: !4997)
!5006 = !DILocation(line: 745, column: 24, scope: !4997)
!5007 = !DILocation(line: 750, column: 9, scope: !4997)
!5008 = !DILocation(line: 751, column: 6, scope: !4997)
!5009 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<bool>, u8, alloc::str::convert_while_ascii::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17hf470657c387e232dE", scope: !362, file: !4894, line: 745, type: !5010, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5015, retainedNodes: !5012)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!510, !513, !530}
!5012 = !{!5013, !5014}
!5013 = !DILocalVariable(name: "self", arg: 1, scope: !5009, file: !4894, line: 745, type: !513)
!5014 = !DILocalVariable(name: "f", arg: 2, scope: !5009, file: !4894, line: 745, type: !530)
!5015 = !{!5016, !545, !535}
!5016 = !DITemplateTypeParameter(name: "Self", type: !513)
!5017 = !DILocation(line: 745, column: 18, scope: !5009)
!5018 = !DILocation(line: 745, column: 24, scope: !5009)
!5019 = !DILocation(line: 750, column: 9, scope: !5009)
!5020 = !DILocation(line: 751, column: 6, scope: !5009)
!5021 = distinct !DISubprogram(name: "rev<core::str::iter::Chars>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17h6b1e1e52c97eb7afE", scope: !362, file: !4894, line: 3294, type: !5022, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5026, retainedNodes: !5024)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!1440, !1396}
!5024 = !{!5025}
!5025 = !DILocalVariable(name: "self", arg: 1, scope: !5021, file: !4894, line: 3294, type: !1396)
!5026 = !{!4820}
!5027 = !DILocation(line: 3294, column: 12, scope: !5021)
!5028 = !DILocation(line: 3298, column: 9, scope: !5021)
!5029 = !DILocation(line: 3299, column: 6, scope: !5021)
!5030 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>, usize>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3sum17h162802470fc82891E", scope: !362, file: !4894, line: 3515, type: !5031, scopeLine: 3515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5035, retainedNodes: !5033)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!9, !557}
!5033 = !{!5034}
!5034 = !DILocalVariable(name: "self", arg: 1, scope: !5030, file: !4894, line: 3515, type: !557)
!5035 = !{!5036, !5037}
!5036 = !DITemplateTypeParameter(name: "Self", type: !557)
!5037 = !DITemplateTypeParameter(name: "S", type: !9)
!5038 = !DILocation(line: 3515, column: 15, scope: !5030)
!5039 = !DILocation(line: 3520, column: 9, scope: !5030)
!5040 = !DILocation(line: 3521, column: 6, scope: !5030)
!5041 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>, u8>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3sum17hca7ec4e879e11fecE", scope: !362, file: !4894, line: 3515, type: !5042, scopeLine: 3515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5046, retainedNodes: !5044)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{!45, !510}
!5044 = !{!5045}
!5045 = !DILocalVariable(name: "self", arg: 1, scope: !5041, file: !4894, line: 3515, type: !510)
!5046 = !{!5047, !5048}
!5047 = !DITemplateTypeParameter(name: "Self", type: !510)
!5048 = !DITemplateTypeParameter(name: "S", type: !45)
!5049 = !DILocation(line: 3515, column: 15, scope: !5041)
!5050 = !DILocation(line: 3520, column: 9, scope: !5041)
!5051 = !DILocation(line: 3521, column: 6, scope: !5041)
!5052 = distinct !DISubprogram(name: "find<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find17hd106590b1f58c5e2E", scope: !362, file: !4894, line: 2821, type: !5053, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5058, retainedNodes: !5055)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!1379, !4815, !1487}
!5055 = !{!5056, !5057}
!5056 = !DILocalVariable(name: "self", arg: 1, scope: !5052, file: !4894, line: 2821, type: !4815)
!5057 = !DILocalVariable(name: "predicate", arg: 2, scope: !5052, file: !4894, line: 2821, type: !1487)
!5058 = !{!4820, !5059}
!5059 = !DITemplateTypeParameter(name: "P", type: !1487)
!5060 = !DILocation(line: 2821, column: 16, scope: !5052)
!5061 = !DILocation(line: 2821, column: 27, scope: !5052)
!5062 = !DILocation(line: 2833, column: 27, scope: !5052)
!5063 = !DILocation(line: 2833, column: 9, scope: !5052)
!5064 = !DILocation(line: 2834, column: 6, scope: !5052)
!5065 = distinct !DISubprogram(name: "check<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find5check17h0ea9d97f9c01bdc7E", scope: !5066, file: !4894, line: 2827, type: !5067, scopeLine: 2827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5075, retainedNodes: !5073)
!5066 = !DINamespace(name: "find", scope: !362)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!5069, !1487}
!5069 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", scope: !5070, file: !2, size: 128, align: 64, elements: !5071, templateParams: !15, identifier: "7d8d8c7eae220593470c792af7cd8f2a")
!5070 = !DINamespace(name: "check", scope: !5066)
!5071 = !{!5072}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !5069, file: !2, baseType: !1487, size: 128, align: 64)
!5073 = !{!5074}
!5074 = !DILocalVariable(name: "predicate", arg: 1, scope: !5065, file: !4894, line: 2827, type: !1487)
!5075 = !{!1033, !5076}
!5076 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1487)
!5077 = !DILocation(line: 2827, column: 21, scope: !5065)
!5078 = !DILocation(line: 2831, column: 10, scope: !5065)
!5079 = distinct !DISubprogram(name: "{closure#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h00c5e5577752e0a0E", scope: !5070, file: !4894, line: 2828, type: !5080, scopeLine: 2828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5075, retainedNodes: !5083)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!1920, !5082, !7, !379}
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::find::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", baseType: !5069, size: 64, align: 64, dwarfAddressSpace: 0)
!5083 = !{!5084, !5085, !5086}
!5084 = !DILocalVariable(name: "x", arg: 3, scope: !5079, file: !4894, line: 2828, type: !379)
!5085 = !DILocalVariable(name: "predicate", scope: !5079, file: !4894, line: 2827, type: !1487, align: 8)
!5086 = !DILocalVariable(arg: 2, scope: !5079, file: !4894, line: 2828, type: !7)
!5087 = !DILocation(line: 2827, column: 25, scope: !5079)
!5088 = !DILocation(line: 2828, column: 19, scope: !5079)
!5089 = !DILocation(line: 2828, column: 23, scope: !5079)
!5090 = !DILocation(line: 2829, column: 20, scope: !5079)
!5091 = !DILocation(line: 2829, column: 67, scope: !5079)
!5092 = !DILocation(line: 2829, column: 17, scope: !5079)
!5093 = !DILocation(line: 2829, column: 55, scope: !5079)
!5094 = !DILocation(line: 2829, column: 36, scope: !5079)
!5095 = !DILocation(line: 2830, column: 13, scope: !5079)
!5096 = !DILocation(line: 2830, column: 14, scope: !5079)
!5097 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, (), core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h0da292ef89c16011E", scope: !362, file: !4894, line: 2539, type: !5098, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5113, retainedNodes: !5105)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !309, !7, !5100}
!5100 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", scope: !5101, file: !2, size: 64, align: 64, elements: !5102, templateParams: !15, identifier: "83adc23645041e9b87ce9ebe2078dcdc")
!5101 = !DINamespace(name: "map_fold", scope: !301)
!5102 = !{!5103, !5104}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5100, file: !2, baseType: !359, size: 64, align: 64)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5100, file: !2, baseType: !353, align: 8, offset: 64)
!5105 = !{!5106, !5107, !5108, !5109, !5111}
!5106 = !DILocalVariable(name: "self", arg: 1, scope: !5097, file: !4894, line: 2539, type: !309)
!5107 = !DILocalVariable(name: "init", arg: 2, scope: !5097, file: !4894, line: 2539, type: !7)
!5108 = !DILocalVariable(name: "f", arg: 3, scope: !5097, file: !4894, line: 2539, type: !5100)
!5109 = !DILocalVariable(name: "accum", scope: !5110, file: !4894, line: 2544, type: !7, align: 1)
!5110 = distinct !DILexicalBlock(scope: !5097, file: !4894, line: 2544, column: 9)
!5111 = !DILocalVariable(name: "x", scope: !5112, file: !4894, line: 2545, type: !1024, align: 4)
!5112 = distinct !DILexicalBlock(scope: !5110, file: !4894, line: 2545, column: 41)
!5113 = !{!4958, !964, !5114}
!5114 = !DITemplateTypeParameter(name: "F", type: !5100)
!5115 = !DILocation(line: 2539, column: 19, scope: !5097)
!5116 = !DILocation(line: 2539, column: 29, scope: !5097)
!5117 = !DILocation(line: 2539, column: 38, scope: !5097)
!5118 = !DILocation(line: 2544, column: 13, scope: !5110)
!5119 = !DILocation(line: 2545, column: 24, scope: !5112)
!5120 = !DILocation(line: 2545, column: 9, scope: !5110)
!5121 = !DILocation(line: 2545, column: 29, scope: !5112)
!5122 = !DILocation(line: 2545, column: 19, scope: !5112)
!5123 = !DILocation(line: 2546, column: 21, scope: !5112)
!5124 = !DILocation(line: 2549, column: 6, scope: !5097)
!5125 = !DILocation(line: 2539, column: 5, scope: !5097)
!5126 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h12fe053263c9c7d0E", scope: !362, file: !4894, line: 2539, type: !5127, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5141, retainedNodes: !5133)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{null, !473, !7, !5129}
!5129 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", scope: !5101, file: !2, size: 64, align: 64, elements: !5130, templateParams: !15, identifier: "cad247d8a3dbb5e767aa4a939598b3f0")
!5130 = !{!5131, !5132}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5129, file: !2, baseType: !489, size: 64, align: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5129, file: !2, baseType: !484, align: 8, offset: 64)
!5133 = !{!5134, !5135, !5136, !5137, !5139}
!5134 = !DILocalVariable(name: "self", arg: 1, scope: !5126, file: !4894, line: 2539, type: !473)
!5135 = !DILocalVariable(name: "init", arg: 2, scope: !5126, file: !4894, line: 2539, type: !7)
!5136 = !DILocalVariable(name: "f", arg: 3, scope: !5126, file: !4894, line: 2539, type: !5129)
!5137 = !DILocalVariable(name: "accum", scope: !5138, file: !4894, line: 2544, type: !7, align: 1)
!5138 = distinct !DILexicalBlock(scope: !5126, file: !4894, line: 2544, column: 9)
!5139 = !DILocalVariable(name: "x", scope: !5140, file: !4894, line: 2545, type: !1024, align: 4)
!5140 = distinct !DILexicalBlock(scope: !5138, file: !4894, line: 2545, column: 41)
!5141 = !{!5004, !964, !5142}
!5142 = !DITemplateTypeParameter(name: "F", type: !5129)
!5143 = !DILocation(line: 2539, column: 19, scope: !5126)
!5144 = !DILocation(line: 2539, column: 29, scope: !5126)
!5145 = !DILocation(line: 2539, column: 38, scope: !5126)
!5146 = !DILocation(line: 2544, column: 13, scope: !5138)
!5147 = !DILocation(line: 2545, column: 24, scope: !5140)
!5148 = !DILocation(line: 2545, column: 9, scope: !5138)
!5149 = !DILocation(line: 2545, column: 29, scope: !5140)
!5150 = !DILocation(line: 2545, column: 19, scope: !5140)
!5151 = !DILocation(line: 2546, column: 21, scope: !5140)
!5152 = !DILocation(line: 2549, column: 6, scope: !5126)
!5153 = !DILocation(line: 2539, column: 5, scope: !5126)
!5154 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h3912cac9188d7787E", scope: !362, file: !4894, line: 2539, type: !5155, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5169, retainedNodes: !5161)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{null, !394, !7, !5157}
!5157 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", scope: !5101, file: !2, size: 64, align: 64, elements: !5158, templateParams: !15, identifier: "c2cdc92e06db71e5354651301fb9359a")
!5158 = !{!5159, !5160}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5157, file: !2, baseType: !449, size: 64, align: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5157, file: !2, baseType: !444, align: 8, offset: 64)
!5161 = !{!5162, !5163, !5164, !5165, !5167}
!5162 = !DILocalVariable(name: "self", arg: 1, scope: !5154, file: !4894, line: 2539, type: !394)
!5163 = !DILocalVariable(name: "init", arg: 2, scope: !5154, file: !4894, line: 2539, type: !7)
!5164 = !DILocalVariable(name: "f", arg: 3, scope: !5154, file: !4894, line: 2539, type: !5157)
!5165 = !DILocalVariable(name: "accum", scope: !5166, file: !4894, line: 2544, type: !7, align: 1)
!5166 = distinct !DILexicalBlock(scope: !5154, file: !4894, line: 2544, column: 9)
!5167 = !DILocalVariable(name: "x", scope: !5168, file: !4894, line: 2545, type: !1024, align: 4)
!5168 = distinct !DILexicalBlock(scope: !5166, file: !4894, line: 2545, column: 41)
!5169 = !{!4992, !964, !5170}
!5170 = !DITemplateTypeParameter(name: "F", type: !5157)
!5171 = !DILocation(line: 2539, column: 19, scope: !5154)
!5172 = !DILocation(line: 2539, column: 29, scope: !5154)
!5173 = !DILocation(line: 2539, column: 38, scope: !5154)
!5174 = !DILocation(line: 2544, column: 13, scope: !5166)
!5175 = !DILocation(line: 2545, column: 24, scope: !5168)
!5176 = !DILocation(line: 2545, column: 9, scope: !5166)
!5177 = !DILocation(line: 2545, column: 29, scope: !5168)
!5178 = !DILocation(line: 2545, column: 19, scope: !5168)
!5179 = !DILocation(line: 2546, column: 21, scope: !5168)
!5180 = !DILocation(line: 2549, column: 6, scope: !5154)
!5181 = !DILocation(line: 2539, column: 5, scope: !5154)
!5182 = distinct !DISubprogram(name: "by_ref<core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6by_ref17h08950ff8578bebedE", scope: !362, file: !4894, line: 1848, type: !5183, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5187, retainedNodes: !5185)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!404, !404}
!5185 = !{!5186}
!5186 = !DILocalVariable(name: "self", arg: 1, scope: !5182, file: !4894, line: 1848, type: !404)
!5187 = !{!5188}
!5188 = !DITemplateTypeParameter(name: "Self", type: !405)
!5189 = !DILocation(line: 1848, column: 15, scope: !5182)
!5190 = !DILocation(line: 1853, column: 6, scope: !5182)
!5191 = distinct !DISubprogram(name: "cloned<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6cloned17h4d577e09594f2dceE", scope: !362, file: !4894, line: 3409, type: !5192, scopeLine: 3409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5196, retainedNodes: !5194)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{!314, !318}
!5194 = !{!5195}
!5195 = !DILocalVariable(name: "self", arg: 1, scope: !5191, file: !4894, line: 3409, type: !318)
!5196 = !{!5197, !329}
!5197 = !DITemplateTypeParameter(name: "Self", type: !318)
!5198 = !DILocation(line: 3409, column: 26, scope: !5191)
!5199 = !DILocation(line: 3414, column: 9, scope: !5191)
!5200 = !DILocation(line: 3415, column: 6, scope: !5191)
!5201 = distinct !DISubprogram(name: "copied<&mut core::slice::iter::ArrayChunks<u8, 2>, [u8; 2]>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6copied17h2d2b7320ee875f1aE", scope: !362, file: !4894, line: 3361, type: !5202, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5206, retainedNodes: !5204)
!5202 = !DISubroutineType(types: !5203)
!5203 = !{!400, !404}
!5204 = !{!5205}
!5205 = !DILocalVariable(name: "self", arg: 1, scope: !5201, file: !4894, line: 3361, type: !404)
!5206 = !{!5207, !419}
!5207 = !DITemplateTypeParameter(name: "Self", type: !404)
!5208 = !DILocation(line: 3361, column: 26, scope: !5201)
!5209 = !DILocation(line: 3366, column: 9, scope: !5201)
!5210 = !DILocation(line: 3367, column: 6, scope: !5201)
!5211 = distinct !DISubprogram(name: "copied<core::slice::iter::ArrayChunks<u8, 2>, [u8; 2]>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6copied17h3e969b455cdafb99E", scope: !362, file: !4894, line: 3361, type: !5212, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5216, retainedNodes: !5214)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!618, !405}
!5214 = !{!5215}
!5215 = !DILocalVariable(name: "self", arg: 1, scope: !5211, file: !4894, line: 3361, type: !405)
!5216 = !{!5188, !419}
!5217 = !DILocation(line: 3361, column: 26, scope: !5211)
!5218 = !DILocation(line: 3366, column: 9, scope: !5211)
!5219 = !DILocation(line: 3367, column: 6, scope: !5211)
!5220 = distinct !DISubprogram(name: "collect<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h2befd31383be27e3E", scope: !362, file: !4894, line: 1967, type: !5221, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5225, retainedNodes: !5223)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{!78, !917}
!5223 = !{!5224}
!5224 = !DILocalVariable(name: "self", arg: 1, scope: !5220, file: !4894, line: 1967, type: !917)
!5225 = !{!5226, !5227}
!5226 = !DITemplateTypeParameter(name: "Self", type: !917)
!5227 = !DITemplateTypeParameter(name: "B", type: !78)
!5228 = !DILocation(line: 1967, column: 45, scope: !5220)
!5229 = !DILocation(line: 1971, column: 9, scope: !5220)
!5230 = !DILocation(line: 1972, column: 6, scope: !5220)
!5231 = distinct !DISubprogram(name: "collect<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h4372d49cc1f3cbd3E", scope: !362, file: !4894, line: 1967, type: !5232, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5236, retainedNodes: !5234)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{!78, !470}
!5234 = !{!5235}
!5235 = !DILocalVariable(name: "self", arg: 1, scope: !5231, file: !4894, line: 1967, type: !470)
!5236 = !{!5237, !5227}
!5237 = !DITemplateTypeParameter(name: "Self", type: !470)
!5238 = !DILocation(line: 1967, column: 45, scope: !5231)
!5239 = !DILocation(line: 1971, column: 9, scope: !5231)
!5240 = !DILocation(line: 1972, column: 6, scope: !5231)
!5241 = distinct !DISubprogram(name: "collect<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h8c452d31131578e9E", scope: !362, file: !4894, line: 1967, type: !5242, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5246, retainedNodes: !5244)
!5242 = !DISubroutineType(types: !5243)
!5243 = !{!78, !306}
!5244 = !{!5245}
!5245 = !DILocalVariable(name: "self", arg: 1, scope: !5241, file: !4894, line: 1967, type: !306)
!5246 = !{!5247, !5227}
!5247 = !DITemplateTypeParameter(name: "Self", type: !306)
!5248 = !DILocation(line: 1967, column: 45, scope: !5241)
!5249 = !DILocation(line: 1971, column: 9, scope: !5241)
!5250 = !DILocation(line: 1972, column: 6, scope: !5241)
!5251 = distinct !DISubprogram(name: "collect<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17hc4c9fc8e9539358fE", scope: !362, file: !4894, line: 1967, type: !1584, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5254, retainedNodes: !5252)
!5252 = !{!5253}
!5253 = !DILocalVariable(name: "self", arg: 1, scope: !5251, file: !4894, line: 1967, type: !920)
!5254 = !{!5255, !5256}
!5255 = !DITemplateTypeParameter(name: "Self", type: !920)
!5256 = !DITemplateTypeParameter(name: "B", type: !1559)
!5257 = !DILocation(line: 1967, column: 45, scope: !5251)
!5258 = !DILocation(line: 1971, column: 9, scope: !5251)
!5259 = !DILocation(line: 1972, column: 6, scope: !5251)
!5260 = distinct !DISubprogram(name: "collect<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17hcabe6276b7c8417fE", scope: !362, file: !4894, line: 1967, type: !1557, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5263, retainedNodes: !5261)
!5261 = !{!5262}
!5262 = !DILocalVariable(name: "self", arg: 1, scope: !5260, file: !4894, line: 1967, type: !848)
!5263 = !{!5264, !5256}
!5264 = !DITemplateTypeParameter(name: "Self", type: !848)
!5265 = !DILocation(line: 1967, column: 45, scope: !5260)
!5266 = !DILocation(line: 1971, column: 9, scope: !5260)
!5267 = !DILocation(line: 1972, column: 6, scope: !5260)
!5268 = distinct !DISubprogram(name: "collect<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17he04e4d310b13a522E", scope: !362, file: !4894, line: 1967, type: !5269, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5273, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!78, !845}
!5271 = !{!5272}
!5272 = !DILocalVariable(name: "self", arg: 1, scope: !5268, file: !4894, line: 1967, type: !845)
!5273 = !{!5274, !5227}
!5274 = !DITemplateTypeParameter(name: "Self", type: !845)
!5275 = !DILocation(line: 1967, column: 45, scope: !5268)
!5276 = !DILocation(line: 1971, column: 9, scope: !5268)
!5277 = !DILocation(line: 1972, column: 6, scope: !5268)
!5278 = distinct !DISubprogram(name: "collect<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17hfa840492b54743baE", scope: !362, file: !4894, line: 1967, type: !5279, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5283, retainedNodes: !5281)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{!78, !391}
!5281 = !{!5282}
!5282 = !DILocalVariable(name: "self", arg: 1, scope: !5278, file: !4894, line: 1967, type: !391)
!5283 = !{!5284, !5227}
!5284 = !DITemplateTypeParameter(name: "Self", type: !391)
!5285 = !DILocation(line: 1967, column: 45, scope: !5278)
!5286 = !DILocation(line: 1971, column: 9, scope: !5278)
!5287 = !DILocation(line: 1972, column: 6, scope: !5278)
!5288 = distinct !DISubprogram(name: "for_each<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h0f7f73cc7291a65fE", scope: !362, file: !4894, line: 790, type: !5289, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5294, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{null, !391, !452}
!5291 = !{!5292, !5293}
!5292 = !DILocalVariable(name: "self", arg: 1, scope: !5288, file: !4894, line: 790, type: !391)
!5293 = !DILocalVariable(name: "f", arg: 2, scope: !5288, file: !4894, line: 790, type: !452)
!5294 = !{!5284, !5295}
!5295 = !DITemplateTypeParameter(name: "F", type: !452)
!5296 = !DILocation(line: 790, column: 20, scope: !5288)
!5297 = !DILocation(line: 790, column: 26, scope: !5288)
!5298 = !DILocation(line: 800, column: 23, scope: !5288)
!5299 = !DILocation(line: 800, column: 9, scope: !5288)
!5300 = !DILocation(line: 801, column: 6, scope: !5288)
!5301 = distinct !DISubprogram(name: "for_each<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h17b97303bd1a315bE", scope: !362, file: !4894, line: 790, type: !5302, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5307, retainedNodes: !5304)
!5302 = !DISubroutineType(types: !5303)
!5303 = !{null, !306, !367}
!5304 = !{!5305, !5306}
!5305 = !DILocalVariable(name: "self", arg: 1, scope: !5301, file: !4894, line: 790, type: !306)
!5306 = !DILocalVariable(name: "f", arg: 2, scope: !5301, file: !4894, line: 790, type: !367)
!5307 = !{!5247, !5308}
!5308 = !DITemplateTypeParameter(name: "F", type: !367)
!5309 = !DILocation(line: 790, column: 20, scope: !5301)
!5310 = !DILocation(line: 790, column: 26, scope: !5301)
!5311 = !DILocation(line: 800, column: 23, scope: !5301)
!5312 = !DILocation(line: 800, column: 9, scope: !5301)
!5313 = !DILocation(line: 801, column: 6, scope: !5301)
!5314 = distinct !DISubprogram(name: "for_each<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h4b5968fd9e3fccaeE", scope: !362, file: !4894, line: 790, type: !5315, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5320, retainedNodes: !5317)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !917, !932}
!5317 = !{!5318, !5319}
!5318 = !DILocalVariable(name: "self", arg: 1, scope: !5314, file: !4894, line: 790, type: !917)
!5319 = !DILocalVariable(name: "f", arg: 2, scope: !5314, file: !4894, line: 790, type: !932)
!5320 = !{!5226, !5321}
!5321 = !DITemplateTypeParameter(name: "F", type: !932)
!5322 = !DILocation(line: 790, column: 20, scope: !5314)
!5323 = !DILocation(line: 790, column: 26, scope: !5314)
!5324 = !DILocation(line: 800, column: 23, scope: !5314)
!5325 = !DILocation(line: 800, column: 9, scope: !5314)
!5326 = !DILocation(line: 801, column: 6, scope: !5314)
!5327 = distinct !DISubprogram(name: "for_each<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17had574af78bd97fe3E", scope: !362, file: !4894, line: 790, type: !5328, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5333, retainedNodes: !5330)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{null, !470, !492}
!5330 = !{!5331, !5332}
!5331 = !DILocalVariable(name: "self", arg: 1, scope: !5327, file: !4894, line: 790, type: !470)
!5332 = !DILocalVariable(name: "f", arg: 2, scope: !5327, file: !4894, line: 790, type: !492)
!5333 = !{!5237, !5334}
!5334 = !DITemplateTypeParameter(name: "F", type: !492)
!5335 = !DILocation(line: 790, column: 20, scope: !5327)
!5336 = !DILocation(line: 790, column: 26, scope: !5327)
!5337 = !DILocation(line: 800, column: 23, scope: !5327)
!5338 = !DILocation(line: 800, column: 9, scope: !5327)
!5339 = !DILocation(line: 801, column: 6, scope: !5327)
!5340 = distinct !DISubprogram(name: "for_each<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17hc76f61ea01929b3aE", scope: !362, file: !4894, line: 790, type: !5341, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5346, retainedNodes: !5343)
!5341 = !DISubroutineType(types: !5342)
!5342 = !{null, !845, !898}
!5343 = !{!5344, !5345}
!5344 = !DILocalVariable(name: "self", arg: 1, scope: !5340, file: !4894, line: 790, type: !845)
!5345 = !DILocalVariable(name: "f", arg: 2, scope: !5340, file: !4894, line: 790, type: !898)
!5346 = !{!5274, !5347}
!5347 = !DITemplateTypeParameter(name: "F", type: !898)
!5348 = !DILocation(line: 790, column: 20, scope: !5340)
!5349 = !DILocation(line: 790, column: 26, scope: !5340)
!5350 = !DILocation(line: 800, column: 23, scope: !5340)
!5351 = !DILocation(line: 800, column: 9, scope: !5340)
!5352 = !DILocation(line: 801, column: 6, scope: !5340)
!5353 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h0b617551f0eee1a1E", scope: !361, file: !4894, line: 796, type: !5354, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5358, retainedNodes: !5356)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!359, !367}
!5356 = !{!5357}
!5357 = !DILocalVariable(name: "f", arg: 1, scope: !5353, file: !4894, line: 796, type: !367)
!5358 = !{!1033, !5359}
!5359 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !367)
!5360 = !DILocation(line: 796, column: 20, scope: !5353)
!5361 = !DILocation(line: 798, column: 10, scope: !5353)
!5362 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h159987c5aeed0ea9E", scope: !361, file: !4894, line: 796, type: !5363, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5367, retainedNodes: !5365)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{!895, !898}
!5365 = !{!5366}
!5366 = !DILocalVariable(name: "f", arg: 1, scope: !5362, file: !4894, line: 796, type: !898)
!5367 = !{!1033, !5368}
!5368 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !898)
!5369 = !DILocation(line: 796, column: 20, scope: !5362)
!5370 = !DILocation(line: 798, column: 10, scope: !5362)
!5371 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h2471487740743592E", scope: !361, file: !4894, line: 796, type: !5372, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5376, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!449, !452}
!5374 = !{!5375}
!5375 = !DILocalVariable(name: "f", arg: 1, scope: !5371, file: !4894, line: 796, type: !452)
!5376 = !{!1033, !5377}
!5377 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !452)
!5378 = !DILocation(line: 796, column: 20, scope: !5371)
!5379 = !DILocation(line: 798, column: 10, scope: !5371)
!5380 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h2c0d79f555afc9efE", scope: !361, file: !4894, line: 796, type: !5381, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5385, retainedNodes: !5383)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!489, !492}
!5383 = !{!5384}
!5384 = !DILocalVariable(name: "f", arg: 1, scope: !5380, file: !4894, line: 796, type: !492)
!5385 = !{!1033, !5386}
!5386 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !492)
!5387 = !DILocation(line: 796, column: 20, scope: !5380)
!5388 = !DILocation(line: 798, column: 10, scope: !5380)
!5389 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17hf352eb8bffab4aacE", scope: !361, file: !4894, line: 796, type: !5390, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5394, retainedNodes: !5392)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!929, !932}
!5392 = !{!5393}
!5393 = !DILocalVariable(name: "f", arg: 1, scope: !5389, file: !4894, line: 796, type: !932)
!5394 = !{!1033, !5395}
!5395 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !932)
!5396 = !DILocation(line: 796, column: 20, scope: !5389)
!5397 = !DILocation(line: 798, column: 10, scope: !5389)
!5398 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h2b128d7671aea31cE", scope: !360, file: !4894, line: 797, type: !5399, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5367, retainedNodes: !5402)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{null, !5401, !7, !379}
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", baseType: !895, size: 64, align: 64, dwarfAddressSpace: 0)
!5402 = !{!5403, !5404, !5405}
!5403 = !DILocalVariable(name: "item", arg: 3, scope: !5398, file: !4894, line: 797, type: !379)
!5404 = !DILocalVariable(name: "f", scope: !5398, file: !4894, line: 796, type: !898, align: 8)
!5405 = !DILocalVariable(arg: 2, scope: !5398, file: !4894, line: 797, type: !7)
!5406 = !DILocation(line: 796, column: 24, scope: !5398)
!5407 = !DILocation(line: 797, column: 19, scope: !5398)
!5408 = !DILocation(line: 797, column: 23, scope: !5398)
!5409 = !DILocation(line: 797, column: 29, scope: !5398)
!5410 = !DILocation(line: 797, column: 36, scope: !5398)
!5411 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h504178873d095020E", scope: !360, file: !4894, line: 797, type: !5412, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5376, retainedNodes: !5415)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{null, !5414, !7, !379}
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", baseType: !449, size: 64, align: 64, dwarfAddressSpace: 0)
!5415 = !{!5416, !5417, !5418}
!5416 = !DILocalVariable(name: "item", arg: 3, scope: !5411, file: !4894, line: 797, type: !379)
!5417 = !DILocalVariable(name: "f", scope: !5411, file: !4894, line: 796, type: !452, align: 8)
!5418 = !DILocalVariable(arg: 2, scope: !5411, file: !4894, line: 797, type: !7)
!5419 = !DILocation(line: 796, column: 24, scope: !5411)
!5420 = !DILocation(line: 797, column: 19, scope: !5411)
!5421 = !DILocation(line: 797, column: 23, scope: !5411)
!5422 = !DILocation(line: 797, column: 29, scope: !5411)
!5423 = !DILocation(line: 797, column: 36, scope: !5411)
!5424 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h62f5d3aa93029042E", scope: !360, file: !4894, line: 797, type: !5425, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5394, retainedNodes: !5428)
!5425 = !DISubroutineType(types: !5426)
!5426 = !{null, !5427, !7, !379}
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", baseType: !929, size: 64, align: 64, dwarfAddressSpace: 0)
!5428 = !{!5429, !5430, !5431}
!5429 = !DILocalVariable(name: "item", arg: 3, scope: !5424, file: !4894, line: 797, type: !379)
!5430 = !DILocalVariable(name: "f", scope: !5424, file: !4894, line: 796, type: !932, align: 8)
!5431 = !DILocalVariable(arg: 2, scope: !5424, file: !4894, line: 797, type: !7)
!5432 = !DILocation(line: 796, column: 24, scope: !5424)
!5433 = !DILocation(line: 797, column: 19, scope: !5424)
!5434 = !DILocation(line: 797, column: 23, scope: !5424)
!5435 = !DILocation(line: 797, column: 29, scope: !5424)
!5436 = !DILocation(line: 797, column: 36, scope: !5424)
!5437 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h7e73bc34fe40e5a7E", scope: !360, file: !4894, line: 797, type: !5438, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5385, retainedNodes: !5441)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{null, !5440, !7, !379}
!5440 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", baseType: !489, size: 64, align: 64, dwarfAddressSpace: 0)
!5441 = !{!5442, !5443, !5444}
!5442 = !DILocalVariable(name: "item", arg: 3, scope: !5437, file: !4894, line: 797, type: !379)
!5443 = !DILocalVariable(name: "f", scope: !5437, file: !4894, line: 796, type: !492, align: 8)
!5444 = !DILocalVariable(arg: 2, scope: !5437, file: !4894, line: 797, type: !7)
!5445 = !DILocation(line: 796, column: 24, scope: !5437)
!5446 = !DILocation(line: 797, column: 19, scope: !5437)
!5447 = !DILocation(line: 797, column: 23, scope: !5437)
!5448 = !DILocation(line: 797, column: 29, scope: !5437)
!5449 = !DILocation(line: 797, column: 36, scope: !5437)
!5450 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hd2deb29a61801fd2E", scope: !360, file: !4894, line: 797, type: !5451, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5358, retainedNodes: !5454)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{null, !5453, !7, !379}
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", baseType: !359, size: 64, align: 64, dwarfAddressSpace: 0)
!5454 = !{!5455, !5456, !5457}
!5455 = !DILocalVariable(name: "item", arg: 3, scope: !5450, file: !4894, line: 797, type: !379)
!5456 = !DILocalVariable(name: "f", scope: !5450, file: !4894, line: 796, type: !367, align: 8)
!5457 = !DILocalVariable(arg: 2, scope: !5450, file: !4894, line: 797, type: !7)
!5458 = !DILocation(line: 796, column: 24, scope: !5450)
!5459 = !DILocation(line: 797, column: 19, scope: !5450)
!5460 = !DILocation(line: 797, column: 23, scope: !5450)
!5461 = !DILocation(line: 797, column: 29, scope: !5450)
!5462 = !DILocation(line: 797, column: 36, scope: !5450)
!5463 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>, core::ops::control_flow::ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h0f9f1a459c628c4dE", scope: !362, file: !4894, line: 2362, type: !5464, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5479, retainedNodes: !5467)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!1001, !5466, !7, !1070}
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !920, size: 64, align: 64, dwarfAddressSpace: 0)
!5467 = !{!5468, !5469, !5470, !5471, !5473, !5475, !5477}
!5468 = !DILocalVariable(name: "self", arg: 1, scope: !5463, file: !4894, line: 2362, type: !5466)
!5469 = !DILocalVariable(name: "init", arg: 2, scope: !5463, file: !4894, line: 2362, type: !7)
!5470 = !DILocalVariable(name: "f", arg: 3, scope: !5463, file: !4894, line: 2362, type: !1070)
!5471 = !DILocalVariable(name: "accum", scope: !5472, file: !4894, line: 2368, type: !7, align: 1)
!5472 = distinct !DILexicalBlock(scope: !5463, file: !4894, line: 2368, column: 9)
!5473 = !DILocalVariable(name: "x", scope: !5474, file: !4894, line: 2369, type: !1024, align: 4)
!5474 = distinct !DILexicalBlock(scope: !5472, file: !4894, line: 2369, column: 41)
!5475 = !DILocalVariable(name: "residual", scope: !5476, file: !4894, line: 2370, type: !1895, align: 1)
!5476 = distinct !DILexicalBlock(scope: !5474, file: !4894, line: 2370, column: 32)
!5477 = !DILocalVariable(name: "val", scope: !5478, file: !4894, line: 2370, type: !7, align: 1)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !4894, line: 2370, column: 21)
!5479 = !{!5255, !964, !5480, !5481}
!5480 = !DITemplateTypeParameter(name: "F", type: !1070)
!5481 = !DITemplateTypeParameter(name: "R", type: !1001)
!5482 = !DILocation(line: 2362, column: 26, scope: !5463)
!5483 = !DILocation(line: 2362, column: 37, scope: !5463)
!5484 = !DILocation(line: 2362, column: 46, scope: !5463)
!5485 = !DILocation(line: 2368, column: 13, scope: !5472)
!5486 = !DILocation(line: 2369, column: 24, scope: !5474)
!5487 = !DILocation(line: 2370, column: 32, scope: !5476)
!5488 = !DILocation(line: 2370, column: 21, scope: !5478)
!5489 = !DILocation(line: 2369, column: 9, scope: !5472)
!5490 = !DILocation(line: 2369, column: 29, scope: !5474)
!5491 = !DILocation(line: 2369, column: 19, scope: !5474)
!5492 = !DILocation(line: 2370, column: 21, scope: !5474)
!5493 = !DILocation(line: 2372, column: 15, scope: !5472)
!5494 = !DILocation(line: 2373, column: 5, scope: !5463)
!5495 = !DILocation(line: 2370, column: 21, scope: !5476)
!5496 = !DILocation(line: 2373, column: 6, scope: !5463)
!5497 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>, core::ops::control_flow::ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h6b75e17449d59d0cE", scope: !362, file: !4894, line: 2362, type: !5498, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5513, retainedNodes: !5501)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!1001, !5500, !7, !1019}
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !848, size: 64, align: 64, dwarfAddressSpace: 0)
!5501 = !{!5502, !5503, !5504, !5505, !5507, !5509, !5511}
!5502 = !DILocalVariable(name: "self", arg: 1, scope: !5497, file: !4894, line: 2362, type: !5500)
!5503 = !DILocalVariable(name: "init", arg: 2, scope: !5497, file: !4894, line: 2362, type: !7)
!5504 = !DILocalVariable(name: "f", arg: 3, scope: !5497, file: !4894, line: 2362, type: !1019)
!5505 = !DILocalVariable(name: "accum", scope: !5506, file: !4894, line: 2368, type: !7, align: 1)
!5506 = distinct !DILexicalBlock(scope: !5497, file: !4894, line: 2368, column: 9)
!5507 = !DILocalVariable(name: "x", scope: !5508, file: !4894, line: 2369, type: !1024, align: 4)
!5508 = distinct !DILexicalBlock(scope: !5506, file: !4894, line: 2369, column: 41)
!5509 = !DILocalVariable(name: "residual", scope: !5510, file: !4894, line: 2370, type: !1895, align: 1)
!5510 = distinct !DILexicalBlock(scope: !5508, file: !4894, line: 2370, column: 32)
!5511 = !DILocalVariable(name: "val", scope: !5512, file: !4894, line: 2370, type: !7, align: 1)
!5512 = distinct !DILexicalBlock(scope: !5508, file: !4894, line: 2370, column: 21)
!5513 = !{!5264, !964, !5514, !5481}
!5514 = !DITemplateTypeParameter(name: "F", type: !1019)
!5515 = !DILocation(line: 2362, column: 26, scope: !5497)
!5516 = !DILocation(line: 2362, column: 37, scope: !5497)
!5517 = !DILocation(line: 2362, column: 46, scope: !5497)
!5518 = !DILocation(line: 2368, column: 13, scope: !5506)
!5519 = !DILocation(line: 2369, column: 24, scope: !5508)
!5520 = !DILocation(line: 2370, column: 32, scope: !5510)
!5521 = !DILocation(line: 2370, column: 21, scope: !5512)
!5522 = !DILocation(line: 2369, column: 9, scope: !5506)
!5523 = !DILocation(line: 2369, column: 29, scope: !5508)
!5524 = !DILocation(line: 2369, column: 19, scope: !5508)
!5525 = !DILocation(line: 2370, column: 21, scope: !5508)
!5526 = !DILocation(line: 2372, column: 15, scope: !5506)
!5527 = !DILocation(line: 2373, column: 5, scope: !5497)
!5528 = !DILocation(line: 2370, column: 21, scope: !5510)
!5529 = !DILocation(line: 2373, column: 6, scope: !5497)
!5530 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::find::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>, core::ops::control_flow::ControlFlow<char, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hdfbd6ecb3e6954beE", scope: !362, file: !4894, line: 2362, type: !5531, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5545, retainedNodes: !5533)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!1920, !4815, !7, !5069}
!5533 = !{!5534, !5535, !5536, !5537, !5539, !5541, !5543}
!5534 = !DILocalVariable(name: "self", arg: 1, scope: !5530, file: !4894, line: 2362, type: !4815)
!5535 = !DILocalVariable(name: "init", arg: 2, scope: !5530, file: !4894, line: 2362, type: !7)
!5536 = !DILocalVariable(name: "f", arg: 3, scope: !5530, file: !4894, line: 2362, type: !5069)
!5537 = !DILocalVariable(name: "accum", scope: !5538, file: !4894, line: 2368, type: !7, align: 1)
!5538 = distinct !DILexicalBlock(scope: !5530, file: !4894, line: 2368, column: 9)
!5539 = !DILocalVariable(name: "x", scope: !5540, file: !4894, line: 2369, type: !379, align: 4)
!5540 = distinct !DILexicalBlock(scope: !5538, file: !4894, line: 2369, column: 41)
!5541 = !DILocalVariable(name: "residual", scope: !5542, file: !4894, line: 2370, type: !1934, align: 4)
!5542 = distinct !DILexicalBlock(scope: !5540, file: !4894, line: 2370, column: 32)
!5543 = !DILocalVariable(name: "val", scope: !5544, file: !4894, line: 2370, type: !7, align: 1)
!5544 = distinct !DILexicalBlock(scope: !5540, file: !4894, line: 2370, column: 21)
!5545 = !{!4820, !964, !5546, !4876}
!5546 = !DITemplateTypeParameter(name: "F", type: !5069)
!5547 = !DILocation(line: 2362, column: 26, scope: !5530)
!5548 = !DILocation(line: 2362, column: 37, scope: !5530)
!5549 = !DILocation(line: 2362, column: 46, scope: !5530)
!5550 = !DILocation(line: 2368, column: 13, scope: !5538)
!5551 = !DILocation(line: 2370, column: 21, scope: !5544)
!5552 = !DILocation(line: 2369, column: 9, scope: !5538)
!5553 = !DILocation(line: 2369, column: 29, scope: !5540)
!5554 = !DILocation(line: 2369, column: 19, scope: !5540)
!5555 = !DILocation(line: 2369, column: 24, scope: !5540)
!5556 = !DILocation(line: 2370, column: 21, scope: !5540)
!5557 = !DILocation(line: 2372, column: 15, scope: !5538)
!5558 = !DILocation(line: 2373, column: 5, scope: !5530)
!5559 = !DILocation(line: 2370, column: 32, scope: !5540)
!5560 = !DILocation(line: 2370, column: 32, scope: !5542)
!5561 = !DILocation(line: 2370, column: 21, scope: !5542)
!5562 = !DILocation(line: 2373, column: 6, scope: !5530)
!5563 = distinct !DISubprogram(name: "new<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3ae06481c80f4fe4E", scope: !1393, file: !1374, line: 24, type: !4907, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1414, declaration: !5564, retainedNodes: !5565)
!5564 = !DISubprogram(name: "new<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3ae06481c80f4fe4E", scope: !1393, file: !1374, line: 24, type: !4907, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1414)
!5565 = !{!5566, !5567}
!5566 = !DILocalVariable(name: "iter", arg: 1, scope: !5563, file: !1374, line: 24, type: !1396)
!5567 = !DILocalVariable(name: "predicate", arg: 2, scope: !5563, file: !1374, line: 24, type: !1410)
!5568 = !DILocation(line: 24, column: 32, scope: !5563)
!5569 = !DILocation(line: 24, column: 41, scope: !5563)
!5570 = !DILocation(line: 25, column: 9, scope: !5563)
!5571 = !DILocation(line: 26, column: 6, scope: !5563)
!5572 = distinct !DISubprogram(name: "new<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h8f1878d7415a7576E", scope: !1437, file: !1374, line: 24, type: !4895, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1449, declaration: !5573, retainedNodes: !5574)
!5573 = !DISubprogram(name: "new<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h8f1878d7415a7576E", scope: !1437, file: !1374, line: 24, type: !4895, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1449)
!5574 = !{!5575, !5576}
!5575 = !DILocalVariable(name: "iter", arg: 1, scope: !5572, file: !1374, line: 24, type: !1440)
!5576 = !DILocalVariable(name: "predicate", arg: 2, scope: !5572, file: !1374, line: 24, type: !1448)
!5577 = !DILocation(line: 24, column: 32, scope: !5572)
!5578 = !DILocation(line: 24, column: 41, scope: !5572)
!5579 = !DILocation(line: 25, column: 9, scope: !5572)
!5580 = !DILocation(line: 26, column: 6, scope: !5572)
!5581 = distinct !DISubprogram(name: "try_process<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, char, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, core::result::{impl#25}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>, alloc::string::String>", linkageName: "_ZN4core4iter8adapters11try_process17hbcfc53cefae4d526E", scope: !302, file: !948, line: 152, type: !5582, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5595, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{!1559, !848, !1610}
!5584 = !{!5585, !5586, !5587, !5589, !5591, !5593}
!5585 = !DILocalVariable(name: "iter", arg: 1, scope: !5581, file: !948, line: 152, type: !848)
!5586 = !DILocalVariable(name: "f", arg: 2, scope: !5581, file: !948, line: 152, type: !1610)
!5587 = !DILocalVariable(name: "residual", scope: !5588, file: !948, line: 158, type: !856, align: 2)
!5588 = distinct !DILexicalBlock(scope: !5581, file: !948, line: 158, column: 5)
!5589 = !DILocalVariable(name: "shunt", scope: !5590, file: !948, line: 159, type: !845, align: 8)
!5590 = distinct !DILexicalBlock(scope: !5588, file: !948, line: 159, column: 5)
!5591 = !DILocalVariable(name: "value", scope: !5592, file: !948, line: 160, type: !78, align: 8)
!5592 = distinct !DILexicalBlock(scope: !5590, file: !948, line: 160, column: 5)
!5593 = !DILocalVariable(name: "r", scope: !5594, file: !948, line: 162, type: !864, align: 2)
!5594 = distinct !DILexicalBlock(scope: !5592, file: !948, line: 162, column: 9)
!5595 = !{!893, !1033, !894, !5596, !5597}
!5596 = !DITemplateTypeParameter(name: "F", type: !1610)
!5597 = !DITemplateTypeParameter(name: "U", type: !78)
!5598 = !DILocation(line: 152, column: 42, scope: !5581)
!5599 = !DILocation(line: 152, column: 51, scope: !5581)
!5600 = !DILocation(line: 158, column: 9, scope: !5588)
!5601 = !DILocation(line: 159, column: 9, scope: !5590)
!5602 = !DILocation(line: 160, column: 9, scope: !5592)
!5603 = !DILocation(line: 158, column: 9, scope: !5581)
!5604 = !DILocation(line: 158, column: 24, scope: !5581)
!5605 = !DILocation(line: 159, column: 17, scope: !5588)
!5606 = !DILocation(line: 160, column: 17, scope: !5590)
!5607 = !DILocation(line: 160, column: 24, scope: !5590)
!5608 = !DILocation(line: 161, column: 11, scope: !5592)
!5609 = !DILocation(line: 161, column: 5, scope: !5592)
!5610 = !DILocation(line: 163, column: 34, scope: !5592)
!5611 = !DILocation(line: 163, column: 17, scope: !5592)
!5612 = !DILocation(line: 162, column: 14, scope: !5592)
!5613 = !DILocation(line: 162, column: 14, scope: !5594)
!5614 = !DILocation(line: 162, column: 20, scope: !5594)
!5615 = !DILocation(line: 165, column: 1, scope: !5590)
!5616 = !DILocation(line: 165, column: 2, scope: !5581)
!5617 = distinct !DISubprogram(name: "try_process<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, char, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, core::result::{impl#25}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>, alloc::string::String>", linkageName: "_ZN4core4iter8adapters11try_process17hec6061fc37721b99E", scope: !302, file: !948, line: 152, type: !5618, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5631, retainedNodes: !5620)
!5618 = !DISubroutineType(types: !5619)
!5619 = !{!1559, !920, !1598}
!5620 = !{!5621, !5622, !5623, !5625, !5627, !5629}
!5621 = !DILocalVariable(name: "iter", arg: 1, scope: !5617, file: !948, line: 152, type: !920)
!5622 = !DILocalVariable(name: "f", arg: 2, scope: !5617, file: !948, line: 152, type: !1598)
!5623 = !DILocalVariable(name: "residual", scope: !5624, file: !948, line: 158, type: !856, align: 2)
!5624 = distinct !DILexicalBlock(scope: !5617, file: !948, line: 158, column: 5)
!5625 = !DILocalVariable(name: "shunt", scope: !5626, file: !948, line: 159, type: !917, align: 8)
!5626 = distinct !DILexicalBlock(scope: !5624, file: !948, line: 159, column: 5)
!5627 = !DILocalVariable(name: "value", scope: !5628, file: !948, line: 160, type: !78, align: 8)
!5628 = distinct !DILexicalBlock(scope: !5626, file: !948, line: 160, column: 5)
!5629 = !DILocalVariable(name: "r", scope: !5630, file: !948, line: 162, type: !864, align: 2)
!5630 = distinct !DILexicalBlock(scope: !5628, file: !948, line: 162, column: 9)
!5631 = !{!928, !1033, !894, !5632, !5597}
!5632 = !DITemplateTypeParameter(name: "F", type: !1598)
!5633 = !DILocation(line: 152, column: 42, scope: !5617)
!5634 = !DILocation(line: 152, column: 51, scope: !5617)
!5635 = !DILocation(line: 158, column: 9, scope: !5624)
!5636 = !DILocation(line: 159, column: 9, scope: !5626)
!5637 = !DILocation(line: 160, column: 9, scope: !5628)
!5638 = !DILocation(line: 158, column: 9, scope: !5617)
!5639 = !DILocation(line: 158, column: 24, scope: !5617)
!5640 = !DILocation(line: 159, column: 17, scope: !5624)
!5641 = !DILocation(line: 160, column: 17, scope: !5626)
!5642 = !DILocation(line: 160, column: 24, scope: !5626)
!5643 = !DILocation(line: 161, column: 11, scope: !5628)
!5644 = !DILocation(line: 161, column: 5, scope: !5628)
!5645 = !DILocation(line: 163, column: 34, scope: !5628)
!5646 = !DILocation(line: 163, column: 17, scope: !5628)
!5647 = !DILocation(line: 162, column: 14, scope: !5628)
!5648 = !DILocation(line: 162, column: 14, scope: !5630)
!5649 = !DILocation(line: 162, column: 20, scope: !5630)
!5650 = !DILocation(line: 165, column: 1, scope: !5626)
!5651 = !DILocation(line: 165, column: 2, scope: !5617)
!5652 = distinct !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h0fac4006151a53c1E", scope: !470, file: !299, line: 68, type: !4998, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !486, declaration: !5653, retainedNodes: !5654)
!5653 = !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h0fac4006151a53c1E", scope: !470, file: !299, line: 68, type: !4998, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !486)
!5654 = !{!5655, !5656}
!5655 = !DILocalVariable(name: "iter", arg: 1, scope: !5652, file: !299, line: 68, type: !473)
!5656 = !DILocalVariable(name: "f", arg: 2, scope: !5652, file: !299, line: 68, type: !484)
!5657 = !DILocation(line: 68, column: 32, scope: !5652)
!5658 = !DILocation(line: 68, column: 41, scope: !5652)
!5659 = !DILocation(line: 69, column: 9, scope: !5652)
!5660 = !DILocation(line: 70, column: 6, scope: !5652)
!5661 = distinct !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1625ede945fe242cE", scope: !391, file: !299, line: 68, type: !4986, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !446, declaration: !5662, retainedNodes: !5663)
!5662 = !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1625ede945fe242cE", scope: !391, file: !299, line: 68, type: !4986, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !446)
!5663 = !{!5664, !5665}
!5664 = !DILocalVariable(name: "iter", arg: 1, scope: !5661, file: !299, line: 68, type: !394)
!5665 = !DILocalVariable(name: "f", arg: 2, scope: !5661, file: !299, line: 68, type: !444)
!5666 = !DILocation(line: 68, column: 32, scope: !5661)
!5667 = !DILocation(line: 68, column: 41, scope: !5661)
!5668 = !DILocation(line: 69, column: 9, scope: !5661)
!5669 = !DILocation(line: 70, column: 6, scope: !5661)
!5670 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h71a4ef8cde1a10baE", scope: !510, file: !299, line: 68, type: !5010, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !533, declaration: !5671, retainedNodes: !5672)
!5671 = !DISubprogram(name: "new<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h71a4ef8cde1a10baE", scope: !510, file: !299, line: 68, type: !5010, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !533)
!5672 = !{!5673, !5674}
!5673 = !DILocalVariable(name: "iter", arg: 1, scope: !5670, file: !299, line: 68, type: !513)
!5674 = !DILocalVariable(name: "f", arg: 2, scope: !5670, file: !299, line: 68, type: !530)
!5675 = !DILocation(line: 68, column: 32, scope: !5670)
!5676 = !DILocation(line: 68, column: 41, scope: !5670)
!5677 = !DILocation(line: 70, column: 6, scope: !5670)
!5678 = distinct !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h754aeb3a8ba5ed99E", scope: !615, file: !299, line: 68, type: !4918, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !624, declaration: !5679, retainedNodes: !5680)
!5679 = !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h754aeb3a8ba5ed99E", scope: !615, file: !299, line: 68, type: !4918, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !624)
!5680 = !{!5681, !5682}
!5681 = !DILocalVariable(name: "iter", arg: 1, scope: !5678, file: !299, line: 68, type: !618)
!5682 = !DILocalVariable(name: "f", arg: 2, scope: !5678, file: !299, line: 68, type: !434)
!5683 = !DILocation(line: 68, column: 32, scope: !5678)
!5684 = !DILocation(line: 68, column: 41, scope: !5678)
!5685 = !DILocation(line: 69, column: 9, scope: !5678)
!5686 = !DILocation(line: 70, column: 6, scope: !5678)
!5687 = distinct !DISubprogram(name: "new<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h841871c4dbd96cb9E", scope: !476, file: !299, line: 68, type: !4964, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !437, declaration: !5688, retainedNodes: !5689)
!5688 = !DISubprogram(name: "new<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h841871c4dbd96cb9E", scope: !476, file: !299, line: 68, type: !4964, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !437)
!5689 = !{!5690, !5691}
!5690 = !DILocalVariable(name: "iter", arg: 1, scope: !5687, file: !299, line: 68, type: !400)
!5691 = !DILocalVariable(name: "f", arg: 2, scope: !5687, file: !299, line: 68, type: !434)
!5692 = !DILocation(line: 68, column: 32, scope: !5687)
!5693 = !DILocation(line: 68, column: 41, scope: !5687)
!5694 = !DILocation(line: 70, column: 6, scope: !5687)
!5695 = distinct !DISubprogram(name: "new<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h935911006130b1f1E", scope: !397, file: !299, line: 68, type: !4976, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !437, declaration: !5696, retainedNodes: !5697)
!5696 = !DISubprogram(name: "new<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h935911006130b1f1E", scope: !397, file: !299, line: 68, type: !4976, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !437)
!5697 = !{!5698, !5699}
!5698 = !DILocalVariable(name: "iter", arg: 1, scope: !5695, file: !299, line: 68, type: !400)
!5699 = !DILocalVariable(name: "f", arg: 2, scope: !5695, file: !299, line: 68, type: !434)
!5700 = !DILocation(line: 68, column: 32, scope: !5695)
!5701 = !DILocation(line: 68, column: 41, scope: !5695)
!5702 = !DILocation(line: 70, column: 6, scope: !5695)
!5703 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h98019a832000c72aE", scope: !557, file: !299, line: 68, type: !4940, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !579, declaration: !5704, retainedNodes: !5705)
!5704 = !DISubprogram(name: "new<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h98019a832000c72aE", scope: !557, file: !299, line: 68, type: !4940, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !579)
!5705 = !{!5706, !5707}
!5706 = !DILocalVariable(name: "iter", arg: 1, scope: !5703, file: !299, line: 68, type: !560)
!5707 = !DILocalVariable(name: "f", arg: 2, scope: !5703, file: !299, line: 68, type: !576)
!5708 = !DILocation(line: 68, column: 32, scope: !5703)
!5709 = !DILocation(line: 68, column: 41, scope: !5703)
!5710 = !DILocation(line: 70, column: 6, scope: !5703)
!5711 = distinct !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb3ea21499cc52787E", scope: !306, file: !299, line: 68, type: !4952, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !356, declaration: !5712, retainedNodes: !5713)
!5712 = !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb3ea21499cc52787E", scope: !306, file: !299, line: 68, type: !4952, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !356)
!5713 = !{!5714, !5715}
!5714 = !DILocalVariable(name: "iter", arg: 1, scope: !5711, file: !299, line: 68, type: !309)
!5715 = !DILocalVariable(name: "f", arg: 2, scope: !5711, file: !299, line: 68, type: !353)
!5716 = !DILocation(line: 68, column: 32, scope: !5711)
!5717 = !DILocation(line: 68, column: 41, scope: !5711)
!5718 = !DILocation(line: 69, column: 9, scope: !5711)
!5719 = !DILocation(line: 70, column: 6, scope: !5711)
!5720 = distinct !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf3fd9eaa5277d941E", scope: !637, file: !299, line: 68, type: !4930, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !624, declaration: !5721, retainedNodes: !5722)
!5721 = !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf3fd9eaa5277d941E", scope: !637, file: !299, line: 68, type: !4930, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !624)
!5722 = !{!5723, !5724}
!5723 = !DILocalVariable(name: "iter", arg: 1, scope: !5720, file: !299, line: 68, type: !618)
!5724 = !DILocalVariable(name: "f", arg: 2, scope: !5720, file: !299, line: 68, type: !434)
!5725 = !DILocation(line: 68, column: 32, scope: !5720)
!5726 = !DILocation(line: 68, column: 41, scope: !5720)
!5727 = !DILocation(line: 69, column: 9, scope: !5720)
!5728 = !DILocation(line: 70, column: 6, scope: !5720)
!5729 = distinct !DISubprogram(name: "map_fold<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17h0debb8688aedadfbE", scope: !301, file: !299, line: 84, type: !5730, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5735, retainedNodes: !5732)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{null, !530, !536}
!5732 = !{!5733, !5734}
!5733 = !DILocalVariable(name: "f", arg: 1, scope: !5729, file: !299, line: 85, type: !530)
!5734 = !DILocalVariable(name: "g", arg: 2, scope: !5729, file: !299, line: 86, type: !536)
!5735 = !{!527, !545, !546, !5736, !5737}
!5736 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !530)
!5737 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !536)
!5738 = !DILocation(line: 85, column: 5, scope: !5729)
!5739 = !DILocation(line: 86, column: 5, scope: !5729)
!5740 = !DILocation(line: 89, column: 2, scope: !5729)
!5741 = distinct !DISubprogram(name: "map_fold<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17hb832041a4efbc5a4E", scope: !301, file: !299, line: 84, type: !5742, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5747, retainedNodes: !5744)
!5742 = !DISubroutineType(types: !5743)
!5743 = !{!5157, !444, !449}
!5744 = !{!5745, !5746}
!5745 = !DILocalVariable(name: "f", arg: 1, scope: !5741, file: !299, line: 85, type: !444)
!5746 = !DILocalVariable(name: "g", arg: 2, scope: !5741, file: !299, line: 86, type: !449)
!5747 = !{!1630, !378, !380, !5748, !5749}
!5748 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !444)
!5749 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !449)
!5750 = !DILocation(line: 85, column: 5, scope: !5741)
!5751 = !DILocation(line: 86, column: 5, scope: !5741)
!5752 = !DILocation(line: 89, column: 2, scope: !5741)
!5753 = distinct !DISubprogram(name: "map_fold<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17hc2e7bfde55dd6f3bE", scope: !301, file: !299, line: 84, type: !5754, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5759, retainedNodes: !5756)
!5754 = !DISubroutineType(types: !5755)
!5755 = !{!5100, !353, !359}
!5756 = !{!5757, !5758}
!5757 = !DILocalVariable(name: "f", arg: 1, scope: !5753, file: !299, line: 85, type: !353)
!5758 = !DILocalVariable(name: "g", arg: 2, scope: !5753, file: !299, line: 86, type: !359)
!5759 = !{!1630, !378, !380, !5760, !5761}
!5760 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !353)
!5761 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !359)
!5762 = !DILocation(line: 85, column: 5, scope: !5753)
!5763 = !DILocation(line: 86, column: 5, scope: !5753)
!5764 = !DILocation(line: 89, column: 2, scope: !5753)
!5765 = distinct !DISubprogram(name: "map_fold<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17he407e15938df864bE", scope: !301, file: !299, line: 84, type: !5766, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5771, retainedNodes: !5768)
!5766 = !DISubroutineType(types: !5767)
!5767 = !{!5129, !484, !489}
!5768 = !{!5769, !5770}
!5769 = !DILocalVariable(name: "f", arg: 1, scope: !5765, file: !299, line: 85, type: !484)
!5770 = !DILocalVariable(name: "g", arg: 2, scope: !5765, file: !299, line: 86, type: !489)
!5771 = !{!1630, !378, !380, !5772, !5773}
!5772 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !484)
!5773 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !489)
!5774 = !DILocation(line: 85, column: 5, scope: !5765)
!5775 = !DILocation(line: 86, column: 5, scope: !5765)
!5776 = !DILocation(line: 89, column: 2, scope: !5765)
!5777 = distinct !DISubprogram(name: "map_fold<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17he58b8026ff44e7ecE", scope: !301, file: !299, line: 84, type: !5778, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5783, retainedNodes: !5780)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{null, !576, !582}
!5780 = !{!5781, !5782}
!5781 = !DILocalVariable(name: "f", arg: 1, scope: !5777, file: !299, line: 85, type: !576)
!5782 = !DILocalVariable(name: "g", arg: 2, scope: !5777, file: !299, line: 86, type: !582)
!5783 = !{!573, !590, !591, !5784, !5785}
!5784 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !576)
!5785 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !582)
!5786 = !DILocation(line: 85, column: 5, scope: !5777)
!5787 = !DILocation(line: 86, column: 5, scope: !5777)
!5788 = !DILocation(line: 89, column: 2, scope: !5777)
!5789 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h3536803cec0d2751E", scope: !5101, file: !299, line: 88, type: !5790, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5771, retainedNodes: !5793)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{null, !5792, !7, !1024}
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", baseType: !5129, size: 64, align: 64, dwarfAddressSpace: 0)
!5793 = !{!5794, !5795, !5796, !5797}
!5794 = !DILocalVariable(name: "acc", arg: 2, scope: !5789, file: !299, line: 88, type: !7)
!5795 = !DILocalVariable(name: "elt", arg: 3, scope: !5789, file: !299, line: 88, type: !1024)
!5796 = !DILocalVariable(name: "g", scope: !5789, file: !299, line: 86, type: !489, align: 8)
!5797 = !DILocalVariable(name: "f", scope: !5789, file: !299, line: 85, type: !484, align: 1)
!5798 = !DILocation(line: 86, column: 9, scope: !5789)
!5799 = !DILocation(line: 85, column: 9, scope: !5789)
!5800 = !DILocation(line: 88, column: 11, scope: !5789)
!5801 = !DILocation(line: 88, column: 16, scope: !5789)
!5802 = !DILocation(line: 88, column: 28, scope: !5789)
!5803 = !DILocation(line: 88, column: 21, scope: !5789)
!5804 = !DILocation(line: 88, column: 35, scope: !5789)
!5805 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hc9a52ef0f09c24d4E", scope: !5101, file: !299, line: 88, type: !5806, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5747, retainedNodes: !5809)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{null, !5808, !7, !1024}
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", baseType: !5157, size: 64, align: 64, dwarfAddressSpace: 0)
!5809 = !{!5810, !5811, !5812, !5813}
!5810 = !DILocalVariable(name: "acc", arg: 2, scope: !5805, file: !299, line: 88, type: !7)
!5811 = !DILocalVariable(name: "elt", arg: 3, scope: !5805, file: !299, line: 88, type: !1024)
!5812 = !DILocalVariable(name: "g", scope: !5805, file: !299, line: 86, type: !449, align: 8)
!5813 = !DILocalVariable(name: "f", scope: !5805, file: !299, line: 85, type: !444, align: 1)
!5814 = !DILocation(line: 86, column: 9, scope: !5805)
!5815 = !DILocation(line: 85, column: 9, scope: !5805)
!5816 = !DILocation(line: 88, column: 11, scope: !5805)
!5817 = !DILocation(line: 88, column: 16, scope: !5805)
!5818 = !DILocation(line: 88, column: 28, scope: !5805)
!5819 = !DILocation(line: 88, column: 21, scope: !5805)
!5820 = !DILocation(line: 88, column: 35, scope: !5805)
!5821 = distinct !DISubprogram(name: "{closure#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd0380c8633060cd6E", scope: !5101, file: !299, line: 88, type: !5822, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5735, retainedNodes: !5829)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!45, !5824, !45, !528}
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", baseType: !5825, size: 64, align: 64, dwarfAddressSpace: 0)
!5825 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", scope: !5101, file: !2, align: 8, elements: !5826, templateParams: !15, identifier: "8ae230e6f94ef91e77893a22a928526e")
!5826 = !{!5827, !5828}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5825, file: !2, baseType: !536, align: 8)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5825, file: !2, baseType: !530, align: 8)
!5829 = !{!5830, !5831, !5832, !5833}
!5830 = !DILocalVariable(name: "acc", arg: 2, scope: !5821, file: !299, line: 88, type: !45)
!5831 = !DILocalVariable(name: "elt", arg: 3, scope: !5821, file: !299, line: 88, type: !528)
!5832 = !DILocalVariable(name: "g", scope: !5821, file: !299, line: 86, type: !536, align: 1)
!5833 = !DILocalVariable(name: "f", scope: !5821, file: !299, line: 85, type: !530, align: 1)
!5834 = !DILocation(line: 86, column: 9, scope: !5821)
!5835 = !DILocation(line: 85, column: 9, scope: !5821)
!5836 = !DILocation(line: 88, column: 11, scope: !5821)
!5837 = !DILocation(line: 88, column: 16, scope: !5821)
!5838 = !DILocation(line: 88, column: 28, scope: !5821)
!5839 = !DILocation(line: 88, column: 21, scope: !5821)
!5840 = !DILocation(line: 88, column: 35, scope: !5821)
!5841 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he6070893438acd21E", scope: !5101, file: !299, line: 88, type: !5842, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5759, retainedNodes: !5845)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{null, !5844, !7, !1024}
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", baseType: !5100, size: 64, align: 64, dwarfAddressSpace: 0)
!5845 = !{!5846, !5847, !5848, !5849}
!5846 = !DILocalVariable(name: "acc", arg: 2, scope: !5841, file: !299, line: 88, type: !7)
!5847 = !DILocalVariable(name: "elt", arg: 3, scope: !5841, file: !299, line: 88, type: !1024)
!5848 = !DILocalVariable(name: "g", scope: !5841, file: !299, line: 86, type: !359, align: 8)
!5849 = !DILocalVariable(name: "f", scope: !5841, file: !299, line: 85, type: !353, align: 1)
!5850 = !DILocation(line: 86, column: 9, scope: !5841)
!5851 = !DILocation(line: 85, column: 9, scope: !5841)
!5852 = !DILocation(line: 88, column: 11, scope: !5841)
!5853 = !DILocation(line: 88, column: 16, scope: !5841)
!5854 = !DILocation(line: 88, column: 28, scope: !5841)
!5855 = !DILocation(line: 88, column: 21, scope: !5841)
!5856 = !DILocation(line: 88, column: 35, scope: !5841)
!5857 = distinct !DISubprogram(name: "{closure#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hebb157982b8f5c41E", scope: !5101, file: !299, line: 88, type: !5858, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5783, retainedNodes: !5865)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!9, !5860, !9, !574}
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", baseType: !5861, size: 64, align: 64, dwarfAddressSpace: 0)
!5861 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", scope: !5101, file: !2, align: 8, elements: !5862, templateParams: !15, identifier: "1bf659b1da121964e128a45c4a036d62")
!5862 = !{!5863, !5864}
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5861, file: !2, baseType: !582, align: 8)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5861, file: !2, baseType: !576, align: 8)
!5865 = !{!5866, !5867, !5868, !5869}
!5866 = !DILocalVariable(name: "acc", arg: 2, scope: !5857, file: !299, line: 88, type: !9)
!5867 = !DILocalVariable(name: "elt", arg: 3, scope: !5857, file: !299, line: 88, type: !574)
!5868 = !DILocalVariable(name: "g", scope: !5857, file: !299, line: 86, type: !582, align: 1)
!5869 = !DILocalVariable(name: "f", scope: !5857, file: !299, line: 85, type: !576, align: 1)
!5870 = !DILocation(line: 86, column: 9, scope: !5857)
!5871 = !DILocation(line: 85, column: 9, scope: !5857)
!5872 = !DILocation(line: 88, column: 11, scope: !5857)
!5873 = !DILocation(line: 88, column: 16, scope: !5857)
!5874 = !DILocation(line: 88, column: 28, scope: !5857)
!5875 = !DILocation(line: 88, column: 21, scope: !5857)
!5876 = !DILocation(line: 88, column: 35, scope: !5857)
!5877 = distinct !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he30a3776cb2021a3E", scope: !1440, file: !5878, line: 20, type: !5022, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1444, declaration: !5879, retainedNodes: !5880)
!5878 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs", directory: "", checksumkind: CSK_MD5, checksum: "26dc33264423ce1847c99552dfdc420b")
!5879 = !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he30a3776cb2021a3E", scope: !1440, file: !5878, line: 20, type: !5022, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1444)
!5880 = !{!5881}
!5881 = !DILocalVariable(name: "iter", arg: 1, scope: !5877, file: !5878, line: 20, type: !1396)
!5882 = !DILocation(line: 20, column: 32, scope: !5877)
!5883 = !DILocation(line: 22, column: 6, scope: !5877)
!5884 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u16>>", linkageName: "_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hed732f4e603e1508E", scope: !314, file: !769, line: 23, type: !5192, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !336, declaration: !5885, retainedNodes: !5886)
!5885 = !DISubprogram(name: "new<core::slice::iter::Iter<u16>>", linkageName: "_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17hed732f4e603e1508E", scope: !314, file: !769, line: 23, type: !5192, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !336)
!5886 = !{!5887}
!5887 = !DILocalVariable(name: "it", arg: 1, scope: !5884, file: !769, line: 23, type: !318)
!5888 = !DILocation(line: 23, column: 32, scope: !5884)
!5889 = !DILocation(line: 25, column: 6, scope: !5884)
!5890 = distinct !DISubprogram(name: "new<core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h428e49e4fb4c4251E", scope: !618, file: !790, line: 24, type: !5212, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !621, declaration: !5891, retainedNodes: !5892)
!5891 = !DISubprogram(name: "new<core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h428e49e4fb4c4251E", scope: !618, file: !790, line: 24, type: !5212, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !621)
!5892 = !{!5893}
!5893 = !DILocalVariable(name: "it", arg: 1, scope: !5890, file: !790, line: 24, type: !405)
!5894 = !DILocation(line: 24, column: 32, scope: !5890)
!5895 = !DILocation(line: 25, column: 9, scope: !5890)
!5896 = !DILocation(line: 26, column: 6, scope: !5890)
!5897 = distinct !DISubprogram(name: "new<&mut core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hbf72fb8115fb1bacE", scope: !400, file: !790, line: 24, type: !5202, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !431, declaration: !5898, retainedNodes: !5899)
!5898 = !DISubprogram(name: "new<&mut core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hbf72fb8115fb1bacE", scope: !400, file: !790, line: 24, type: !5202, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !431)
!5899 = !{!5900}
!5900 = !DILocalVariable(name: "it", arg: 1, scope: !5897, file: !790, line: 24, type: !404)
!5901 = !DILocation(line: 24, column: 32, scope: !5897)
!5902 = !DILocation(line: 26, column: 6, scope: !5897)
!5903 = distinct !DISubprogram(name: "size_align<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout10size_align17h530d53d4e42b6cb0E", scope: !25, file: !5904, line: 19, type: !5905, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5911)
!5904 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "130b150235541717c86a20549ed8dbeb")
!5905 = !DISubroutineType(types: !5906)
!5906 = !{!5907}
!5907 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !5908, templateParams: !15, identifier: "ca118d84a4b6c0e17708a0e2b6ab8550")
!5908 = !{!5909, !5910}
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5907, file: !2, baseType: !9, size: 64, align: 64)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !5907, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5911 = !{!5912}
!5912 = !DITemplateTypeParameter(name: "T", type: !5913)
!5913 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<()>", scope: !177, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !5914, templateParams: !970, identifier: "23d51c848a8ca3243f8d5a35b68e585")
!5914 = !{!5915, !5916, !5917}
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !5913, file: !2, baseType: !185, size: 64, align: 64, flags: DIFlagPrivate)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !5913, file: !2, baseType: !185, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5913, file: !2, baseType: !7, align: 8, offset: 128, flags: DIFlagPrivate)
!5918 = !DILocation(line: 21, column: 2, scope: !5903)
!5919 = distinct !DISubprogram(name: "size_align<alloc::rc::RcInner<()>>", linkageName: "_ZN4core5alloc6layout10size_align17hc0293ae046553639E", scope: !25, file: !5904, line: 19, type: !5905, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5920)
!5920 = !{!5921}
!5921 = !DITemplateTypeParameter(name: "T", type: !5922)
!5922 = !DICompositeType(tag: DW_TAG_structure_type, name: "RcInner<()>", scope: !5923, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !5924, templateParams: !970, identifier: "9b4a9fed62c06fd883ef4ede899fa89")
!5923 = !DINamespace(name: "rc", scope: !80)
!5924 = !{!5925, !5929, !5930}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !5922, file: !2, baseType: !5926, size: 64, align: 64, flags: DIFlagPrivate)
!5926 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<usize>", scope: !191, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !5927, templateParams: !194, identifier: "849c94f3345d50766139bdb154a59924")
!5927 = !{!5928}
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5926, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagPrivate)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !5922, file: !2, baseType: !5926, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5922, file: !2, baseType: !7, align: 8, offset: 128, flags: DIFlagPrivate)
!5931 = !DILocation(line: 21, column: 2, scope: !5919)
!5932 = distinct !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17h2bc6557b92255774E", scope: !1746, file: !5904, line: 337, type: !5933, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !5936, retainedNodes: !5937)
!5933 = !DISubroutineType(types: !5934)
!5934 = !{!1746, !5935}
!5935 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !1746, size: 64, align: 64, dwarfAddressSpace: 0)
!5936 = !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17h2bc6557b92255774E", scope: !1746, file: !5904, line: 337, type: !5933, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!5937 = !{!5938, !5939}
!5938 = !DILocalVariable(name: "self", arg: 1, scope: !5932, file: !5904, line: 337, type: !5935)
!5939 = !DILocalVariable(name: "new_size", scope: !5940, file: !5904, line: 342, type: !9, align: 8)
!5940 = distinct !DILexicalBlock(scope: !5932, file: !5904, line: 342, column: 9)
!5941 = !DILocation(line: 337, column: 31, scope: !5932)
!5942 = !DILocation(line: 342, column: 61, scope: !5932)
!5943 = !DILocation(line: 342, column: 24, scope: !5932)
!5944 = !DILocation(line: 342, column: 13, scope: !5940)
!5945 = !DILocation(line: 345, column: 62, scope: !5940)
!5946 = !DILocation(line: 345, column: 18, scope: !5940)
!5947 = !DILocation(line: 346, column: 6, scope: !5932)
!5948 = distinct !DISubprogram(name: "for_value_raw<[u8]>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h2de37cf2c8fb55ebE", scope: !1746, file: !5904, line: 220, type: !5949, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !5951, retainedNodes: !5952)
!5949 = !DISubroutineType(types: !5950)
!5950 = !{!1746, !1243}
!5951 = !DISubprogram(name: "for_value_raw<[u8]>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h2de37cf2c8fb55ebE", scope: !1746, file: !5904, line: 220, type: !5949, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!5952 = !{!5953, !5954, !5956}
!5953 = !DILocalVariable(name: "t", arg: 1, scope: !5948, file: !5904, line: 220, type: !1243)
!5954 = !DILocalVariable(name: "size", scope: !5955, file: !5904, line: 222, type: !9, align: 8)
!5955 = distinct !DILexicalBlock(scope: !5948, file: !5904, line: 222, column: 9)
!5956 = !DILocalVariable(name: "align", scope: !5955, file: !5904, line: 222, type: !9, align: 8)
!5957 = !DILocation(line: 220, column: 50, scope: !5948)
!5958 = !DILocation(line: 222, column: 39, scope: !5948)
!5959 = !DILocation(line: 222, column: 64, scope: !5948)
!5960 = !DILocation(line: 222, column: 14, scope: !5948)
!5961 = !DILocation(line: 222, column: 14, scope: !5955)
!5962 = !DILocation(line: 222, column: 20, scope: !5948)
!5963 = !DILocation(line: 222, column: 20, scope: !5955)
!5964 = !DILocation(line: 224, column: 18, scope: !5955)
!5965 = !DILocation(line: 225, column: 6, scope: !5948)
!5966 = distinct !DISubprogram(name: "repeat_packed", linkageName: "_ZN4core5alloc6layout6Layout13repeat_packed17hb2d991fa66886af7E", scope: !1746, file: !5904, line: 466, type: !5967, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !5985, retainedNodes: !5986)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!5969, !5935, !9}
!5969 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !865, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !5970, templateParams: !15, identifier: "1d9f2b5e4af53b36bdcba4bb5407d920")
!5970 = !{!5971}
!5971 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5969, file: !2, size: 128, align: 64, elements: !5972, templateParams: !15, identifier: "79d3b4b62c72e115e7b093db41ef0371", discriminator: !5984)
!5972 = !{!5973, !5980}
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5971, file: !2, baseType: !5974, size: 128, align: 64)
!5974 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5969, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !5975, templateParams: !5977, identifier: "da67729449254afbe413cfde5bf9e9d5")
!5975 = !{!5976}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5974, file: !2, baseType: !1746, size: 128, align: 64, flags: DIFlagPublic)
!5977 = !{!5978, !5979}
!5978 = !DITemplateTypeParameter(name: "T", type: !1746)
!5979 = !DITemplateTypeParameter(name: "E", type: !24)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5971, file: !2, baseType: !5981, size: 128, align: 64, extraData: i128 0)
!5981 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5969, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !5982, templateParams: !5977, identifier: "3741c4a2a0e6564d3f352abcaa96edda")
!5982 = !{!5983}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5981, file: !2, baseType: !24, align: 8, flags: DIFlagPublic)
!5984 = !DIDerivedType(tag: DW_TAG_member, scope: !5969, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!5985 = !DISubprogram(name: "repeat_packed", linkageName: "_ZN4core5alloc6layout6Layout13repeat_packed17hb2d991fa66886af7E", scope: !1746, file: !5904, line: 466, type: !5967, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!5986 = !{!5987, !5988, !5989}
!5987 = !DILocalVariable(name: "self", arg: 1, scope: !5966, file: !5904, line: 466, type: !5935)
!5988 = !DILocalVariable(name: "n", arg: 2, scope: !5966, file: !5904, line: 466, type: !9)
!5989 = !DILocalVariable(name: "size", scope: !5990, file: !5904, line: 467, type: !9, align: 8)
!5990 = distinct !DILexicalBlock(scope: !5966, file: !5904, line: 467, column: 54)
!5991 = !DILocation(line: 466, column: 32, scope: !5966)
!5992 = !DILocation(line: 466, column: 39, scope: !5966)
!5993 = !DILocation(line: 467, column: 29, scope: !5990)
!5994 = !DILocation(line: 467, column: 16, scope: !5990)
!5995 = !DILocation(line: 467, column: 21, scope: !5990)
!5996 = !DILocation(line: 469, column: 47, scope: !5990)
!5997 = !DILocation(line: 469, column: 13, scope: !5990)
!5998 = !DILocation(line: 471, column: 13, scope: !5966)
!5999 = !DILocation(line: 467, column: 9, scope: !5966)
!6000 = !DILocation(line: 473, column: 6, scope: !5966)
!6001 = !DILocation(line: 466, column: 5, scope: !5966)
!6002 = distinct !DISubprogram(name: "from_size_alignment", linkageName: "_ZN4core5alloc6layout6Layout19from_size_alignment17hf12aeb5dff84feb1E", scope: !1746, file: !5904, line: 110, type: !6003, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6005, retainedNodes: !6006)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!5969, !9, !1750}
!6005 = !DISubprogram(name: "from_size_alignment", linkageName: "_ZN4core5alloc6layout6Layout19from_size_alignment17hf12aeb5dff84feb1E", scope: !1746, file: !5904, line: 110, type: !6003, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6006 = !{!6007, !6008}
!6007 = !DILocalVariable(name: "size", arg: 1, scope: !6002, file: !5904, line: 110, type: !9)
!6008 = !DILocalVariable(name: "align", arg: 2, scope: !6002, file: !5904, line: 110, type: !1750)
!6009 = !DILocation(line: 110, column: 34, scope: !6002)
!6010 = !DILocation(line: 110, column: 47, scope: !6002)
!6011 = !DILocalVariable(name: "align", arg: 1, scope: !6012, file: !5904, line: 87, type: !1750)
!6012 = distinct !DISubprogram(name: "max_size_for_align", linkageName: "_ZN4core5alloc6layout6Layout18max_size_for_align17h31c04f75d9695a37E", scope: !1746, file: !5904, line: 87, type: !4073, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6013, retainedNodes: !6014)
!6013 = !DISubprogram(name: "max_size_for_align", linkageName: "_ZN4core5alloc6layout6Layout18max_size_for_align17h31c04f75d9695a37E", scope: !1746, file: !5904, line: 87, type: !4073, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6014 = !{!6011}
!6015 = !DILocation(line: 87, column: 33, scope: !6012, inlinedAt: !6016)
!6016 = distinct !DILocation(line: 111, column: 19, scope: !6002)
!6017 = !DILocation(line: 105, column: 57, scope: !6012, inlinedAt: !6016)
!6018 = !DILocation(line: 105, column: 18, scope: !6012, inlinedAt: !6016)
!6019 = !DILocation(line: 111, column: 12, scope: !6002)
!6020 = !DILocation(line: 116, column: 9, scope: !6002)
!6021 = !DILocation(line: 117, column: 6, scope: !6002)
!6022 = !DILocation(line: 112, column: 20, scope: !6002)
!6023 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E", scope: !1746, file: !5904, line: 129, type: !6024, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6026, retainedNodes: !6027)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!1746, !9, !9}
!6026 = !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hc3f9dfd40f49bc92E", scope: !1746, file: !5904, line: 129, type: !6024, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6027 = !{!6028, !6029}
!6028 = !DILocalVariable(name: "size", arg: 1, scope: !6023, file: !5904, line: 129, type: !9)
!6029 = !DILocalVariable(name: "align", arg: 2, scope: !6023, file: !5904, line: 129, type: !9)
!6030 = !DILocation(line: 129, column: 51, scope: !6023)
!6031 = !DILocation(line: 129, column: 64, scope: !6023)
!6032 = !DILocation(line: 74, column: 35, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !6023, file: !1177, discriminator: 0)
!6034 = !DILocation(line: 75, column: 17, scope: !6033)
!6035 = !DILocation(line: 141, column: 6, scope: !6023)
!6036 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked18precondition_check17h4a2721cca0ce6adaE", scope: !6037, file: !1177, line: 66, type: !2808, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !6039)
!6037 = !DINamespace(name: "from_size_align_unchecked", scope: !6038)
!6038 = !DINamespace(name: "{impl#0}", scope: !25)
!6039 = !{!6040, !6041}
!6040 = !DILocalVariable(name: "size", arg: 1, scope: !6036, file: !1177, line: 66, type: !9)
!6041 = !DILocalVariable(name: "align", arg: 2, scope: !6036, file: !1177, line: 66, type: !9)
!6042 = !DILocation(line: 66, column: 43, scope: !6036)
!6043 = !DILocation(line: 137, column: 18, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !6036, file: !5904, discriminator: 0)
!6045 = !DILocation(line: 68, column: 21, scope: !6036)
!6046 = !DILocation(line: 72, column: 14, scope: !6036)
!6047 = distinct !DISubprogram(name: "size_rounded_up_to_custom_align", linkageName: "_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17hede49b9f315463a2E", scope: !1746, file: !5904, line: 300, type: !6048, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6050, retainedNodes: !6051)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!9, !5935, !1750}
!6050 = !DISubprogram(name: "size_rounded_up_to_custom_align", linkageName: "_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17hede49b9f315463a2E", scope: !1746, file: !5904, line: 300, type: !6048, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6051 = !{!6052, !6053, !6054, !6056}
!6052 = !DILocalVariable(name: "self", arg: 1, scope: !6047, file: !5904, line: 300, type: !5935)
!6053 = !DILocalVariable(name: "align", arg: 2, scope: !6047, file: !5904, line: 300, type: !1750)
!6054 = !DILocalVariable(name: "align_m1", scope: !6055, file: !5904, line: 320, type: !9, align: 8)
!6055 = distinct !DILexicalBlock(scope: !6047, file: !5904, line: 320, column: 13)
!6056 = !DILocalVariable(name: "size_rounded_up", scope: !6057, file: !5904, line: 321, type: !9, align: 8)
!6057 = distinct !DILexicalBlock(scope: !6055, file: !5904, line: 321, column: 13)
!6058 = !DILocation(line: 300, column: 46, scope: !6047)
!6059 = !DILocation(line: 300, column: 53, scope: !6047)
!6060 = !DILocation(line: 320, column: 42, scope: !6047)
!6061 = !DILocation(line: 320, column: 28, scope: !6047)
!6062 = !DILocation(line: 320, column: 17, scope: !6055)
!6063 = !DILocation(line: 321, column: 49, scope: !6055)
!6064 = !DILocation(line: 321, column: 35, scope: !6055)
!6065 = !DILocation(line: 321, column: 72, scope: !6055)
!6066 = !DILocation(line: 321, column: 17, scope: !6057)
!6067 = !DILocation(line: 324, column: 6, scope: !6047)
!6068 = distinct !DISubprogram(name: "new<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h7a35f6b498e7089bE", scope: !1746, file: !5904, line: 169, type: !6069, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5911, declaration: !6071, retainedNodes: !6072)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{!1746}
!6071 = !DISubprogram(name: "new<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h7a35f6b498e7089bE", scope: !1746, file: !5904, line: 169, type: !6069, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5911)
!6072 = !{!6073, !6075}
!6073 = !DILocalVariable(name: "size", scope: !6074, file: !5904, line: 170, type: !9, align: 8)
!6074 = distinct !DILexicalBlock(scope: !6068, file: !5904, line: 170, column: 9)
!6075 = !DILocalVariable(name: "align", scope: !6074, file: !5904, line: 170, type: !9, align: 8)
!6076 = !DILocation(line: 170, column: 29, scope: !6068)
!6077 = !DILocation(line: 170, column: 14, scope: !6068)
!6078 = !DILocation(line: 170, column: 14, scope: !6074)
!6079 = !DILocation(line: 170, column: 20, scope: !6068)
!6080 = !DILocation(line: 170, column: 20, scope: !6074)
!6081 = !DILocation(line: 174, column: 18, scope: !6074)
!6082 = !DILocation(line: 175, column: 6, scope: !6068)
!6083 = distinct !DISubprogram(name: "new<alloc::rc::RcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h7a5860340e5ecdd2E", scope: !1746, file: !5904, line: 169, type: !6069, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !5920, declaration: !6084, retainedNodes: !6085)
!6084 = !DISubprogram(name: "new<alloc::rc::RcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h7a5860340e5ecdd2E", scope: !1746, file: !5904, line: 169, type: !6069, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5920)
!6085 = !{!6086, !6088}
!6086 = !DILocalVariable(name: "size", scope: !6087, file: !5904, line: 170, type: !9, align: 8)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !5904, line: 170, column: 9)
!6088 = !DILocalVariable(name: "align", scope: !6087, file: !5904, line: 170, type: !9, align: 8)
!6089 = !DILocation(line: 170, column: 29, scope: !6083)
!6090 = !DILocation(line: 170, column: 14, scope: !6083)
!6091 = !DILocation(line: 170, column: 14, scope: !6087)
!6092 = !DILocation(line: 170, column: 20, scope: !6083)
!6093 = !DILocation(line: 170, column: 20, scope: !6087)
!6094 = !DILocation(line: 174, column: 18, scope: !6087)
!6095 = !DILocation(line: 175, column: 6, scope: !6083)
!6096 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E", scope: !1746, file: !5904, line: 148, type: !6097, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6099, retainedNodes: !6100)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{!9, !5935}
!6099 = !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hd80edf63d1f5cf29E", scope: !1746, file: !5904, line: 148, type: !6097, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6100 = !{!6101}
!6101 = !DILocalVariable(name: "self", arg: 1, scope: !6096, file: !5904, line: 148, type: !5935)
!6102 = !DILocation(line: 148, column: 23, scope: !6096)
!6103 = !DILocation(line: 149, column: 9, scope: !6096)
!6104 = !DILocation(line: 150, column: 6, scope: !6096)
!6105 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE", scope: !1746, file: !5904, line: 160, type: !6097, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6106, retainedNodes: !6107)
!6106 = !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17ha2eab427686d443aE", scope: !1746, file: !5904, line: 160, type: !6097, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6107 = !{!6108}
!6108 = !DILocalVariable(name: "self", arg: 1, scope: !6105, file: !5904, line: 160, type: !5935)
!6109 = !DILocation(line: 160, column: 24, scope: !6105)
!6110 = !DILocation(line: 161, column: 9, scope: !6105)
!6111 = !DILocation(line: 162, column: 6, scope: !6105)
!6112 = distinct !DISubprogram(name: "extend", linkageName: "_ZN4core5alloc6layout6Layout6extend17h60352684f0eebe17E", scope: !1746, file: !5904, line: 435, type: !6113, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6134, retainedNodes: !6135)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!6115, !5935, !1746}
!6115 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !6116, templateParams: !15, identifier: "bfe9277191dab61be291d04ba2648cfb")
!6116 = !{!6117}
!6117 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6115, file: !2, size: 192, align: 64, elements: !6118, templateParams: !15, identifier: "76a927ff7386282bfccbf3aa20a2be03", discriminator: !6133)
!6118 = !{!6119, !6129}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6117, file: !2, baseType: !6120, size: 192, align: 64)
!6120 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6115, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !6121, templateParams: !6127, identifier: "9ec2a592b70d3a0beda13a7b414be85")
!6121 = !{!6122}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6120, file: !2, baseType: !6123, size: 192, align: 64, flags: DIFlagPublic)
!6123 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::alloc::layout::Layout, usize)", file: !2, size: 192, align: 64, elements: !6124, templateParams: !15, identifier: "1e20b9c7c47bd0efd3d35da835fb90af")
!6124 = !{!6125, !6126}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6123, file: !2, baseType: !1746, size: 128, align: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6123, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!6127 = !{!6128, !5979}
!6128 = !DITemplateTypeParameter(name: "T", type: !6123)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6117, file: !2, baseType: !6130, size: 192, align: 64, extraData: i128 0)
!6130 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6115, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !6131, templateParams: !6127, identifier: "4b16f50a4717c116e9ee92c1f3d2c348")
!6131 = !{!6132}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6130, file: !2, baseType: !24, align: 8, flags: DIFlagPublic)
!6133 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!6134 = !DISubprogram(name: "extend", linkageName: "_ZN4core5alloc6layout6Layout6extend17h60352684f0eebe17E", scope: !1746, file: !5904, line: 435, type: !6113, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6135 = !{!6136, !6137, !6138, !6140, !6142, !6144}
!6136 = !DILocalVariable(name: "self", arg: 1, scope: !6112, file: !5904, line: 435, type: !5935)
!6137 = !DILocalVariable(name: "next", arg: 2, scope: !6112, file: !5904, line: 435, type: !1746)
!6138 = !DILocalVariable(name: "new_align", scope: !6139, file: !5904, line: 436, type: !1750, align: 8)
!6139 = distinct !DILexicalBlock(scope: !6112, file: !5904, line: 436, column: 9)
!6140 = !DILocalVariable(name: "offset", scope: !6141, file: !5904, line: 437, type: !9, align: 8)
!6141 = distinct !DILexicalBlock(scope: !6139, file: !5904, line: 437, column: 9)
!6142 = !DILocalVariable(name: "new_size", scope: !6143, file: !5904, line: 443, type: !9, align: 8)
!6143 = distinct !DILexicalBlock(scope: !6141, file: !5904, line: 443, column: 9)
!6144 = !DILocalVariable(name: "layout", scope: !6145, file: !5904, line: 445, type: !1746, align: 8)
!6145 = distinct !DILexicalBlock(scope: !6143, file: !5904, line: 445, column: 78)
!6146 = !DILocation(line: 435, column: 25, scope: !6112)
!6147 = !DILocation(line: 435, column: 32, scope: !6112)
!6148 = !DILocation(line: 436, column: 40, scope: !6112)
!6149 = !DILocation(line: 436, column: 25, scope: !6112)
!6150 = !DILocation(line: 436, column: 13, scope: !6139)
!6151 = !DILocation(line: 437, column: 22, scope: !6139)
!6152 = !DILocation(line: 437, column: 13, scope: !6141)
!6153 = !DILocation(line: 443, column: 33, scope: !6141)
!6154 = !DILocation(line: 443, column: 13, scope: !6143)
!6155 = !DILocation(line: 445, column: 29, scope: !6145)
!6156 = !DILocation(line: 445, column: 16, scope: !6145)
!6157 = !DILocation(line: 445, column: 19, scope: !6145)
!6158 = !DILocation(line: 446, column: 16, scope: !6145)
!6159 = !DILocation(line: 446, column: 13, scope: !6145)
!6160 = !DILocation(line: 445, column: 9, scope: !6143)
!6161 = !DILocation(line: 448, column: 13, scope: !6143)
!6162 = !DILocation(line: 450, column: 6, scope: !6112)
!6163 = !DILocation(line: 435, column: 5, scope: !6112)
!6164 = distinct !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17h381bafd7c3735bf9E", scope: !1746, file: !5904, line: 377, type: !6165, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6167, retainedNodes: !6168)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!6115, !5935, !9}
!6167 = !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17h381bafd7c3735bf9E", scope: !1746, file: !5904, line: 377, type: !6165, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6168 = !{!6169, !6170, !6171, !6173}
!6169 = !DILocalVariable(name: "self", arg: 1, scope: !6164, file: !5904, line: 377, type: !5935)
!6170 = !DILocalVariable(name: "n", arg: 2, scope: !6164, file: !5904, line: 377, type: !9)
!6171 = !DILocalVariable(name: "padded", scope: !6172, file: !5904, line: 378, type: !1746, align: 8)
!6172 = distinct !DILexicalBlock(scope: !6164, file: !5904, line: 378, column: 9)
!6173 = !DILocalVariable(name: "repeated", scope: !6174, file: !5904, line: 379, type: !1746, align: 8)
!6174 = distinct !DILexicalBlock(scope: !6172, file: !5904, line: 379, column: 55)
!6175 = !DILocation(line: 377, column: 25, scope: !6164)
!6176 = !DILocation(line: 377, column: 32, scope: !6164)
!6177 = !DILocation(line: 378, column: 13, scope: !6172)
!6178 = !DILocation(line: 378, column: 22, scope: !6164)
!6179 = !DILocation(line: 379, column: 31, scope: !6174)
!6180 = !DILocation(line: 379, column: 16, scope: !6174)
!6181 = !DILocation(line: 379, column: 19, scope: !6174)
!6182 = !DILocation(line: 380, column: 27, scope: !6174)
!6183 = !DILocation(line: 380, column: 16, scope: !6174)
!6184 = !DILocation(line: 380, column: 13, scope: !6174)
!6185 = !DILocation(line: 379, column: 9, scope: !6172)
!6186 = !DILocation(line: 382, column: 13, scope: !6172)
!6187 = !DILocation(line: 384, column: 6, scope: !6164)
!6188 = !DILocation(line: 377, column: 5, scope: !6164)
!6189 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h4a1fd527cdeb0e2fE", scope: !1746, file: !5904, line: 236, type: !6190, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !6192, retainedNodes: !6193)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{!99, !5935}
!6192 = !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h4a1fd527cdeb0e2fE", scope: !1746, file: !5904, line: 236, type: !6190, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!6193 = !{!6194}
!6194 = !DILocalVariable(name: "self", arg: 1, scope: !6189, file: !5904, line: 236, type: !5935)
!6195 = !DILocation(line: 236, column: 27, scope: !6189)
!6196 = !DILocation(line: 238, column: 82, scope: !6189)
!6197 = !DILocalVariable(name: "addr", arg: 1, scope: !6198, file: !3046, line: 640, type: !9)
!6198 = distinct !DISubprogram(name: "without_provenance_mut<u8>", linkageName: "_ZN4core3ptr22without_provenance_mut17h8151fa150db577d6E", scope: !96, file: !3046, line: 640, type: !6199, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !6201)
!6199 = !DISubroutineType(types: !6200)
!6200 = !{!3364, !9}
!6201 = !{!6197}
!6202 = !DILocation(line: 640, column: 40, scope: !6198, inlinedAt: !6203)
!6203 = distinct !DILocation(line: 238, column: 41, scope: !6189)
!6204 = !DILocation(line: 646, column: 14, scope: !6198, inlinedAt: !6203)
!6205 = !DILocation(line: 238, column: 18, scope: !6189)
!6206 = !DILocation(line: 239, column: 6, scope: !6189)
!6207 = distinct !DISubprogram(name: "cause<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error5cause17h82cae8f6d2cc9637E", scope: !6209, file: !6208, line: 117, type: !6211, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6239, retainedNodes: !6237)
!6208 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/error.rs", directory: "", checksumkind: CSK_MD5, checksum: "f13fcbb420ce4f16a5d06adb7d99009f")
!6209 = !DINamespace(name: "Error", scope: !6210)
!6210 = !DINamespace(name: "error", scope: !14)
!6211 = !DISubroutineType(types: !6212)
!6212 = !{!6213, !6236}
!6213 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&dyn core::error::Error>", scope: !37, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !6214, templateParams: !15, identifier: "45d04604fb425724d82d122c1f9efaea")
!6214 = !{!6215}
!6215 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6213, file: !2, size: 128, align: 64, elements: !6216, templateParams: !15, identifier: "cc951ff06b5325923840af441d09a957", discriminator: !6235)
!6216 = !{!6217, !6231}
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6215, file: !2, baseType: !6218, size: 128, align: 64, extraData: i128 0)
!6218 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6213, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !6219, identifier: "9d593e9a67f3666826c1db44ecba4b99")
!6219 = !{!6220}
!6220 = !DITemplateTypeParameter(name: "T", type: !6221)
!6221 = !DICompositeType(tag: DW_TAG_structure_type, name: "&dyn core::error::Error", file: !2, size: 128, align: 64, elements: !6222, templateParams: !15, identifier: "27893924e60147ff5eb0119810fe1c4f")
!6222 = !{!6223, !6226}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6221, file: !2, baseType: !6224, size: 64, align: 64)
!6224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6225, size: 64, align: 64, dwarfAddressSpace: 0)
!6225 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::error::Error", file: !2, align: 8, elements: !15, identifier: "d2795269f7bac8973f8985b87bfb5f5a")
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !6221, file: !2, baseType: !6227, size: 64, align: 64, offset: 64)
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 10]", baseType: !6228, size: 64, align: 64, dwarfAddressSpace: 0)
!6228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 640, align: 64, elements: !6229)
!6229 = !{!6230}
!6230 = !DISubrange(count: 10, lowerBound: 0)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6215, file: !2, baseType: !6232, size: 128, align: 64)
!6232 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6213, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !6233, templateParams: !6219, identifier: "60c761b2aa1912a265782fa8a9bb9b56")
!6233 = !{!6234}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6232, file: !2, baseType: !6221, size: 128, align: 64, flags: DIFlagPublic)
!6235 = !DIDerivedType(tag: DW_TAG_member, scope: !6213, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!6236 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::convert::{impl#19}::from::StringError", baseType: !134, size: 64, align: 64, dwarfAddressSpace: 0)
!6237 = !{!6238}
!6238 = !DILocalVariable(name: "self", arg: 1, scope: !6207, file: !6208, line: 117, type: !6236)
!6239 = !{!6240}
!6240 = !DITemplateTypeParameter(name: "Self", type: !134)
!6241 = !DILocation(line: 117, column: 14, scope: !6207)
!6242 = !DILocation(line: 118, column: 9, scope: !6207)
!6243 = !DILocation(line: 119, column: 6, scope: !6207)
!6244 = distinct !DISubprogram(name: "cause<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error5cause17hfc560bb7f7dbe947E", scope: !6209, file: !6208, line: 117, type: !6245, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6249, retainedNodes: !6247)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{!6213, !4458}
!6247 = !{!6248}
!6248 = !DILocalVariable(name: "self", arg: 1, scope: !6244, file: !6208, line: 117, type: !4458)
!6249 = !{!6250}
!6250 = !DITemplateTypeParameter(name: "Self", type: !156)
!6251 = !DILocation(line: 117, column: 14, scope: !6244)
!6252 = !DILocation(line: 118, column: 9, scope: !6244)
!6253 = !DILocation(line: 119, column: 6, scope: !6244)
!6254 = distinct !DISubprogram(name: "source<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error6source17h0bdb0b5a76915a11E", scope: !6209, file: !6208, line: 81, type: !6211, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6239, retainedNodes: !6255)
!6255 = !{!6256}
!6256 = !DILocalVariable(name: "self", arg: 1, scope: !6254, file: !6208, line: 81, type: !6236)
!6257 = !DILocation(line: 81, column: 15, scope: !6254)
!6258 = !DILocation(line: 82, column: 9, scope: !6254)
!6259 = !DILocation(line: 83, column: 6, scope: !6254)
!6260 = distinct !DISubprogram(name: "source<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error6source17h81941f4639b1e47dE", scope: !6209, file: !6208, line: 81, type: !6245, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6249, retainedNodes: !6261)
!6261 = !{!6262}
!6262 = !DILocalVariable(name: "self", arg: 1, scope: !6260, file: !6208, line: 81, type: !4458)
!6263 = !DILocation(line: 81, column: 15, scope: !6260)
!6264 = !DILocation(line: 82, column: 9, scope: !6260)
!6265 = !DILocation(line: 83, column: 6, scope: !6260)
!6266 = distinct !DISubprogram(name: "provide<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error7provide17h91b26135a66ff8baE", scope: !6209, file: !6208, line: 180, type: !6267, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6249, retainedNodes: !6288)
!6267 = !DISubroutineType(types: !6268)
!6268 = !{null, !4458, !6269}
!6269 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::error::Request", file: !2, size: 128, align: 64, elements: !6270, templateParams: !15, identifier: "b55cb04295e7b16860d4a0a74b435a14")
!6270 = !{!6271, !6283}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6269, file: !2, baseType: !6272, size: 64, align: 64)
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6273, size: 64, align: 64, dwarfAddressSpace: 0)
!6273 = !DICompositeType(tag: DW_TAG_structure_type, name: "Request", scope: !6210, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !6274, templateParams: !15, identifier: "d0d16059467761ff2dd06aad9ef67b0e")
!6274 = !{!6275}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6273, file: !2, baseType: !6276, size: 128, align: 64, flags: DIFlagPrivate)
!6276 = !DICompositeType(tag: DW_TAG_structure_type, name: "Tagged<dyn core::error::Erased>", scope: !6210, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !6277, templateParams: !6281, identifier: "b50574ad53af15d3345bd6a1205e175b")
!6277 = !{!6278, !6279}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "tag_id", scope: !6276, file: !2, baseType: !2107, size: 128, align: 64, flags: DIFlagPrivate)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6276, file: !2, baseType: !6280, align: 8, offset: 128, flags: DIFlagPrivate)
!6280 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::error::Erased", file: !2, align: 8, elements: !15, identifier: "a0ff2720f17b7ad0adc51b2c5af9b15b")
!6281 = !{!6282}
!6282 = !DITemplateTypeParameter(name: "E", type: !6280)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !6269, file: !2, baseType: !6284, size: 64, align: 64, offset: 64)
!6284 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !6285, size: 64, align: 64, dwarfAddressSpace: 0)
!6285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !6286)
!6286 = !{!6287}
!6287 = !DISubrange(count: 3, lowerBound: 0)
!6288 = !{!6289, !6290}
!6289 = !DILocalVariable(name: "self", arg: 1, scope: !6266, file: !6208, line: 180, type: !4458)
!6290 = !DILocalVariable(name: "request", arg: 2, scope: !6266, file: !6208, line: 180, type: !6269)
!6291 = !DILocation(line: 180, column: 20, scope: !6266)
!6292 = !DILocation(line: 180, column: 30, scope: !6266)
!6293 = !DILocation(line: 180, column: 59, scope: !6266)
!6294 = distinct !DISubprogram(name: "provide<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error7provide17hf3cab819f04860fdE", scope: !6209, file: !6208, line: 180, type: !6295, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6239, retainedNodes: !6297)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{null, !6236, !6269}
!6297 = !{!6298, !6299}
!6298 = !DILocalVariable(name: "self", arg: 1, scope: !6294, file: !6208, line: 180, type: !6236)
!6299 = !DILocalVariable(name: "request", arg: 2, scope: !6294, file: !6208, line: 180, type: !6269)
!6300 = !DILocation(line: 180, column: 20, scope: !6294)
!6301 = !DILocation(line: 180, column: 30, scope: !6294)
!6302 = !DILocation(line: 180, column: 59, scope: !6294)
!6303 = distinct !DISubprogram(name: "type_id<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error7type_id17h3ba4ed2a179b14a4E", scope: !6209, file: !6208, line: 92, type: !6304, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6239, retainedNodes: !6308)
!6304 = !DISubroutineType(types: !6305)
!6305 = !{!2107, !6236, !6306}
!6306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !6307, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "c4d275d2f1d7f91e9a700214677c05de")
!6307 = !DINamespace(name: "private", scope: !6210)
!6308 = !{!6309, !6310}
!6309 = !DILocalVariable(name: "self", arg: 1, scope: !6303, file: !6208, line: 92, type: !6236)
!6310 = !DILocalVariable(arg: 2, scope: !6303, file: !6208, line: 92, type: !6306)
!6311 = !DILocation(line: 92, column: 16, scope: !6303)
!6312 = !DILocation(line: 92, column: 23, scope: !6303)
!6313 = !DILocation(line: 96, column: 9, scope: !6303)
!6314 = !DILocation(line: 97, column: 6, scope: !6303)
!6315 = distinct !DISubprogram(name: "type_id<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error7type_id17hf803431a91448a39E", scope: !6209, file: !6208, line: 92, type: !6316, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6249, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{!2107, !4458, !6306}
!6318 = !{!6319, !6320}
!6319 = !DILocalVariable(name: "self", arg: 1, scope: !6315, file: !6208, line: 92, type: !4458)
!6320 = !DILocalVariable(arg: 2, scope: !6315, file: !6208, line: 92, type: !6306)
!6321 = !DILocation(line: 92, column: 16, scope: !6315)
!6322 = !DILocation(line: 92, column: 23, scope: !6315)
!6323 = !DILocation(line: 96, column: 9, scope: !6315)
!6324 = !DILocation(line: 97, column: 6, scope: !6315)
!6325 = distinct !DISubprogram(name: "array_chunks<u8, 2>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12array_chunks17h83611f2c5aee7a38E", scope: !2263, file: !2262, line: 1431, type: !6326, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !6328)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!405, !427, !1690}
!6328 = !{!6329}
!6329 = !DILocalVariable(name: "self", arg: 1, scope: !6325, file: !2262, line: 1431, type: !427)
!6330 = !DILocation(line: 1431, column: 41, scope: !6325)
!6331 = !DILocation(line: 1432, column: 17, scope: !6325)
!6332 = !DILocation(line: 1433, column: 9, scope: !6325)
!6333 = !DILocation(line: 1434, column: 6, scope: !6325)
!6334 = !DILocation(line: 1432, column: 9, scope: !6325)
!6335 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hd1d01c16f281a5e0E", scope: !2263, file: !2262, line: 658, type: !6336, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6341, retainedNodes: !6338)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{!427, !427, !1271}
!6338 = !{!6339, !6340}
!6339 = !DILocalVariable(name: "self", arg: 1, scope: !6335, file: !2262, line: 658, type: !427)
!6340 = !DILocalVariable(name: "index", arg: 2, scope: !6335, file: !2262, line: 658, type: !1271)
!6341 = !{!44, !6342}
!6342 = !DITemplateTypeParameter(name: "I", type: !1271)
!6343 = !DILocation(line: 658, column: 36, scope: !6335)
!6344 = !DILocation(line: 658, column: 43, scope: !6335)
!6345 = !DILocation(line: 665, column: 20, scope: !6335)
!6346 = !DILocation(line: 666, column: 6, scope: !6335)
!6347 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17he116466d7d04cd9fE", scope: !2263, file: !2262, line: 658, type: !6348, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6353, retainedNodes: !6350)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{!427, !427, !1247}
!6350 = !{!6351, !6352}
!6351 = !DILocalVariable(name: "self", arg: 1, scope: !6347, file: !2262, line: 658, type: !427)
!6352 = !DILocalVariable(name: "index", arg: 2, scope: !6347, file: !2262, line: 658, type: !1247)
!6353 = !{!44, !6354}
!6354 = !DITemplateTypeParameter(name: "I", type: !1247)
!6355 = !DILocation(line: 658, column: 36, scope: !6347)
!6356 = !DILocation(line: 658, column: 43, scope: !6347)
!6357 = !DILocation(line: 665, column: 20, scope: !6347)
!6358 = !DILocation(line: 666, column: 6, scope: !6347)
!6359 = distinct !DISubprogram(name: "align_to_offsets<u8, u16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16align_to_offsets17hefbad6a2a35690acE", scope: !2263, file: !2262, line: 3841, type: !6360, scopeLine: 3841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6374, retainedNodes: !6362)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!5907, !427}
!6362 = !{!6363, !6364, !6366, !6368, !6370, !6372}
!6363 = !DILocalVariable(name: "self", arg: 1, scope: !6359, file: !2262, line: 3841, type: !427)
!6364 = !DILocalVariable(name: "gcd", scope: !6365, file: !2262, line: 3866, type: !9, align: 8)
!6365 = distinct !DILexicalBlock(scope: !6359, file: !2262, line: 3866, column: 9)
!6366 = !DILocalVariable(name: "ts", scope: !6367, file: !2262, line: 3867, type: !9, align: 8)
!6367 = distinct !DILexicalBlock(scope: !6365, file: !2262, line: 3867, column: 9)
!6368 = !DILocalVariable(name: "us", scope: !6369, file: !2262, line: 3868, type: !9, align: 8)
!6369 = distinct !DILexicalBlock(scope: !6367, file: !2262, line: 3868, column: 9)
!6370 = !DILocalVariable(name: "us_len", scope: !6371, file: !2262, line: 3871, type: !9, align: 8)
!6371 = distinct !DILexicalBlock(scope: !6369, file: !2262, line: 3871, column: 9)
!6372 = !DILocalVariable(name: "ts_len", scope: !6373, file: !2262, line: 3873, type: !9, align: 8)
!6373 = distinct !DILexicalBlock(scope: !6371, file: !2262, line: 3873, column: 9)
!6374 = !{!44, !6375}
!6375 = !DITemplateTypeParameter(name: "U", type: !327)
!6376 = !DILocation(line: 3841, column: 28, scope: !6359)
!6377 = !DILocation(line: 3866, column: 26, scope: !6359)
!6378 = !DILocation(line: 3866, column: 13, scope: !6365)
!6379 = !DILocation(line: 3867, column: 25, scope: !6365)
!6380 = !DILocation(line: 3867, column: 13, scope: !6367)
!6381 = !DILocation(line: 3868, column: 25, scope: !6367)
!6382 = !DILocation(line: 3868, column: 13, scope: !6369)
!6383 = !DILocation(line: 3871, column: 22, scope: !6369)
!6384 = !DILocation(line: 3871, column: 13, scope: !6371)
!6385 = !DILocation(line: 3873, column: 22, scope: !6371)
!6386 = !DILocation(line: 3873, column: 13, scope: !6373)
!6387 = !DILocation(line: 3875, column: 6, scope: !6359)
!6388 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h14560758a93dd05cE", scope: !2263, file: !2262, line: 700, type: !6389, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6399, retainedNodes: !6396)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{!6391, !6392, !9}
!6391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1148, size: 64, align: 64, dwarfAddressSpace: 0)
!6392 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !6393, templateParams: !15, identifier: "ee7678190c3410e2a3cd9b981b3454b")
!6393 = !{!6394, !6395}
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6392, file: !2, baseType: !1147, size: 64, align: 64)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6392, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6396 = !{!6397, !6398}
!6397 = !DILocalVariable(name: "self", arg: 1, scope: !6388, file: !2262, line: 700, type: !6392)
!6398 = !DILocalVariable(name: "index", arg: 2, scope: !6388, file: !2262, line: 700, type: !9)
!6399 = !{!1172, !6400}
!6400 = !DITemplateTypeParameter(name: "I", type: !9)
!6401 = !DILocation(line: 700, column: 40, scope: !6388)
!6402 = !DILocation(line: 700, column: 51, scope: !6388)
!6403 = !DILocation(line: 707, column: 24, scope: !6388)
!6404 = !DILocation(line: 708, column: 6, scope: !6388)
!6405 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h1d516fed878b15f8E", scope: !2263, file: !2262, line: 700, type: !6406, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6411, retainedNodes: !6408)
!6406 = !DISubroutineType(types: !6407)
!6407 = !{!6392, !6392, !1247}
!6408 = !{!6409, !6410}
!6409 = !DILocalVariable(name: "self", arg: 1, scope: !6405, file: !2262, line: 700, type: !6392)
!6410 = !DILocalVariable(name: "index", arg: 2, scope: !6405, file: !2262, line: 700, type: !1247)
!6411 = !{!1172, !6354}
!6412 = !DILocation(line: 700, column: 40, scope: !6405)
!6413 = !DILocation(line: 700, column: 51, scope: !6405)
!6414 = !DILocation(line: 707, column: 24, scope: !6405)
!6415 = !DILocation(line: 708, column: 6, scope: !6405)
!6416 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h70c16926b97fd5e8E", scope: !2263, file: !2262, line: 700, type: !6417, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6422, retainedNodes: !6419)
!6417 = !DISubroutineType(types: !6418)
!6418 = !{!6392, !6392, !1271}
!6419 = !{!6420, !6421}
!6420 = !DILocalVariable(name: "self", arg: 1, scope: !6416, file: !2262, line: 700, type: !6392)
!6421 = !DILocalVariable(name: "index", arg: 2, scope: !6416, file: !2262, line: 700, type: !1271)
!6422 = !{!1172, !6342}
!6423 = !DILocation(line: 700, column: 40, scope: !6416)
!6424 = !DILocation(line: 700, column: 51, scope: !6416)
!6425 = !DILocation(line: 707, column: 24, scope: !6416)
!6426 = !DILocation(line: 708, column: 6, scope: !6416)
!6427 = distinct !DISubprogram(name: "as_chunks_unchecked<u8, 2>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked17hef672f46fd437087E", scope: !2263, file: !2262, line: 1309, type: !6428, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!4016, !427}
!6430 = !{!6431, !6432}
!6431 = !DILocalVariable(name: "self", arg: 1, scope: !6427, file: !2262, line: 1309, type: !427)
!6432 = !DILocalVariable(name: "new_len", scope: !6433, file: !2262, line: 1316, type: !9, align: 8)
!6433 = distinct !DILexicalBlock(scope: !6427, file: !2262, line: 1316, column: 9)
!6434 = !DILocation(line: 1309, column: 61, scope: !6427)
!6435 = !DILocation(line: 74, column: 35, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6427, file: !1177, discriminator: 0)
!6437 = !DILocation(line: 1316, column: 32, scope: !6427)
!6438 = !DILocation(line: 1316, column: 13, scope: !6433)
!6439 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !6440)
!6440 = distinct !DILocation(line: 1319, column: 33, scope: !6433)
!6441 = !DILocalVariable(name: "self", arg: 1, scope: !6442, file: !2237, line: 62, type: !103)
!6442 = distinct !DISubprogram(name: "cast<u8, [u8; 2]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hcdec8c3cc3892d82E", scope: !2238, file: !2237, line: 62, type: !6443, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6446, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!414, !103}
!6445 = !{!6441}
!6446 = !{!44, !3906}
!6447 = !DILocation(line: 62, column: 26, scope: !6442, inlinedAt: !6448)
!6448 = distinct !DILocation(line: 1319, column: 33, scope: !6433)
!6449 = !DILocation(line: 1319, column: 18, scope: !6433)
!6450 = !DILocation(line: 1320, column: 6, scope: !6427)
!6451 = !DILocation(line: 75, column: 17, scope: !6436)
!6452 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked18precondition_check17h77f91161cdfbd463E", scope: !6453, file: !1177, line: 66, type: !2808, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !6454)
!6453 = !DINamespace(name: "as_chunks_unchecked", scope: !2263)
!6454 = !{!6455, !6456}
!6455 = !DILocalVariable(name: "n", arg: 1, scope: !6452, file: !1177, line: 66, type: !9)
!6456 = !DILocalVariable(name: "len", arg: 2, scope: !6452, file: !1177, line: 66, type: !9)
!6457 = !DILocation(line: 66, column: 43, scope: !6452)
!6458 = !DILocation(line: 1313, column: 56, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !6452, file: !2262, discriminator: 0)
!6460 = !DILocation(line: 68, column: 21, scope: !6452)
!6461 = !DILocation(line: 1313, column: 66, scope: !6459)
!6462 = !DILocation(line: 72, column: 14, scope: !6452)
!6463 = distinct !DISubprogram(name: "iter<[u8; 2]>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h07c0c5433600ce9bE", scope: !2263, file: !2262, line: 1050, type: !6464, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !6466)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!408, !4016}
!6466 = !{!6467}
!6467 = !DILocalVariable(name: "self", arg: 1, scope: !6463, file: !2262, line: 1050, type: !4016)
!6468 = !DILocation(line: 1050, column: 17, scope: !6463)
!6469 = !DILocation(line: 1051, column: 9, scope: !6463)
!6470 = !DILocation(line: 1052, column: 6, scope: !6463)
!6471 = distinct !DISubprogram(name: "iter<bool>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h67482b2ffbe482fbE", scope: !2263, file: !2262, line: 1050, type: !6472, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, retainedNodes: !6474)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!513, !4028}
!6474 = !{!6475}
!6475 = !DILocalVariable(name: "self", arg: 1, scope: !6471, file: !2262, line: 1050, type: !4028)
!6476 = !DILocation(line: 1050, column: 17, scope: !6471)
!6477 = !DILocation(line: 1051, column: 9, scope: !6471)
!6478 = !DILocation(line: 1052, column: 6, scope: !6471)
!6479 = distinct !DISubprogram(name: "align_to<u8, u16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17h3b6984de3bf70dd0E", scope: !2263, file: !2262, line: 3907, type: !6480, scopeLine: 3907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6374, retainedNodes: !6491)
!6480 = !DISubroutineType(types: !6481)
!6481 = !{!6482, !427}
!6482 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[u8], &[u16], &[u8])", file: !2, size: 384, align: 64, elements: !6483, templateParams: !15, identifier: "4b1140e7e0611a5bfe3fe488f6814b97")
!6483 = !{!6484, !6485, !6490}
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6482, file: !2, baseType: !427, size: 128, align: 64)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6482, file: !2, baseType: !6486, size: 128, align: 64, offset: 128)
!6486 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u16]", file: !2, size: 128, align: 64, elements: !6487, templateParams: !15, identifier: "7754e79038034cabe41502e81189cbe9")
!6487 = !{!6488, !6489}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6486, file: !2, baseType: !3117, size: 64, align: 64)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6486, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !6482, file: !2, baseType: !427, size: 128, align: 64, offset: 256)
!6491 = !{!6492, !6493, !6495, !6497, !6499, !6500, !6502}
!6492 = !DILocalVariable(name: "self", arg: 1, scope: !6479, file: !2262, line: 3907, type: !427)
!6493 = !DILocalVariable(name: "ptr", scope: !6494, file: !2262, line: 3916, type: !103, align: 8)
!6494 = distinct !DILexicalBlock(scope: !6479, file: !2262, line: 3916, column: 9)
!6495 = !DILocalVariable(name: "offset", scope: !6496, file: !2262, line: 3918, type: !9, align: 8)
!6496 = distinct !DILexicalBlock(scope: !6494, file: !2262, line: 3918, column: 9)
!6497 = !DILocalVariable(name: "left", scope: !6498, file: !2262, line: 3922, type: !427, align: 8)
!6498 = distinct !DILexicalBlock(scope: !6496, file: !2262, line: 3922, column: 13)
!6499 = !DILocalVariable(name: "rest", scope: !6498, file: !2262, line: 3922, type: !427, align: 8)
!6500 = !DILocalVariable(name: "us_len", scope: !6501, file: !2262, line: 3923, type: !9, align: 8)
!6501 = distinct !DILexicalBlock(scope: !6498, file: !2262, line: 3923, column: 13)
!6502 = !DILocalVariable(name: "ts_len", scope: !6501, file: !2262, line: 3923, type: !9, align: 8)
!6503 = !DILocation(line: 3907, column: 31, scope: !6479)
!6504 = !DILocation(line: 3909, column: 12, scope: !6479)
!6505 = !DILocation(line: 3909, column: 25, scope: !6479)
!6506 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !6507)
!6507 = distinct !DILocation(line: 3916, column: 19, scope: !6479)
!6508 = !DILocation(line: 3916, column: 19, scope: !6479)
!6509 = !DILocation(line: 3916, column: 13, scope: !6494)
!6510 = !DILocation(line: 3918, column: 31, scope: !6494)
!6511 = !DILocation(line: 3918, column: 13, scope: !6496)
!6512 = !DILocation(line: 3919, column: 12, scope: !6496)
!6513 = !DILocation(line: 3922, column: 32, scope: !6496)
!6514 = !DILocation(line: 3922, column: 18, scope: !6496)
!6515 = !DILocation(line: 3922, column: 18, scope: !6498)
!6516 = !DILocation(line: 3922, column: 24, scope: !6496)
!6517 = !DILocation(line: 3922, column: 24, scope: !6498)
!6518 = !DILocation(line: 3923, column: 36, scope: !6498)
!6519 = !DILocation(line: 3923, column: 18, scope: !6498)
!6520 = !DILocation(line: 3923, column: 18, scope: !6501)
!6521 = !DILocation(line: 3923, column: 26, scope: !6498)
!6522 = !DILocation(line: 3923, column: 26, scope: !6501)
!6523 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !6524)
!6524 = distinct !DILocation(line: 3935, column: 36, scope: !6501)
!6525 = !DILocation(line: 3935, column: 21, scope: !6501)
!6526 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !6527)
!6527 = distinct !DILocation(line: 3936, column: 36, scope: !6501)
!6528 = !DILocation(line: 3936, column: 54, scope: !6501)
!6529 = !DILocation(line: 3920, column: 13, scope: !6496)
!6530 = !DILocation(line: 3919, column: 9, scope: !6496)
!6531 = !DILocalVariable(name: "self", arg: 1, scope: !6532, file: !2237, line: 915, type: !103)
!6532 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h6ff7f6a46f4f16bbE", scope: !2238, file: !2237, line: 915, type: !6533, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !6535)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!103, !103, !9}
!6535 = !{!6531, !6536}
!6536 = !DILocalVariable(name: "count", arg: 2, scope: !6532, file: !2237, line: 915, type: !9)
!6537 = !DILocation(line: 915, column: 29, scope: !6532, inlinedAt: !6538)
!6538 = distinct !DILocation(line: 3936, column: 36, scope: !6501)
!6539 = !DILocation(line: 915, column: 35, scope: !6532, inlinedAt: !6538)
!6540 = !DILocation(line: 74, column: 35, scope: !6541, inlinedAt: !6538)
!6541 = !DILexicalBlockFile(scope: !6532, file: !1177, discriminator: 0)
!6542 = !DILocation(line: 75, column: 17, scope: !6541, inlinedAt: !6538)
!6543 = !DILocation(line: 949, column: 18, scope: !6532, inlinedAt: !6538)
!6544 = !DILocation(line: 3936, column: 21, scope: !6501)
!6545 = !DILocation(line: 3933, column: 17, scope: !6501)
!6546 = !DILocation(line: 3940, column: 6, scope: !6479)
!6547 = distinct !DISubprogram(name: "is_empty<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hb4a3073d01c98febE", scope: !2263, file: !2262, line: 136, type: !6548, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !567, retainedNodes: !6550)
!6548 = !DISubroutineType(types: !6549)
!6549 = !{!520, !2328}
!6550 = !{!6551}
!6551 = !DILocalVariable(name: "self", arg: 1, scope: !6547, file: !2262, line: 136, type: !2328)
!6552 = !DILocation(line: 136, column: 27, scope: !6547)
!6553 = !DILocation(line: 137, column: 9, scope: !6547)
!6554 = !DILocation(line: 138, column: 6, scope: !6547)
!6555 = distinct !DISubprogram(name: "is_empty<core::fmt::rt::Argument>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hde578c486e02b392E", scope: !2263, file: !2262, line: 136, type: !6556, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6560, retainedNodes: !6558)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!520, !2376}
!6558 = !{!6559}
!6559 = !DILocalVariable(name: "self", arg: 1, scope: !6555, file: !2262, line: 136, type: !2376)
!6560 = !{!6561}
!6561 = !DITemplateTypeParameter(name: "T", type: !2380)
!6562 = !DILocation(line: 136, column: 27, scope: !6555)
!6563 = !DILocation(line: 137, column: 9, scope: !6555)
!6564 = !DILocation(line: 138, column: 6, scope: !6555)
!6565 = distinct !DISubprogram(name: "as_chunks<u8, 2>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17h0e8ab4fb3546d19fE", scope: !2263, file: !2262, line: 1356, type: !6566, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !6572)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!6568, !427, !1690}
!6568 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[[u8; 2]], &[u8])", file: !2, size: 256, align: 64, elements: !6569, templateParams: !15, identifier: "a75b0794c305068828edbd3952bb60bb")
!6569 = !{!6570, !6571}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6568, file: !2, baseType: !4016, size: 128, align: 64)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6568, file: !2, baseType: !427, size: 128, align: 64, offset: 128)
!6572 = !{!6573, !6574, !6576, !6578, !6579}
!6573 = !DILocalVariable(name: "self", arg: 1, scope: !6565, file: !2262, line: 1356, type: !427)
!6574 = !DILocalVariable(name: "len_rounded_down", scope: !6575, file: !2262, line: 1358, type: !9, align: 8)
!6575 = distinct !DILexicalBlock(scope: !6565, file: !2262, line: 1358, column: 9)
!6576 = !DILocalVariable(name: "multiple_of_n", scope: !6577, file: !2262, line: 1361, type: !427, align: 8)
!6577 = distinct !DILexicalBlock(scope: !6575, file: !2262, line: 1361, column: 9)
!6578 = !DILocalVariable(name: "remainder", scope: !6577, file: !2262, line: 1361, type: !427, align: 8)
!6579 = !DILocalVariable(name: "array_slice", scope: !6580, file: !2262, line: 1364, type: !4016, align: 8)
!6580 = distinct !DILexicalBlock(scope: !6577, file: !2262, line: 1364, column: 9)
!6581 = !DILocation(line: 1356, column: 44, scope: !6565)
!6582 = !DILocation(line: 1357, column: 17, scope: !6565)
!6583 = !DILocation(line: 1358, column: 32, scope: !6565)
!6584 = !DILocation(line: 1357, column: 9, scope: !6565)
!6585 = !DILocation(line: 1358, column: 13, scope: !6575)
!6586 = !DILocation(line: 1361, column: 51, scope: !6575)
!6587 = !DILocation(line: 1361, column: 14, scope: !6575)
!6588 = !DILocation(line: 1361, column: 14, scope: !6577)
!6589 = !DILocation(line: 1361, column: 29, scope: !6575)
!6590 = !DILocation(line: 1361, column: 29, scope: !6577)
!6591 = !DILocation(line: 1364, column: 36, scope: !6577)
!6592 = !DILocation(line: 1364, column: 13, scope: !6580)
!6593 = !DILocation(line: 1365, column: 9, scope: !6580)
!6594 = !DILocation(line: 1366, column: 6, scope: !6565)
!6595 = distinct !DISubprogram(name: "from_raw_parts<[u8; 2]>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h789cca0a0f71fea6E", scope: !6597, file: !6596, line: 123, type: !6598, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !6600)
!6596 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "7d49f43355affc2ffcf17a1576ddc25c")
!6597 = !DINamespace(name: "raw", scope: !320)
!6598 = !DISubroutineType(types: !6599)
!6599 = !{!4016, !414, !9}
!6600 = !{!6601, !6602}
!6601 = !DILocalVariable(name: "data", arg: 1, scope: !6595, file: !6596, line: 123, type: !414)
!6602 = !DILocalVariable(name: "len", arg: 2, scope: !6595, file: !6596, line: 123, type: !9)
!6603 = !DILocation(line: 123, column: 43, scope: !6595)
!6604 = !DILocation(line: 123, column: 59, scope: !6595)
!6605 = !DILocation(line: 74, column: 35, scope: !6606)
!6606 = !DILexicalBlockFile(scope: !6595, file: !1177, discriminator: 0)
!6607 = !DILocation(line: 138, column: 11, scope: !6595)
!6608 = !DILocation(line: 140, column: 2, scope: !6595)
!6609 = !DILocation(line: 75, column: 17, scope: !6606)
!6610 = distinct !DISubprogram(name: "from_raw_parts<u16>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hb4edb9946c9325baE", scope: !6597, file: !6596, line: 123, type: !6611, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, retainedNodes: !6613)
!6611 = !DISubroutineType(types: !6612)
!6612 = !{!6486, !326, !9}
!6613 = !{!6614, !6615}
!6614 = !DILocalVariable(name: "data", arg: 1, scope: !6610, file: !6596, line: 123, type: !326)
!6615 = !DILocalVariable(name: "len", arg: 2, scope: !6610, file: !6596, line: 123, type: !9)
!6616 = !DILocation(line: 123, column: 43, scope: !6610)
!6617 = !DILocation(line: 123, column: 59, scope: !6610)
!6618 = !DILocation(line: 74, column: 35, scope: !6619)
!6619 = !DILexicalBlockFile(scope: !6610, file: !1177, discriminator: 0)
!6620 = !DILocation(line: 138, column: 11, scope: !6610)
!6621 = !DILocation(line: 140, column: 2, scope: !6610)
!6622 = !DILocation(line: 75, column: 17, scope: !6619)
!6623 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5slice3raw14from_raw_parts18precondition_check17h39476cec35534311E", scope: !6624, file: !1177, line: 66, type: !6625, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !6627)
!6624 = !DINamespace(name: "from_raw_parts", scope: !6597)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{null, !2064, !9, !9, !9}
!6627 = !{!6628, !6629, !6630, !6631}
!6628 = !DILocalVariable(name: "data", arg: 1, scope: !6623, file: !1177, line: 66, type: !2064)
!6629 = !DILocalVariable(name: "size", arg: 2, scope: !6623, file: !1177, line: 66, type: !9)
!6630 = !DILocalVariable(name: "align", arg: 3, scope: !6623, file: !1177, line: 66, type: !9)
!6631 = !DILocalVariable(name: "len", arg: 4, scope: !6623, file: !1177, line: 66, type: !9)
!6632 = !DILocation(line: 66, column: 43, scope: !6623)
!6633 = !DILocation(line: 135, column: 13, scope: !6634)
!6634 = !DILexicalBlockFile(scope: !6623, file: !6596, discriminator: 0)
!6635 = !DILocation(line: 68, column: 21, scope: !6623)
!6636 = !DILocation(line: 136, column: 20, scope: !6634)
!6637 = !DILocation(line: 72, column: 14, scope: !6623)
!6638 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17hc041fc96cb8d80d6E", scope: !6597, file: !6596, line: 177, type: !6639, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !6641)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!6392, !1201, !9}
!6641 = !{!6642, !6643}
!6642 = !DILocalVariable(name: "data", arg: 1, scope: !6638, file: !6596, line: 177, type: !1201)
!6643 = !DILocalVariable(name: "len", arg: 2, scope: !6638, file: !6596, line: 177, type: !9)
!6644 = !DILocation(line: 177, column: 47, scope: !6638)
!6645 = !DILocation(line: 177, column: 61, scope: !6638)
!6646 = !DILocation(line: 74, column: 35, scope: !6647)
!6647 = !DILexicalBlockFile(scope: !6638, file: !1177, discriminator: 0)
!6648 = !DILocation(line: 192, column: 15, scope: !6638)
!6649 = !DILocation(line: 194, column: 2, scope: !6638)
!6650 = !DILocation(line: 75, column: 17, scope: !6647)
!6651 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h29419e1598bdfea7E", scope: !6652, file: !1177, line: 66, type: !6625, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !6653)
!6652 = !DINamespace(name: "from_raw_parts_mut", scope: !6597)
!6653 = !{!6654, !6655, !6656, !6657}
!6654 = !DILocalVariable(name: "data", arg: 1, scope: !6651, file: !1177, line: 66, type: !2064)
!6655 = !DILocalVariable(name: "size", arg: 2, scope: !6651, file: !1177, line: 66, type: !9)
!6656 = !DILocalVariable(name: "align", arg: 3, scope: !6651, file: !1177, line: 66, type: !9)
!6657 = !DILocalVariable(name: "len", arg: 4, scope: !6651, file: !1177, line: 66, type: !9)
!6658 = !DILocation(line: 66, column: 43, scope: !6651)
!6659 = !DILocation(line: 189, column: 13, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6651, file: !6596, discriminator: 0)
!6661 = !DILocation(line: 68, column: 21, scope: !6651)
!6662 = !DILocation(line: 190, column: 20, scope: !6660)
!6663 = !DILocation(line: 72, column: 14, scope: !6651)
!6664 = distinct !DISubprogram(name: "new<[u8; 2]>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h94d6f48f5311a854E", scope: !408, file: !739, line: 90, type: !6464, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !6665, retainedNodes: !6666)
!6665 = !DISubprogram(name: "new<[u8; 2]>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h94d6f48f5311a854E", scope: !408, file: !739, line: 90, type: !6464, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!6666 = !{!6667, !6668, !6670, !6672}
!6667 = !DILocalVariable(name: "slice", arg: 1, scope: !6664, file: !739, line: 90, type: !4016)
!6668 = !DILocalVariable(name: "len", scope: !6669, file: !739, line: 91, type: !9, align: 8)
!6669 = distinct !DILexicalBlock(scope: !6664, file: !739, line: 91, column: 9)
!6670 = !DILocalVariable(name: "ptr", scope: !6671, file: !739, line: 92, type: !411, align: 8)
!6671 = distinct !DILexicalBlock(scope: !6669, file: !739, line: 92, column: 9)
!6672 = !DILocalVariable(name: "end_or_len", scope: !6673, file: !739, line: 95, type: !414, align: 8)
!6673 = distinct !DILexicalBlock(scope: !6671, file: !739, line: 95, column: 13)
!6674 = !DILocation(line: 90, column: 23, scope: !6664)
!6675 = !DILocation(line: 95, column: 17, scope: !6673)
!6676 = !DILocation(line: 91, column: 19, scope: !6664)
!6677 = !DILocation(line: 91, column: 13, scope: !6669)
!6678 = !DILocation(line: 92, column: 31, scope: !6669)
!6679 = !DILocation(line: 92, column: 13, scope: !6671)
!6680 = !DILocation(line: 96, column: 20, scope: !6671)
!6681 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !6682)
!6682 = distinct !DILocation(line: 96, column: 65, scope: !6671)
!6683 = !DILocalVariable(name: "self", arg: 1, scope: !6684, file: !1180, line: 993, type: !1345)
!6684 = distinct !DISubprogram(name: "add<[u8; 2]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd80a08e1271f4b25E", scope: !1316, file: !1180, line: 993, type: !6685, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !6687)
!6685 = !DISubroutineType(types: !6686)
!6686 = !{!1345, !1345, !9}
!6687 = !{!6683, !6688}
!6688 = !DILocalVariable(name: "count", arg: 2, scope: !6684, file: !1180, line: 993, type: !9)
!6689 = !DILocation(line: 993, column: 29, scope: !6684, inlinedAt: !6690)
!6690 = distinct !DILocation(line: 96, column: 65, scope: !6671)
!6691 = !DILocation(line: 993, column: 35, scope: !6684, inlinedAt: !6690)
!6692 = !DILocation(line: 74, column: 35, scope: !6693, inlinedAt: !6690)
!6693 = !DILexicalBlockFile(scope: !6684, file: !1177, discriminator: 0)
!6694 = !DILocation(line: 75, column: 17, scope: !6693, inlinedAt: !6690)
!6695 = !DILocation(line: 1027, column: 18, scope: !6684, inlinedAt: !6690)
!6696 = !DILocation(line: 96, column: 63, scope: !6671)
!6697 = !DILocation(line: 96, column: 17, scope: !6671)
!6698 = !DILocation(line: 98, column: 25, scope: !6673)
!6699 = !DILocation(line: 100, column: 6, scope: !6664)
!6700 = distinct !DISubprogram(name: "new<bool>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb8b33c8c8b6d4c94E", scope: !513, file: !739, line: 90, type: !6472, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, declaration: !6701, retainedNodes: !6702)
!6701 = !DISubprogram(name: "new<bool>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb8b33c8c8b6d4c94E", scope: !513, file: !739, line: 90, type: !6472, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !521)
!6702 = !{!6703, !6704, !6706, !6708}
!6703 = !DILocalVariable(name: "slice", arg: 1, scope: !6700, file: !739, line: 90, type: !4028)
!6704 = !DILocalVariable(name: "len", scope: !6705, file: !739, line: 91, type: !9, align: 8)
!6705 = distinct !DILexicalBlock(scope: !6700, file: !739, line: 91, column: 9)
!6706 = !DILocalVariable(name: "ptr", scope: !6707, file: !739, line: 92, type: !516, align: 8)
!6707 = distinct !DILexicalBlock(scope: !6705, file: !739, line: 92, column: 9)
!6708 = !DILocalVariable(name: "end_or_len", scope: !6709, file: !739, line: 95, type: !519, align: 8)
!6709 = distinct !DILexicalBlock(scope: !6707, file: !739, line: 95, column: 13)
!6710 = !DILocation(line: 90, column: 23, scope: !6700)
!6711 = !DILocation(line: 95, column: 17, scope: !6709)
!6712 = !DILocation(line: 91, column: 19, scope: !6700)
!6713 = !DILocation(line: 91, column: 13, scope: !6705)
!6714 = !DILocation(line: 92, column: 31, scope: !6705)
!6715 = !DILocation(line: 92, column: 13, scope: !6707)
!6716 = !DILocation(line: 96, column: 20, scope: !6707)
!6717 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !6718)
!6718 = distinct !DILocation(line: 96, column: 65, scope: !6707)
!6719 = !DILocalVariable(name: "self", arg: 1, scope: !6720, file: !1180, line: 993, type: !3708)
!6720 = distinct !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h7daf2a5796cd906eE", scope: !1316, file: !1180, line: 993, type: !6721, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, retainedNodes: !6723)
!6721 = !DISubroutineType(types: !6722)
!6722 = !{!3708, !3708, !9}
!6723 = !{!6719, !6724}
!6724 = !DILocalVariable(name: "count", arg: 2, scope: !6720, file: !1180, line: 993, type: !9)
!6725 = !DILocation(line: 993, column: 29, scope: !6720, inlinedAt: !6726)
!6726 = distinct !DILocation(line: 96, column: 65, scope: !6707)
!6727 = !DILocation(line: 993, column: 35, scope: !6720, inlinedAt: !6726)
!6728 = !DILocation(line: 74, column: 35, scope: !6729, inlinedAt: !6726)
!6729 = !DILexicalBlockFile(scope: !6720, file: !1177, discriminator: 0)
!6730 = !DILocation(line: 75, column: 17, scope: !6729, inlinedAt: !6726)
!6731 = !DILocation(line: 1027, column: 18, scope: !6720, inlinedAt: !6726)
!6732 = !DILocation(line: 96, column: 63, scope: !6707)
!6733 = !DILocation(line: 96, column: 17, scope: !6707)
!6734 = !DILocation(line: 98, column: 25, scope: !6709)
!6735 = !DILocation(line: 100, column: 6, scope: !6700)
!6736 = distinct !DISubprogram(name: "new<u8, 2>", linkageName: "_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$3new17h24a3ff88d9e749e8E", scope: !405, file: !739, line: 2335, type: !6737, scopeLine: 2335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !6739, retainedNodes: !6740)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{!405, !427}
!6739 = !DISubprogram(name: "new<u8, 2>", linkageName: "_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$3new17h24a3ff88d9e749e8E", scope: !405, file: !739, line: 2335, type: !6737, scopeLine: 2335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!6740 = !{!6741, !6742, !6744}
!6741 = !DILocalVariable(name: "slice", arg: 1, scope: !6736, file: !739, line: 2335, type: !427)
!6742 = !DILocalVariable(name: "array_slice", scope: !6743, file: !739, line: 2336, type: !4016, align: 8)
!6743 = distinct !DILexicalBlock(scope: !6736, file: !739, line: 2336, column: 9)
!6744 = !DILocalVariable(name: "rem", scope: !6743, file: !739, line: 2336, type: !427, align: 8)
!6745 = !DILocation(line: 2335, column: 23, scope: !6736)
!6746 = !DILocation(line: 2336, column: 34, scope: !6736)
!6747 = !DILocation(line: 2336, column: 14, scope: !6736)
!6748 = !DILocation(line: 2336, column: 14, scope: !6743)
!6749 = !DILocation(line: 2336, column: 27, scope: !6736)
!6750 = !DILocation(line: 2336, column: 27, scope: !6743)
!6751 = !DILocation(line: 2337, column: 22, scope: !6743)
!6752 = !DILocation(line: 2337, column: 9, scope: !6743)
!6753 = !DILocation(line: 2338, column: 6, scope: !6736)
!6754 = distinct !DISubprogram(name: "remainder<u8, 2>", linkageName: "_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$9remainder17ha5e87bf7e7f163c8E", scope: !405, file: !739, line: 2345, type: !6755, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !6757, retainedNodes: !6758)
!6755 = !DISubroutineType(types: !6756)
!6756 = !{!427, !762}
!6757 = !DISubprogram(name: "remainder<u8, 2>", linkageName: "_ZN4core5slice4iter24ArrayChunks$LT$T$C$_$GT$9remainder17ha5e87bf7e7f163c8E", scope: !405, file: !739, line: 2345, type: !6755, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!6758 = !{!6759}
!6759 = !DILocalVariable(name: "self", arg: 1, scope: !6754, file: !739, line: 2345, type: !762)
!6760 = !DILocation(line: 2345, column: 22, scope: !6754)
!6761 = !DILocation(line: 2346, column: 9, scope: !6754)
!6762 = !DILocation(line: 2347, column: 6, scope: !6754)
!6763 = distinct !DISubprogram(name: "range<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range17he60eca797cb2ab12E", scope: !1141, file: !1139, line: 835, type: !6764, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6783, retainedNodes: !6766)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{!1159, !1159, !1247, !1690}
!6766 = !{!6767, !6768, !6769, !6771, !6773, !6775, !6777, !6779, !6781}
!6767 = !DILocalVariable(name: "range", arg: 1, scope: !6763, file: !1139, line: 835, type: !1159)
!6768 = !DILocalVariable(name: "bounds", arg: 2, scope: !6763, file: !1139, line: 835, type: !1247)
!6769 = !DILocalVariable(name: "len", scope: !6770, file: !1139, line: 839, type: !9, align: 8)
!6770 = distinct !DILexicalBlock(scope: !6763, file: !1139, line: 839, column: 5)
!6771 = !DILocalVariable(name: "start", scope: !6772, file: !1139, line: 841, type: !9, align: 8)
!6772 = distinct !DILexicalBlock(scope: !6770, file: !1139, line: 841, column: 5)
!6773 = !DILocalVariable(name: "start", scope: !6774, file: !1139, line: 842, type: !9, align: 8)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !1139, line: 842, column: 9)
!6775 = !DILocalVariable(name: "start", scope: !6776, file: !1139, line: 843, type: !2172, align: 8)
!6776 = distinct !DILexicalBlock(scope: !6770, file: !1139, line: 843, column: 9)
!6777 = !DILocalVariable(name: "end", scope: !6778, file: !1139, line: 849, type: !9, align: 8)
!6778 = distinct !DILexicalBlock(scope: !6772, file: !1139, line: 849, column: 5)
!6779 = !DILocalVariable(name: "end", scope: !6780, file: !1139, line: 850, type: !2172, align: 8)
!6780 = distinct !DILexicalBlock(scope: !6772, file: !1139, line: 850, column: 9)
!6781 = !DILocalVariable(name: "end", scope: !6782, file: !1139, line: 853, type: !9, align: 8)
!6782 = distinct !DILexicalBlock(scope: !6772, file: !1139, line: 853, column: 9)
!6783 = !{!6784}
!6784 = !DITemplateTypeParameter(name: "R", type: !1159)
!6785 = !DILocation(line: 835, column: 17, scope: !6763)
!6786 = !DILocation(line: 835, column: 27, scope: !6763)
!6787 = !DILocation(line: 841, column: 9, scope: !6772)
!6788 = !DILocation(line: 849, column: 9, scope: !6778)
!6789 = !DILocation(line: 839, column: 15, scope: !6763)
!6790 = !DILocation(line: 839, column: 9, scope: !6770)
!6791 = !DILocation(line: 841, column: 23, scope: !6770)
!6792 = !DILocation(line: 841, column: 17, scope: !6770)
!6793 = !DILocation(line: 0, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !6763, file: !4366, discriminator: 0)
!6795 = !DILocation(line: 842, column: 31, scope: !6770)
!6796 = !DILocation(line: 842, column: 31, scope: !6774)
!6797 = !DILocation(line: 842, column: 41, scope: !6774)
!6798 = !DILocation(line: 842, column: 45, scope: !6770)
!6799 = !DILocation(line: 843, column: 30, scope: !6770)
!6800 = !DILocation(line: 843, column: 30, scope: !6776)
!6801 = !DILocation(line: 844, column: 13, scope: !6776)
!6802 = !DILocation(line: 846, column: 34, scope: !6770)
!6803 = !DILocation(line: 849, column: 21, scope: !6772)
!6804 = !DILocation(line: 849, column: 15, scope: !6772)
!6805 = !DILocation(line: 850, column: 30, scope: !6772)
!6806 = !DILocation(line: 850, column: 30, scope: !6780)
!6807 = !DILocation(line: 851, column: 13, scope: !6780)
!6808 = !DILocation(line: 853, column: 31, scope: !6772)
!6809 = !DILocation(line: 853, column: 31, scope: !6782)
!6810 = !DILocation(line: 853, column: 39, scope: !6782)
!6811 = !DILocation(line: 853, column: 41, scope: !6772)
!6812 = !DILocation(line: 854, column: 34, scope: !6772)
!6813 = !DILocation(line: 857, column: 8, scope: !6778)
!6814 = !DILocation(line: 857, column: 16, scope: !6778)
!6815 = !DILocation(line: 860, column: 8, scope: !6778)
!6816 = !DILocation(line: 858, column: 32, scope: !6778)
!6817 = !DILocation(line: 858, column: 39, scope: !6778)
!6818 = !DILocation(line: 858, column: 9, scope: !6778)
!6819 = !DILocation(line: 864, column: 18, scope: !6778)
!6820 = !DILocation(line: 864, column: 25, scope: !6778)
!6821 = !DILocation(line: 865, column: 2, scope: !6763)
!6822 = !DILocation(line: 861, column: 34, scope: !6778)
!6823 = !DILocation(line: 861, column: 9, scope: !6778)
!6824 = distinct !DISubprogram(name: "{closure#1}<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17h9428914fb497a7f5E", scope: !6825, file: !1139, line: 851, type: !6826, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6783, retainedNodes: !6829)
!6825 = !DINamespace(name: "range", scope: !1141)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!9, !6828}
!6828 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<core::ops::range::Range<usize>>", scope: !6825, file: !2, align: 8, elements: !15, identifier: "6248f865b8f35f14116061abfbb93923")
!6829 = !{!6830}
!6830 = !DILocalVariable(arg: 1, scope: !6824, file: !1139, line: 851, type: !6828)
!6831 = !DILocation(line: 851, column: 47, scope: !6824)
!6832 = !DILocation(line: 851, column: 50, scope: !6824)
!6833 = distinct !DISubprogram(name: "{closure#0}<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range28_$u7b$$u7b$closure$u7d$$u7d$17hbf5d17156c35e1c4E", scope: !6825, file: !1139, line: 844, type: !6834, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6783, retainedNodes: !6837)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!9, !6836}
!6836 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::ops::range::Range<usize>>", scope: !6825, file: !2, align: 8, elements: !15, identifier: "298368ae62ce21873ed015453bd8ccce")
!6837 = !{!6838}
!6838 = !DILocalVariable(arg: 1, scope: !6833, file: !1139, line: 844, type: !6836)
!6839 = !DILocation(line: 844, column: 49, scope: !6833)
!6840 = !DILocation(line: 844, column: 52, scope: !6833)
!6841 = distinct !DISubprogram(name: "memchr_naive", linkageName: "_ZN4core5slice6memchr12memchr_naive17h7fa02eb67be222c1E", scope: !6843, file: !6842, line: 36, type: !6844, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !6846)
!6842 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "8b1853d60af87a9a40f3265c8cc41c02")
!6843 = !DINamespace(name: "memchr", scope: !320)
!6844 = !DISubroutineType(types: !6845)
!6845 = !{!664, !45, !427}
!6846 = !{!6847, !6848, !6849}
!6847 = !DILocalVariable(name: "x", arg: 1, scope: !6841, file: !6842, line: 36, type: !45)
!6848 = !DILocalVariable(name: "text", arg: 2, scope: !6841, file: !6842, line: 36, type: !427)
!6849 = !DILocalVariable(name: "i", scope: !6850, file: !6842, line: 37, type: !9, align: 8)
!6850 = distinct !DILexicalBlock(scope: !6841, file: !6842, line: 37, column: 5)
!6851 = !DILocation(line: 36, column: 23, scope: !6841)
!6852 = !DILocation(line: 36, column: 30, scope: !6841)
!6853 = !DILocation(line: 37, column: 9, scope: !6850)
!6854 = !DILocation(line: 37, column: 17, scope: !6841)
!6855 = !DILocation(line: 40, column: 5, scope: !6850)
!6856 = !DILocation(line: 40, column: 11, scope: !6850)
!6857 = !DILocation(line: 48, column: 5, scope: !6850)
!6858 = !DILocation(line: 49, column: 2, scope: !6841)
!6859 = !DILocation(line: 41, column: 17, scope: !6850)
!6860 = !DILocation(line: 41, column: 12, scope: !6850)
!6861 = !DILocation(line: 45, column: 9, scope: !6850)
!6862 = !DILocation(line: 42, column: 25, scope: !6850)
!6863 = !DILocation(line: 42, column: 20, scope: !6850)
!6864 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17hecc33a3e1488af34E", scope: !6843, file: !6842, line: 26, type: !6844, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !6865)
!6865 = !{!6866, !6867}
!6866 = !DILocalVariable(name: "x", arg: 1, scope: !6864, file: !6842, line: 26, type: !45)
!6867 = !DILocalVariable(name: "text", arg: 2, scope: !6864, file: !6842, line: 26, type: !427)
!6868 = !DILocation(line: 26, column: 21, scope: !6864)
!6869 = !DILocation(line: 26, column: 28, scope: !6864)
!6870 = !DILocation(line: 28, column: 21, scope: !6864)
!6871 = !DILocation(line: 28, column: 8, scope: !6864)
!6872 = !DILocation(line: 32, column: 5, scope: !6864)
!6873 = !DILocation(line: 29, column: 16, scope: !6864)
!6874 = !DILocation(line: 33, column: 2, scope: !6864)
!6875 = distinct !DISubprogram(name: "unwrap_or_else<usize, core::slice::index::range::{closure_env#0}<core::ops::range::Range<usize>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hae61759adca3726aE", scope: !664, file: !1619, line: 1011, type: !6876, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6879, declaration: !6878, retainedNodes: !6881)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!9, !664, !6836, !1690}
!6878 = !DISubprogram(name: "unwrap_or_else<usize, core::slice::index::range::{closure_env#0}<core::ops::range::Range<usize>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hae61759adca3726aE", scope: !664, file: !1619, line: 1011, type: !6876, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6879)
!6879 = !{!195, !6880}
!6880 = !DITemplateTypeParameter(name: "F", type: !6836)
!6881 = !{!6882, !6883, !6884}
!6882 = !DILocalVariable(name: "self", arg: 1, scope: !6875, file: !1619, line: 1011, type: !664)
!6883 = !DILocalVariable(name: "f", arg: 2, scope: !6875, file: !1619, line: 1011, type: !6836)
!6884 = !DILocalVariable(name: "x", scope: !6885, file: !1619, line: 1016, type: !9, align: 8)
!6885 = distinct !DILexicalBlock(scope: !6875, file: !1619, line: 1016, column: 13)
!6886 = !DILocation(line: 1011, column: 30, scope: !6875)
!6887 = !DILocation(line: 1011, column: 36, scope: !6875)
!6888 = !DILocation(line: 1015, column: 15, scope: !6875)
!6889 = !DILocation(line: 1015, column: 9, scope: !6875)
!6890 = !DILocation(line: 1017, column: 21, scope: !6875)
!6891 = !DILocation(line: 1016, column: 18, scope: !6875)
!6892 = !DILocation(line: 1016, column: 18, scope: !6885)
!6893 = !DILocation(line: 1016, column: 24, scope: !6885)
!6894 = !DILocation(line: 1016, column: 24, scope: !6875)
!6895 = !DILocation(line: 1019, column: 5, scope: !6875)
!6896 = !DILocation(line: 1019, column: 6, scope: !6875)
!6897 = distinct !DISubprogram(name: "unwrap_or_else<usize, core::slice::index::range::{closure_env#1}<core::ops::range::Range<usize>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hf09621581b4b66f5E", scope: !664, file: !1619, line: 1011, type: !6898, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6901, declaration: !6900, retainedNodes: !6903)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!9, !664, !6828, !1690}
!6900 = !DISubprogram(name: "unwrap_or_else<usize, core::slice::index::range::{closure_env#1}<core::ops::range::Range<usize>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hf09621581b4b66f5E", scope: !664, file: !1619, line: 1011, type: !6898, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6901)
!6901 = !{!195, !6902}
!6902 = !DITemplateTypeParameter(name: "F", type: !6828)
!6903 = !{!6904, !6905, !6906}
!6904 = !DILocalVariable(name: "self", arg: 1, scope: !6897, file: !1619, line: 1011, type: !664)
!6905 = !DILocalVariable(name: "f", arg: 2, scope: !6897, file: !1619, line: 1011, type: !6828)
!6906 = !DILocalVariable(name: "x", scope: !6907, file: !1619, line: 1016, type: !9, align: 8)
!6907 = distinct !DILexicalBlock(scope: !6897, file: !1619, line: 1016, column: 13)
!6908 = !DILocation(line: 1011, column: 30, scope: !6897)
!6909 = !DILocation(line: 1011, column: 36, scope: !6897)
!6910 = !DILocation(line: 1015, column: 15, scope: !6897)
!6911 = !DILocation(line: 1015, column: 9, scope: !6897)
!6912 = !DILocation(line: 1017, column: 21, scope: !6897)
!6913 = !DILocation(line: 1016, column: 18, scope: !6897)
!6914 = !DILocation(line: 1016, column: 18, scope: !6907)
!6915 = !DILocation(line: 1016, column: 24, scope: !6907)
!6916 = !DILocation(line: 1016, column: 24, scope: !6897)
!6917 = !DILocation(line: 1019, column: 5, scope: !6897)
!6918 = !DILocation(line: 1019, column: 6, scope: !6897)
!6919 = distinct !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h420c33d78b51a426E", scope: !794, file: !1619, line: 1108, type: !6920, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6923, declaration: !6922, retainedNodes: !6925)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{!339, !794, !2964}
!6922 = !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h420c33d78b51a426E", scope: !794, file: !1619, line: 1108, type: !6920, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6923)
!6923 = !{!419, !6375, !6924}
!6924 = !DITemplateTypeParameter(name: "F", type: !2964)
!6925 = !{!6926, !6927, !6928}
!6926 = !DILocalVariable(name: "self", arg: 1, scope: !6919, file: !1619, line: 1108, type: !794)
!6927 = !DILocalVariable(name: "f", arg: 2, scope: !6919, file: !1619, line: 1108, type: !2964)
!6928 = !DILocalVariable(name: "x", scope: !6929, file: !1619, line: 1113, type: !415, align: 1)
!6929 = distinct !DILexicalBlock(scope: !6919, file: !1619, line: 1113, column: 13)
!6930 = !DILocation(line: 1108, column: 22, scope: !6919)
!6931 = !DILocation(line: 1108, column: 28, scope: !6919)
!6932 = !DILocation(line: 1113, column: 18, scope: !6929)
!6933 = !DILocation(line: 1112, column: 15, scope: !6919)
!6934 = !DILocation(line: 1112, column: 9, scope: !6919)
!6935 = !DILocation(line: 1114, column: 21, scope: !6919)
!6936 = !DILocation(line: 1113, column: 18, scope: !6919)
!6937 = !DILocation(line: 1113, column: 29, scope: !6929)
!6938 = !DILocation(line: 1113, column: 24, scope: !6929)
!6939 = !DILocation(line: 1113, column: 33, scope: !6919)
!6940 = !DILocation(line: 1116, column: 5, scope: !6919)
!6941 = !DILocation(line: 1116, column: 6, scope: !6919)
!6942 = distinct !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h6da2db0481086ae8E", scope: !794, file: !1619, line: 1108, type: !6920, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6923, declaration: !6943, retainedNodes: !6944)
!6943 = !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h6da2db0481086ae8E", scope: !794, file: !1619, line: 1108, type: !6920, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6923)
!6944 = !{!6945, !6946, !6947}
!6945 = !DILocalVariable(name: "self", arg: 1, scope: !6942, file: !1619, line: 1108, type: !794)
!6946 = !DILocalVariable(name: "f", arg: 2, scope: !6942, file: !1619, line: 1108, type: !2964)
!6947 = !DILocalVariable(name: "x", scope: !6948, file: !1619, line: 1113, type: !415, align: 1)
!6948 = distinct !DILexicalBlock(scope: !6942, file: !1619, line: 1113, column: 13)
!6949 = !DILocation(line: 1108, column: 22, scope: !6942)
!6950 = !DILocation(line: 1108, column: 28, scope: !6942)
!6951 = !DILocation(line: 1113, column: 18, scope: !6948)
!6952 = !DILocation(line: 1112, column: 15, scope: !6942)
!6953 = !DILocation(line: 1112, column: 9, scope: !6942)
!6954 = !DILocation(line: 1114, column: 21, scope: !6942)
!6955 = !DILocation(line: 1113, column: 18, scope: !6942)
!6956 = !DILocation(line: 1113, column: 29, scope: !6948)
!6957 = !DILocation(line: 1113, column: 24, scope: !6948)
!6958 = !DILocation(line: 1113, column: 33, scope: !6942)
!6959 = !DILocation(line: 1116, column: 5, scope: !6942)
!6960 = !DILocation(line: 1116, column: 6, scope: !6942)
!6961 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hb29b5a62bf7c8d46E", scope: !4308, file: !1619, line: 1108, type: !6962, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6968, declaration: !6967, retainedNodes: !6971)
!6962 = !DISubroutineType(types: !6963)
!6963 = !{!1379, !4308, !6964}
!6964 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6965, file: !2, align: 8, elements: !15, identifier: "9c83e1f60c424e4c5237cdad1895d278")
!6965 = !DINamespace(name: "next_back", scope: !6966)
!6966 = !DINamespace(name: "{impl#2}", scope: !1397)
!6967 = !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hb29b5a62bf7c8d46E", scope: !4308, file: !1619, line: 1108, type: !6962, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6968)
!6968 = !{!4315, !6969, !6970}
!6969 = !DITemplateTypeParameter(name: "U", type: !379)
!6970 = !DITemplateTypeParameter(name: "F", type: !6964)
!6971 = !{!6972, !6973, !6974}
!6972 = !DILocalVariable(name: "self", arg: 1, scope: !6961, file: !1619, line: 1108, type: !4308)
!6973 = !DILocalVariable(name: "f", arg: 2, scope: !6961, file: !1619, line: 1108, type: !6964)
!6974 = !DILocalVariable(name: "x", scope: !6975, file: !1619, line: 1113, type: !1391, align: 4)
!6975 = distinct !DILexicalBlock(scope: !6961, file: !1619, line: 1113, column: 13)
!6976 = !DILocation(line: 1108, column: 22, scope: !6961)
!6977 = !DILocation(line: 1108, column: 28, scope: !6961)
!6978 = !DILocation(line: 1112, column: 15, scope: !6961)
!6979 = !DILocation(line: 1112, column: 9, scope: !6961)
!6980 = !DILocation(line: 1114, column: 21, scope: !6961)
!6981 = !DILocation(line: 1113, column: 18, scope: !6961)
!6982 = !DILocation(line: 1113, column: 18, scope: !6975)
!6983 = !DILocation(line: 1113, column: 29, scope: !6975)
!6984 = !DILocation(line: 1113, column: 24, scope: !6975)
!6985 = !DILocation(line: 1113, column: 33, scope: !6961)
!6986 = !DILocation(line: 1116, column: 5, scope: !6961)
!6987 = !DILocation(line: 1116, column: 6, scope: !6961)
!6988 = distinct !DISubprogram(name: "take<u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E", scope: !339, file: !1619, line: 1720, type: !6989, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, declaration: !6991, retainedNodes: !6992)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!339, !2581}
!6991 = !DISubprogram(name: "take<u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17hfcdb933ab8bc0274E", scope: !339, file: !1619, line: 1720, type: !6989, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !328)
!6992 = !{!6993}
!6993 = !DILocalVariable(name: "self", arg: 1, scope: !6988, file: !1619, line: 1720, type: !2581)
!6994 = !DILocation(line: 1720, column: 23, scope: !6988)
!6995 = !DILocation(line: 1722, column: 28, scope: !6988)
!6996 = !DILocation(line: 1722, column: 9, scope: !6988)
!6997 = !DILocation(line: 1723, column: 6, scope: !6988)
!6998 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h42e8827b172396c2E", scope: !664, file: !1619, line: 1246, type: !6999, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7009, declaration: !7015, retainedNodes: !7016)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{!7001, !664, !1736}
!7001 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !865, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !7002, templateParams: !15, identifier: "c7d3c5198d75c0ab95996d7ed7db042")
!7002 = !{!7003}
!7003 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7001, file: !2, size: 128, align: 64, elements: !7004, templateParams: !15, identifier: "c0709eba9cd75e6b94135bfc3b9e4f0c", discriminator: !7014)
!7004 = !{!7005, !7010}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7003, file: !2, baseType: !7006, size: 128, align: 64, extraData: i128 9223372036854775809)
!7006 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7001, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !7007, templateParams: !7009, identifier: "8c8578e7ba9819c171fc62d189f3b294")
!7007 = !{!7008}
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7006, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!7009 = !{!195, !1769}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7003, file: !2, baseType: !7011, size: 128, align: 64)
!7011 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7001, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !7012, templateParams: !7009, identifier: "917e5463ba726a2d4eb2d100048975c3")
!7012 = !{!7013}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7011, file: !2, baseType: !1736, size: 128, align: 64, flags: DIFlagPublic)
!7014 = !DIDerivedType(tag: DW_TAG_member, scope: !7001, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7015 = !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h42e8827b172396c2E", scope: !664, file: !1619, line: 1246, type: !6999, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7009)
!7016 = !{!7017, !7018, !7019}
!7017 = !DILocalVariable(name: "self", arg: 1, scope: !6998, file: !1619, line: 1246, type: !664)
!7018 = !DILocalVariable(name: "err", arg: 2, scope: !6998, file: !1619, line: 1246, type: !1736)
!7019 = !DILocalVariable(name: "v", scope: !7020, file: !1619, line: 1248, type: !9, align: 8)
!7020 = distinct !DILexicalBlock(scope: !6998, file: !1619, line: 1248, column: 13)
!7021 = !DILocation(line: 1246, column: 21, scope: !6998)
!7022 = !DILocation(line: 1246, column: 27, scope: !6998)
!7023 = !DILocation(line: 1247, column: 15, scope: !6998)
!7024 = !DILocation(line: 1247, column: 9, scope: !6998)
!7025 = !DILocation(line: 1249, column: 25, scope: !6998)
!7026 = !DILocation(line: 1249, column: 21, scope: !6998)
!7027 = !DILocation(line: 1249, column: 28, scope: !6998)
!7028 = !DILocation(line: 1248, column: 18, scope: !6998)
!7029 = !DILocation(line: 1248, column: 18, scope: !7020)
!7030 = !DILocation(line: 1248, column: 24, scope: !7020)
!7031 = !DILocation(line: 1248, column: 28, scope: !6998)
!7032 = !DILocation(line: 1251, column: 5, scope: !6998)
!7033 = !DILocation(line: 1251, column: 6, scope: !6998)
!7034 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he08d66db6591ba09E", scope: !3827, file: !1619, line: 1246, type: !7035, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7045, declaration: !7051, retainedNodes: !7052)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{!7037, !3827, !1671}
!7037 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !865, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !7038, templateParams: !15, identifier: "970d50b6c63d56dc8577c131e2c0cbdf")
!7038 = !{!7039}
!7039 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7037, file: !2, size: 64, align: 64, elements: !7040, templateParams: !15, identifier: "4f0ea38e4c07d9ca1afc4e0de17a05ed", discriminator: !7050)
!7040 = !{!7041, !7046}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7039, file: !2, baseType: !7042, size: 64, align: 64)
!7042 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7037, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !7043, templateParams: !7045, identifier: "4a7d7c64ec1dd992724a2d3d47aa1083")
!7043 = !{!7044}
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7042, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagPublic)
!7045 = !{!3834, !1670}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7039, file: !2, baseType: !7047, size: 64, align: 64, extraData: i128 0)
!7047 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7037, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !7048, templateParams: !7045, identifier: "a9d2867a5bf992e1d8e0f88d70f370f8")
!7048 = !{!7049}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7047, file: !2, baseType: !1671, align: 8, flags: DIFlagPublic)
!7050 = !DIDerivedType(tag: DW_TAG_member, scope: !7037, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7051 = !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he08d66db6591ba09E", scope: !3827, file: !1619, line: 1246, type: !7035, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7045)
!7052 = !{!7053, !7054, !7055}
!7053 = !DILocalVariable(name: "self", arg: 1, scope: !7034, file: !1619, line: 1246, type: !3827)
!7054 = !DILocalVariable(name: "err", arg: 2, scope: !7034, file: !1619, line: 1246, type: !1671)
!7055 = !DILocalVariable(name: "v", scope: !7056, file: !1619, line: 1248, type: !99, align: 8)
!7056 = distinct !DILexicalBlock(scope: !7034, file: !1619, line: 1248, column: 13)
!7057 = !DILocation(line: 1246, column: 21, scope: !7034)
!7058 = !DILocation(line: 1246, column: 27, scope: !7034)
!7059 = !DILocation(line: 1247, column: 15, scope: !7034)
!7060 = !DILocation(line: 1247, column: 9, scope: !7034)
!7061 = !DILocation(line: 1249, column: 25, scope: !7034)
!7062 = !DILocation(line: 1249, column: 21, scope: !7034)
!7063 = !DILocation(line: 1249, column: 28, scope: !7034)
!7064 = !DILocation(line: 1248, column: 18, scope: !7034)
!7065 = !DILocation(line: 1248, column: 18, scope: !7056)
!7066 = !DILocation(line: 1248, column: 24, scope: !7056)
!7067 = !DILocation(line: 1248, column: 28, scope: !7034)
!7068 = !DILocation(line: 1251, column: 5, scope: !7034)
!7069 = !DILocation(line: 1251, column: 6, scope: !7034)
!7070 = distinct !DISubprogram(name: "is_some<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h2f8e984a5c096097E", scope: !856, file: !1619, line: 607, type: !7071, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !862, declaration: !7074, retainedNodes: !7075)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!520, !7073}
!7073 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !856, size: 64, align: 64, dwarfAddressSpace: 0)
!7074 = !DISubprogram(name: "is_some<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h2f8e984a5c096097E", scope: !856, file: !1619, line: 607, type: !7071, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !862)
!7075 = !{!7076}
!7076 = !DILocalVariable(name: "self", arg: 1, scope: !7070, file: !1619, line: 607, type: !7073)
!7077 = !DILocation(line: 607, column: 26, scope: !7070)
!7078 = !DILocation(line: 608, column: 18, scope: !7070)
!7079 = !DILocation(line: 475, column: 9, scope: !7080)
!7080 = !DILexicalBlockFile(scope: !7070, file: !2221, discriminator: 0)
!7081 = !DILocation(line: 476, column: 39, scope: !7080)
!7082 = !DILocation(line: 477, column: 18, scope: !7080)
!7083 = !DILocation(line: 609, column: 6, scope: !7070)
!7084 = !DILocation(line: 607, column: 5, scope: !7070)
!7085 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h1c60e8398fa148feE", scope: !664, file: !1619, line: 1441, type: !7086, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7094, declaration: !7093, retainedNodes: !7097)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{!664, !664, !7088}
!7088 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !7089, file: !2, size: 64, align: 64, elements: !7091, templateParams: !15, identifier: "69c1b92f48c6f892ce0be67051f03db")
!7089 = !DINamespace(name: "size_hint", scope: !7090)
!7090 = !DINamespace(name: "{impl#0}", scope: !310)
!7091 = !{!7092}
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !7088, file: !2, baseType: !2172, size: 64, align: 64)
!7093 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h1c60e8398fa148feE", scope: !664, file: !1619, line: 1441, type: !7086, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7094)
!7094 = !{!195, !7095, !7096}
!7095 = !DITemplateTypeParameter(name: "U", type: !9)
!7096 = !DITemplateTypeParameter(name: "F", type: !7088)
!7097 = !{!7098, !7099, !7100}
!7098 = !DILocalVariable(name: "self", arg: 1, scope: !7085, file: !1619, line: 1441, type: !664)
!7099 = !DILocalVariable(name: "f", arg: 2, scope: !7085, file: !1619, line: 1441, type: !7088)
!7100 = !DILocalVariable(name: "x", scope: !7101, file: !1619, line: 1446, type: !9, align: 8)
!7101 = distinct !DILexicalBlock(scope: !7085, file: !1619, line: 1446, column: 13)
!7102 = !DILocation(line: 1441, column: 27, scope: !7085)
!7103 = !DILocation(line: 1441, column: 33, scope: !7085)
!7104 = !DILocation(line: 1445, column: 15, scope: !7085)
!7105 = !DILocation(line: 1445, column: 9, scope: !7085)
!7106 = !DILocation(line: 1447, column: 21, scope: !7085)
!7107 = !DILocation(line: 1446, column: 18, scope: !7085)
!7108 = !DILocation(line: 1446, column: 18, scope: !7101)
!7109 = !DILocation(line: 1446, column: 24, scope: !7101)
!7110 = !DILocation(line: 1449, column: 5, scope: !7085)
!7111 = !DILocation(line: 1449, column: 6, scope: !7085)
!7112 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h543cc0c855f87572E", scope: !664, file: !1619, line: 1441, type: !7113, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7119, declaration: !7118, retainedNodes: !7121)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{!664, !664, !7115}
!7115 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", scope: !7089, file: !2, size: 64, align: 64, elements: !7116, templateParams: !15, identifier: "85a9167bea53983de10672e21027b36d")
!7116 = !{!7117}
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !7115, file: !2, baseType: !2172, size: 64, align: 64)
!7118 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h543cc0c855f87572E", scope: !664, file: !1619, line: 1441, type: !7113, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7119)
!7119 = !{!195, !7095, !7120}
!7120 = !DITemplateTypeParameter(name: "F", type: !7115)
!7121 = !{!7122, !7123, !7124}
!7122 = !DILocalVariable(name: "self", arg: 1, scope: !7112, file: !1619, line: 1441, type: !664)
!7123 = !DILocalVariable(name: "f", arg: 2, scope: !7112, file: !1619, line: 1441, type: !7115)
!7124 = !DILocalVariable(name: "x", scope: !7125, file: !1619, line: 1446, type: !9, align: 8)
!7125 = distinct !DILexicalBlock(scope: !7112, file: !1619, line: 1446, column: 13)
!7126 = !DILocation(line: 1441, column: 27, scope: !7112)
!7127 = !DILocation(line: 1441, column: 33, scope: !7112)
!7128 = !DILocation(line: 1445, column: 15, scope: !7112)
!7129 = !DILocation(line: 1445, column: 9, scope: !7112)
!7130 = !DILocation(line: 1447, column: 21, scope: !7112)
!7131 = !DILocation(line: 1446, column: 18, scope: !7112)
!7132 = !DILocation(line: 1446, column: 18, scope: !7125)
!7133 = !DILocation(line: 1446, column: 24, scope: !7125)
!7134 = !DILocation(line: 1449, column: 5, scope: !7112)
!7135 = !DILocation(line: 1449, column: 6, scope: !7112)
!7136 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hc666df8f06b3a2b2E", scope: !664, file: !1619, line: 1441, type: !7137, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7143, declaration: !7142, retainedNodes: !7145)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!664, !664, !7139}
!7139 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !7089, file: !2, size: 64, align: 64, elements: !7140, templateParams: !15, identifier: "790c437482203f3877c93f281a1ade9a")
!7140 = !{!7141}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !7139, file: !2, baseType: !2172, size: 64, align: 64)
!7142 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hc666df8f06b3a2b2E", scope: !664, file: !1619, line: 1441, type: !7137, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7143)
!7143 = !{!195, !7095, !7144}
!7144 = !DITemplateTypeParameter(name: "F", type: !7139)
!7145 = !{!7146, !7147, !7148}
!7146 = !DILocalVariable(name: "self", arg: 1, scope: !7136, file: !1619, line: 1441, type: !664)
!7147 = !DILocalVariable(name: "f", arg: 2, scope: !7136, file: !1619, line: 1441, type: !7139)
!7148 = !DILocalVariable(name: "x", scope: !7149, file: !1619, line: 1446, type: !9, align: 8)
!7149 = distinct !DILexicalBlock(scope: !7136, file: !1619, line: 1446, column: 13)
!7150 = !DILocation(line: 1441, column: 27, scope: !7136)
!7151 = !DILocation(line: 1441, column: 33, scope: !7136)
!7152 = !DILocation(line: 1445, column: 15, scope: !7136)
!7153 = !DILocation(line: 1445, column: 9, scope: !7136)
!7154 = !DILocation(line: 1447, column: 21, scope: !7136)
!7155 = !DILocation(line: 1446, column: 18, scope: !7136)
!7156 = !DILocation(line: 1446, column: 18, scope: !7149)
!7157 = !DILocation(line: 1446, column: 24, scope: !7149)
!7158 = !DILocation(line: 1449, column: 5, scope: !7136)
!7159 = !DILocation(line: 1449, column: 6, scope: !7136)
!7160 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hd40d2fada271dc15E", scope: !664, file: !1619, line: 1441, type: !7161, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7167, declaration: !7166, retainedNodes: !7169)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{!664, !664, !7163}
!7163 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !7089, file: !2, size: 64, align: 64, elements: !7164, templateParams: !15, identifier: "5f74de079dd29974f1877a8170ae616b")
!7164 = !{!7165}
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !7163, file: !2, baseType: !2172, size: 64, align: 64)
!7166 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hd40d2fada271dc15E", scope: !664, file: !1619, line: 1441, type: !7161, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7167)
!7167 = !{!195, !7095, !7168}
!7168 = !DITemplateTypeParameter(name: "F", type: !7163)
!7169 = !{!7170, !7171, !7172}
!7170 = !DILocalVariable(name: "self", arg: 1, scope: !7160, file: !1619, line: 1441, type: !664)
!7171 = !DILocalVariable(name: "f", arg: 2, scope: !7160, file: !1619, line: 1441, type: !7163)
!7172 = !DILocalVariable(name: "x", scope: !7173, file: !1619, line: 1446, type: !9, align: 8)
!7173 = distinct !DILexicalBlock(scope: !7160, file: !1619, line: 1446, column: 13)
!7174 = !DILocation(line: 1441, column: 27, scope: !7160)
!7175 = !DILocation(line: 1441, column: 33, scope: !7160)
!7176 = !DILocation(line: 1445, column: 15, scope: !7160)
!7177 = !DILocation(line: 1445, column: 9, scope: !7160)
!7178 = !DILocation(line: 1447, column: 21, scope: !7160)
!7179 = !DILocation(line: 1446, column: 18, scope: !7160)
!7180 = !DILocation(line: 1446, column: 18, scope: !7173)
!7181 = !DILocation(line: 1446, column: 24, scope: !7173)
!7182 = !DILocation(line: 1449, column: 5, scope: !7160)
!7183 = !DILocation(line: 1449, column: 6, scope: !7160)
!7184 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hf76144ed688c6ecbE", scope: !664, file: !1619, line: 1441, type: !7185, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7191, declaration: !7190, retainedNodes: !7193)
!7185 = !DISubroutineType(types: !7186)
!7186 = !{!664, !664, !7187}
!7187 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", scope: !7089, file: !2, size: 64, align: 64, elements: !7188, templateParams: !15, identifier: "678e476a7662f0f2ae568f8cf4fb6031")
!7188 = !{!7189}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !7187, file: !2, baseType: !2172, size: 64, align: 64)
!7190 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hf76144ed688c6ecbE", scope: !664, file: !1619, line: 1441, type: !7185, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7191)
!7191 = !{!195, !7095, !7192}
!7192 = !DITemplateTypeParameter(name: "F", type: !7187)
!7193 = !{!7194, !7195, !7196}
!7194 = !DILocalVariable(name: "self", arg: 1, scope: !7184, file: !1619, line: 1441, type: !664)
!7195 = !DILocalVariable(name: "f", arg: 2, scope: !7184, file: !1619, line: 1441, type: !7187)
!7196 = !DILocalVariable(name: "x", scope: !7197, file: !1619, line: 1446, type: !9, align: 8)
!7197 = distinct !DILexicalBlock(scope: !7184, file: !1619, line: 1446, column: 13)
!7198 = !DILocation(line: 1441, column: 27, scope: !7184)
!7199 = !DILocation(line: 1441, column: 33, scope: !7184)
!7200 = !DILocation(line: 1445, column: 15, scope: !7184)
!7201 = !DILocation(line: 1445, column: 9, scope: !7184)
!7202 = !DILocation(line: 1447, column: 21, scope: !7184)
!7203 = !DILocation(line: 1446, column: 18, scope: !7184)
!7204 = !DILocation(line: 1446, column: 18, scope: !7197)
!7205 = !DILocation(line: 1446, column: 24, scope: !7197)
!7206 = !DILocation(line: 1449, column: 5, scope: !7184)
!7207 = !DILocation(line: 1449, column: 6, scope: !7184)
!7208 = distinct !DISubprogram(name: "cloned<u16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hffd608ba647f43afE", scope: !7209, file: !1619, line: 1912, type: !7220, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, declaration: !7222, retainedNodes: !7223)
!7209 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u16>", scope: !37, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !7210, templateParams: !15, identifier: "bc25d6de2113f29ad46019c1681503bf")
!7210 = !{!7211}
!7211 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7209, file: !2, size: 64, align: 64, elements: !7212, templateParams: !15, identifier: "c02afee82907ca38f7d1217ab7cc03c2", discriminator: !7219)
!7212 = !{!7213, !7215}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7211, file: !2, baseType: !7214, size: 64, align: 64, extraData: i128 0)
!7214 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7209, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !333, identifier: "c887bf8a698352d7a6bfe56330afc35a")
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7211, file: !2, baseType: !7216, size: 64, align: 64)
!7216 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7209, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !7217, templateParams: !333, identifier: "aff9a169033abfc56bf8383e1ab8d37b")
!7217 = !{!7218}
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7216, file: !2, baseType: !335, size: 64, align: 64, flags: DIFlagPublic)
!7219 = !DIDerivedType(tag: DW_TAG_member, scope: !7209, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!339, !7209}
!7222 = !DISubprogram(name: "cloned<u16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hffd608ba647f43afE", scope: !7209, file: !1619, line: 1912, type: !7220, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !328)
!7223 = !{!7224, !7225}
!7224 = !DILocalVariable(name: "self", arg: 1, scope: !7208, file: !1619, line: 1912, type: !7209)
!7225 = !DILocalVariable(name: "t", scope: !7226, file: !1619, line: 1917, type: !335, align: 8)
!7226 = distinct !DILexicalBlock(scope: !7208, file: !1619, line: 1917, column: 13)
!7227 = !DILocation(line: 1912, column: 19, scope: !7208)
!7228 = !DILocation(line: 1916, column: 15, scope: !7208)
!7229 = !DILocation(line: 1916, column: 9, scope: !7208)
!7230 = !DILocation(line: 1918, column: 21, scope: !7208)
!7231 = !DILocation(line: 1917, column: 18, scope: !7208)
!7232 = !DILocation(line: 1917, column: 18, scope: !7226)
!7233 = !DILocalVariable(name: "self", arg: 1, scope: !7234, file: !7235, line: 326, type: !335)
!7234 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17hcfc6c6cd58d94eb7E", scope: !7236, file: !7235, line: 326, type: !7239, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7241)
!7235 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "82a7b828b42305e635a93905c0e1311d")
!7236 = !DINamespace(name: "{impl#7}", scope: !7237)
!7237 = !DINamespace(name: "impls", scope: !7238)
!7238 = !DINamespace(name: "clone", scope: !14)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!327, !335}
!7241 = !{!7233}
!7242 = !DILocation(line: 326, column: 30, scope: !7234, inlinedAt: !7243)
!7243 = distinct !DILocation(line: 1917, column: 29, scope: !7226)
!7244 = !DILocation(line: 327, column: 25, scope: !7234, inlinedAt: !7243)
!7245 = !DILocation(line: 1917, column: 24, scope: !7226)
!7246 = !DILocation(line: 1917, column: 38, scope: !7208)
!7247 = !DILocation(line: 1920, column: 6, scope: !7208)
!7248 = distinct !DISubprogram(name: "copied<[u8; 2]>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h55368225e46eda0aE", scope: !743, file: !1619, line: 1886, type: !7249, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, declaration: !7251, retainedNodes: !7252)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{!794, !743}
!7251 = !DISubprogram(name: "copied<[u8; 2]>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h55368225e46eda0aE", scope: !743, file: !1619, line: 1886, type: !7249, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !418)
!7252 = !{!7253, !7254}
!7253 = !DILocalVariable(name: "self", arg: 1, scope: !7248, file: !1619, line: 1886, type: !743)
!7254 = !DILocalVariable(name: "v", scope: !7255, file: !1619, line: 1893, type: !415, align: 1)
!7255 = distinct !DILexicalBlock(scope: !7248, file: !1619, line: 1893, column: 13)
!7256 = !DILocation(line: 1886, column: 25, scope: !7248)
!7257 = !DILocation(line: 1893, column: 19, scope: !7255)
!7258 = !DILocation(line: 1892, column: 15, scope: !7248)
!7259 = !DILocation(line: 1892, column: 9, scope: !7248)
!7260 = !DILocation(line: 1894, column: 21, scope: !7248)
!7261 = !DILocation(line: 1893, column: 19, scope: !7248)
!7262 = !DILocation(line: 1893, column: 25, scope: !7255)
!7263 = !DILocation(line: 1893, column: 31, scope: !7248)
!7264 = !DILocation(line: 1896, column: 6, scope: !7248)
!7265 = distinct !DISubprogram(name: "map<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::Layout, alloc::raw_vec::layout_array::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17h48bda17d4b2b960cE", scope: !6115, file: !1555, line: 771, type: !7266, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7271, declaration: !7270, retainedNodes: !7274)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{!5969, !6115, !7268}
!7268 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7269, file: !2, align: 8, elements: !15, identifier: "d349f0809eb151e71759938f59fb07aa")
!7269 = !DINamespace(name: "layout_array", scope: !88)
!7270 = !DISubprogram(name: "map<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::Layout, alloc::raw_vec::layout_array::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17h48bda17d4b2b960cE", scope: !6115, file: !1555, line: 771, type: !7266, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7271)
!7271 = !{!6128, !5979, !7272, !7273}
!7272 = !DITemplateTypeParameter(name: "U", type: !1746)
!7273 = !DITemplateTypeParameter(name: "F", type: !7268)
!7274 = !{!7275, !7276, !7277, !7279}
!7275 = !DILocalVariable(name: "self", arg: 1, scope: !7265, file: !1555, line: 771, type: !6115)
!7276 = !DILocalVariable(name: "op", arg: 2, scope: !7265, file: !1555, line: 771, type: !7268)
!7277 = !DILocalVariable(name: "t", scope: !7278, file: !1555, line: 773, type: !6123, align: 8)
!7278 = distinct !DILexicalBlock(scope: !7265, file: !1555, line: 773, column: 13)
!7279 = !DILocalVariable(name: "e", scope: !7280, file: !1555, line: 774, type: !24, align: 1)
!7280 = distinct !DILexicalBlock(scope: !7265, file: !1555, line: 774, column: 13)
!7281 = !DILocation(line: 771, column: 38, scope: !7265)
!7282 = !DILocation(line: 771, column: 44, scope: !7265)
!7283 = !DILocation(line: 773, column: 16, scope: !7278)
!7284 = !DILocation(line: 774, column: 17, scope: !7280)
!7285 = !DILocation(line: 772, column: 15, scope: !7265)
!7286 = !DILocation(line: 772, column: 9, scope: !7265)
!7287 = !DILocation(line: 773, column: 16, scope: !7265)
!7288 = !DILocation(line: 773, column: 25, scope: !7278)
!7289 = !DILocation(line: 773, column: 22, scope: !7278)
!7290 = !DILocation(line: 773, column: 30, scope: !7265)
!7291 = !DILocation(line: 774, column: 23, scope: !7280)
!7292 = !DILocation(line: 774, column: 28, scope: !7265)
!7293 = !DILocation(line: 776, column: 5, scope: !7265)
!7294 = !DILocation(line: 776, column: 6, scope: !7265)
!7295 = distinct !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3811244cd94293caE", scope: !1961, file: !1555, line: 1055, type: !7296, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1969, declaration: !7298, retainedNodes: !7299)
!7296 = !DISubroutineType(types: !7297)
!7297 = !{null, !1961, !170, !1690}
!7298 = !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h3811244cd94293caE", scope: !1961, file: !1555, line: 1055, type: !7296, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1969)
!7299 = !{!7300, !7301, !7302, !7304}
!7300 = !DILocalVariable(name: "self", arg: 1, scope: !7295, file: !1555, line: 1055, type: !1961)
!7301 = !DILocalVariable(name: "msg", arg: 2, scope: !7295, file: !1555, line: 1055, type: !170)
!7302 = !DILocalVariable(name: "t", scope: !7303, file: !1555, line: 1060, type: !7, align: 1)
!7303 = distinct !DILexicalBlock(scope: !7295, file: !1555, line: 1060, column: 13)
!7304 = !DILocalVariable(name: "e", scope: !7305, file: !1555, line: 1061, type: !12, align: 1)
!7305 = distinct !DILexicalBlock(scope: !7295, file: !1555, line: 1061, column: 13)
!7306 = !DILocation(line: 1060, column: 16, scope: !7303)
!7307 = !DILocation(line: 1055, column: 19, scope: !7295)
!7308 = !DILocation(line: 1055, column: 25, scope: !7295)
!7309 = !DILocation(line: 1061, column: 17, scope: !7305)
!7310 = !DILocation(line: 1059, column: 15, scope: !7295)
!7311 = !DILocation(line: 1059, column: 9, scope: !7295)
!7312 = !DILocation(line: 1063, column: 6, scope: !7295)
!7313 = !DILocation(line: 1061, column: 23, scope: !7305)
!7314 = distinct !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16le::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0d83318b72780e5aE", scope: !1559, file: !1555, line: 853, type: !7315, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7338, declaration: !7337, retainedNodes: !7341)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{!7317, !1559, !7335}
!7317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf16Error>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7318, templateParams: !15, identifier: "b540ac631af9ffff3f7e3244a8c8bf4")
!7318 = !{!7319}
!7319 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7317, file: !2, size: 192, align: 64, elements: !7320, templateParams: !15, identifier: "60dc06a91c63e81c93596c2030113214", discriminator: !7334)
!7320 = !{!7321, !7330}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7319, file: !2, baseType: !7322, size: 192, align: 64)
!7322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7317, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7323, templateParams: !7325, identifier: "51a90e9a0b28ab035d1f9a0b1d9d55d7")
!7323 = !{!7324}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7322, file: !2, baseType: !78, size: 192, align: 64, flags: DIFlagPublic)
!7325 = !{!1568, !7326}
!7326 = !DITemplateTypeParameter(name: "E", type: !7327)
!7327 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf16Error", scope: !79, file: !2, align: 8, flags: DIFlagPublic, elements: !7328, templateParams: !15, identifier: "48f1726fb5af8a6a57c7314e95dc90e")
!7328 = !{!7329}
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7327, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7319, file: !2, baseType: !7331, size: 192, align: 64, extraData: i128 9223372036854775808)
!7331 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7317, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7332, templateParams: !7325, identifier: "436e6c80859b5357755504bdece4ad41")
!7332 = !{!7333}
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7331, file: !2, baseType: !7327, align: 8, flags: DIFlagPublic)
!7334 = !DIDerivedType(tag: DW_TAG_member, scope: !7317, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7335 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7336, file: !2, align: 8, elements: !15, identifier: "8a312d8a1af6edc56c714f6fb01c198e")
!7336 = !DINamespace(name: "from_utf16le", scope: !355)
!7337 = !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16le::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0d83318b72780e5aE", scope: !1559, file: !1555, line: 853, type: !7315, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7338)
!7338 = !{!1568, !879, !7339, !7340}
!7339 = !DITemplateTypeParameter(name: "F", type: !7327)
!7340 = !DITemplateTypeParameter(name: "O", type: !7335)
!7341 = !{!7342, !7343, !7344, !7346}
!7342 = !DILocalVariable(name: "self", arg: 1, scope: !7314, file: !1555, line: 853, type: !1559)
!7343 = !DILocalVariable(name: "op", arg: 2, scope: !7314, file: !1555, line: 853, type: !7335)
!7344 = !DILocalVariable(name: "t", scope: !7345, file: !1555, line: 855, type: !78, align: 8)
!7345 = distinct !DILexicalBlock(scope: !7314, file: !1555, line: 855, column: 13)
!7346 = !DILocalVariable(name: "e", scope: !7347, file: !1555, line: 856, type: !880, align: 2)
!7347 = distinct !DILexicalBlock(scope: !7314, file: !1555, line: 856, column: 13)
!7348 = !DILocation(line: 853, column: 42, scope: !7314)
!7349 = !DILocation(line: 853, column: 48, scope: !7314)
!7350 = !DILocation(line: 855, column: 16, scope: !7345)
!7351 = !DILocation(line: 854, column: 15, scope: !7314)
!7352 = !DILocation(line: 854, column: 9, scope: !7314)
!7353 = !DILocation(line: 855, column: 16, scope: !7314)
!7354 = !DILocation(line: 855, column: 22, scope: !7345)
!7355 = !DILocation(line: 855, column: 26, scope: !7314)
!7356 = !DILocation(line: 856, column: 17, scope: !7314)
!7357 = !DILocation(line: 856, column: 17, scope: !7347)
!7358 = !DILocation(line: 856, column: 27, scope: !7347)
!7359 = !DILocation(line: 856, column: 23, scope: !7347)
!7360 = !DILocation(line: 856, column: 32, scope: !7314)
!7361 = !DILocation(line: 858, column: 5, scope: !7314)
!7362 = !DILocation(line: 858, column: 6, scope: !7314)
!7363 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveError, alloc::raw_vec::layout_array::{closure_env#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5455b7410ad09c45E", scope: !5969, file: !1555, line: 853, type: !7364, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7382, declaration: !7381, retainedNodes: !7384)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!7366, !5969, !7380}
!7366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveError>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7367, templateParams: !15, identifier: "32ba311310f5bee589dfac67018eba7d")
!7367 = !{!7368}
!7368 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7366, file: !2, size: 192, align: 64, elements: !7369, templateParams: !15, identifier: "56080b91adb20dc834bebbc390935db0", discriminator: !7379)
!7369 = !{!7370, !7375}
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7368, file: !2, baseType: !7371, size: 192, align: 64, extraData: i128 0)
!7371 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7366, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7372, templateParams: !7374, identifier: "47c1fcd686ad7d6951c6b25bce67ea95")
!7372 = !{!7373}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7371, file: !2, baseType: !1746, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!7374 = !{!5978, !1731}
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7368, file: !2, baseType: !7376, size: 192, align: 64, extraData: i128 1)
!7376 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7366, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7377, templateParams: !7374, identifier: "fc51f69475e1635828493ac3fc3816bc")
!7377 = !{!7378}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7376, file: !2, baseType: !1732, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!7379 = !DIDerivedType(tag: DW_TAG_member, scope: !7366, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7380 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !7269, file: !2, align: 8, elements: !15, identifier: "cc5d2a574533110c6b7ac0d16a6b47a9")
!7381 = !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveError, alloc::raw_vec::layout_array::{closure_env#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5455b7410ad09c45E", scope: !5969, file: !1555, line: 853, type: !7364, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7382)
!7382 = !{!5978, !5979, !1779, !7383}
!7383 = !DITemplateTypeParameter(name: "O", type: !7380)
!7384 = !{!7385, !7386, !7387, !7389}
!7385 = !DILocalVariable(name: "self", arg: 1, scope: !7363, file: !1555, line: 853, type: !5969)
!7386 = !DILocalVariable(name: "op", arg: 2, scope: !7363, file: !1555, line: 853, type: !7380)
!7387 = !DILocalVariable(name: "t", scope: !7388, file: !1555, line: 855, type: !1746, align: 8)
!7388 = distinct !DILexicalBlock(scope: !7363, file: !1555, line: 855, column: 13)
!7389 = !DILocalVariable(name: "e", scope: !7390, file: !1555, line: 856, type: !24, align: 1)
!7390 = distinct !DILexicalBlock(scope: !7363, file: !1555, line: 856, column: 13)
!7391 = !DILocation(line: 853, column: 42, scope: !7363)
!7392 = !DILocation(line: 853, column: 48, scope: !7363)
!7393 = !DILocation(line: 856, column: 17, scope: !7390)
!7394 = !DILocation(line: 854, column: 15, scope: !7363)
!7395 = !DILocation(line: 854, column: 9, scope: !7363)
!7396 = !DILocation(line: 855, column: 16, scope: !7363)
!7397 = !DILocation(line: 855, column: 16, scope: !7388)
!7398 = !DILocation(line: 855, column: 22, scope: !7388)
!7399 = !DILocation(line: 855, column: 26, scope: !7363)
!7400 = !DILocation(line: 856, column: 27, scope: !7390)
!7401 = !DILocation(line: 856, column: 23, scope: !7390)
!7402 = !DILocation(line: 856, column: 32, scope: !7363)
!7403 = !DILocation(line: 858, column: 5, scope: !7363)
!7404 = !DILocation(line: 858, column: 6, scope: !7363)
!7405 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h68b23e03dcfea68bE", scope: !1657, file: !1555, line: 853, type: !7406, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7413, declaration: !7412, retainedNodes: !7415)
!7406 = !DISubroutineType(types: !7407)
!7407 = !{!1849, !1657, !7408}
!7408 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !7409, file: !2, size: 64, align: 64, elements: !7410, templateParams: !15, identifier: "7c115735896e236ec35eb7100e3f9062")
!7409 = !DINamespace(name: "finish_grow", scope: !88)
!7410 = !{!7411}
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !7408, file: !2, baseType: !5935, size: 64, align: 64)
!7412 = !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h68b23e03dcfea68bE", scope: !1657, file: !1555, line: 853, type: !7406, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7413)
!7413 = !{!1669, !1670, !1779, !7414}
!7414 = !DITemplateTypeParameter(name: "O", type: !7408)
!7415 = !{!7416, !7417, !7418, !7420}
!7416 = !DILocalVariable(name: "self", arg: 1, scope: !7405, file: !1555, line: 853, type: !1657)
!7417 = !DILocalVariable(name: "op", arg: 2, scope: !7405, file: !1555, line: 853, type: !7408)
!7418 = !DILocalVariable(name: "t", scope: !7419, file: !1555, line: 855, type: !1665, align: 8)
!7419 = distinct !DILexicalBlock(scope: !7405, file: !1555, line: 855, column: 13)
!7420 = !DILocalVariable(name: "e", scope: !7421, file: !1555, line: 856, type: !1671, align: 1)
!7421 = distinct !DILexicalBlock(scope: !7405, file: !1555, line: 856, column: 13)
!7422 = !DILocation(line: 853, column: 42, scope: !7405)
!7423 = !DILocation(line: 853, column: 48, scope: !7405)
!7424 = !DILocation(line: 856, column: 17, scope: !7421)
!7425 = !DILocation(line: 854, column: 15, scope: !7405)
!7426 = !DILocation(line: 854, column: 9, scope: !7405)
!7427 = !DILocation(line: 855, column: 16, scope: !7405)
!7428 = !DILocation(line: 855, column: 16, scope: !7419)
!7429 = !DILocation(line: 855, column: 22, scope: !7419)
!7430 = !DILocation(line: 855, column: 26, scope: !7405)
!7431 = !DILocation(line: 856, column: 27, scope: !7421)
!7432 = !DILocation(line: 856, column: 23, scope: !7421)
!7433 = !DILocation(line: 856, column: 32, scope: !7405)
!7434 = !DILocation(line: 858, column: 5, scope: !7405)
!7435 = !DILocation(line: 858, column: 6, scope: !7405)
!7436 = distinct !DISubprogram(name: "map_err<alloc::string::String, alloc::string::FromUtf8Error, alloc::ffi::c_str::IntoStringError, alloc::ffi::c_str::{impl#1}::into_string::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96b119ef350d9df1E", scope: !7437, file: !1555, line: 853, type: !7452, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7482, declaration: !7481, retainedNodes: !7485)
!7437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf8Error>", scope: !865, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !7438, templateParams: !15, identifier: "1da55fa925a5d898239f16fa397cd05b")
!7438 = !{!7439}
!7439 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7437, file: !2, size: 320, align: 64, elements: !7440, templateParams: !15, identifier: "a7318b65e2378e74df790920cafe2d84", discriminator: !7451)
!7440 = !{!7441, !7447}
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7439, file: !2, baseType: !7442, size: 320, align: 64, extraData: i128 9223372036854775808)
!7442 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7437, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !7443, templateParams: !7445, identifier: "37ff0fec18c490643664f0f06b3df7a1")
!7443 = !{!7444}
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7442, file: !2, baseType: !78, size: 192, align: 64, offset: 64, flags: DIFlagPublic)
!7445 = !{!1568, !7446}
!7446 = !DITemplateTypeParameter(name: "E", type: !3199)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7439, file: !2, baseType: !7448, size: 320, align: 64)
!7448 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7437, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !7449, templateParams: !7445, identifier: "9d37838c73aa59b0b7e95869eda7b3b6")
!7449 = !{!7450}
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7448, file: !2, baseType: !3199, size: 320, align: 64, flags: DIFlagPublic)
!7451 = !DIDerivedType(tag: DW_TAG_member, scope: !7437, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7452 = !DISubroutineType(types: !7453)
!7453 = !{!7454, !7437, !7478}
!7454 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::ffi::c_str::IntoStringError>", scope: !865, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !7455, templateParams: !15, identifier: "195ba31426e8d200b444b13e6a1926cb")
!7455 = !{!7456}
!7456 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7454, file: !2, size: 256, align: 64, elements: !7457, templateParams: !15, identifier: "ca282c3364a2620337bcd68645e5cce9", discriminator: !7477)
!7457 = !{!7458, !7473}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7456, file: !2, baseType: !7459, size: 256, align: 64, extraData: i128 2)
!7459 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7454, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !7460, templateParams: !7462, identifier: "682aee3450b2aa0fa03003592cdc0f5e")
!7460 = !{!7461}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7459, file: !2, baseType: !78, size: 192, align: 64, flags: DIFlagPublic)
!7462 = !{!1568, !7463}
!7463 = !DITemplateTypeParameter(name: "E", type: !7464)
!7464 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoStringError", scope: !7465, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !7467, templateParams: !15, identifier: "679f7199c8464632b8e8cd38393df357")
!7465 = !DINamespace(name: "c_str", scope: !7466)
!7466 = !DINamespace(name: "ffi", scope: !80)
!7467 = !{!7468, !7472}
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !7464, file: !2, baseType: !7469, size: 128, align: 64, flags: DIFlagPrivate)
!7469 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !7465, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !7470, templateParams: !15, identifier: "6985db16fbd301121cb9289d518d6c35")
!7470 = !{!7471}
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !7469, file: !2, baseType: !2539, size: 128, align: 64, flags: DIFlagPrivate)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7464, file: !2, baseType: !156, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7456, file: !2, baseType: !7474, size: 256, align: 64)
!7474 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7454, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !7475, templateParams: !7462, identifier: "5f81de01d4aa367c8810042f806bf47a")
!7475 = !{!7476}
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7474, file: !2, baseType: !7464, size: 256, align: 64, flags: DIFlagPublic)
!7477 = !DIDerivedType(tag: DW_TAG_member, scope: !7454, file: !2, baseType: !45, size: 8, align: 8, offset: 192, flags: DIFlagArtificial)
!7478 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7479, file: !2, align: 8, elements: !15, identifier: "8c4a9d36b0d5ee1077916356750c64d8")
!7479 = !DINamespace(name: "into_string", scope: !7480)
!7480 = !DINamespace(name: "{impl#1}", scope: !7465)
!7481 = !DISubprogram(name: "map_err<alloc::string::String, alloc::string::FromUtf8Error, alloc::ffi::c_str::IntoStringError, alloc::ffi::c_str::{impl#1}::into_string::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96b119ef350d9df1E", scope: !7437, file: !1555, line: 853, type: !7452, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7482)
!7482 = !{!1568, !7446, !7483, !7484}
!7483 = !DITemplateTypeParameter(name: "F", type: !7464)
!7484 = !DITemplateTypeParameter(name: "O", type: !7478)
!7485 = !{!7486, !7487, !7488, !7490}
!7486 = !DILocalVariable(name: "self", arg: 1, scope: !7436, file: !1555, line: 853, type: !7437)
!7487 = !DILocalVariable(name: "op", arg: 2, scope: !7436, file: !1555, line: 853, type: !7478)
!7488 = !DILocalVariable(name: "t", scope: !7489, file: !1555, line: 855, type: !78, align: 8)
!7489 = distinct !DILexicalBlock(scope: !7436, file: !1555, line: 855, column: 13)
!7490 = !DILocalVariable(name: "e", scope: !7491, file: !1555, line: 856, type: !3199, align: 8)
!7491 = distinct !DILexicalBlock(scope: !7436, file: !1555, line: 856, column: 13)
!7492 = !DILocation(line: 853, column: 42, scope: !7436)
!7493 = !DILocation(line: 853, column: 48, scope: !7436)
!7494 = !DILocation(line: 855, column: 16, scope: !7489)
!7495 = !DILocation(line: 856, column: 17, scope: !7491)
!7496 = !DILocation(line: 854, column: 15, scope: !7436)
!7497 = !DILocation(line: 854, column: 9, scope: !7436)
!7498 = !DILocation(line: 855, column: 16, scope: !7436)
!7499 = !DILocation(line: 855, column: 22, scope: !7489)
!7500 = !DILocation(line: 855, column: 26, scope: !7436)
!7501 = !DILocation(line: 856, column: 17, scope: !7436)
!7502 = !DILocation(line: 856, column: 27, scope: !7491)
!7503 = !DILocation(line: 856, column: 23, scope: !7491)
!7504 = !DILocation(line: 856, column: 32, scope: !7436)
!7505 = !DILocation(line: 858, column: 5, scope: !7436)
!7506 = !DILocation(line: 858, column: 6, scope: !7436)
!7507 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::{impl#5}::shrink_unchecked::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc4397bbb12d5a250E", scope: !1657, file: !1555, line: 853, type: !7508, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7530, declaration: !7529, retainedNodes: !7533)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!7510, !1657, !7524}
!7510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7511, templateParams: !15, identifier: "a1b6cb7e578a1fafae1c05752f291aa4")
!7511 = !{!7512}
!7512 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7510, file: !2, size: 192, align: 64, elements: !7513, templateParams: !15, identifier: "a26731cc1bad8ecfa86183deaca10acd", discriminator: !7523)
!7513 = !{!7514, !7519}
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7512, file: !2, baseType: !7515, size: 192, align: 64, extraData: i128 0)
!7515 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7510, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7516, templateParams: !7518, identifier: "ac60e85c9580d78f95a5b250a6781b70")
!7516 = !{!7517}
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7515, file: !2, baseType: !1665, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!7518 = !{!1669, !1769}
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7512, file: !2, baseType: !7520, size: 192, align: 64, extraData: i128 1)
!7520 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7510, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !7521, templateParams: !7518, identifier: "c496200453a2601f87b62f91d7e7de16")
!7521 = !{!7522}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7520, file: !2, baseType: !1736, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!7523 = !DIDerivedType(tag: DW_TAG_member, scope: !7510, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7524 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !7525, file: !2, size: 64, align: 64, elements: !7527, templateParams: !15, identifier: "47c2f248245c8700841fe4d8dece040")
!7525 = !DINamespace(name: "shrink_unchecked", scope: !7526)
!7526 = !DINamespace(name: "{impl#5}", scope: !88)
!7527 = !{!7528}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !7524, file: !2, baseType: !5935, size: 64, align: 64)
!7529 = !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::{impl#5}::shrink_unchecked::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc4397bbb12d5a250E", scope: !1657, file: !1555, line: 853, type: !7508, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7530)
!7530 = !{!1669, !1670, !7531, !7532}
!7531 = !DITemplateTypeParameter(name: "F", type: !1736)
!7532 = !DITemplateTypeParameter(name: "O", type: !7524)
!7533 = !{!7534, !7535, !7536, !7538}
!7534 = !DILocalVariable(name: "self", arg: 1, scope: !7507, file: !1555, line: 853, type: !1657)
!7535 = !DILocalVariable(name: "op", arg: 2, scope: !7507, file: !1555, line: 853, type: !7524)
!7536 = !DILocalVariable(name: "t", scope: !7537, file: !1555, line: 855, type: !1665, align: 8)
!7537 = distinct !DILexicalBlock(scope: !7507, file: !1555, line: 855, column: 13)
!7538 = !DILocalVariable(name: "e", scope: !7539, file: !1555, line: 856, type: !1671, align: 1)
!7539 = distinct !DILexicalBlock(scope: !7507, file: !1555, line: 856, column: 13)
!7540 = !DILocation(line: 853, column: 42, scope: !7507)
!7541 = !DILocation(line: 853, column: 48, scope: !7507)
!7542 = !DILocation(line: 856, column: 17, scope: !7539)
!7543 = !DILocation(line: 854, column: 15, scope: !7507)
!7544 = !DILocation(line: 854, column: 9, scope: !7507)
!7545 = !DILocation(line: 855, column: 16, scope: !7507)
!7546 = !DILocation(line: 855, column: 16, scope: !7537)
!7547 = !DILocation(line: 855, column: 22, scope: !7537)
!7548 = !DILocation(line: 855, column: 26, scope: !7507)
!7549 = !DILocation(line: 856, column: 27, scope: !7539)
!7550 = !DILocation(line: 856, column: 23, scope: !7539)
!7551 = !DILocation(line: 856, column: 32, scope: !7507)
!7552 = !DILocation(line: 858, column: 5, scope: !7507)
!7553 = !DILocation(line: 858, column: 6, scope: !7507)
!7554 = distinct !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16be::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd5438ebee1e7cff8E", scope: !1559, file: !1555, line: 853, type: !7555, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7560, declaration: !7559, retainedNodes: !7562)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!7317, !1559, !7557}
!7557 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7558, file: !2, align: 8, elements: !15, identifier: "853c7807ccd6cab030970c1f6e35d926")
!7558 = !DINamespace(name: "from_utf16be", scope: !355)
!7559 = !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16be::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd5438ebee1e7cff8E", scope: !1559, file: !1555, line: 853, type: !7555, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7560)
!7560 = !{!1568, !879, !7339, !7561}
!7561 = !DITemplateTypeParameter(name: "O", type: !7557)
!7562 = !{!7563, !7564, !7565, !7567}
!7563 = !DILocalVariable(name: "self", arg: 1, scope: !7554, file: !1555, line: 853, type: !1559)
!7564 = !DILocalVariable(name: "op", arg: 2, scope: !7554, file: !1555, line: 853, type: !7557)
!7565 = !DILocalVariable(name: "t", scope: !7566, file: !1555, line: 855, type: !78, align: 8)
!7566 = distinct !DILexicalBlock(scope: !7554, file: !1555, line: 855, column: 13)
!7567 = !DILocalVariable(name: "e", scope: !7568, file: !1555, line: 856, type: !880, align: 2)
!7568 = distinct !DILexicalBlock(scope: !7554, file: !1555, line: 856, column: 13)
!7569 = !DILocation(line: 853, column: 42, scope: !7554)
!7570 = !DILocation(line: 853, column: 48, scope: !7554)
!7571 = !DILocation(line: 855, column: 16, scope: !7566)
!7572 = !DILocation(line: 854, column: 15, scope: !7554)
!7573 = !DILocation(line: 854, column: 9, scope: !7554)
!7574 = !DILocation(line: 855, column: 16, scope: !7554)
!7575 = !DILocation(line: 855, column: 22, scope: !7566)
!7576 = !DILocation(line: 855, column: 26, scope: !7554)
!7577 = !DILocation(line: 856, column: 17, scope: !7554)
!7578 = !DILocation(line: 856, column: 17, scope: !7568)
!7579 = !DILocation(line: 856, column: 27, scope: !7568)
!7580 = !DILocation(line: 856, column: 23, scope: !7568)
!7581 = !DILocation(line: 856, column: 32, scope: !7554)
!7582 = !DILocation(line: 858, column: 5, scope: !7554)
!7583 = !DILocation(line: 858, column: 6, scope: !7554)
!7584 = distinct !DISubprogram(name: "unwrap_or<char, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h0a63d98d03a6edf3E", scope: !1024, file: !1555, line: 1434, type: !7585, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1032, declaration: !7587, retainedNodes: !7588)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{!379, !1024, !379}
!7587 = !DISubprogram(name: "unwrap_or<char, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h0a63d98d03a6edf3E", scope: !1024, file: !1555, line: 1434, type: !7585, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1032)
!7588 = !{!7589, !7590, !7591}
!7589 = !DILocalVariable(name: "self", arg: 1, scope: !7584, file: !1555, line: 1434, type: !1024)
!7590 = !DILocalVariable(name: "default", arg: 2, scope: !7584, file: !1555, line: 1434, type: !379)
!7591 = !DILocalVariable(name: "t", scope: !7592, file: !1555, line: 1436, type: !379, align: 4)
!7592 = distinct !DILexicalBlock(scope: !7584, file: !1555, line: 1436, column: 13)
!7593 = !DILocation(line: 1434, column: 22, scope: !7584)
!7594 = !DILocation(line: 1434, column: 28, scope: !7584)
!7595 = !DILocation(line: 1435, column: 15, scope: !7584)
!7596 = !DILocation(line: 1435, column: 9, scope: !7584)
!7597 = !DILocation(line: 1436, column: 16, scope: !7584)
!7598 = !DILocation(line: 1436, column: 16, scope: !7592)
!7599 = !DILocation(line: 1436, column: 22, scope: !7592)
!7600 = !DILocation(line: 1436, column: 22, scope: !7584)
!7601 = !DILocation(line: 1437, column: 23, scope: !7584)
!7602 = !DILocation(line: 1439, column: 5, scope: !7584)
!7603 = !DILocation(line: 1439, column: 6, scope: !7584)
!7604 = distinct !DISubprogram(name: "assert_failed<core::option::Option<u8>, core::option::Option<u8>>", linkageName: "_ZN4core9panicking13assert_failed17h3afa9d80748d587aE", scope: !288, file: !7605, line: 354, type: !7606, scopeLine: 354, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7626, retainedNodes: !7621)
!7605 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "de8e952e381603c3ed99f4fb48697a84")
!7606 = !DISubroutineType(types: !7607)
!7607 = !{null, !287, !35, !35, !7608, !1690}
!7608 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !37, file: !2, size: 384, align: 64, flags: DIFlagPublic, elements: !7609, templateParams: !15, identifier: "7c6e22d39d41285110b70ffecb7c2a2d")
!7609 = !{!7610}
!7610 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7608, file: !2, size: 384, align: 64, elements: !7611, templateParams: !15, identifier: "2a20b85c17c87174c23f1429421670b1", discriminator: !7620)
!7611 = !{!7612, !7616}
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7610, file: !2, baseType: !7613, size: 384, align: 64, extraData: i128 0)
!7613 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7608, file: !2, size: 384, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !7614, identifier: "d781dab31f5aeedcae473b63457b5a93")
!7614 = !{!7615}
!7615 = !DITemplateTypeParameter(name: "T", type: !2325)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7610, file: !2, baseType: !7617, size: 384, align: 64)
!7617 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7608, file: !2, size: 384, align: 64, flags: DIFlagPublic, elements: !7618, templateParams: !7614, identifier: "72ce12d41a312ac0b2153734d91ab0e3")
!7618 = !{!7619}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7617, file: !2, baseType: !2325, size: 384, align: 64, flags: DIFlagPublic)
!7620 = !DIDerivedType(tag: DW_TAG_member, scope: !7608, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7621 = !{!7622, !7623, !7624, !7625}
!7622 = !DILocalVariable(name: "kind", arg: 1, scope: !7604, file: !7605, line: 355, type: !287)
!7623 = !DILocalVariable(name: "left", arg: 2, scope: !7604, file: !7605, line: 356, type: !35)
!7624 = !DILocalVariable(name: "right", arg: 3, scope: !7604, file: !7605, line: 357, type: !35)
!7625 = !DILocalVariable(name: "args", arg: 4, scope: !7604, file: !7605, line: 358, type: !7608)
!7626 = !{!2028, !7627}
!7627 = !DITemplateTypeParameter(name: "U", type: !36)
!7628 = !DILocation(line: 355, column: 5, scope: !7604)
!7629 = !DILocation(line: 356, column: 5, scope: !7604)
!7630 = !DILocation(line: 357, column: 5, scope: !7604)
!7631 = !DILocation(line: 358, column: 5, scope: !7604)
!7632 = !DILocation(line: 364, column: 5, scope: !7604)
!7633 = distinct !DISubprogram(name: "check_language_ub", linkageName: "_ZN4core9ub_checks17check_language_ub17h8cd5813a762f8301E", scope: !7634, file: !1177, line: 93, type: !7635, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15)
!7634 = !DINamespace(name: "ub_checks", scope: !14)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!520}
!7637 = !DILocation(line: 95, column: 5, scope: !7633)
!7638 = !DILocation(line: 3840, column: 9, scope: !7639)
!7639 = !DILexicalBlockFile(scope: !7633, file: !2057, discriminator: 0)
!7640 = !DILocation(line: 106, column: 2, scope: !7633)
!7641 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks17check_language_ub7runtime17ha4e5f4453e66aeeaE", scope: !7642, file: !2057, line: 3828, type: !7635, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15)
!7642 = !DINamespace(name: "check_language_ub", scope: !7634)
!7643 = !DILocation(line: 3830, column: 10, scope: !7641)
!7644 = distinct !DISubprogram(name: "maybe_is_nonoverlapping", linkageName: "_ZN4core9ub_checks23maybe_is_nonoverlapping17h52b29ba9de20a021E", scope: !7634, file: !1177, line: 145, type: !7645, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7647)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{!520, !6, !6, !9, !9}
!7647 = !{!7648, !7649, !7650, !7651}
!7648 = !DILocalVariable(name: "src", arg: 1, scope: !7644, file: !1177, line: 146, type: !6)
!7649 = !DILocalVariable(name: "dst", arg: 2, scope: !7644, file: !1177, line: 147, type: !6)
!7650 = !DILocalVariable(name: "size", arg: 3, scope: !7644, file: !1177, line: 148, type: !9)
!7651 = !DILocalVariable(name: "count", arg: 4, scope: !7644, file: !1177, line: 149, type: !9)
!7652 = !DILocation(line: 146, column: 5, scope: !7644)
!7653 = !DILocation(line: 147, column: 5, scope: !7644)
!7654 = !DILocation(line: 148, column: 5, scope: !7644)
!7655 = !DILocation(line: 149, column: 5, scope: !7644)
!7656 = !DILocation(line: 3840, column: 27, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !7644, file: !2057, discriminator: 0)
!7658 = !DILocation(line: 3840, column: 9, scope: !7657)
!7659 = !DILocation(line: 170, column: 2, scope: !7644)
!7660 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks23maybe_is_nonoverlapping7runtime17h3761324217cbff39E", scope: !7661, file: !2057, line: 3828, type: !7645, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7662)
!7661 = !DINamespace(name: "maybe_is_nonoverlapping", scope: !7634)
!7662 = !{!7663, !7664, !7665, !7666, !7667, !7669, !7671, !7673}
!7663 = !DILocalVariable(name: "src", arg: 1, scope: !7660, file: !2057, line: 3828, type: !6)
!7664 = !DILocalVariable(name: "dst", arg: 2, scope: !7660, file: !2057, line: 3828, type: !6)
!7665 = !DILocalVariable(name: "size", arg: 3, scope: !7660, file: !2057, line: 3828, type: !9)
!7666 = !DILocalVariable(name: "count", arg: 4, scope: !7660, file: !2057, line: 3828, type: !9)
!7667 = !DILocalVariable(name: "src_usize", scope: !7668, file: !1177, line: 157, type: !9, align: 8)
!7668 = distinct !DILexicalBlock(scope: !7660, file: !1177, line: 157, column: 13)
!7669 = !DILocalVariable(name: "dst_usize", scope: !7670, file: !1177, line: 158, type: !9, align: 8)
!7670 = distinct !DILexicalBlock(scope: !7668, file: !1177, line: 158, column: 13)
!7671 = !DILocalVariable(name: "size", scope: !7672, file: !1177, line: 159, type: !9, align: 8)
!7672 = distinct !DILexicalBlock(scope: !7670, file: !1177, line: 159, column: 13)
!7673 = !DILocalVariable(name: "diff", scope: !7674, file: !1177, line: 164, type: !9, align: 8)
!7674 = distinct !DILexicalBlock(scope: !7672, file: !1177, line: 164, column: 13)
!7675 = !DILocation(line: 3828, column: 22, scope: !7660)
!7676 = !DILocation(line: 162, column: 17, scope: !3621, inlinedAt: !7677)
!7677 = distinct !DILocation(line: 157, column: 29, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !7660, file: !1177, discriminator: 0)
!7679 = !DILocation(line: 62, column: 26, scope: !3628, inlinedAt: !7680)
!7680 = distinct !DILocation(line: 168, column: 33, scope: !3621, inlinedAt: !7677)
!7681 = !DILocation(line: 168, column: 18, scope: !3621, inlinedAt: !7677)
!7682 = !DILocation(line: 157, column: 29, scope: !7678)
!7683 = !DILocation(line: 157, column: 17, scope: !7668)
!7684 = !DILocation(line: 162, column: 17, scope: !3621, inlinedAt: !7685)
!7685 = distinct !DILocation(line: 158, column: 29, scope: !7668)
!7686 = !DILocation(line: 62, column: 26, scope: !3628, inlinedAt: !7687)
!7687 = distinct !DILocation(line: 168, column: 33, scope: !3621, inlinedAt: !7685)
!7688 = !DILocation(line: 168, column: 18, scope: !3621, inlinedAt: !7685)
!7689 = !DILocation(line: 158, column: 29, scope: !7668)
!7690 = !DILocation(line: 158, column: 17, scope: !7670)
!7691 = !DILocation(line: 159, column: 30, scope: !7670)
!7692 = !DILocation(line: 159, column: 17, scope: !7670)
!7693 = !DILocation(line: 159, column: 22, scope: !7670)
!7694 = !DILocation(line: 159, column: 22, scope: !7672)
!7695 = !DILocation(line: 164, column: 24, scope: !7672)
!7696 = !DILocation(line: 164, column: 17, scope: !7674)
!7697 = !DILocation(line: 167, column: 13, scope: !7674)
!7698 = !DILocation(line: 3830, column: 10, scope: !7660)
!7699 = !DILocation(line: 160, column: 17, scope: !7670)
!7700 = !DILocation(line: 3828, column: 9, scope: !7660)
!7701 = distinct !DISubprogram(name: "is_valid_allocation_size", linkageName: "_ZN4core9ub_checks24is_valid_allocation_size17h0e4b400c44a810f0E", scope: !7634, file: !1177, line: 133, type: !7702, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7704)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!520, !9, !9}
!7704 = !{!7705, !7706, !7707}
!7705 = !DILocalVariable(name: "size", arg: 1, scope: !7701, file: !1177, line: 133, type: !9)
!7706 = !DILocalVariable(name: "len", arg: 2, scope: !7701, file: !1177, line: 133, type: !9)
!7707 = !DILocalVariable(name: "max_len", scope: !7708, file: !1177, line: 134, type: !9, align: 8)
!7708 = distinct !DILexicalBlock(scope: !7701, file: !1177, line: 134, column: 5)
!7709 = !DILocation(line: 133, column: 46, scope: !7701)
!7710 = !DILocation(line: 133, column: 59, scope: !7701)
!7711 = !DILocation(line: 134, column: 9, scope: !7708)
!7712 = !DILocation(line: 134, column: 22, scope: !7701)
!7713 = !DILocation(line: 134, column: 34, scope: !7701)
!7714 = !DILocation(line: 134, column: 19, scope: !7701)
!7715 = !DILocation(line: 134, column: 54, scope: !7701)
!7716 = !DILocation(line: 135, column: 12, scope: !7708)
!7717 = !DILocation(line: 135, column: 5, scope: !7708)
!7718 = !DILocation(line: 136, column: 2, scope: !7701)
!7719 = distinct !DISubprogram(name: "maybe_is_aligned_and_not_null", linkageName: "_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h6643f32b77cc48d8E", scope: !7634, file: !1177, line: 116, type: !7720, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7722)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!520, !6, !9, !520}
!7722 = !{!7723, !7724, !7725}
!7723 = !DILocalVariable(name: "ptr", arg: 1, scope: !7719, file: !1177, line: 117, type: !6)
!7724 = !DILocalVariable(name: "align", arg: 2, scope: !7719, file: !1177, line: 118, type: !9)
!7725 = !DILocalVariable(name: "is_zst", arg: 3, scope: !7719, file: !1177, line: 119, type: !520)
!7726 = !DILocation(line: 117, column: 5, scope: !7719)
!7727 = !DILocation(line: 118, column: 5, scope: !7719)
!7728 = !DILocation(line: 119, column: 5, scope: !7719)
!7729 = !DILocation(line: 3840, column: 27, scope: !7730)
!7730 = !DILexicalBlockFile(scope: !7719, file: !2057, discriminator: 0)
!7731 = !DILocation(line: 3840, column: 9, scope: !7730)
!7732 = !DILocation(line: 130, column: 2, scope: !7719)
!7733 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks29maybe_is_aligned_and_not_null7runtime17h8c47f670ddc3bf48E", scope: !7734, file: !2057, line: 3828, type: !7720, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7735)
!7734 = !DINamespace(name: "maybe_is_aligned_and_not_null", scope: !7634)
!7735 = !{!7736, !7737, !7738}
!7736 = !DILocalVariable(name: "ptr", arg: 1, scope: !7733, file: !2057, line: 3828, type: !6)
!7737 = !DILocalVariable(name: "align", arg: 2, scope: !7733, file: !2057, line: 3828, type: !9)
!7738 = !DILocalVariable(name: "is_zst", arg: 3, scope: !7733, file: !2057, line: 3828, type: !520)
!7739 = !DILocation(line: 3828, column: 22, scope: !7733)
!7740 = !DILocation(line: 127, column: 13, scope: !7741)
!7741 = !DILexicalBlockFile(scope: !7733, file: !1177, discriminator: 0)
!7742 = !DILocation(line: 127, column: 42, scope: !7741)
!7743 = !DILocation(line: 3830, column: 10, scope: !7733)
!7744 = !DILocation(line: 127, column: 53, scope: !7741)
!7745 = !DILocation(line: 127, column: 52, scope: !7741)
!7746 = !DILocation(line: 127, column: 41, scope: !7741)
!7747 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h38af6a215d324b80E", scope: !7748, file: !1708, line: 758, type: !7749, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7753, retainedNodes: !7751)
!7748 = !DINamespace(name: "{impl#3}", scope: !874)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!99, !94, !1690}
!7751 = !{!7752}
!7752 = !DILocalVariable(name: "self", arg: 1, scope: !7747, file: !1708, line: 758, type: !94)
!7753 = !{!7754, !7755}
!7754 = !DITemplateTypeParameter(name: "T", type: !94)
!7755 = !DITemplateTypeParameter(name: "U", type: !99)
!7756 = !DILocation(line: 758, column: 13, scope: !7747)
!7757 = !DILocation(line: 759, column: 9, scope: !7747)
!7758 = !DILocation(line: 760, column: 6, scope: !7747)
!7759 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4dc59829cba3b45cE", scope: !7748, file: !1708, line: 758, type: !7760, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7764, retainedNodes: !7762)
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!1732, !1736, !1690}
!7762 = !{!7763}
!7763 = !DILocalVariable(name: "self", arg: 1, scope: !7759, file: !1708, line: 758, type: !1736)
!7764 = !{!7765, !7766}
!7765 = !DITemplateTypeParameter(name: "T", type: !1736)
!7766 = !DITemplateTypeParameter(name: "U", type: !1732)
!7767 = !DILocation(line: 758, column: 13, scope: !7759)
!7768 = !DILocation(line: 759, column: 9, scope: !7759)
!7769 = !DILocation(line: 760, column: 6, scope: !7759)
!7770 = distinct !DISubprogram(name: "into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hca5904ee56a6374fE", scope: !7748, file: !1708, line: 758, type: !7771, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7775, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{!2539, !427, !1690}
!7773 = !{!7774}
!7774 = !DILocalVariable(name: "self", arg: 1, scope: !7770, file: !1708, line: 758, type: !427)
!7775 = !{!7776, !7777}
!7776 = !DITemplateTypeParameter(name: "T", type: !427)
!7777 = !DITemplateTypeParameter(name: "U", type: !2539)
!7778 = !DILocation(line: 758, column: 13, scope: !7770)
!7779 = !DILocation(line: 759, column: 9, scope: !7770)
!7780 = !DILocation(line: 760, column: 6, scope: !7770)
!7781 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h20bd182c5c54c60eE", scope: !7782, file: !1957, line: 115, type: !7783, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7786)
!7782 = !DINamespace(name: "{impl#45}", scope: !13)
!7783 = !DISubroutineType(types: !7784)
!7784 = !{!1961, !7785, !1977}
!7785 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Error", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!7786 = !{!7787, !7788}
!7787 = !DILocalVariable(name: "self", arg: 1, scope: !7781, file: !1957, line: 115, type: !7785)
!7788 = !DILocalVariable(name: "f", arg: 2, scope: !7781, file: !1957, line: 115, type: !1977)
!7789 = !DILocation(line: 115, column: 23, scope: !7781)
!7790 = !DILocation(line: 115, column: 28, scope: !7781)
!7791 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", linkageName: "_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17hd860a52c79cd2e9cE", scope: !538, file: !7792, line: 49, type: !5042, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7795, retainedNodes: !7793)
!7792 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs", directory: "", checksumkind: CSK_MD5, checksum: "83b0eeb350cbe959772a74325182846f")
!7793 = !{!7794}
!7794 = !DILocalVariable(name: "iter", arg: 1, scope: !7791, file: !7792, line: 49, type: !510)
!7795 = !{!7796}
!7796 = !DITemplateTypeParameter(name: "I", type: !510)
!7797 = !DILocation(line: 49, column: 44, scope: !7791)
!7798 = !DILocation(line: 50, column: 17, scope: !7791)
!7799 = !DILocation(line: 55, column: 14, scope: !7791)
!7800 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", linkageName: "_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17hf95e447c3162ca0dE", scope: !537, file: !7792, line: 53, type: !7801, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7795, retainedNodes: !7804)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!45, !7803, !45, !45}
!7803 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", baseType: !536, size: 64, align: 64, dwarfAddressSpace: 0)
!7804 = !{!7805, !7806, !7807}
!7805 = !DILocalVariable(name: "a", arg: 2, scope: !7800, file: !7792, line: 53, type: !45)
!7806 = !DILocalVariable(name: "b", arg: 3, scope: !7800, file: !7792, line: 53, type: !45)
!7807 = !DILocalVariable(arg: 1, scope: !7800, file: !7792, line: 53, type: !7803)
!7808 = !DILocation(line: 53, column: 21, scope: !7800)
!7809 = !DILocation(line: 53, column: 22, scope: !7800)
!7810 = !DILocation(line: 53, column: 25, scope: !7800)
!7811 = !DILocation(line: 53, column: 28, scope: !7800)
!7812 = !DILocation(line: 53, column: 33, scope: !7800)
!7813 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd2bd8ab69edc9fd1E", scope: !7815, file: !7814, line: 975, type: !7817, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !7854)
!7814 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "7fdbb3efe79cb337b8a1ece27e76f040")
!7815 = !DINamespace(name: "{impl#31}", scope: !7816)
!7816 = !DINamespace(name: "pattern", scope: !158)
!7817 = !DISubroutineType(types: !7818)
!7818 = !{!7819, !170, !170}
!7819 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcher", scope: !7816, file: !2, size: 832, align: 64, flags: DIFlagPublic, elements: !7820, templateParams: !15, identifier: "f1a443e40ecf4d0434e9305ca0ebaac4")
!7820 = !{!7821, !7822, !7823}
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !7819, file: !2, baseType: !170, size: 128, align: 64, offset: 576, flags: DIFlagPrivate)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !7819, file: !2, baseType: !170, size: 128, align: 64, offset: 704, flags: DIFlagPrivate)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "searcher", scope: !7819, file: !2, baseType: !7824, size: 576, align: 64, flags: DIFlagPrivate)
!7824 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcherImpl", scope: !7816, file: !2, size: 576, align: 64, flags: DIFlagPrivate, elements: !7825, templateParams: !15, identifier: "63638d9f4243305ea7443f672c2fc44d")
!7825 = !{!7826}
!7826 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7824, file: !2, size: 576, align: 64, elements: !7827, templateParams: !15, identifier: "24f207343c4736812508da3c41142af6", discriminator: !7853)
!7827 = !{!7828, !7839}
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !7826, file: !2, baseType: !7829, size: 576, align: 64, extraData: i128 0)
!7829 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !7824, file: !2, size: 576, align: 64, flags: DIFlagPrivate, elements: !7830, templateParams: !15, identifier: "28ce3b8a1c0b3eb54aa1658b9d2e8a4e")
!7830 = !{!7831}
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7829, file: !2, baseType: !7832, size: 192, align: 64, offset: 64, flags: DIFlagPrivate)
!7832 = !DICompositeType(tag: DW_TAG_structure_type, name: "EmptyNeedle", scope: !7816, file: !2, size: 192, align: 64, flags: DIFlagPrivate, elements: !7833, templateParams: !15, identifier: "a5a00ea21d59824f71a09516d6a11a20")
!7833 = !{!7834, !7835, !7836, !7837, !7838}
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !7832, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPrivate)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7832, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_fw", scope: !7832, file: !2, baseType: !520, size: 8, align: 8, offset: 128, flags: DIFlagPrivate)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_bw", scope: !7832, file: !2, baseType: !520, size: 8, align: 8, offset: 136, flags: DIFlagPrivate)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "is_finished", scope: !7832, file: !2, baseType: !520, size: 8, align: 8, offset: 144, flags: DIFlagPrivate)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "TwoWay", scope: !7826, file: !2, baseType: !7840, size: 576, align: 64, extraData: i128 1)
!7840 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWay", scope: !7824, file: !2, size: 576, align: 64, flags: DIFlagPrivate, elements: !7841, templateParams: !15, identifier: "7ac8813e0bb7d7d08688ea5d14832d59")
!7841 = !{!7842}
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7840, file: !2, baseType: !7843, size: 512, align: 64, offset: 64, flags: DIFlagPrivate)
!7843 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWaySearcher", scope: !7816, file: !2, size: 512, align: 64, flags: DIFlagPrivate, elements: !7844, templateParams: !15, identifier: "3959b5b84b1dc9883b9f5a510d662d5b")
!7844 = !{!7845, !7846, !7847, !7848, !7849, !7850, !7851, !7852}
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, flags: DIFlagPrivate)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos_back", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, offset: 128, flags: DIFlagPrivate)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "byteset", scope: !7843, file: !2, baseType: !212, size: 64, align: 64, offset: 192, flags: DIFlagPrivate)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, offset: 256, flags: DIFlagPrivate)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, offset: 320, flags: DIFlagPrivate)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, offset: 384, flags: DIFlagPrivate)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "memory_back", scope: !7843, file: !2, baseType: !9, size: 64, align: 64, offset: 448, flags: DIFlagPrivate)
!7853 = !DIDerivedType(tag: DW_TAG_member, scope: !7824, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!7854 = !{!7855, !7856}
!7855 = !DILocalVariable(name: "self", arg: 1, scope: !7813, file: !7814, line: 975, type: !170)
!7856 = !DILocalVariable(name: "haystack", arg: 2, scope: !7813, file: !7814, line: 975, type: !170)
!7857 = !DILocation(line: 975, column: 22, scope: !7813)
!7858 = !DILocation(line: 975, column: 28, scope: !7813)
!7859 = !DILocation(line: 976, column: 9, scope: !7813)
!7860 = !DILocation(line: 977, column: 6, scope: !7813)
!7861 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", linkageName: "_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h46162fdf073132abE", scope: !584, file: !7792, line: 49, type: !5031, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7864, retainedNodes: !7862)
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "iter", arg: 1, scope: !7861, file: !7792, line: 49, type: !557)
!7864 = !{!7865}
!7865 = !DITemplateTypeParameter(name: "I", type: !557)
!7866 = !DILocation(line: 49, column: 44, scope: !7861)
!7867 = !DILocation(line: 50, column: 17, scope: !7861)
!7868 = !DILocation(line: 55, column: 14, scope: !7861)
!7869 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", linkageName: "_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h88c6b626375dafc2E", scope: !583, file: !7792, line: 53, type: !7870, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7864, retainedNodes: !7873)
!7870 = !DISubroutineType(types: !7871)
!7871 = !{!9, !7872, !9, !9}
!7872 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", baseType: !582, size: 64, align: 64, dwarfAddressSpace: 0)
!7873 = !{!7874, !7875, !7876}
!7874 = !DILocalVariable(name: "a", arg: 2, scope: !7869, file: !7792, line: 53, type: !9)
!7875 = !DILocalVariable(name: "b", arg: 3, scope: !7869, file: !7792, line: 53, type: !9)
!7876 = !DILocalVariable(arg: 1, scope: !7869, file: !7792, line: 53, type: !7872)
!7877 = !DILocation(line: 53, column: 21, scope: !7869)
!7878 = !DILocation(line: 53, column: 22, scope: !7869)
!7879 = !DILocation(line: 53, column: 25, scope: !7869)
!7880 = !DILocation(line: 53, column: 28, scope: !7869)
!7881 = !DILocation(line: 53, column: 33, scope: !7869)
!7882 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2154cb9d0fbded29E", scope: !7884, file: !7883, line: 355, type: !7886, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7890, retainedNodes: !7888)
!7883 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "905ac717b1b646802cadc87114795247")
!7884 = !DINamespace(name: "{impl#1}", scope: !7885)
!7885 = !DINamespace(name: "collect", scope: !364)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{!920, !920}
!7888 = !{!7889}
!7889 = !DILocalVariable(name: "self", arg: 1, scope: !7882, file: !7883, line: 355, type: !920)
!7890 = !{!928}
!7891 = !DILocation(line: 355, column: 18, scope: !7882)
!7892 = !DILocation(line: 356, column: 9, scope: !7882)
!7893 = !DILocation(line: 357, column: 6, scope: !7882)
!7894 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h68c3a53d85d4d4b4E", scope: !7884, file: !7883, line: 355, type: !7895, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !350, retainedNodes: !7897)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{!314, !314}
!7897 = !{!7898}
!7898 = !DILocalVariable(name: "self", arg: 1, scope: !7894, file: !7883, line: 355, type: !314)
!7899 = !DILocation(line: 355, column: 18, scope: !7894)
!7900 = !DILocation(line: 357, column: 6, scope: !7894)
!7901 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7a720c0ebbf447f9E", scope: !7884, file: !7883, line: 355, type: !7902, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7906, retainedNodes: !7904)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!470, !470}
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "self", arg: 1, scope: !7901, file: !7883, line: 355, type: !470)
!7906 = !{!7907}
!7907 = !DITemplateTypeParameter(name: "I", type: !470)
!7908 = !DILocation(line: 355, column: 18, scope: !7901)
!7909 = !DILocation(line: 356, column: 9, scope: !7901)
!7910 = !DILocation(line: 357, column: 6, scope: !7901)
!7911 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9fb2051d3400fd15E", scope: !7884, file: !7883, line: 355, type: !7912, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7916, retainedNodes: !7914)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!391, !391}
!7914 = !{!7915}
!7915 = !DILocalVariable(name: "self", arg: 1, scope: !7911, file: !7883, line: 355, type: !391)
!7916 = !{!7917}
!7917 = !DITemplateTypeParameter(name: "I", type: !391)
!7918 = !DILocation(line: 355, column: 18, scope: !7911)
!7919 = !DILocation(line: 356, column: 9, scope: !7911)
!7920 = !DILocation(line: 357, column: 6, scope: !7911)
!7921 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha51080fc84ce996fE", scope: !7884, file: !7883, line: 355, type: !7922, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7926, retainedNodes: !7924)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!917, !917}
!7924 = !{!7925}
!7925 = !DILocalVariable(name: "self", arg: 1, scope: !7921, file: !7883, line: 355, type: !917)
!7926 = !{!7927}
!7927 = !DITemplateTypeParameter(name: "I", type: !917)
!7928 = !DILocation(line: 355, column: 18, scope: !7921)
!7929 = !DILocation(line: 356, column: 9, scope: !7921)
!7930 = !DILocation(line: 357, column: 6, scope: !7921)
!7931 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc75f2a826e335443E", scope: !7884, file: !7883, line: 355, type: !7932, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !441, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!397, !397}
!7934 = !{!7935}
!7935 = !DILocalVariable(name: "self", arg: 1, scope: !7931, file: !7883, line: 355, type: !397)
!7936 = !DILocation(line: 355, column: 18, scope: !7931)
!7937 = !DILocation(line: 357, column: 6, scope: !7931)
!7938 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc789a84abc003cf2E", scope: !7884, file: !7883, line: 355, type: !7939, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !481, retainedNodes: !7941)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!476, !476}
!7941 = !{!7942}
!7942 = !DILocalVariable(name: "self", arg: 1, scope: !7938, file: !7883, line: 355, type: !476)
!7943 = !DILocation(line: 355, column: 18, scope: !7938)
!7944 = !DILocation(line: 357, column: 6, scope: !7938)
!7945 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcb18632616c492a7E", scope: !7884, file: !7883, line: 355, type: !7946, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !852, retainedNodes: !7948)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!637, !637}
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "self", arg: 1, scope: !7945, file: !7883, line: 355, type: !637)
!7950 = !DILocation(line: 355, column: 18, scope: !7945)
!7951 = !DILocation(line: 356, column: 9, scope: !7945)
!7952 = !DILocation(line: 357, column: 6, scope: !7945)
!7953 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd81c89e6dcc041a7E", scope: !7884, file: !7883, line: 355, type: !7954, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !924, retainedNodes: !7956)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!615, !615}
!7956 = !{!7957}
!7957 = !DILocalVariable(name: "self", arg: 1, scope: !7953, file: !7883, line: 355, type: !615)
!7958 = !DILocation(line: 355, column: 18, scope: !7953)
!7959 = !DILocation(line: 356, column: 9, scope: !7953)
!7960 = !DILocation(line: 357, column: 6, scope: !7953)
!7961 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd98a58555276bde9E", scope: !7884, file: !7883, line: 355, type: !7962, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7966, retainedNodes: !7964)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!306, !306}
!7964 = !{!7965}
!7965 = !DILocalVariable(name: "self", arg: 1, scope: !7961, file: !7883, line: 355, type: !306)
!7966 = !{!7967}
!7967 = !DITemplateTypeParameter(name: "I", type: !306)
!7968 = !DILocation(line: 355, column: 18, scope: !7961)
!7969 = !DILocation(line: 356, column: 9, scope: !7961)
!7970 = !DILocation(line: 357, column: 6, scope: !7961)
!7971 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hecb9f3243fc764d6E", scope: !7884, file: !7883, line: 355, type: !7972, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7976, retainedNodes: !7974)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!845, !845}
!7974 = !{!7975}
!7975 = !DILocalVariable(name: "self", arg: 1, scope: !7971, file: !7883, line: 355, type: !845)
!7976 = !{!7977}
!7977 = !DITemplateTypeParameter(name: "I", type: !845)
!7978 = !DILocation(line: 355, column: 18, scope: !7971)
!7979 = !DILocation(line: 356, column: 9, scope: !7971)
!7980 = !DILocation(line: 357, column: 6, scope: !7971)
!7981 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf011668e8a7276adE", scope: !7884, file: !7883, line: 355, type: !7982, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7986, retainedNodes: !7984)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{!309, !309}
!7984 = !{!7985}
!7985 = !DILocalVariable(name: "self", arg: 1, scope: !7981, file: !7883, line: 355, type: !309)
!7986 = !{!357}
!7987 = !DILocation(line: 355, column: 18, scope: !7981)
!7988 = !DILocation(line: 356, column: 9, scope: !7981)
!7989 = !DILocation(line: 357, column: 6, scope: !7981)
!7990 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfa8d03b5b32e6b82E", scope: !7884, file: !7883, line: 355, type: !7991, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7995, retainedNodes: !7993)
!7991 = !DISubroutineType(types: !7992)
!7992 = !{!848, !848}
!7993 = !{!7994}
!7994 = !DILocalVariable(name: "self", arg: 1, scope: !7990, file: !7883, line: 355, type: !848)
!7995 = !{!893}
!7996 = !DILocation(line: 355, column: 18, scope: !7990)
!7997 = !DILocation(line: 356, column: 9, scope: !7990)
!7998 = !DILocation(line: 357, column: 6, scope: !7990)
!7999 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17he57a55edfbb947feE", scope: !8000, file: !4455, line: 45, type: !8001, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8003)
!8000 = !DINamespace(name: "{impl#10}", scope: !157)
!8001 = !DISubroutineType(types: !8002)
!8002 = !{!1961, !4458, !1977}
!8003 = !{!8004, !8005}
!8004 = !DILocalVariable(name: "self", arg: 1, scope: !7999, file: !4455, line: 45, type: !4458)
!8005 = !DILocalVariable(name: "f", arg: 2, scope: !7999, file: !4455, line: 45, type: !1977)
!8006 = !DILocation(line: 45, column: 38, scope: !7999)
!8007 = !DILocation(line: 49, column: 5, scope: !7999)
!8008 = !DILocation(line: 45, column: 43, scope: !7999)
!8009 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h1712cafb487c0813E", scope: !8010, file: !5904, line: 38, type: !5933, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8011)
!8010 = !DINamespace(name: "{impl#4}", scope: !25)
!8011 = !{!8012}
!8012 = !DILocalVariable(name: "self", arg: 1, scope: !8009, file: !5904, line: 38, type: !5935)
!8013 = !DILocation(line: 38, column: 16, scope: !8009)
!8014 = !DILocation(line: 38, column: 21, scope: !8009)
!8015 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h477141b2a8c92ce7E", scope: !8016, file: !1619, line: 567, type: !8017, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !8019)
!8016 = !DINamespace(name: "{impl#46}", scope: !37)
!8017 = !DISubroutineType(types: !8018)
!8018 = !{!1961, !35, !1977}
!8019 = !{!8020, !8021, !8022}
!8020 = !DILocalVariable(name: "self", arg: 1, scope: !8015, file: !1619, line: 567, type: !35)
!8021 = !DILocalVariable(name: "f", arg: 2, scope: !8015, file: !1619, line: 567, type: !1977)
!8022 = !DILocalVariable(name: "__self_0", scope: !8023, file: !1619, line: 580, type: !67, align: 8)
!8023 = distinct !DILexicalBlock(scope: !8015, file: !1619, line: 567, column: 20)
!8024 = !DILocation(line: 567, column: 20, scope: !8015)
!8025 = !DILocation(line: 580, column: 56, scope: !8023)
!8026 = !DILocation(line: 580, column: 56, scope: !8015)
!8027 = !DILocation(line: 567, column: 20, scope: !8023)
!8028 = !DILocation(line: 567, column: 25, scope: !8015)
!8029 = distinct !DISubprogram(name: "default", linkageName: "_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h7e52163d12fc97c8E", scope: !8030, file: !2182, line: 190, type: !8031, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15)
!8030 = !DINamespace(name: "{impl#4}", scope: !2184)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!2190}
!8033 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !8034)
!8034 = distinct !DILocation(line: 193, column: 33, scope: !8029)
!8035 = !DILocation(line: 193, column: 18, scope: !8029)
!8036 = !DILocation(line: 194, column: 6, scope: !8029)
!8037 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hae95477830e486b2E", scope: !8038, file: !5904, line: 545, type: !8039, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8042)
!8038 = !DINamespace(name: "{impl#14}", scope: !25)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!1961, !8041, !1977}
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::LayoutError", baseType: !24, size: 64, align: 64, dwarfAddressSpace: 0)
!8042 = !{!8043, !8044}
!8043 = !DILocalVariable(name: "self", arg: 1, scope: !8037, file: !5904, line: 545, type: !8041)
!8044 = !DILocalVariable(name: "f", arg: 2, scope: !8037, file: !5904, line: 545, type: !1977)
!8045 = !DILocation(line: 545, column: 32, scope: !8037)
!8046 = !DILocation(line: 545, column: 37, scope: !8037)
!8047 = distinct !DISubprogram(name: "eq<usize>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha0efea817ce0532dE", scope: !8048, file: !1619, line: 2180, type: !8049, scopeLine: 2180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !194, retainedNodes: !8052)
!8048 = !DINamespace(name: "{impl#14}", scope: !37)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!520, !8051, !8051}
!8051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<usize>", baseType: !664, size: 64, align: 64, dwarfAddressSpace: 0)
!8052 = !{!8053, !8054, !8055, !8057}
!8053 = !DILocalVariable(name: "self", arg: 1, scope: !8047, file: !1619, line: 2180, type: !8051)
!8054 = !DILocalVariable(name: "other", arg: 2, scope: !8047, file: !1619, line: 2180, type: !8051)
!8055 = !DILocalVariable(name: "l", scope: !8056, file: !1619, line: 2184, type: !2172, align: 8)
!8056 = distinct !DILexicalBlock(scope: !8047, file: !1619, line: 2184, column: 13)
!8057 = !DILocalVariable(name: "r", scope: !8056, file: !1619, line: 2184, type: !2172, align: 8)
!8058 = !DILocation(line: 2180, column: 11, scope: !8047)
!8059 = !DILocation(line: 2180, column: 18, scope: !8047)
!8060 = !DILocation(line: 2183, column: 15, scope: !8047)
!8061 = !DILocation(line: 2183, column: 9, scope: !8047)
!8062 = !DILocation(line: 2187, column: 29, scope: !8047)
!8063 = !DILocation(line: 2186, column: 32, scope: !8047)
!8064 = !DILocation(line: 2189, column: 6, scope: !8047)
!8065 = !DILocation(line: 2185, column: 32, scope: !8047)
!8066 = !DILocation(line: 2184, column: 19, scope: !8047)
!8067 = !DILocation(line: 2184, column: 19, scope: !8056)
!8068 = !DILocation(line: 2184, column: 28, scope: !8047)
!8069 = !DILocation(line: 2184, column: 28, scope: !8056)
!8070 = !DILocation(line: 2184, column: 35, scope: !8056)
!8071 = distinct !DISubprogram(name: "eq<u8>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hcb1184b3e526b36cE", scope: !8048, file: !1619, line: 2180, type: !8072, scopeLine: 2180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !8074)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{!520, !35, !35}
!8074 = !{!8075, !8076, !8077, !8079}
!8075 = !DILocalVariable(name: "self", arg: 1, scope: !8071, file: !1619, line: 2180, type: !35)
!8076 = !DILocalVariable(name: "other", arg: 2, scope: !8071, file: !1619, line: 2180, type: !35)
!8077 = !DILocalVariable(name: "l", scope: !8078, file: !1619, line: 2184, type: !67, align: 8)
!8078 = distinct !DILexicalBlock(scope: !8071, file: !1619, line: 2184, column: 13)
!8079 = !DILocalVariable(name: "r", scope: !8078, file: !1619, line: 2184, type: !67, align: 8)
!8080 = !DILocation(line: 2180, column: 11, scope: !8071)
!8081 = !DILocation(line: 2180, column: 18, scope: !8071)
!8082 = !DILocation(line: 2183, column: 15, scope: !8071)
!8083 = !DILocation(line: 2183, column: 9, scope: !8071)
!8084 = !DILocation(line: 2187, column: 29, scope: !8071)
!8085 = !DILocation(line: 2186, column: 32, scope: !8071)
!8086 = !DILocation(line: 2189, column: 6, scope: !8071)
!8087 = !DILocation(line: 2185, column: 32, scope: !8071)
!8088 = !DILocation(line: 2184, column: 19, scope: !8071)
!8089 = !DILocation(line: 2184, column: 19, scope: !8078)
!8090 = !DILocation(line: 2184, column: 28, scope: !8071)
!8091 = !DILocation(line: 2184, column: 28, scope: !8078)
!8092 = !DILocation(line: 2184, column: 35, scope: !8078)
!8093 = distinct !DISubprogram(name: "next<core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01da7c7a3271c7d8E", scope: !8094, file: !4894, line: 4025, type: !8095, scopeLine: 4025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !621, retainedNodes: !8098)
!8094 = !DINamespace(name: "{impl#0}", scope: !363)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{!743, !8097}
!8097 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::slice::iter::ArrayChunks<u8, 2>", baseType: !404, size: 64, align: 64, dwarfAddressSpace: 0)
!8098 = !{!8099}
!8099 = !DILocalVariable(name: "self", arg: 1, scope: !8093, file: !4894, line: 4025, type: !8097)
!8100 = !DILocation(line: 4025, column: 13, scope: !8093)
!8101 = !DILocation(line: 4026, column: 9, scope: !8093)
!8102 = !DILocation(line: 4027, column: 6, scope: !8093)
!8103 = distinct !DISubprogram(name: "size_hint<core::slice::iter::ArrayChunks<u8, 2>>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4a215a4537c6396fE", scope: !8094, file: !4894, line: 4028, type: !8104, scopeLine: 4028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !621, retainedNodes: !8107)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!660, !8106}
!8106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&mut core::slice::iter::ArrayChunks<u8, 2>", baseType: !404, size: 64, align: 64, dwarfAddressSpace: 0)
!8107 = !{!8108}
!8108 = !DILocalVariable(name: "self", arg: 1, scope: !8103, file: !4894, line: 4028, type: !8106)
!8109 = !DILocation(line: 4028, column: 18, scope: !8103)
!8110 = !DILocation(line: 4029, column: 9, scope: !8103)
!8111 = !DILocation(line: 4030, column: 6, scope: !8103)
!8112 = distinct !DISubprogram(name: "spec_write_fmt<alloc::string::String>", linkageName: "_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h339dd32b174ea071E", scope: !8113, file: !1957, line: 235, type: !2323, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8120, retainedNodes: !8115)
!8113 = !DINamespace(name: "{impl#1}", scope: !8114)
!8114 = !DINamespace(name: "write_fmt", scope: !2322)
!8115 = !{!8116, !8117, !8118}
!8116 = !DILocalVariable(name: "self", arg: 1, scope: !8112, file: !1957, line: 235, type: !372)
!8117 = !DILocalVariable(name: "args", arg: 2, scope: !8112, file: !1957, line: 235, type: !2325)
!8118 = !DILocalVariable(name: "s", scope: !8119, file: !1957, line: 236, type: !170, align: 8)
!8119 = distinct !DILexicalBlock(scope: !8112, file: !1957, line: 236, column: 65)
!8120 = !{!8121}
!8121 = !DITemplateTypeParameter(name: "W", type: !78)
!8122 = !DILocation(line: 235, column: 31, scope: !8112)
!8123 = !DILocation(line: 235, column: 37, scope: !8112)
!8124 = !DILocation(line: 236, column: 34, scope: !8119)
!8125 = !DILocation(line: 236, column: 24, scope: !8119)
!8126 = !DILocation(line: 236, column: 29, scope: !8119)
!8127 = !DILocation(line: 237, column: 21, scope: !8119)
!8128 = !DILocation(line: 239, column: 21, scope: !8112)
!8129 = !DILocation(line: 241, column: 14, scope: !8112)
!8130 = !DILocation(line: 235, column: 13, scope: !8112)
!8131 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc3642c91affc8678E", scope: !8132, file: !1139, line: 261, type: !8133, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1171, retainedNodes: !8135)
!8132 = !DINamespace(name: "{impl#2}", scope: !1141)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{!1201, !9, !1144}
!8135 = !{!8136, !8137}
!8136 = !DILocalVariable(name: "self", arg: 1, scope: !8131, file: !1139, line: 261, type: !9)
!8137 = !DILocalVariable(name: "slice", arg: 2, scope: !8131, file: !1139, line: 261, type: !1144)
!8138 = !DILocation(line: 261, column: 33, scope: !8131)
!8139 = !DILocation(line: 261, column: 39, scope: !8131)
!8140 = !DILocation(line: 74, column: 35, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !8131, file: !1177, discriminator: 0)
!8142 = !DILocation(line: 1729, column: 22, scope: !1179, inlinedAt: !8143)
!8143 = distinct !DILocation(line: 265, column: 47, scope: !8131)
!8144 = !DILocation(line: 1730, column: 9, scope: !1179, inlinedAt: !8143)
!8145 = !DILocation(line: 75, column: 17, scope: !8141)
!8146 = !DILocation(line: 94, column: 38, scope: !1207, inlinedAt: !8147)
!8147 = distinct !DILocation(line: 268, column: 18, scope: !8131)
!8148 = !DILocation(line: 94, column: 53, scope: !1207, inlinedAt: !8147)
!8149 = !DILocation(line: 95, column: 15, scope: !1207, inlinedAt: !8147)
!8150 = !DILocation(line: 95, column: 9, scope: !1213, inlinedAt: !8147)
!8151 = !DILocation(line: 97, column: 14, scope: !1213, inlinedAt: !8147)
!8152 = !DILocation(line: 269, column: 6, scope: !8131)
!8153 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut18precondition_check17h613064db87a97d51E", scope: !8154, file: !1177, line: 66, type: !2808, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8155)
!8154 = !DINamespace(name: "get_unchecked_mut", scope: !8132)
!8155 = !{!8156, !8157}
!8156 = !DILocalVariable(name: "this", arg: 1, scope: !8153, file: !1177, line: 66, type: !9)
!8157 = !DILocalVariable(name: "len", arg: 2, scope: !8153, file: !1177, line: 66, type: !9)
!8158 = !DILocation(line: 66, column: 43, scope: !8153)
!8159 = !DILocation(line: 265, column: 63, scope: !8160)
!8160 = !DILexicalBlockFile(scope: !8153, file: !1139, discriminator: 0)
!8161 = !DILocation(line: 68, column: 21, scope: !8153)
!8162 = !DILocation(line: 72, column: 14, scope: !8153)
!8163 = distinct !DISubprogram(name: "eq<&str>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc3d86356b1301045E", scope: !8164, file: !1332, line: 1572, type: !8165, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !567, retainedNodes: !8168)
!8164 = !DINamespace(name: "{impl#13}", scope: !100)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{!520, !8167, !8167}
!8167 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<&str>", baseType: !563, size: 64, align: 64, dwarfAddressSpace: 0)
!8168 = !{!8169, !8170}
!8169 = !DILocalVariable(name: "self", arg: 1, scope: !8163, file: !1332, line: 1572, type: !8167)
!8170 = !DILocalVariable(name: "other", arg: 2, scope: !8163, file: !1332, line: 1572, type: !8167)
!8171 = !DILocation(line: 1572, column: 11, scope: !8163)
!8172 = !DILocation(line: 1572, column: 18, scope: !8163)
!8173 = !DILocation(line: 1573, column: 9, scope: !8163)
!8174 = !DILocalVariable(name: "self", arg: 1, scope: !8175, file: !1332, line: 339, type: !563)
!8175 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h501f81ff04fcc5f4E", scope: !563, file: !1332, line: 339, type: !8176, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !567, declaration: !8178, retainedNodes: !8179)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!3160, !563}
!8178 = !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h501f81ff04fcc5f4E", scope: !563, file: !1332, line: 339, type: !8176, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !567)
!8179 = !{!8174}
!8180 = !DILocation(line: 339, column: 25, scope: !8175, inlinedAt: !8181)
!8181 = distinct !DILocation(line: 1573, column: 9, scope: !8163)
!8182 = !DILocation(line: 1573, column: 26, scope: !8163)
!8183 = !DILocation(line: 339, column: 25, scope: !8175, inlinedAt: !8184)
!8184 = distinct !DILocation(line: 1573, column: 26, scope: !8163)
!8185 = !DILocation(line: 1574, column: 6, scope: !8163)
!8186 = distinct !DISubprogram(name: "eq<bool>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf6d9364f72e8fa61E", scope: !8164, file: !1332, line: 1572, type: !8187, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, retainedNodes: !8190)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!520, !8189, !8189}
!8189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<bool>", baseType: !516, size: 64, align: 64, dwarfAddressSpace: 0)
!8190 = !{!8191, !8192}
!8191 = !DILocalVariable(name: "self", arg: 1, scope: !8186, file: !1332, line: 1572, type: !8189)
!8192 = !DILocalVariable(name: "other", arg: 2, scope: !8186, file: !1332, line: 1572, type: !8189)
!8193 = !DILocation(line: 1572, column: 11, scope: !8186)
!8194 = !DILocation(line: 1572, column: 18, scope: !8186)
!8195 = !DILocation(line: 1573, column: 9, scope: !8186)
!8196 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !8197)
!8197 = distinct !DILocation(line: 1573, column: 9, scope: !8186)
!8198 = !DILocation(line: 1573, column: 26, scope: !8186)
!8199 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !8200)
!8200 = distinct !DILocation(line: 1573, column: 26, scope: !8186)
!8201 = !DILocation(line: 1574, column: 6, scope: !8186)
!8202 = distinct !DISubprogram(name: "eq<[u8; 2]>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf861ab500d54d4d9E", scope: !8164, file: !1332, line: 1572, type: !8203, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !8205)
!8203 = !DISubroutineType(types: !8204)
!8204 = !{!520, !1357, !1357}
!8205 = !{!8206, !8207}
!8206 = !DILocalVariable(name: "self", arg: 1, scope: !8202, file: !1332, line: 1572, type: !1357)
!8207 = !DILocalVariable(name: "other", arg: 2, scope: !8202, file: !1332, line: 1572, type: !1357)
!8208 = !DILocation(line: 1572, column: 11, scope: !8202)
!8209 = !DILocation(line: 1572, column: 18, scope: !8202)
!8210 = !DILocation(line: 1573, column: 9, scope: !8202)
!8211 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !8212)
!8212 = distinct !DILocation(line: 1573, column: 9, scope: !8202)
!8213 = !DILocation(line: 1573, column: 26, scope: !8202)
!8214 = !DILocation(line: 339, column: 25, scope: !1342, inlinedAt: !8215)
!8215 = distinct !DILocation(line: 1573, column: 26, scope: !8202)
!8216 = !DILocation(line: 1574, column: 6, scope: !8202)
!8217 = distinct !DISubprogram(name: "from_output<alloc::string::String, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hef41afcac3370099E", scope: !8218, file: !1555, line: 1990, type: !8219, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1567, retainedNodes: !8221)
!8218 = !DINamespace(name: "{impl#26}", scope: !865)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{!1559, !78}
!8221 = !{!8222}
!8222 = !DILocalVariable(name: "output", arg: 1, scope: !8217, file: !1555, line: 1990, type: !78)
!8223 = !DILocation(line: 1990, column: 20, scope: !8217)
!8224 = !DILocation(line: 1991, column: 9, scope: !8217)
!8225 = !DILocation(line: 1992, column: 6, scope: !8217)
!8226 = distinct !DISubprogram(name: "branch<char, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18c5bbc23a0b879bE", scope: !8218, file: !1555, line: 1995, type: !8227, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1032, retainedNodes: !8245)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!8229, !1024}
!8229 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, char>", scope: !1002, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8230, templateParams: !15, identifier: "6b8211683f25d95a9718d9f0893d86a2")
!8230 = !{!8231}
!8231 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8229, file: !2, size: 64, align: 32, elements: !8232, templateParams: !15, identifier: "d373b4bb16a74f2d23ca4d65247d6c89", discriminator: !8244)
!8232 = !{!8233, !8240}
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8231, file: !2, baseType: !8234, size: 64, align: 32, extraData: i128 0)
!8234 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8229, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8235, templateParams: !8237, identifier: "62255a617c73465b128024757e890ee3")
!8235 = !{!8236}
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8234, file: !2, baseType: !379, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!8237 = !{!8238, !8239}
!8238 = !DITemplateTypeParameter(name: "B", type: !864)
!8239 = !DITemplateTypeParameter(name: "C", type: !379)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8231, file: !2, baseType: !8241, size: 64, align: 32, extraData: i128 1)
!8241 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8229, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8242, templateParams: !8237, identifier: "4d98ee46dca50fd32649bf7ae81bbaf6")
!8242 = !{!8243}
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8241, file: !2, baseType: !864, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!8244 = !DIDerivedType(tag: DW_TAG_member, scope: !8229, file: !2, baseType: !327, size: 16, align: 16, flags: DIFlagArtificial)
!8245 = !{!8246, !8247, !8249}
!8246 = !DILocalVariable(name: "self", arg: 1, scope: !8226, file: !1555, line: 1995, type: !1024)
!8247 = !DILocalVariable(name: "v", scope: !8248, file: !1555, line: 1997, type: !379, align: 4)
!8248 = distinct !DILexicalBlock(scope: !8226, file: !1555, line: 1997, column: 13)
!8249 = !DILocalVariable(name: "e", scope: !8250, file: !1555, line: 1998, type: !880, align: 2)
!8250 = distinct !DILexicalBlock(scope: !8226, file: !1555, line: 1998, column: 13)
!8251 = !DILocation(line: 1995, column: 15, scope: !8226)
!8252 = !DILocation(line: 1996, column: 15, scope: !8226)
!8253 = !DILocation(line: 1996, column: 9, scope: !8226)
!8254 = !DILocation(line: 1997, column: 16, scope: !8226)
!8255 = !DILocation(line: 1997, column: 16, scope: !8248)
!8256 = !DILocation(line: 1997, column: 22, scope: !8248)
!8257 = !DILocation(line: 1997, column: 45, scope: !8226)
!8258 = !DILocation(line: 1998, column: 17, scope: !8226)
!8259 = !DILocation(line: 1998, column: 17, scope: !8250)
!8260 = !DILocation(line: 1998, column: 42, scope: !8250)
!8261 = !DILocation(line: 1998, column: 23, scope: !8250)
!8262 = !DILocation(line: 1998, column: 48, scope: !8226)
!8263 = !DILocation(line: 2000, column: 6, scope: !8226)
!8264 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h18fb6e52d80cd6e1E", scope: !8218, file: !1555, line: 1995, type: !8265, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1730, retainedNodes: !8282)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!8267, !1722}
!8267 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !1002, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8268, templateParams: !15, identifier: "56076ced8319431f112fc3cc6f7e2ac3")
!8268 = !{!8269}
!8269 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8267, file: !2, size: 128, align: 64, elements: !8270, templateParams: !15, identifier: "4255a63e650eedc6212d4b276a18f3e8", discriminator: !8281)
!8270 = !{!8271, !8277}
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8269, file: !2, baseType: !8272, size: 128, align: 64, extraData: i128 9223372036854775809)
!8272 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8267, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8273, templateParams: !8275, identifier: "6e4cf0eff97b03a6d678c4d800ccf265")
!8273 = !{!8274}
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8272, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!8275 = !{!8276, !1012}
!8276 = !DITemplateTypeParameter(name: "B", type: !1789)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8269, file: !2, baseType: !8278, size: 128, align: 64)
!8278 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8267, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8279, templateParams: !8275, identifier: "bf785bd60aea4f0de869136081f4c7cb")
!8279 = !{!8280}
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8278, file: !2, baseType: !1789, size: 128, align: 64, flags: DIFlagPublic)
!8281 = !DIDerivedType(tag: DW_TAG_member, scope: !8267, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8282 = !{!8283, !8284, !8286}
!8283 = !DILocalVariable(name: "self", arg: 1, scope: !8264, file: !1555, line: 1995, type: !1722)
!8284 = !DILocalVariable(name: "v", scope: !8285, file: !1555, line: 1997, type: !7, align: 1)
!8285 = distinct !DILexicalBlock(scope: !8264, file: !1555, line: 1997, column: 13)
!8286 = !DILocalVariable(name: "e", scope: !8287, file: !1555, line: 1998, type: !1732, align: 8)
!8287 = distinct !DILexicalBlock(scope: !8264, file: !1555, line: 1998, column: 13)
!8288 = !DILocation(line: 1995, column: 15, scope: !8264)
!8289 = !DILocation(line: 1997, column: 16, scope: !8285)
!8290 = !DILocation(line: 1996, column: 15, scope: !8264)
!8291 = !DILocation(line: 1996, column: 9, scope: !8264)
!8292 = !DILocation(line: 1997, column: 22, scope: !8285)
!8293 = !DILocation(line: 1997, column: 45, scope: !8264)
!8294 = !DILocation(line: 1998, column: 17, scope: !8264)
!8295 = !DILocation(line: 1998, column: 17, scope: !8287)
!8296 = !DILocation(line: 1998, column: 42, scope: !8287)
!8297 = !DILocation(line: 1998, column: 23, scope: !8287)
!8298 = !DILocation(line: 1998, column: 48, scope: !8264)
!8299 = !DILocation(line: 2000, column: 6, scope: !8264)
!8300 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h540b4559420cf42fE", scope: !8218, file: !1555, line: 1995, type: !8301, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1857, retainedNodes: !8318)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!8303, !1849}
!8303 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1002, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8304, templateParams: !15, identifier: "b6bab01fd848306772c151ef77c34d44")
!8304 = !{!8305}
!8305 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8303, file: !2, size: 192, align: 64, elements: !8306, templateParams: !15, identifier: "3032077ece5c0342512a51a46ce258ae", discriminator: !8317)
!8306 = !{!8307, !8313}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8305, file: !2, baseType: !8308, size: 192, align: 64, extraData: i128 0)
!8308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8303, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8309, templateParams: !8311, identifier: "7498a2bf2d37437f43f017d36e5ea203")
!8309 = !{!8310}
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8308, file: !2, baseType: !1665, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!8311 = !{!8276, !8312}
!8312 = !DITemplateTypeParameter(name: "C", type: !1665)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8305, file: !2, baseType: !8314, size: 192, align: 64, extraData: i128 1)
!8314 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8303, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8315, templateParams: !8311, identifier: "a695db5640a33c21796b3ae304bef8d3")
!8315 = !{!8316}
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8314, file: !2, baseType: !1789, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!8317 = !DIDerivedType(tag: DW_TAG_member, scope: !8303, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8318 = !{!8319, !8320, !8322}
!8319 = !DILocalVariable(name: "self", arg: 1, scope: !8300, file: !1555, line: 1995, type: !1849)
!8320 = !DILocalVariable(name: "v", scope: !8321, file: !1555, line: 1997, type: !1665, align: 8)
!8321 = distinct !DILexicalBlock(scope: !8300, file: !1555, line: 1997, column: 13)
!8322 = !DILocalVariable(name: "e", scope: !8323, file: !1555, line: 1998, type: !1732, align: 8)
!8323 = distinct !DILexicalBlock(scope: !8300, file: !1555, line: 1998, column: 13)
!8324 = !DILocation(line: 1995, column: 15, scope: !8300)
!8325 = !DILocation(line: 1996, column: 15, scope: !8300)
!8326 = !DILocation(line: 1996, column: 9, scope: !8300)
!8327 = !DILocation(line: 1997, column: 16, scope: !8300)
!8328 = !DILocation(line: 1997, column: 16, scope: !8321)
!8329 = !DILocation(line: 1997, column: 22, scope: !8321)
!8330 = !DILocation(line: 1997, column: 45, scope: !8300)
!8331 = !DILocation(line: 1998, column: 17, scope: !8300)
!8332 = !DILocation(line: 1998, column: 17, scope: !8323)
!8333 = !DILocation(line: 1998, column: 42, scope: !8323)
!8334 = !DILocation(line: 1998, column: 23, scope: !8323)
!8335 = !DILocation(line: 1998, column: 48, scope: !8300)
!8336 = !DILocation(line: 2000, column: 6, scope: !8300)
!8337 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha6abec15a9835463E", scope: !8218, file: !1555, line: 1995, type: !8338, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7518, retainedNodes: !8355)
!8338 = !DISubroutineType(types: !8339)
!8339 = !{!8340, !7510}
!8340 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>", scope: !1002, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8341, templateParams: !15, identifier: "2119a3a5556618602fde4db8d9d7ab84")
!8341 = !{!8342}
!8342 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8340, file: !2, size: 192, align: 64, elements: !8343, templateParams: !15, identifier: "188be9eb0312e68a99502aee2186328c", discriminator: !8354)
!8343 = !{!8344, !8350}
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8342, file: !2, baseType: !8345, size: 192, align: 64, extraData: i128 0)
!8345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8340, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8346, templateParams: !8348, identifier: "324bb33f22181d0668287446e894f566")
!8346 = !{!8347}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8345, file: !2, baseType: !1665, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!8348 = !{!8349, !8312}
!8349 = !DITemplateTypeParameter(name: "B", type: !1760)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8342, file: !2, baseType: !8351, size: 192, align: 64, extraData: i128 1)
!8351 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8340, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8352, templateParams: !8348, identifier: "e04f2a1873257a268242ad5199eaf")
!8352 = !{!8353}
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8351, file: !2, baseType: !1760, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!8354 = !DIDerivedType(tag: DW_TAG_member, scope: !8340, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8355 = !{!8356, !8357, !8359}
!8356 = !DILocalVariable(name: "self", arg: 1, scope: !8337, file: !1555, line: 1995, type: !7510)
!8357 = !DILocalVariable(name: "v", scope: !8358, file: !1555, line: 1997, type: !1665, align: 8)
!8358 = distinct !DILexicalBlock(scope: !8337, file: !1555, line: 1997, column: 13)
!8359 = !DILocalVariable(name: "e", scope: !8360, file: !1555, line: 1998, type: !1736, align: 8)
!8360 = distinct !DILexicalBlock(scope: !8337, file: !1555, line: 1998, column: 13)
!8361 = !DILocation(line: 1995, column: 15, scope: !8337)
!8362 = !DILocation(line: 1996, column: 15, scope: !8337)
!8363 = !DILocation(line: 1996, column: 9, scope: !8337)
!8364 = !DILocation(line: 1997, column: 16, scope: !8337)
!8365 = !DILocation(line: 1997, column: 16, scope: !8358)
!8366 = !DILocation(line: 1997, column: 22, scope: !8358)
!8367 = !DILocation(line: 1997, column: 45, scope: !8337)
!8368 = !DILocation(line: 1998, column: 17, scope: !8337)
!8369 = !DILocation(line: 1998, column: 17, scope: !8360)
!8370 = !DILocation(line: 1998, column: 42, scope: !8360)
!8371 = !DILocation(line: 1998, column: 23, scope: !8360)
!8372 = !DILocation(line: 1998, column: 48, scope: !8337)
!8373 = !DILocation(line: 2000, column: 6, scope: !8337)
!8374 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb510057ff3f0e937E", scope: !8218, file: !1555, line: 1995, type: !8375, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7009, retainedNodes: !8392)
!8375 = !DISubroutineType(types: !8376)
!8376 = !{!8377, !7001}
!8377 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !1002, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8378, templateParams: !15, identifier: "d93561883b5cd506e370f5c622aeca15")
!8378 = !{!8379}
!8379 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8377, file: !2, size: 128, align: 64, elements: !8380, templateParams: !15, identifier: "d1f8f4a7dfe0bd2672c33743414544d4", discriminator: !8391)
!8380 = !{!8381, !8387}
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8379, file: !2, baseType: !8382, size: 128, align: 64, extraData: i128 9223372036854775809)
!8382 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8377, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8383, templateParams: !8385, identifier: "3d926adf16c72015d9176edd67ec038")
!8383 = !{!8384}
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8382, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!8385 = !{!8349, !8386}
!8386 = !DITemplateTypeParameter(name: "C", type: !9)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8379, file: !2, baseType: !8388, size: 128, align: 64)
!8388 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8377, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8389, templateParams: !8385, identifier: "676a7e4e27eb7ccafefcf8abee14da62")
!8389 = !{!8390}
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8388, file: !2, baseType: !1760, size: 128, align: 64, flags: DIFlagPublic)
!8391 = !DIDerivedType(tag: DW_TAG_member, scope: !8377, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8392 = !{!8393, !8394, !8396}
!8393 = !DILocalVariable(name: "self", arg: 1, scope: !8374, file: !1555, line: 1995, type: !7001)
!8394 = !DILocalVariable(name: "v", scope: !8395, file: !1555, line: 1997, type: !9, align: 8)
!8395 = distinct !DILexicalBlock(scope: !8374, file: !1555, line: 1997, column: 13)
!8396 = !DILocalVariable(name: "e", scope: !8397, file: !1555, line: 1998, type: !1736, align: 8)
!8397 = distinct !DILexicalBlock(scope: !8374, file: !1555, line: 1998, column: 13)
!8398 = !DILocation(line: 1995, column: 15, scope: !8374)
!8399 = !DILocation(line: 1996, column: 15, scope: !8374)
!8400 = !DILocation(line: 1996, column: 9, scope: !8374)
!8401 = !DILocation(line: 1997, column: 16, scope: !8374)
!8402 = !DILocation(line: 1997, column: 16, scope: !8395)
!8403 = !DILocation(line: 1997, column: 22, scope: !8395)
!8404 = !DILocation(line: 1997, column: 45, scope: !8374)
!8405 = !DILocation(line: 1998, column: 17, scope: !8374)
!8406 = !DILocation(line: 1998, column: 17, scope: !8397)
!8407 = !DILocation(line: 1998, column: 42, scope: !8397)
!8408 = !DILocation(line: 1998, column: 23, scope: !8397)
!8409 = !DILocation(line: 1998, column: 48, scope: !8374)
!8410 = !DILocation(line: 2000, column: 6, scope: !8374)
!8411 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb9c86ab250b103fbE", scope: !8218, file: !1555, line: 1995, type: !8412, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1668, retainedNodes: !8429)
!8412 = !DISubroutineType(types: !8413)
!8413 = !{!8414, !1657}
!8414 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1002, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8415, templateParams: !15, identifier: "bae5ab372470d1bbd76ccdcb72c3472f")
!8415 = !{!8416}
!8416 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8414, file: !2, size: 128, align: 64, elements: !8417, templateParams: !15, identifier: "5886c7bf09c63ce367641c86d759cbf5", discriminator: !8428)
!8417 = !{!8418, !8424}
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8416, file: !2, baseType: !8419, size: 128, align: 64)
!8419 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8414, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8420, templateParams: !8422, identifier: "902e07727252d6085f31ecb943de2381")
!8420 = !{!8421}
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8419, file: !2, baseType: !1665, size: 128, align: 64, flags: DIFlagPublic)
!8422 = !{!8423, !8312}
!8423 = !DITemplateTypeParameter(name: "B", type: !1677)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8416, file: !2, baseType: !8425, size: 128, align: 64, extraData: i128 0)
!8425 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8414, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8426, templateParams: !8422, identifier: "a1513116e19e03a103ca79b762c3502")
!8426 = !{!8427}
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8425, file: !2, baseType: !1677, align: 8, flags: DIFlagPublic)
!8428 = !DIDerivedType(tag: DW_TAG_member, scope: !8414, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8429 = !{!8430, !8431, !8433}
!8430 = !DILocalVariable(name: "self", arg: 1, scope: !8411, file: !1555, line: 1995, type: !1657)
!8431 = !DILocalVariable(name: "v", scope: !8432, file: !1555, line: 1997, type: !1665, align: 8)
!8432 = distinct !DILexicalBlock(scope: !8411, file: !1555, line: 1997, column: 13)
!8433 = !DILocalVariable(name: "e", scope: !8434, file: !1555, line: 1998, type: !1671, align: 1)
!8434 = distinct !DILexicalBlock(scope: !8411, file: !1555, line: 1998, column: 13)
!8435 = !DILocation(line: 1995, column: 15, scope: !8411)
!8436 = !DILocation(line: 1998, column: 17, scope: !8434)
!8437 = !DILocation(line: 1996, column: 15, scope: !8411)
!8438 = !DILocation(line: 1996, column: 9, scope: !8411)
!8439 = !DILocation(line: 1997, column: 16, scope: !8411)
!8440 = !DILocation(line: 1997, column: 16, scope: !8432)
!8441 = !DILocation(line: 1997, column: 22, scope: !8432)
!8442 = !DILocation(line: 1997, column: 45, scope: !8411)
!8443 = !DILocation(line: 1998, column: 23, scope: !8434)
!8444 = !DILocation(line: 1998, column: 48, scope: !8411)
!8445 = !DILocation(line: 2000, column: 6, scope: !8411)
!8446 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc11776b59597b879E", scope: !8218, file: !1555, line: 1995, type: !8447, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7374, retainedNodes: !8464)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!8449, !7366}
!8449 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::alloc::layout::Layout>", scope: !1002, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8450, templateParams: !15, identifier: "d887dc3c77413d5d65434ab4135e7c")
!8450 = !{!8451}
!8451 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8449, file: !2, size: 192, align: 64, elements: !8452, templateParams: !15, identifier: "f4b6fe27b821a441dab0e26083eafeb8", discriminator: !8463)
!8452 = !{!8453, !8459}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8451, file: !2, baseType: !8454, size: 192, align: 64, extraData: i128 0)
!8454 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8449, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8455, templateParams: !8457, identifier: "b3ff6e2d00e1871fe42f84707af0a1eb")
!8455 = !{!8456}
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8454, file: !2, baseType: !1746, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!8457 = !{!8276, !8458}
!8458 = !DITemplateTypeParameter(name: "C", type: !1746)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8451, file: !2, baseType: !8460, size: 192, align: 64, extraData: i128 1)
!8460 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8449, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !8461, templateParams: !8457, identifier: "530179be29b05b8784f26d8cf12c5eaa")
!8461 = !{!8462}
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8460, file: !2, baseType: !1789, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!8463 = !DIDerivedType(tag: DW_TAG_member, scope: !8449, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8464 = !{!8465, !8466, !8468}
!8465 = !DILocalVariable(name: "self", arg: 1, scope: !8446, file: !1555, line: 1995, type: !7366)
!8466 = !DILocalVariable(name: "v", scope: !8467, file: !1555, line: 1997, type: !1746, align: 8)
!8467 = distinct !DILexicalBlock(scope: !8446, file: !1555, line: 1997, column: 13)
!8468 = !DILocalVariable(name: "e", scope: !8469, file: !1555, line: 1998, type: !1732, align: 8)
!8469 = distinct !DILexicalBlock(scope: !8446, file: !1555, line: 1998, column: 13)
!8470 = !DILocation(line: 1995, column: 15, scope: !8446)
!8471 = !DILocation(line: 1996, column: 15, scope: !8446)
!8472 = !DILocation(line: 1996, column: 9, scope: !8446)
!8473 = !DILocation(line: 1997, column: 16, scope: !8446)
!8474 = !DILocation(line: 1997, column: 16, scope: !8467)
!8475 = !DILocation(line: 1997, column: 22, scope: !8467)
!8476 = !DILocation(line: 1997, column: 45, scope: !8446)
!8477 = !DILocation(line: 1998, column: 17, scope: !8446)
!8478 = !DILocation(line: 1998, column: 17, scope: !8469)
!8479 = !DILocation(line: 1998, column: 42, scope: !8469)
!8480 = !DILocation(line: 1998, column: 23, scope: !8469)
!8481 = !DILocation(line: 1998, column: 48, scope: !8446)
!8482 = !DILocation(line: 2000, column: 6, scope: !8446)
!8483 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd0fa82c3a1e0f0c2E", scope: !8218, file: !1555, line: 1995, type: !8484, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7045, retainedNodes: !8501)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!8486, !7037}
!8486 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !1002, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !8487, templateParams: !15, identifier: "d9270e8e14ae3a88b618311edecdafde")
!8487 = !{!8488}
!8488 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8486, file: !2, size: 64, align: 64, elements: !8489, templateParams: !15, identifier: "bbe9144ee250d007f8e8ad34c0e82384", discriminator: !8500)
!8489 = !{!8490, !8496}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8488, file: !2, baseType: !8491, size: 64, align: 64)
!8491 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8486, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !8492, templateParams: !8494, identifier: "25278c09cd402feea521d9fb0cbe6925")
!8492 = !{!8493}
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8491, file: !2, baseType: !99, size: 64, align: 64, flags: DIFlagPublic)
!8494 = !{!8423, !8495}
!8495 = !DITemplateTypeParameter(name: "C", type: !99)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8488, file: !2, baseType: !8497, size: 64, align: 64, extraData: i128 0)
!8497 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8486, file: !2, size: 64, align: 64, flags: DIFlagPublic, elements: !8498, templateParams: !8494, identifier: "9e5fddf05a3dfe59ea74fe390613ca4f")
!8498 = !{!8499}
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8497, file: !2, baseType: !1677, align: 8, flags: DIFlagPublic)
!8500 = !DIDerivedType(tag: DW_TAG_member, scope: !8486, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8501 = !{!8502, !8503, !8505}
!8502 = !DILocalVariable(name: "self", arg: 1, scope: !8483, file: !1555, line: 1995, type: !7037)
!8503 = !DILocalVariable(name: "v", scope: !8504, file: !1555, line: 1997, type: !99, align: 8)
!8504 = distinct !DILexicalBlock(scope: !8483, file: !1555, line: 1997, column: 13)
!8505 = !DILocalVariable(name: "e", scope: !8506, file: !1555, line: 1998, type: !1671, align: 1)
!8506 = distinct !DILexicalBlock(scope: !8483, file: !1555, line: 1998, column: 13)
!8507 = !DILocation(line: 1995, column: 15, scope: !8483)
!8508 = !DILocation(line: 1998, column: 17, scope: !8506)
!8509 = !DILocation(line: 1996, column: 15, scope: !8483)
!8510 = !DILocation(line: 1996, column: 9, scope: !8483)
!8511 = !DILocation(line: 1997, column: 16, scope: !8483)
!8512 = !DILocation(line: 1997, column: 16, scope: !8504)
!8513 = !DILocation(line: 1997, column: 22, scope: !8504)
!8514 = !DILocation(line: 1997, column: 45, scope: !8483)
!8515 = !DILocation(line: 1998, column: 23, scope: !8506)
!8516 = !DILocation(line: 1998, column: 48, scope: !8483)
!8517 = !DILocation(line: 2000, column: 6, scope: !8483)
!8518 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7d4ca64fd8e14bdbE", scope: !8519, file: !4443, line: 39, type: !8520, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8522)
!8519 = !DINamespace(name: "{impl#0}", scope: !1397)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!1379, !4815}
!8522 = !{!8523}
!8523 = !DILocalVariable(name: "self", arg: 1, scope: !8518, file: !4443, line: 39, type: !4815)
!8524 = !DILocation(line: 39, column: 13, scope: !8518)
!8525 = !DILocation(line: 42, column: 18, scope: !8518)
!8526 = !DILocation(line: 43, column: 6, scope: !8518)
!8527 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbd90cf42bfbc2474E", scope: !8519, file: !4443, line: 100, type: !8528, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8530)
!8528 = !DISubroutineType(types: !8529)
!8529 = !{!660, !4446}
!8530 = !{!8531, !8532}
!8531 = !DILocalVariable(name: "self", arg: 1, scope: !8527, file: !4443, line: 100, type: !4446)
!8532 = !DILocalVariable(name: "len", scope: !8533, file: !4443, line: 101, type: !9, align: 8)
!8533 = distinct !DILexicalBlock(scope: !8527, file: !4443, line: 101, column: 9)
!8534 = !DILocation(line: 100, column: 18, scope: !8527)
!8535 = !DILocalVariable(name: "self", arg: 1, scope: !8536, file: !1285, line: 141, type: !8540)
!8536 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb5ff377b0f2a7fe1E", scope: !8537, file: !1285, line: 141, type: !8538, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !8541)
!8537 = !DINamespace(name: "{impl#181}", scope: !319)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!9, !8540}
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !1400, size: 64, align: 64, dwarfAddressSpace: 0)
!8541 = !{!8535, !8542, !8544}
!8542 = !DILocalVariable(name: "len", scope: !8543, file: !1285, line: 29, type: !9, align: 8)
!8543 = distinct !DILexicalBlock(scope: !8536, file: !1285, line: 29, column: 13)
!8544 = !DILocalVariable(name: "end", scope: !8545, file: !1285, line: 33, type: !99, align: 8)
!8545 = distinct !DILexicalBlock(scope: !8536, file: !1285, line: 33, column: 13)
!8546 = !DILocation(line: 141, column: 20, scope: !8536, inlinedAt: !8547)
!8547 = distinct !DILocation(line: 101, column: 19, scope: !8527)
!8548 = !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !8547)
!8549 = !DILocalVariable(name: "self", arg: 1, scope: !8550, file: !2237, line: 62, type: !8554)
!8550 = distinct !DISubprogram(name: "cast<*const u8, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc01adad097ec8a69E", scope: !2238, file: !2237, line: 62, type: !8551, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8556, retainedNodes: !8555)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{!8553, !8554}
!8553 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<u8>", baseType: !99, size: 64, align: 64, dwarfAddressSpace: 0)
!8554 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !103, size: 64, align: 64, dwarfAddressSpace: 0)
!8555 = !{!8549}
!8556 = !{!8557, !7755}
!8557 = !DITemplateTypeParameter(name: "T", type: !103)
!8558 = !DILocation(line: 62, column: 26, scope: !8550, inlinedAt: !8559)
!8559 = distinct !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !8547)
!8560 = !DILocation(line: 33, column: 33, scope: !8536, inlinedAt: !8547)
!8561 = !DILocation(line: 33, column: 17, scope: !8545, inlinedAt: !8547)
!8562 = !DILocation(line: 57, column: 38, scope: !8545, inlinedAt: !8547)
!8563 = !DILocation(line: 57, column: 26, scope: !8545, inlinedAt: !8547)
!8564 = !DILocation(line: 143, column: 14, scope: !8536, inlinedAt: !8547)
!8565 = !DILocation(line: 101, column: 19, scope: !8527)
!8566 = !DILocation(line: 101, column: 13, scope: !8533)
!8567 = !DILocation(line: 105, column: 10, scope: !8533)
!8568 = !DILocation(line: 105, column: 25, scope: !8533)
!8569 = !DILocation(line: 105, column: 9, scope: !8533)
!8570 = !DILocation(line: 106, column: 6, scope: !8527)
!8571 = distinct !DISubprogram(name: "next", linkageName: "_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc89fef062066f653E", scope: !8572, file: !4443, line: 185, type: !8573, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8593)
!8572 = !DINamespace(name: "{impl#5}", scope: !1397)
!8573 = !DISubroutineType(types: !8574)
!8574 = !{!8575, !8592}
!8575 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !37, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8576, templateParams: !15, identifier: "19628312ca19de03c6444106790f1898")
!8576 = !{!8577}
!8577 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8575, file: !2, size: 128, align: 64, elements: !8578, templateParams: !15, identifier: "17c828902afe7f88916c53e11cf3bb70", discriminator: !8591)
!8578 = !{!8579, !8587}
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8577, file: !2, baseType: !8580, size: 128, align: 64, extraData: i128 1114112)
!8580 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8575, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !8581, identifier: "620f7d9d722cf46cf1722b2f2b74e7e0")
!8581 = !{!8582}
!8582 = !DITemplateTypeParameter(name: "T", type: !8583)
!8583 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 128, align: 64, elements: !8584, templateParams: !15, identifier: "d42549a3030259e13648b1bf51d25121")
!8584 = !{!8585, !8586}
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8583, file: !2, baseType: !9, size: 64, align: 64)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8583, file: !2, baseType: !379, size: 32, align: 32, offset: 64)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8577, file: !2, baseType: !8588, size: 128, align: 64)
!8588 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8575, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8589, templateParams: !8581, identifier: "57785327f3c85f51fe381862f5e19ead")
!8589 = !{!8590}
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8588, file: !2, baseType: !8583, size: 128, align: 64, flags: DIFlagPublic)
!8591 = !DIDerivedType(tag: DW_TAG_member, scope: !8575, file: !2, baseType: !1391, size: 32, align: 32, offset: 64, flags: DIFlagArtificial)
!8592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::CharIndices", baseType: !4397, size: 64, align: 64, dwarfAddressSpace: 0)
!8593 = !{!8594, !8595, !8597, !8599, !8601}
!8594 = !DILocalVariable(name: "self", arg: 1, scope: !8571, file: !4443, line: 185, type: !8592)
!8595 = !DILocalVariable(name: "pre_len", scope: !8596, file: !4443, line: 186, type: !9, align: 8)
!8596 = distinct !DILexicalBlock(scope: !8571, file: !4443, line: 186, column: 9)
!8597 = !DILocalVariable(name: "ch", scope: !8598, file: !4443, line: 189, type: !379, align: 4)
!8598 = distinct !DILexicalBlock(scope: !8596, file: !4443, line: 189, column: 13)
!8599 = !DILocalVariable(name: "index", scope: !8600, file: !4443, line: 190, type: !9, align: 8)
!8600 = distinct !DILexicalBlock(scope: !8598, file: !4443, line: 190, column: 17)
!8601 = !DILocalVariable(name: "len", scope: !8602, file: !4443, line: 191, type: !9, align: 8)
!8602 = distinct !DILexicalBlock(scope: !8600, file: !4443, line: 191, column: 17)
!8603 = !DILocation(line: 185, column: 13, scope: !8571)
!8604 = !DILocation(line: 141, column: 20, scope: !8536, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 186, column: 23, scope: !8571)
!8606 = !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !8605)
!8607 = !DILocation(line: 62, column: 26, scope: !8550, inlinedAt: !8608)
!8608 = distinct !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !8605)
!8609 = !DILocation(line: 33, column: 33, scope: !8536, inlinedAt: !8605)
!8610 = !DILocation(line: 33, column: 17, scope: !8545, inlinedAt: !8605)
!8611 = !DILocation(line: 57, column: 38, scope: !8545, inlinedAt: !8605)
!8612 = !DILocation(line: 57, column: 26, scope: !8545, inlinedAt: !8605)
!8613 = !DILocation(line: 143, column: 14, scope: !8536, inlinedAt: !8605)
!8614 = !DILocation(line: 186, column: 23, scope: !8571)
!8615 = !DILocation(line: 186, column: 13, scope: !8596)
!8616 = !DILocation(line: 187, column: 15, scope: !8596)
!8617 = !DILocation(line: 187, column: 9, scope: !8596)
!8618 = !DILocation(line: 188, column: 21, scope: !8596)
!8619 = !DILocation(line: 189, column: 18, scope: !8596)
!8620 = !DILocation(line: 189, column: 18, scope: !8598)
!8621 = !DILocation(line: 190, column: 29, scope: !8598)
!8622 = !DILocation(line: 190, column: 21, scope: !8600)
!8623 = !DILocation(line: 141, column: 20, scope: !8536, inlinedAt: !8624)
!8624 = distinct !DILocation(line: 191, column: 27, scope: !8600)
!8625 = !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !8624)
!8626 = !DILocation(line: 62, column: 26, scope: !8550, inlinedAt: !8627)
!8627 = distinct !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !8624)
!8628 = !DILocation(line: 33, column: 33, scope: !8536, inlinedAt: !8624)
!8629 = !DILocation(line: 33, column: 17, scope: !8545, inlinedAt: !8624)
!8630 = !DILocation(line: 57, column: 38, scope: !8545, inlinedAt: !8624)
!8631 = !DILocation(line: 57, column: 26, scope: !8545, inlinedAt: !8624)
!8632 = !DILocation(line: 143, column: 14, scope: !8536, inlinedAt: !8624)
!8633 = !DILocation(line: 191, column: 27, scope: !8600)
!8634 = !DILocation(line: 191, column: 21, scope: !8602)
!8635 = !DILocation(line: 192, column: 38, scope: !8602)
!8636 = !DILocation(line: 196, column: 6, scope: !8571)
!8637 = !DILocation(line: 192, column: 17, scope: !8602)
!8638 = !DILocation(line: 193, column: 17, scope: !8602)
!8639 = !DILocation(line: 194, column: 13, scope: !8596)
!8640 = distinct !DISubprogram(name: "from<[bool]>", linkageName: "_ZN90_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17h311ad2ec743dfa74E", scope: !8641, file: !1332, line: 1628, type: !4026, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, retainedNodes: !8642)
!8641 = !DINamespace(name: "{impl#19}", scope: !100)
!8642 = !{!8643}
!8643 = !DILocalVariable(name: "r", arg: 1, scope: !8640, file: !1332, line: 1628, type: !4028)
!8644 = !DILocation(line: 1628, column: 13, scope: !8640)
!8645 = !DILocation(line: 1629, column: 9, scope: !8640)
!8646 = !DILocation(line: 1630, column: 6, scope: !8640)
!8647 = distinct !DISubprogram(name: "from<[[u8; 2]]>", linkageName: "_ZN90_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hcdebf8941a0d2022E", scope: !8641, file: !1332, line: 1628, type: !4014, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !8648)
!8648 = !{!8649}
!8649 = !DILocalVariable(name: "r", arg: 1, scope: !8647, file: !1332, line: 1628, type: !4016)
!8650 = !DILocation(line: 1628, column: 13, scope: !8647)
!8651 = !DILocation(line: 1629, column: 9, scope: !8647)
!8652 = !DILocation(line: 1630, column: 6, scope: !8647)
!8653 = distinct !DISubprogram(name: "start_bound<usize>", linkageName: "_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17hcbc0262d8bbed73eE", scope: !8655, file: !8654, line: 868, type: !8656, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !194, retainedNodes: !8676)
!8654 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "44047655df81d7676fd58263ec85f88e")
!8655 = !DINamespace(name: "{impl#18}", scope: !1160)
!8656 = !DISubroutineType(types: !8657)
!8657 = !{!8658, !8675}
!8658 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bound<&usize>", scope: !1160, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8659, templateParams: !15, identifier: "ddcdf7313a4fab19990f2a410cc45fb2")
!8659 = !{!8660}
!8660 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8658, file: !2, size: 128, align: 64, elements: !8661, templateParams: !15, identifier: "ac2fd952caba4ee94a840ed60c05ea40", discriminator: !8674)
!8661 = !{!8662, !8668, !8672}
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "Included", scope: !8660, file: !2, baseType: !8663, size: 128, align: 64, extraData: i128 0)
!8663 = !DICompositeType(tag: DW_TAG_structure_type, name: "Included", scope: !8658, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8664, templateParams: !8666, identifier: "748c5ecb22f240693e5370bceb9a5192")
!8664 = !{!8665}
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8663, file: !2, baseType: !2172, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!8666 = !{!8667}
!8667 = !DITemplateTypeParameter(name: "T", type: !2172)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "Excluded", scope: !8660, file: !2, baseType: !8669, size: 128, align: 64, extraData: i128 1)
!8669 = !DICompositeType(tag: DW_TAG_structure_type, name: "Excluded", scope: !8658, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !8670, templateParams: !8666, identifier: "18dacae62c920efa70a04f09ce0a520a")
!8670 = !{!8671}
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8669, file: !2, baseType: !2172, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "Unbounded", scope: !8660, file: !2, baseType: !8673, size: 128, align: 64, extraData: i128 2)
!8673 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unbounded", scope: !8658, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !8666, identifier: "a2435db6900249f7413f49c4ab87502c")
!8674 = !DIDerivedType(tag: DW_TAG_member, scope: !8658, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!8675 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::range::Range<usize>", baseType: !1159, size: 64, align: 64, dwarfAddressSpace: 0)
!8676 = !{!8677}
!8677 = !DILocalVariable(name: "self", arg: 1, scope: !8653, file: !8654, line: 868, type: !8675)
!8678 = !DILocation(line: 868, column: 20, scope: !8653)
!8679 = !DILocation(line: 869, column: 9, scope: !8653)
!8680 = !DILocation(line: 870, column: 6, scope: !8653)
!8681 = distinct !DISubprogram(name: "end_bound<usize>", linkageName: "_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17he67463925f07313eE", scope: !8655, file: !8654, line: 871, type: !8656, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !194, retainedNodes: !8682)
!8682 = !{!8683}
!8683 = !DILocalVariable(name: "self", arg: 1, scope: !8681, file: !8654, line: 871, type: !8675)
!8684 = !DILocation(line: 871, column: 18, scope: !8681)
!8685 = !DILocation(line: 872, column: 18, scope: !8681)
!8686 = !DILocation(line: 872, column: 9, scope: !8681)
!8687 = !DILocation(line: 873, column: 6, scope: !8681)
!8688 = distinct !DISubprogram(name: "fold<&str, usize, core::iter::adapters::map::map_fold::{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9fbe9567f08afa6bE", scope: !8689, file: !1285, line: 212, type: !8690, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8710, retainedNodes: !8692)
!8689 = !DINamespace(name: "{impl#182}", scope: !319)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!9, !560, !9, !5861}
!8692 = !{!8693, !8694, !8695, !8696, !8698, !8700, !8702, !8704, !8706, !8708}
!8693 = !DILocalVariable(name: "self", arg: 1, scope: !8688, file: !1285, line: 212, type: !560)
!8694 = !DILocalVariable(name: "init", arg: 2, scope: !8688, file: !1285, line: 212, type: !9)
!8695 = !DILocalVariable(name: "f", arg: 3, scope: !8688, file: !1285, line: 212, type: !5861)
!8696 = !DILocalVariable(name: "len", scope: !8697, file: !1285, line: 29, type: !9, align: 8)
!8697 = distinct !DILexicalBlock(scope: !8688, file: !1285, line: 29, column: 13)
!8698 = !DILocalVariable(name: "end", scope: !8699, file: !1285, line: 33, type: !563, align: 8)
!8699 = distinct !DILexicalBlock(scope: !8688, file: !1285, line: 33, column: 13)
!8700 = !DILocalVariable(name: "acc", scope: !8701, file: !1285, line: 226, type: !9, align: 8)
!8701 = distinct !DILexicalBlock(scope: !8688, file: !1285, line: 226, column: 17)
!8702 = !DILocalVariable(name: "i", scope: !8703, file: !1285, line: 227, type: !9, align: 8)
!8703 = distinct !DILexicalBlock(scope: !8701, file: !1285, line: 227, column: 17)
!8704 = !DILocalVariable(name: "len", scope: !8705, file: !1285, line: 228, type: !9, align: 8)
!8705 = distinct !DILexicalBlock(scope: !8703, file: !1285, line: 228, column: 17)
!8706 = !DILocalVariable(name: "len", scope: !8707, file: !1285, line: 29, type: !9, align: 8)
!8707 = distinct !DILexicalBlock(scope: !8703, file: !1285, line: 29, column: 13)
!8708 = !DILocalVariable(name: "end", scope: !8709, file: !1285, line: 33, type: !563, align: 8)
!8709 = distinct !DILexicalBlock(scope: !8703, file: !1285, line: 33, column: 13)
!8710 = !{!568, !590, !8711}
!8711 = !DITemplateTypeParameter(name: "F", type: !5861)
!8712 = !DILocation(line: 212, column: 27, scope: !8688)
!8713 = !DILocation(line: 212, column: 33, scope: !8688)
!8714 = !DILocation(line: 212, column: 42, scope: !8688)
!8715 = !DILocation(line: 33, column: 17, scope: !8699)
!8716 = !DILocation(line: 226, column: 21, scope: !8701)
!8717 = !DILocation(line: 227, column: 21, scope: !8703)
!8718 = !DILocation(line: 228, column: 21, scope: !8705)
!8719 = !DILocation(line: 28, column: 12, scope: !8688)
!8720 = !DILocation(line: 33, column: 34, scope: !8688)
!8721 = !DILocalVariable(name: "self", arg: 1, scope: !8722, file: !2237, line: 62, type: !8726)
!8722 = distinct !DISubprogram(name: "cast<*const &str, core::ptr::non_null::NonNull<&str>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h6d37e34e7ea6e3dbE", scope: !2238, file: !2237, line: 62, type: !8723, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8728, retainedNodes: !8727)
!8723 = !DISubroutineType(types: !8724)
!8724 = !{!8725, !8726}
!8725 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<&str>", baseType: !563, size: 64, align: 64, dwarfAddressSpace: 0)
!8726 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const &str", baseType: !566, size: 64, align: 64, dwarfAddressSpace: 0)
!8727 = !{!8721}
!8728 = !{!8729, !8730}
!8729 = !DITemplateTypeParameter(name: "T", type: !566)
!8730 = !DITemplateTypeParameter(name: "U", type: !563)
!8731 = !DILocation(line: 62, column: 26, scope: !8722, inlinedAt: !8732)
!8732 = distinct !DILocation(line: 33, column: 34, scope: !8688)
!8733 = !DILocation(line: 33, column: 33, scope: !8688)
!8734 = !DILocation(line: 44, column: 20, scope: !8699)
!8735 = !DILocation(line: 25, column: 86, scope: !8688)
!8736 = !DILocation(line: 226, column: 31, scope: !8688)
!8737 = !DILocation(line: 227, column: 29, scope: !8701)
!8738 = !DILocation(line: 28, column: 12, scope: !8703)
!8739 = !DILocation(line: 224, column: 28, scope: !8688)
!8740 = !DILocation(line: 242, column: 13, scope: !8688)
!8741 = !DILocation(line: 33, column: 34, scope: !8703)
!8742 = !DILocation(line: 62, column: 26, scope: !8722, inlinedAt: !8743)
!8743 = distinct !DILocation(line: 33, column: 34, scope: !8703)
!8744 = !DILocation(line: 33, column: 33, scope: !8703)
!8745 = !DILocation(line: 33, column: 17, scope: !8709)
!8746 = !DILocation(line: 57, column: 38, scope: !8709)
!8747 = !DILocation(line: 57, column: 26, scope: !8709)
!8748 = !DILocation(line: 232, column: 29, scope: !8705)
!8749 = !DILocation(line: 232, column: 58, scope: !8705)
!8750 = !DILocation(line: 232, column: 71, scope: !8705)
!8751 = !DILocalVariable(name: "self", arg: 1, scope: !8752, file: !1332, line: 562, type: !563)
!8752 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17hf93072d0275f2c1bE", scope: !563, file: !1332, line: 562, type: !8753, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !567, declaration: !8755, retainedNodes: !8756)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{!563, !563, !9}
!8755 = !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17hf93072d0275f2c1bE", scope: !563, file: !1332, line: 562, type: !8753, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !567)
!8756 = !{!8751, !8757}
!8757 = !DILocalVariable(name: "count", arg: 2, scope: !8752, file: !1332, line: 562, type: !9)
!8758 = !DILocation(line: 562, column: 29, scope: !8752, inlinedAt: !8759)
!8759 = distinct !DILocation(line: 232, column: 58, scope: !8705)
!8760 = !DILocation(line: 562, column: 35, scope: !8752, inlinedAt: !8759)
!8761 = !DILocation(line: 339, column: 25, scope: !8175, inlinedAt: !8762)
!8762 = distinct !DILocation(line: 570, column: 56, scope: !8752, inlinedAt: !8759)
!8763 = !DILocation(line: 570, column: 37, scope: !8752, inlinedAt: !8759)
!8764 = !DILocation(line: 339, column: 25, scope: !8175, inlinedAt: !8765)
!8765 = distinct !DILocation(line: 232, column: 58, scope: !8705)
!8766 = !DILocation(line: 232, column: 27, scope: !8705)
!8767 = !DILocation(line: 232, column: 21, scope: !8705)
!8768 = !DILocation(line: 236, column: 34, scope: !8705)
!8769 = !DILocalVariable(name: "self", arg: 1, scope: !8770, file: !2672, line: 560, type: !9)
!8770 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h6617bc5098753c76E", scope: !2720, file: !2672, line: 560, type: !2852, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !8771)
!8771 = !{!8769, !8772}
!8772 = !DILocalVariable(name: "rhs", arg: 2, scope: !8770, file: !2672, line: 560, type: !9)
!8773 = !DILocation(line: 560, column: 43, scope: !8770, inlinedAt: !8774)
!8774 = distinct !DILocation(line: 236, column: 34, scope: !8705)
!8775 = !DILocation(line: 560, column: 49, scope: !8770, inlinedAt: !8774)
!8776 = !DILocation(line: 74, column: 35, scope: !8777, inlinedAt: !8774)
!8777 = !DILexicalBlockFile(scope: !8770, file: !1177, discriminator: 0)
!8778 = !DILocation(line: 75, column: 17, scope: !8777, inlinedAt: !8774)
!8779 = !DILocation(line: 572, column: 17, scope: !8770, inlinedAt: !8774)
!8780 = !DILocation(line: 236, column: 21, scope: !8705)
!8781 = !DILocation(line: 237, column: 24, scope: !8705)
!8782 = !DILocation(line: 237, column: 29, scope: !8705)
!8783 = !DILocation(line: 241, column: 17, scope: !8705)
!8784 = !DILocation(line: 242, column: 14, scope: !8688)
!8785 = distinct !DISubprogram(name: "fold<bool, u8, core::iter::adapters::map::map_fold::{closure_env#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17ha17c27d0cf9e4d87E", scope: !8689, file: !1285, line: 212, type: !8786, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8806, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!45, !513, !45, !5825}
!8788 = !{!8789, !8790, !8791, !8792, !8794, !8796, !8798, !8800, !8802, !8804}
!8789 = !DILocalVariable(name: "self", arg: 1, scope: !8785, file: !1285, line: 212, type: !513)
!8790 = !DILocalVariable(name: "init", arg: 2, scope: !8785, file: !1285, line: 212, type: !45)
!8791 = !DILocalVariable(name: "f", arg: 3, scope: !8785, file: !1285, line: 212, type: !5825)
!8792 = !DILocalVariable(name: "len", scope: !8793, file: !1285, line: 29, type: !9, align: 8)
!8793 = distinct !DILexicalBlock(scope: !8785, file: !1285, line: 29, column: 13)
!8794 = !DILocalVariable(name: "end", scope: !8795, file: !1285, line: 33, type: !516, align: 8)
!8795 = distinct !DILexicalBlock(scope: !8785, file: !1285, line: 33, column: 13)
!8796 = !DILocalVariable(name: "acc", scope: !8797, file: !1285, line: 226, type: !45, align: 1)
!8797 = distinct !DILexicalBlock(scope: !8785, file: !1285, line: 226, column: 17)
!8798 = !DILocalVariable(name: "i", scope: !8799, file: !1285, line: 227, type: !9, align: 8)
!8799 = distinct !DILexicalBlock(scope: !8797, file: !1285, line: 227, column: 17)
!8800 = !DILocalVariable(name: "len", scope: !8801, file: !1285, line: 228, type: !9, align: 8)
!8801 = distinct !DILexicalBlock(scope: !8799, file: !1285, line: 228, column: 17)
!8802 = !DILocalVariable(name: "len", scope: !8803, file: !1285, line: 29, type: !9, align: 8)
!8803 = distinct !DILexicalBlock(scope: !8799, file: !1285, line: 29, column: 13)
!8804 = !DILocalVariable(name: "end", scope: !8805, file: !1285, line: 33, type: !516, align: 8)
!8805 = distinct !DILexicalBlock(scope: !8799, file: !1285, line: 33, column: 13)
!8806 = !{!522, !545, !8807}
!8807 = !DITemplateTypeParameter(name: "F", type: !5825)
!8808 = !DILocation(line: 212, column: 27, scope: !8785)
!8809 = !DILocation(line: 212, column: 33, scope: !8785)
!8810 = !DILocation(line: 212, column: 42, scope: !8785)
!8811 = !DILocation(line: 33, column: 17, scope: !8795)
!8812 = !DILocation(line: 226, column: 21, scope: !8797)
!8813 = !DILocation(line: 227, column: 21, scope: !8799)
!8814 = !DILocation(line: 228, column: 21, scope: !8801)
!8815 = !DILocation(line: 28, column: 12, scope: !8785)
!8816 = !DILocation(line: 33, column: 34, scope: !8785)
!8817 = !DILocalVariable(name: "self", arg: 1, scope: !8818, file: !2237, line: 62, type: !8822)
!8818 = distinct !DISubprogram(name: "cast<*const bool, core::ptr::non_null::NonNull<bool>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h78a3f7ed603e9596E", scope: !2238, file: !2237, line: 62, type: !8819, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8824, retainedNodes: !8823)
!8819 = !DISubroutineType(types: !8820)
!8820 = !{!8821, !8822}
!8821 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<bool>", baseType: !516, size: 64, align: 64, dwarfAddressSpace: 0)
!8822 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const bool", baseType: !519, size: 64, align: 64, dwarfAddressSpace: 0)
!8823 = !{!8817}
!8824 = !{!8825, !8826}
!8825 = !DITemplateTypeParameter(name: "T", type: !519)
!8826 = !DITemplateTypeParameter(name: "U", type: !516)
!8827 = !DILocation(line: 62, column: 26, scope: !8818, inlinedAt: !8828)
!8828 = distinct !DILocation(line: 33, column: 34, scope: !8785)
!8829 = !DILocation(line: 33, column: 33, scope: !8785)
!8830 = !DILocation(line: 44, column: 20, scope: !8795)
!8831 = !DILocation(line: 25, column: 86, scope: !8785)
!8832 = !DILocation(line: 226, column: 31, scope: !8785)
!8833 = !DILocation(line: 227, column: 29, scope: !8797)
!8834 = !DILocation(line: 28, column: 12, scope: !8799)
!8835 = !DILocation(line: 224, column: 28, scope: !8785)
!8836 = !DILocation(line: 242, column: 13, scope: !8785)
!8837 = !DILocation(line: 33, column: 34, scope: !8799)
!8838 = !DILocation(line: 62, column: 26, scope: !8818, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 33, column: 34, scope: !8799)
!8840 = !DILocation(line: 33, column: 33, scope: !8799)
!8841 = !DILocation(line: 33, column: 17, scope: !8805)
!8842 = !DILocation(line: 57, column: 38, scope: !8805)
!8843 = !DILocation(line: 57, column: 26, scope: !8805)
!8844 = !DILocation(line: 232, column: 29, scope: !8801)
!8845 = !DILocation(line: 232, column: 58, scope: !8801)
!8846 = !DILocation(line: 232, column: 71, scope: !8801)
!8847 = !DILocalVariable(name: "self", arg: 1, scope: !8848, file: !1332, line: 562, type: !516)
!8848 = distinct !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17hf4660acceb46ba77E", scope: !516, file: !1332, line: 562, type: !8849, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !521, declaration: !8851, retainedNodes: !8852)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!516, !516, !9}
!8851 = !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17hf4660acceb46ba77E", scope: !516, file: !1332, line: 562, type: !8849, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !521)
!8852 = !{!8847, !8853}
!8853 = !DILocalVariable(name: "count", arg: 2, scope: !8848, file: !1332, line: 562, type: !9)
!8854 = !DILocation(line: 562, column: 29, scope: !8848, inlinedAt: !8855)
!8855 = distinct !DILocation(line: 232, column: 58, scope: !8801)
!8856 = !DILocation(line: 562, column: 35, scope: !8848, inlinedAt: !8855)
!8857 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !8858)
!8858 = distinct !DILocation(line: 570, column: 56, scope: !8848, inlinedAt: !8855)
!8859 = !DILocation(line: 570, column: 37, scope: !8848, inlinedAt: !8855)
!8860 = !DILocation(line: 339, column: 25, scope: !3935, inlinedAt: !8861)
!8861 = distinct !DILocation(line: 232, column: 58, scope: !8801)
!8862 = !DILocation(line: 232, column: 27, scope: !8801)
!8863 = !DILocation(line: 232, column: 21, scope: !8801)
!8864 = !DILocation(line: 236, column: 34, scope: !8801)
!8865 = !DILocation(line: 560, column: 43, scope: !8770, inlinedAt: !8866)
!8866 = distinct !DILocation(line: 236, column: 34, scope: !8801)
!8867 = !DILocation(line: 560, column: 49, scope: !8770, inlinedAt: !8866)
!8868 = !DILocation(line: 74, column: 35, scope: !8777, inlinedAt: !8866)
!8869 = !DILocation(line: 75, column: 17, scope: !8777, inlinedAt: !8866)
!8870 = !DILocation(line: 572, column: 17, scope: !8770, inlinedAt: !8866)
!8871 = !DILocation(line: 236, column: 21, scope: !8801)
!8872 = !DILocation(line: 237, column: 24, scope: !8801)
!8873 = !DILocation(line: 237, column: 29, scope: !8801)
!8874 = !DILocation(line: 241, column: 17, scope: !8801)
!8875 = !DILocation(line: 242, column: 14, scope: !8785)
!8876 = distinct !DISubprogram(name: "next<[u8; 2]>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf7a8722f0f1b4dd7E", scope: !8689, file: !1285, line: 156, type: !8877, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !8879)
!8877 = !DISubroutineType(types: !8878)
!8878 = !{!743, !1289}
!8879 = !{!8880, !8881, !8883}
!8880 = !DILocalVariable(name: "self", arg: 1, scope: !8876, file: !1285, line: 156, type: !1289)
!8881 = !DILocalVariable(name: "len", scope: !8882, file: !1285, line: 29, type: !9, align: 8)
!8882 = distinct !DILexicalBlock(scope: !8876, file: !1285, line: 29, column: 13)
!8883 = !DILocalVariable(name: "end", scope: !8884, file: !1285, line: 33, type: !411, align: 8)
!8884 = distinct !DILexicalBlock(scope: !8876, file: !1285, line: 33, column: 13)
!8885 = !DILocation(line: 156, column: 21, scope: !8876)
!8886 = !DILocation(line: 33, column: 17, scope: !8884)
!8887 = !DILocation(line: 28, column: 12, scope: !8876)
!8888 = !DILocation(line: 33, column: 34, scope: !8876)
!8889 = !DILocalVariable(name: "self", arg: 1, scope: !8890, file: !2237, line: 62, type: !8894)
!8890 = distinct !DISubprogram(name: "cast<*const [u8; 2], core::ptr::non_null::NonNull<[u8; 2]>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8fd3515d1a85b8e6E", scope: !2238, file: !2237, line: 62, type: !8891, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1322, retainedNodes: !8895)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{!8893, !8894}
!8893 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<[u8; 2]>", baseType: !411, size: 64, align: 64, dwarfAddressSpace: 0)
!8894 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const [u8; 2]", baseType: !414, size: 64, align: 64, dwarfAddressSpace: 0)
!8895 = !{!8889}
!8896 = !DILocation(line: 62, column: 26, scope: !8890, inlinedAt: !8897)
!8897 = distinct !DILocation(line: 33, column: 34, scope: !8876)
!8898 = !DILocation(line: 33, column: 33, scope: !8876)
!8899 = !DILocation(line: 44, column: 20, scope: !8884)
!8900 = !DILocation(line: 25, column: 86, scope: !8876)
!8901 = !DILocation(line: 165, column: 30, scope: !8876)
!8902 = !DILocation(line: 165, column: 25, scope: !8876)
!8903 = !DILocation(line: 162, column: 21, scope: !8876)
!8904 = !DILocation(line: 163, column: 25, scope: !8876)
!8905 = !DILocation(line: 168, column: 14, scope: !8876)
!8906 = distinct !DISubprogram(name: "size_hint<[u8; 2]>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h65e994da2a282a9dE", scope: !8689, file: !1285, line: 171, type: !8907, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !418, retainedNodes: !8910)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{!660, !8909}
!8909 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<[u8; 2]>", baseType: !408, size: 64, align: 64, dwarfAddressSpace: 0)
!8910 = !{!8911, !8912, !8914, !8916}
!8911 = !DILocalVariable(name: "self", arg: 1, scope: !8906, file: !1285, line: 171, type: !8909)
!8912 = !DILocalVariable(name: "exact", scope: !8913, file: !1285, line: 172, type: !9, align: 8)
!8913 = distinct !DILexicalBlock(scope: !8906, file: !1285, line: 172, column: 17)
!8914 = !DILocalVariable(name: "len", scope: !8915, file: !1285, line: 29, type: !9, align: 8)
!8915 = distinct !DILexicalBlock(scope: !8906, file: !1285, line: 29, column: 13)
!8916 = !DILocalVariable(name: "end", scope: !8917, file: !1285, line: 33, type: !411, align: 8)
!8917 = distinct !DILexicalBlock(scope: !8906, file: !1285, line: 33, column: 13)
!8918 = !DILocation(line: 171, column: 26, scope: !8906)
!8919 = !DILocation(line: 172, column: 21, scope: !8913)
!8920 = !DILocation(line: 28, column: 12, scope: !8906)
!8921 = !DILocation(line: 33, column: 34, scope: !8906)
!8922 = !DILocation(line: 62, column: 26, scope: !8890, inlinedAt: !8923)
!8923 = distinct !DILocation(line: 33, column: 34, scope: !8906)
!8924 = !DILocation(line: 33, column: 33, scope: !8906)
!8925 = !DILocation(line: 33, column: 17, scope: !8917)
!8926 = !DILocation(line: 57, column: 38, scope: !8917)
!8927 = !DILocation(line: 57, column: 26, scope: !8917)
!8928 = !DILocation(line: 173, column: 18, scope: !8913)
!8929 = !DILocation(line: 173, column: 30, scope: !8913)
!8930 = !DILocation(line: 173, column: 25, scope: !8913)
!8931 = !DILocation(line: 173, column: 17, scope: !8913)
!8932 = !DILocation(line: 174, column: 14, scope: !8906)
!8933 = distinct !DISubprogram(name: "size_hint<u16>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hcfdc20b34ffd9102E", scope: !8689, file: !1285, line: 171, type: !8934, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !328, retainedNodes: !8937)
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!660, !8936}
!8936 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u16>", baseType: !318, size: 64, align: 64, dwarfAddressSpace: 0)
!8937 = !{!8938, !8939, !8941, !8943}
!8938 = !DILocalVariable(name: "self", arg: 1, scope: !8933, file: !1285, line: 171, type: !8936)
!8939 = !DILocalVariable(name: "exact", scope: !8940, file: !1285, line: 172, type: !9, align: 8)
!8940 = distinct !DILexicalBlock(scope: !8933, file: !1285, line: 172, column: 17)
!8941 = !DILocalVariable(name: "len", scope: !8942, file: !1285, line: 29, type: !9, align: 8)
!8942 = distinct !DILexicalBlock(scope: !8933, file: !1285, line: 29, column: 13)
!8943 = !DILocalVariable(name: "end", scope: !8944, file: !1285, line: 33, type: !323, align: 8)
!8944 = distinct !DILexicalBlock(scope: !8933, file: !1285, line: 33, column: 13)
!8945 = !DILocation(line: 171, column: 26, scope: !8933)
!8946 = !DILocation(line: 172, column: 21, scope: !8940)
!8947 = !DILocation(line: 28, column: 12, scope: !8933)
!8948 = !DILocation(line: 33, column: 34, scope: !8933)
!8949 = !DILocalVariable(name: "self", arg: 1, scope: !8950, file: !2237, line: 62, type: !8954)
!8950 = distinct !DISubprogram(name: "cast<*const u16, core::ptr::non_null::NonNull<u16>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h4307120c9f34a1d6E", scope: !2238, file: !2237, line: 62, type: !8951, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !8956, retainedNodes: !8955)
!8951 = !DISubroutineType(types: !8952)
!8952 = !{!8953, !8954}
!8953 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<u16>", baseType: !323, size: 64, align: 64, dwarfAddressSpace: 0)
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u16", baseType: !326, size: 64, align: 64, dwarfAddressSpace: 0)
!8955 = !{!8949}
!8956 = !{!8957, !8958}
!8957 = !DITemplateTypeParameter(name: "T", type: !326)
!8958 = !DITemplateTypeParameter(name: "U", type: !323)
!8959 = !DILocation(line: 62, column: 26, scope: !8950, inlinedAt: !8960)
!8960 = distinct !DILocation(line: 33, column: 34, scope: !8933)
!8961 = !DILocation(line: 33, column: 33, scope: !8933)
!8962 = !DILocation(line: 33, column: 17, scope: !8944)
!8963 = !DILocation(line: 57, column: 38, scope: !8944)
!8964 = !DILocation(line: 57, column: 26, scope: !8944)
!8965 = !DILocation(line: 173, column: 18, scope: !8940)
!8966 = !DILocation(line: 173, column: 30, scope: !8940)
!8967 = !DILocation(line: 173, column: 25, scope: !8940)
!8968 = !DILocation(line: 173, column: 17, scope: !8940)
!8969 = !DILocation(line: 174, column: 14, scope: !8933)
!8970 = distinct !DISubprogram(name: "from_output<()>", linkageName: "_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17he735945b32468a36E", scope: !8971, file: !1878, line: 408, type: !8972, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !970, retainedNodes: !8974)
!8971 = !DINamespace(name: "{impl#1}", scope: !955)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{null, !7}
!8974 = !{!8975}
!8975 = !DILocalVariable(name: "x", arg: 1, scope: !8970, file: !1878, line: 408, type: !7)
!8976 = !DILocation(line: 408, column: 20, scope: !8970)
!8977 = !DILocation(line: 410, column: 6, scope: !8970)
!8978 = distinct !DISubprogram(name: "branch<()>", linkageName: "_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h80636d330e2d6154E", scope: !8971, file: !1878, line: 403, type: !8979, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !970, retainedNodes: !8981)
!8979 = !DISubroutineType(types: !8980)
!8980 = !{null, !967}
!8981 = !{!8982}
!8982 = !DILocalVariable(name: "self", arg: 1, scope: !8978, file: !1878, line: 403, type: !967)
!8983 = !DILocation(line: 403, column: 15, scope: !8978)
!8984 = !DILocation(line: 405, column: 6, scope: !8978)
!8985 = distinct !DISubprogram(name: "from_output<core::ops::try_trait::NeverShortCircuit<()>, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1e73e2f1e9b6831bE", scope: !8986, file: !1891, line: 106, type: !8987, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1010, retainedNodes: !8989)
!8986 = !DINamespace(name: "{impl#0}", scope: !1002)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!1001, !7}
!8989 = !{!8990}
!8990 = !DILocalVariable(name: "output", arg: 1, scope: !8985, file: !1891, line: 106, type: !7)
!8991 = !DILocation(line: 106, column: 20, scope: !8985)
!8992 = !DILocation(line: 107, column: 9, scope: !8985)
!8993 = !DILocation(line: 108, column: 6, scope: !8985)
!8994 = distinct !DISubprogram(name: "from_output<char, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hc22dfb2cda7df1e6E", scope: !8986, file: !1891, line: 106, type: !8995, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1928, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{!1920, !7}
!8997 = !{!8998}
!8998 = !DILocalVariable(name: "output", arg: 1, scope: !8994, file: !1891, line: 106, type: !7)
!8999 = !DILocation(line: 106, column: 20, scope: !8994)
!9000 = !DILocation(line: 107, column: 9, scope: !8994)
!9001 = !DILocation(line: 108, column: 6, scope: !8994)
!9002 = distinct !DISubprogram(name: "branch<char, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h02a6b053bffacecaE", scope: !8986, file: !1891, line: 111, type: !9003, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1928, retainedNodes: !9020)
!9003 = !DISubroutineType(types: !9004)
!9004 = !{!9005, !1920}
!9005 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<char, core::convert::Infallible>, ()>", scope: !1002, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !9006, templateParams: !15, identifier: "679889728706c5b0a985fe3ed143d50d")
!9006 = !{!9007}
!9007 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9005, file: !2, size: 32, align: 32, elements: !9008, templateParams: !15, identifier: "85e11beac7b57cad65eb172524e550a", discriminator: !9019)
!9008 = !{!9009, !9015}
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !9007, file: !2, baseType: !9010, size: 32, align: 32, extraData: i128 1114112)
!9010 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !9005, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !9011, templateParams: !9013, identifier: "35852d45a48ab4f628563b307fb61c3a")
!9011 = !{!9012}
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9010, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!9013 = !{!9014, !1012}
!9014 = !DITemplateTypeParameter(name: "B", type: !1934)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !9007, file: !2, baseType: !9016, size: 32, align: 32)
!9016 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !9005, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !9017, templateParams: !9013, identifier: "ffc58af2d005fdf8770b6cb77ae92bb")
!9017 = !{!9018}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9016, file: !2, baseType: !1934, size: 32, align: 32, flags: DIFlagPublic)
!9019 = !DIDerivedType(tag: DW_TAG_member, scope: !9005, file: !2, baseType: !1391, size: 32, align: 32, flags: DIFlagArtificial)
!9020 = !{!9021, !9022, !9024}
!9021 = !DILocalVariable(name: "self", arg: 1, scope: !9002, file: !1891, line: 111, type: !1920)
!9022 = !DILocalVariable(name: "c", scope: !9023, file: !1891, line: 113, type: !7, align: 1)
!9023 = distinct !DILexicalBlock(scope: !9002, file: !1891, line: 113, column: 13)
!9024 = !DILocalVariable(name: "b", scope: !9025, file: !1891, line: 114, type: !379, align: 4)
!9025 = distinct !DILexicalBlock(scope: !9002, file: !1891, line: 114, column: 13)
!9026 = !DILocation(line: 111, column: 15, scope: !9002)
!9027 = !DILocation(line: 113, column: 35, scope: !9023)
!9028 = !DILocation(line: 112, column: 15, scope: !9002)
!9029 = !DILocation(line: 112, column: 9, scope: !9002)
!9030 = !DILocation(line: 113, column: 41, scope: !9023)
!9031 = !DILocation(line: 113, column: 64, scope: !9002)
!9032 = !DILocation(line: 114, column: 32, scope: !9002)
!9033 = !DILocation(line: 114, column: 32, scope: !9025)
!9034 = !DILocation(line: 114, column: 57, scope: !9025)
!9035 = !DILocation(line: 114, column: 38, scope: !9025)
!9036 = !DILocation(line: 114, column: 78, scope: !9002)
!9037 = !DILocation(line: 116, column: 6, scope: !9002)
!9038 = distinct !DISubprogram(name: "branch<core::ops::try_trait::NeverShortCircuit<()>, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6207c75bb14ed308E", scope: !8986, file: !1891, line: 111, type: !9039, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !1010, retainedNodes: !9056)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{!9041, !1001}
!9041 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, core::convert::Infallible>, ()>", scope: !1002, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !9042, templateParams: !15, identifier: "9ee09868bffd90b81cf03ed40a612cfb")
!9042 = !{!9043}
!9043 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9041, file: !2, size: 8, align: 8, elements: !9044, templateParams: !15, identifier: "ec0718e40981586dc37af9e21284bfe6", discriminator: !9055)
!9044 = !{!9045, !9051}
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !9043, file: !2, baseType: !9046, size: 8, align: 8, extraData: i128 0)
!9046 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !9041, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !9047, templateParams: !9049, identifier: "c47dd273a4ce4f29d749598c6ab133e")
!9047 = !{!9048}
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9046, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!9049 = !{!9050, !1012}
!9050 = !DITemplateTypeParameter(name: "B", type: !1895)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !9043, file: !2, baseType: !9052, size: 8, align: 8, extraData: i128 1)
!9052 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !9041, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !9053, templateParams: !9049, identifier: "36a9894f19a2d410dbe4e155c7d6a81c")
!9053 = !{!9054}
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9052, file: !2, baseType: !1895, align: 8, offset: 8, flags: DIFlagPublic)
!9055 = !DIDerivedType(tag: DW_TAG_member, scope: !9041, file: !2, baseType: !45, size: 8, align: 8, flags: DIFlagArtificial)
!9056 = !{!9057, !9058, !9060}
!9057 = !DILocalVariable(name: "self", arg: 1, scope: !9038, file: !1891, line: 111, type: !1001)
!9058 = !DILocalVariable(name: "c", scope: !9059, file: !1891, line: 113, type: !7, align: 1)
!9059 = distinct !DILexicalBlock(scope: !9038, file: !1891, line: 113, column: 13)
!9060 = !DILocalVariable(name: "b", scope: !9061, file: !1891, line: 114, type: !967, align: 1)
!9061 = distinct !DILexicalBlock(scope: !9038, file: !1891, line: 114, column: 13)
!9062 = !DILocation(line: 111, column: 15, scope: !9038)
!9063 = !DILocation(line: 113, column: 35, scope: !9059)
!9064 = !DILocation(line: 114, column: 32, scope: !9061)
!9065 = !DILocation(line: 112, column: 15, scope: !9038)
!9066 = !DILocation(line: 112, column: 9, scope: !9038)
!9067 = !DILocation(line: 113, column: 41, scope: !9059)
!9068 = !DILocation(line: 113, column: 64, scope: !9038)
!9069 = !DILocation(line: 114, column: 38, scope: !9061)
!9070 = !DILocation(line: 114, column: 78, scope: !9038)
!9071 = !DILocation(line: 116, column: 6, scope: !9038)
!9072 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h874cb16815dfc479E", scope: !6966, file: !4443, line: 128, type: !8520, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !9073)
!9073 = !{!9074}
!9074 = !DILocalVariable(name: "self", arg: 1, scope: !9072, file: !4443, line: 128, type: !4815)
!9075 = !DILocation(line: 128, column: 18, scope: !9072)
!9076 = !DILocation(line: 131, column: 18, scope: !9072)
!9077 = !DILocation(line: 132, column: 6, scope: !9072)
!9078 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h11cc03365ab57869E", scope: !6965, file: !4443, line: 131, type: !9079, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !9081)
!9079 = !DISubroutineType(types: !9080)
!9080 = !{!379, !6964, !1391}
!9081 = !{!9082, !9083}
!9082 = !DILocalVariable(name: "ch", arg: 2, scope: !9078, file: !4443, line: 131, type: !1391)
!9083 = !DILocalVariable(arg: 1, scope: !9078, file: !4443, line: 131, type: !6964)
!9084 = !DILocation(line: 131, column: 62, scope: !9078)
!9085 = !DILocation(line: 131, column: 63, scope: !9078)
!9086 = !DILocation(line: 131, column: 67, scope: !9078)
!9087 = !DILocation(line: 131, column: 95, scope: !9078)
!9088 = distinct !DISubprogram(name: "find<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hcb6973d7cab9c285E", scope: !9089, file: !5878, line: 68, type: !9090, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !9096, retainedNodes: !9093)
!9089 = !DINamespace(name: "{impl#1}", scope: !1441)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{!1379, !9092, !1471}
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::rev::Rev<core::str::iter::Chars>", baseType: !1440, size: 64, align: 64, dwarfAddressSpace: 0)
!9093 = !{!9094, !9095}
!9094 = !DILocalVariable(name: "self", arg: 1, scope: !9088, file: !5878, line: 68, type: !9092)
!9095 = !DILocalVariable(name: "predicate", arg: 2, scope: !9088, file: !5878, line: 68, type: !1471)
!9096 = !{!1415, !4821}
!9097 = !DILocation(line: 68, column: 16, scope: !9088)
!9098 = !DILocation(line: 68, column: 27, scope: !9088)
!9099 = !DILocation(line: 72, column: 9, scope: !9088)
!9100 = !DILocation(line: 73, column: 6, scope: !9088)
!9101 = distinct !DISubprogram(name: "from<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17he9510f36408a336bE", scope: !9102, file: !1332, line: 1617, type: !4005, scopeLine: 1617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, retainedNodes: !9103)
!9102 = !DINamespace(name: "{impl#18}", scope: !100)
!9103 = !{!9104}
!9104 = !DILocalVariable(name: "r", arg: 1, scope: !9101, file: !1332, line: 1617, type: !4007)
!9105 = !DILocation(line: 1617, column: 13, scope: !9101)
!9106 = !DILocation(line: 1618, column: 9, scope: !9101)
!9107 = !DILocation(line: 1619, column: 6, scope: !9101)
!9108 = distinct !DISubprogram(name: "next<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h63e0e77e2cfa378fE", scope: !7090, file: !4504, line: 43, type: !9109, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !924, retainedNodes: !9111)
!9109 = !DISubroutineType(types: !9110)
!9110 = !{!1623, !5466}
!9111 = !{!9112, !9113, !9115, !9117, !9119, !9121, !9123, !9125}
!9112 = !DILocalVariable(name: "self", arg: 1, scope: !9108, file: !4504, line: 43, type: !5466)
!9113 = !DILocalVariable(name: "u", scope: !9114, file: !4504, line: 44, type: !327, align: 2)
!9114 = distinct !DILexicalBlock(scope: !9108, file: !4504, line: 44, column: 9)
!9115 = !DILocalVariable(name: "buf", scope: !9116, file: !4504, line: 45, type: !327, align: 2)
!9116 = distinct !DILexicalBlock(scope: !9108, file: !4504, line: 45, column: 13)
!9117 = !DILocalVariable(name: "residual", scope: !9118, file: !4504, line: 46, type: !1636, align: 1)
!9118 = distinct !DILexicalBlock(scope: !9108, file: !4504, line: 46, column: 37)
!9119 = !DILocalVariable(name: "val", scope: !9120, file: !4504, line: 46, type: !327, align: 2)
!9120 = distinct !DILexicalBlock(scope: !9108, file: !4504, line: 46, column: 21)
!9121 = !DILocalVariable(name: "u2", scope: !9122, file: !4504, line: 56, type: !327, align: 2)
!9122 = distinct !DILexicalBlock(scope: !9114, file: !4504, line: 56, column: 13)
!9123 = !DILocalVariable(name: "u2", scope: !9124, file: !4504, line: 57, type: !327, align: 2)
!9124 = distinct !DILexicalBlock(scope: !9114, file: !4504, line: 57, column: 17)
!9125 = !DILocalVariable(name: "c", scope: !9126, file: !4504, line: 69, type: !1391, align: 4)
!9126 = distinct !DILexicalBlock(scope: !9122, file: !4504, line: 69, column: 13)
!9127 = !DILocation(line: 43, column: 13, scope: !9108)
!9128 = !DILocation(line: 44, column: 13, scope: !9114)
!9129 = !DILocation(line: 46, column: 37, scope: !9118)
!9130 = !DILocation(line: 44, column: 23, scope: !9108)
!9131 = !DILocation(line: 44, column: 17, scope: !9108)
!9132 = !DILocation(line: 46, column: 21, scope: !9108)
!9133 = !DILocation(line: 45, column: 18, scope: !9108)
!9134 = !DILocation(line: 45, column: 18, scope: !9116)
!9135 = !DILocation(line: 45, column: 26, scope: !9116)
!9136 = !DILocation(line: 45, column: 28, scope: !9108)
!9137 = !DILocation(line: 46, column: 21, scope: !9120)
!9138 = !DILocation(line: 46, column: 37, scope: !9108)
!9139 = !DILocation(line: 46, column: 21, scope: !9118)
!9140 = !DILocation(line: 49, column: 13, scope: !9114)
!9141 = !DILocation(line: 73, column: 6, scope: !9108)
!9142 = !DILocation(line: 51, column: 55, scope: !9114)
!9143 = !DILocation(line: 51, column: 30, scope: !9114)
!9144 = !DILocation(line: 51, column: 18, scope: !9114)
!9145 = !DILocation(line: 51, column: 13, scope: !9114)
!9146 = !DILocation(line: 49, column: 9, scope: !9114)
!9147 = !DILocation(line: 52, column: 19, scope: !9114)
!9148 = !DILocation(line: 56, column: 28, scope: !9114)
!9149 = !DILocation(line: 56, column: 22, scope: !9114)
!9150 = !DILocation(line: 54, column: 47, scope: !9114)
!9151 = !DILocation(line: 54, column: 18, scope: !9114)
!9152 = !DILocation(line: 54, column: 13, scope: !9114)
!9153 = !DILocation(line: 52, column: 16, scope: !9114)
!9154 = !DILocation(line: 59, column: 66, scope: !9114)
!9155 = !DILocation(line: 59, column: 37, scope: !9114)
!9156 = !DILocation(line: 59, column: 32, scope: !9114)
!9157 = !DILocation(line: 0, scope: !9158)
!9158 = !DILexicalBlockFile(scope: !9114, file: !4366, discriminator: 0)
!9159 = !DILocation(line: 57, column: 22, scope: !9114)
!9160 = !DILocation(line: 56, column: 17, scope: !9122)
!9161 = !DILocation(line: 57, column: 22, scope: !9124)
!9162 = !DILocation(line: 61, column: 16, scope: !9122)
!9163 = !DILocation(line: 61, column: 31, scope: !9122)
!9164 = !DILocation(line: 64, column: 28, scope: !9122)
!9165 = !DILocation(line: 64, column: 17, scope: !9122)
!9166 = !DILocation(line: 65, column: 58, scope: !9122)
!9167 = !DILocation(line: 65, column: 29, scope: !9122)
!9168 = !DILocation(line: 65, column: 24, scope: !9122)
!9169 = !DILocation(line: 0, scope: !9170)
!9170 = !DILexicalBlockFile(scope: !9122, file: !4366, discriminator: 0)
!9171 = !DILocation(line: 69, column: 24, scope: !9122)
!9172 = !DILocation(line: 69, column: 23, scope: !9122)
!9173 = !DILocation(line: 69, column: 22, scope: !9122)
!9174 = !DILocation(line: 69, column: 51, scope: !9122)
!9175 = !DILocation(line: 69, column: 21, scope: !9122)
!9176 = !DILocation(line: 69, column: 17, scope: !9126)
!9177 = !DILocation(line: 71, column: 30, scope: !9126)
!9178 = !DILocation(line: 71, column: 18, scope: !9126)
!9179 = !DILocation(line: 71, column: 13, scope: !9126)
!9180 = !DILocation(line: 0, scope: !9181)
!9181 = !DILexicalBlockFile(scope: !9108, file: !4366, discriminator: 0)
!9182 = distinct !DISubprogram(name: "next<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h68e5aa64755c806bE", scope: !7090, file: !4504, line: 43, type: !9183, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !481, retainedNodes: !9186)
!9183 = !DISubroutineType(types: !9184)
!9184 = !{!1623, !9185}
!9185 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !473, size: 64, align: 64, dwarfAddressSpace: 0)
!9186 = !{!9187, !9188, !9190, !9192, !9194, !9196, !9198, !9200}
!9187 = !DILocalVariable(name: "self", arg: 1, scope: !9182, file: !4504, line: 43, type: !9185)
!9188 = !DILocalVariable(name: "u", scope: !9189, file: !4504, line: 44, type: !327, align: 2)
!9189 = distinct !DILexicalBlock(scope: !9182, file: !4504, line: 44, column: 9)
!9190 = !DILocalVariable(name: "buf", scope: !9191, file: !4504, line: 45, type: !327, align: 2)
!9191 = distinct !DILexicalBlock(scope: !9182, file: !4504, line: 45, column: 13)
!9192 = !DILocalVariable(name: "residual", scope: !9193, file: !4504, line: 46, type: !1636, align: 1)
!9193 = distinct !DILexicalBlock(scope: !9182, file: !4504, line: 46, column: 37)
!9194 = !DILocalVariable(name: "val", scope: !9195, file: !4504, line: 46, type: !327, align: 2)
!9195 = distinct !DILexicalBlock(scope: !9182, file: !4504, line: 46, column: 21)
!9196 = !DILocalVariable(name: "u2", scope: !9197, file: !4504, line: 56, type: !327, align: 2)
!9197 = distinct !DILexicalBlock(scope: !9189, file: !4504, line: 56, column: 13)
!9198 = !DILocalVariable(name: "u2", scope: !9199, file: !4504, line: 57, type: !327, align: 2)
!9199 = distinct !DILexicalBlock(scope: !9189, file: !4504, line: 57, column: 17)
!9200 = !DILocalVariable(name: "c", scope: !9201, file: !4504, line: 69, type: !1391, align: 4)
!9201 = distinct !DILexicalBlock(scope: !9197, file: !4504, line: 69, column: 13)
!9202 = !DILocation(line: 43, column: 13, scope: !9182)
!9203 = !DILocation(line: 44, column: 13, scope: !9189)
!9204 = !DILocation(line: 46, column: 37, scope: !9193)
!9205 = !DILocation(line: 44, column: 23, scope: !9182)
!9206 = !DILocation(line: 44, column: 17, scope: !9182)
!9207 = !DILocation(line: 46, column: 21, scope: !9182)
!9208 = !DILocation(line: 45, column: 18, scope: !9182)
!9209 = !DILocation(line: 45, column: 18, scope: !9191)
!9210 = !DILocation(line: 45, column: 26, scope: !9191)
!9211 = !DILocation(line: 45, column: 28, scope: !9182)
!9212 = !DILocation(line: 46, column: 21, scope: !9195)
!9213 = !DILocation(line: 46, column: 37, scope: !9182)
!9214 = !DILocation(line: 46, column: 21, scope: !9193)
!9215 = !DILocation(line: 49, column: 13, scope: !9189)
!9216 = !DILocation(line: 73, column: 6, scope: !9182)
!9217 = !DILocation(line: 51, column: 55, scope: !9189)
!9218 = !DILocation(line: 51, column: 30, scope: !9189)
!9219 = !DILocation(line: 51, column: 18, scope: !9189)
!9220 = !DILocation(line: 51, column: 13, scope: !9189)
!9221 = !DILocation(line: 49, column: 9, scope: !9189)
!9222 = !DILocation(line: 52, column: 19, scope: !9189)
!9223 = !DILocation(line: 56, column: 28, scope: !9189)
!9224 = !DILocation(line: 56, column: 22, scope: !9189)
!9225 = !DILocation(line: 54, column: 47, scope: !9189)
!9226 = !DILocation(line: 54, column: 18, scope: !9189)
!9227 = !DILocation(line: 54, column: 13, scope: !9189)
!9228 = !DILocation(line: 52, column: 16, scope: !9189)
!9229 = !DILocation(line: 59, column: 66, scope: !9189)
!9230 = !DILocation(line: 59, column: 37, scope: !9189)
!9231 = !DILocation(line: 59, column: 32, scope: !9189)
!9232 = !DILocation(line: 0, scope: !9233)
!9233 = !DILexicalBlockFile(scope: !9189, file: !4366, discriminator: 0)
!9234 = !DILocation(line: 57, column: 22, scope: !9189)
!9235 = !DILocation(line: 56, column: 17, scope: !9197)
!9236 = !DILocation(line: 57, column: 22, scope: !9199)
!9237 = !DILocation(line: 61, column: 16, scope: !9197)
!9238 = !DILocation(line: 61, column: 31, scope: !9197)
!9239 = !DILocation(line: 64, column: 28, scope: !9197)
!9240 = !DILocation(line: 64, column: 17, scope: !9197)
!9241 = !DILocation(line: 65, column: 58, scope: !9197)
!9242 = !DILocation(line: 65, column: 29, scope: !9197)
!9243 = !DILocation(line: 65, column: 24, scope: !9197)
!9244 = !DILocation(line: 0, scope: !9245)
!9245 = !DILexicalBlockFile(scope: !9197, file: !4366, discriminator: 0)
!9246 = !DILocation(line: 69, column: 24, scope: !9197)
!9247 = !DILocation(line: 69, column: 23, scope: !9197)
!9248 = !DILocation(line: 69, column: 22, scope: !9197)
!9249 = !DILocation(line: 69, column: 51, scope: !9197)
!9250 = !DILocation(line: 69, column: 21, scope: !9197)
!9251 = !DILocation(line: 69, column: 17, scope: !9201)
!9252 = !DILocation(line: 71, column: 30, scope: !9201)
!9253 = !DILocation(line: 71, column: 18, scope: !9201)
!9254 = !DILocation(line: 71, column: 13, scope: !9201)
!9255 = !DILocation(line: 0, scope: !9256)
!9256 = !DILexicalBlockFile(scope: !9182, file: !4366, discriminator: 0)
!9257 = distinct !DISubprogram(name: "next<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h85da2e5b468c94bcE", scope: !7090, file: !4504, line: 43, type: !9258, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !350, retainedNodes: !9261)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!1623, !9260}
!9260 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", baseType: !309, size: 64, align: 64, dwarfAddressSpace: 0)
!9261 = !{!9262, !9263, !9265, !9267, !9269, !9271, !9273, !9275}
!9262 = !DILocalVariable(name: "self", arg: 1, scope: !9257, file: !4504, line: 43, type: !9260)
!9263 = !DILocalVariable(name: "u", scope: !9264, file: !4504, line: 44, type: !327, align: 2)
!9264 = distinct !DILexicalBlock(scope: !9257, file: !4504, line: 44, column: 9)
!9265 = !DILocalVariable(name: "buf", scope: !9266, file: !4504, line: 45, type: !327, align: 2)
!9266 = distinct !DILexicalBlock(scope: !9257, file: !4504, line: 45, column: 13)
!9267 = !DILocalVariable(name: "residual", scope: !9268, file: !4504, line: 46, type: !1636, align: 1)
!9268 = distinct !DILexicalBlock(scope: !9257, file: !4504, line: 46, column: 37)
!9269 = !DILocalVariable(name: "val", scope: !9270, file: !4504, line: 46, type: !327, align: 2)
!9270 = distinct !DILexicalBlock(scope: !9257, file: !4504, line: 46, column: 21)
!9271 = !DILocalVariable(name: "u2", scope: !9272, file: !4504, line: 56, type: !327, align: 2)
!9272 = distinct !DILexicalBlock(scope: !9264, file: !4504, line: 56, column: 13)
!9273 = !DILocalVariable(name: "u2", scope: !9274, file: !4504, line: 57, type: !327, align: 2)
!9274 = distinct !DILexicalBlock(scope: !9264, file: !4504, line: 57, column: 17)
!9275 = !DILocalVariable(name: "c", scope: !9276, file: !4504, line: 69, type: !1391, align: 4)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !4504, line: 69, column: 13)
!9277 = !DILocation(line: 43, column: 13, scope: !9257)
!9278 = !DILocation(line: 44, column: 13, scope: !9264)
!9279 = !DILocation(line: 46, column: 37, scope: !9268)
!9280 = !DILocation(line: 44, column: 23, scope: !9257)
!9281 = !DILocation(line: 44, column: 17, scope: !9257)
!9282 = !DILocation(line: 46, column: 21, scope: !9257)
!9283 = !DILocation(line: 45, column: 18, scope: !9257)
!9284 = !DILocation(line: 45, column: 18, scope: !9266)
!9285 = !DILocation(line: 45, column: 26, scope: !9266)
!9286 = !DILocation(line: 45, column: 28, scope: !9257)
!9287 = !DILocation(line: 46, column: 21, scope: !9270)
!9288 = !DILocation(line: 46, column: 37, scope: !9257)
!9289 = !DILocation(line: 46, column: 21, scope: !9268)
!9290 = !DILocation(line: 49, column: 13, scope: !9264)
!9291 = !DILocation(line: 73, column: 6, scope: !9257)
!9292 = !DILocation(line: 51, column: 55, scope: !9264)
!9293 = !DILocation(line: 51, column: 30, scope: !9264)
!9294 = !DILocation(line: 51, column: 18, scope: !9264)
!9295 = !DILocation(line: 51, column: 13, scope: !9264)
!9296 = !DILocation(line: 49, column: 9, scope: !9264)
!9297 = !DILocation(line: 52, column: 19, scope: !9264)
!9298 = !DILocation(line: 56, column: 28, scope: !9264)
!9299 = !DILocation(line: 56, column: 22, scope: !9264)
!9300 = !DILocation(line: 54, column: 47, scope: !9264)
!9301 = !DILocation(line: 54, column: 18, scope: !9264)
!9302 = !DILocation(line: 54, column: 13, scope: !9264)
!9303 = !DILocation(line: 52, column: 16, scope: !9264)
!9304 = !DILocation(line: 59, column: 66, scope: !9264)
!9305 = !DILocation(line: 59, column: 37, scope: !9264)
!9306 = !DILocation(line: 59, column: 32, scope: !9264)
!9307 = !DILocation(line: 0, scope: !9308)
!9308 = !DILexicalBlockFile(scope: !9264, file: !4366, discriminator: 0)
!9309 = !DILocation(line: 57, column: 22, scope: !9264)
!9310 = !DILocation(line: 56, column: 17, scope: !9272)
!9311 = !DILocation(line: 57, column: 22, scope: !9274)
!9312 = !DILocation(line: 61, column: 16, scope: !9272)
!9313 = !DILocation(line: 61, column: 31, scope: !9272)
!9314 = !DILocation(line: 64, column: 28, scope: !9272)
!9315 = !DILocation(line: 64, column: 17, scope: !9272)
!9316 = !DILocation(line: 65, column: 58, scope: !9272)
!9317 = !DILocation(line: 65, column: 29, scope: !9272)
!9318 = !DILocation(line: 65, column: 24, scope: !9272)
!9319 = !DILocation(line: 0, scope: !9320)
!9320 = !DILexicalBlockFile(scope: !9272, file: !4366, discriminator: 0)
!9321 = !DILocation(line: 69, column: 24, scope: !9272)
!9322 = !DILocation(line: 69, column: 23, scope: !9272)
!9323 = !DILocation(line: 69, column: 22, scope: !9272)
!9324 = !DILocation(line: 69, column: 51, scope: !9272)
!9325 = !DILocation(line: 69, column: 21, scope: !9272)
!9326 = !DILocation(line: 69, column: 17, scope: !9276)
!9327 = !DILocation(line: 71, column: 30, scope: !9276)
!9328 = !DILocation(line: 71, column: 18, scope: !9276)
!9329 = !DILocation(line: 71, column: 13, scope: !9276)
!9330 = !DILocation(line: 0, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !9257, file: !4366, discriminator: 0)
!9332 = distinct !DISubprogram(name: "next<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd57608f6e2430588E", scope: !7090, file: !4504, line: 43, type: !9333, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !852, retainedNodes: !9335)
!9333 = !DISubroutineType(types: !9334)
!9334 = !{!1623, !5500}
!9335 = !{!9336, !9337, !9339, !9341, !9343, !9345, !9347, !9349}
!9336 = !DILocalVariable(name: "self", arg: 1, scope: !9332, file: !4504, line: 43, type: !5500)
!9337 = !DILocalVariable(name: "u", scope: !9338, file: !4504, line: 44, type: !327, align: 2)
!9338 = distinct !DILexicalBlock(scope: !9332, file: !4504, line: 44, column: 9)
!9339 = !DILocalVariable(name: "buf", scope: !9340, file: !4504, line: 45, type: !327, align: 2)
!9340 = distinct !DILexicalBlock(scope: !9332, file: !4504, line: 45, column: 13)
!9341 = !DILocalVariable(name: "residual", scope: !9342, file: !4504, line: 46, type: !1636, align: 1)
!9342 = distinct !DILexicalBlock(scope: !9332, file: !4504, line: 46, column: 37)
!9343 = !DILocalVariable(name: "val", scope: !9344, file: !4504, line: 46, type: !327, align: 2)
!9344 = distinct !DILexicalBlock(scope: !9332, file: !4504, line: 46, column: 21)
!9345 = !DILocalVariable(name: "u2", scope: !9346, file: !4504, line: 56, type: !327, align: 2)
!9346 = distinct !DILexicalBlock(scope: !9338, file: !4504, line: 56, column: 13)
!9347 = !DILocalVariable(name: "u2", scope: !9348, file: !4504, line: 57, type: !327, align: 2)
!9348 = distinct !DILexicalBlock(scope: !9338, file: !4504, line: 57, column: 17)
!9349 = !DILocalVariable(name: "c", scope: !9350, file: !4504, line: 69, type: !1391, align: 4)
!9350 = distinct !DILexicalBlock(scope: !9346, file: !4504, line: 69, column: 13)
!9351 = !DILocation(line: 43, column: 13, scope: !9332)
!9352 = !DILocation(line: 44, column: 13, scope: !9338)
!9353 = !DILocation(line: 46, column: 37, scope: !9342)
!9354 = !DILocation(line: 44, column: 23, scope: !9332)
!9355 = !DILocation(line: 44, column: 17, scope: !9332)
!9356 = !DILocation(line: 46, column: 21, scope: !9332)
!9357 = !DILocation(line: 45, column: 18, scope: !9332)
!9358 = !DILocation(line: 45, column: 18, scope: !9340)
!9359 = !DILocation(line: 45, column: 26, scope: !9340)
!9360 = !DILocation(line: 45, column: 28, scope: !9332)
!9361 = !DILocation(line: 46, column: 21, scope: !9344)
!9362 = !DILocation(line: 46, column: 37, scope: !9332)
!9363 = !DILocation(line: 46, column: 21, scope: !9342)
!9364 = !DILocation(line: 49, column: 13, scope: !9338)
!9365 = !DILocation(line: 73, column: 6, scope: !9332)
!9366 = !DILocation(line: 51, column: 55, scope: !9338)
!9367 = !DILocation(line: 51, column: 30, scope: !9338)
!9368 = !DILocation(line: 51, column: 18, scope: !9338)
!9369 = !DILocation(line: 51, column: 13, scope: !9338)
!9370 = !DILocation(line: 49, column: 9, scope: !9338)
!9371 = !DILocation(line: 52, column: 19, scope: !9338)
!9372 = !DILocation(line: 56, column: 28, scope: !9338)
!9373 = !DILocation(line: 56, column: 22, scope: !9338)
!9374 = !DILocation(line: 54, column: 47, scope: !9338)
!9375 = !DILocation(line: 54, column: 18, scope: !9338)
!9376 = !DILocation(line: 54, column: 13, scope: !9338)
!9377 = !DILocation(line: 52, column: 16, scope: !9338)
!9378 = !DILocation(line: 59, column: 66, scope: !9338)
!9379 = !DILocation(line: 59, column: 37, scope: !9338)
!9380 = !DILocation(line: 59, column: 32, scope: !9338)
!9381 = !DILocation(line: 0, scope: !9382)
!9382 = !DILexicalBlockFile(scope: !9338, file: !4366, discriminator: 0)
!9383 = !DILocation(line: 57, column: 22, scope: !9338)
!9384 = !DILocation(line: 56, column: 17, scope: !9346)
!9385 = !DILocation(line: 57, column: 22, scope: !9348)
!9386 = !DILocation(line: 61, column: 16, scope: !9346)
!9387 = !DILocation(line: 61, column: 31, scope: !9346)
!9388 = !DILocation(line: 64, column: 28, scope: !9346)
!9389 = !DILocation(line: 64, column: 17, scope: !9346)
!9390 = !DILocation(line: 65, column: 58, scope: !9346)
!9391 = !DILocation(line: 65, column: 29, scope: !9346)
!9392 = !DILocation(line: 65, column: 24, scope: !9346)
!9393 = !DILocation(line: 0, scope: !9394)
!9394 = !DILexicalBlockFile(scope: !9346, file: !4366, discriminator: 0)
!9395 = !DILocation(line: 69, column: 24, scope: !9346)
!9396 = !DILocation(line: 69, column: 23, scope: !9346)
!9397 = !DILocation(line: 69, column: 22, scope: !9346)
!9398 = !DILocation(line: 69, column: 51, scope: !9346)
!9399 = !DILocation(line: 69, column: 21, scope: !9346)
!9400 = !DILocation(line: 69, column: 17, scope: !9350)
!9401 = !DILocation(line: 71, column: 30, scope: !9350)
!9402 = !DILocation(line: 71, column: 18, scope: !9350)
!9403 = !DILocation(line: 71, column: 13, scope: !9350)
!9404 = !DILocation(line: 0, scope: !9405)
!9405 = !DILexicalBlockFile(scope: !9332, file: !4366, discriminator: 0)
!9406 = distinct !DISubprogram(name: "next<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17heab9c9c8e7a9e07dE", scope: !7090, file: !4504, line: 43, type: !9407, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !441, retainedNodes: !9410)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{!1623, !9409}
!9409 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !394, size: 64, align: 64, dwarfAddressSpace: 0)
!9410 = !{!9411, !9412, !9414, !9416, !9418, !9420, !9422, !9424}
!9411 = !DILocalVariable(name: "self", arg: 1, scope: !9406, file: !4504, line: 43, type: !9409)
!9412 = !DILocalVariable(name: "u", scope: !9413, file: !4504, line: 44, type: !327, align: 2)
!9413 = distinct !DILexicalBlock(scope: !9406, file: !4504, line: 44, column: 9)
!9414 = !DILocalVariable(name: "buf", scope: !9415, file: !4504, line: 45, type: !327, align: 2)
!9415 = distinct !DILexicalBlock(scope: !9406, file: !4504, line: 45, column: 13)
!9416 = !DILocalVariable(name: "residual", scope: !9417, file: !4504, line: 46, type: !1636, align: 1)
!9417 = distinct !DILexicalBlock(scope: !9406, file: !4504, line: 46, column: 37)
!9418 = !DILocalVariable(name: "val", scope: !9419, file: !4504, line: 46, type: !327, align: 2)
!9419 = distinct !DILexicalBlock(scope: !9406, file: !4504, line: 46, column: 21)
!9420 = !DILocalVariable(name: "u2", scope: !9421, file: !4504, line: 56, type: !327, align: 2)
!9421 = distinct !DILexicalBlock(scope: !9413, file: !4504, line: 56, column: 13)
!9422 = !DILocalVariable(name: "u2", scope: !9423, file: !4504, line: 57, type: !327, align: 2)
!9423 = distinct !DILexicalBlock(scope: !9413, file: !4504, line: 57, column: 17)
!9424 = !DILocalVariable(name: "c", scope: !9425, file: !4504, line: 69, type: !1391, align: 4)
!9425 = distinct !DILexicalBlock(scope: !9421, file: !4504, line: 69, column: 13)
!9426 = !DILocation(line: 43, column: 13, scope: !9406)
!9427 = !DILocation(line: 44, column: 13, scope: !9413)
!9428 = !DILocation(line: 46, column: 37, scope: !9417)
!9429 = !DILocation(line: 44, column: 23, scope: !9406)
!9430 = !DILocation(line: 44, column: 17, scope: !9406)
!9431 = !DILocation(line: 46, column: 21, scope: !9406)
!9432 = !DILocation(line: 45, column: 18, scope: !9406)
!9433 = !DILocation(line: 45, column: 18, scope: !9415)
!9434 = !DILocation(line: 45, column: 26, scope: !9415)
!9435 = !DILocation(line: 45, column: 28, scope: !9406)
!9436 = !DILocation(line: 46, column: 21, scope: !9419)
!9437 = !DILocation(line: 46, column: 37, scope: !9406)
!9438 = !DILocation(line: 46, column: 21, scope: !9417)
!9439 = !DILocation(line: 49, column: 13, scope: !9413)
!9440 = !DILocation(line: 73, column: 6, scope: !9406)
!9441 = !DILocation(line: 51, column: 55, scope: !9413)
!9442 = !DILocation(line: 51, column: 30, scope: !9413)
!9443 = !DILocation(line: 51, column: 18, scope: !9413)
!9444 = !DILocation(line: 51, column: 13, scope: !9413)
!9445 = !DILocation(line: 49, column: 9, scope: !9413)
!9446 = !DILocation(line: 52, column: 19, scope: !9413)
!9447 = !DILocation(line: 56, column: 28, scope: !9413)
!9448 = !DILocation(line: 56, column: 22, scope: !9413)
!9449 = !DILocation(line: 54, column: 47, scope: !9413)
!9450 = !DILocation(line: 54, column: 18, scope: !9413)
!9451 = !DILocation(line: 54, column: 13, scope: !9413)
!9452 = !DILocation(line: 52, column: 16, scope: !9413)
!9453 = !DILocation(line: 59, column: 66, scope: !9413)
!9454 = !DILocation(line: 59, column: 37, scope: !9413)
!9455 = !DILocation(line: 59, column: 32, scope: !9413)
!9456 = !DILocation(line: 0, scope: !9457)
!9457 = !DILexicalBlockFile(scope: !9413, file: !4366, discriminator: 0)
!9458 = !DILocation(line: 57, column: 22, scope: !9413)
!9459 = !DILocation(line: 56, column: 17, scope: !9421)
!9460 = !DILocation(line: 57, column: 22, scope: !9423)
!9461 = !DILocation(line: 61, column: 16, scope: !9421)
!9462 = !DILocation(line: 61, column: 31, scope: !9421)
!9463 = !DILocation(line: 64, column: 28, scope: !9421)
!9464 = !DILocation(line: 64, column: 17, scope: !9421)
!9465 = !DILocation(line: 65, column: 58, scope: !9421)
!9466 = !DILocation(line: 65, column: 29, scope: !9421)
!9467 = !DILocation(line: 65, column: 24, scope: !9421)
!9468 = !DILocation(line: 0, scope: !9469)
!9469 = !DILexicalBlockFile(scope: !9421, file: !4366, discriminator: 0)
!9470 = !DILocation(line: 69, column: 24, scope: !9421)
!9471 = !DILocation(line: 69, column: 23, scope: !9421)
!9472 = !DILocation(line: 69, column: 22, scope: !9421)
!9473 = !DILocation(line: 69, column: 51, scope: !9421)
!9474 = !DILocation(line: 69, column: 21, scope: !9421)
!9475 = !DILocation(line: 69, column: 17, scope: !9425)
!9476 = !DILocation(line: 71, column: 30, scope: !9425)
!9477 = !DILocation(line: 71, column: 18, scope: !9425)
!9478 = !DILocation(line: 71, column: 13, scope: !9425)
!9479 = !DILocation(line: 0, scope: !9480)
!9480 = !DILexicalBlockFile(scope: !9406, file: !4366, discriminator: 0)
!9481 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4cc36d4bc8345ca0E", scope: !7090, file: !4504, line: 76, type: !9482, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !350, retainedNodes: !9485)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{!660, !9484}
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", baseType: !309, size: 64, align: 64, dwarfAddressSpace: 0)
!9485 = !{!9486, !9487, !9489, !9490, !9492, !9493, !9495, !9496, !9498, !9499, !9501, !9503}
!9486 = !DILocalVariable(name: "self", arg: 1, scope: !9481, file: !4504, line: 76, type: !9484)
!9487 = !DILocalVariable(name: "low", scope: !9488, file: !4504, line: 77, type: !9, align: 8)
!9488 = distinct !DILexicalBlock(scope: !9481, file: !4504, line: 77, column: 9)
!9489 = !DILocalVariable(name: "high", scope: !9488, file: !4504, line: 77, type: !664, align: 8)
!9490 = !DILocalVariable(name: "low_buf", scope: !9491, file: !4504, line: 79, type: !9, align: 8)
!9491 = distinct !DILexicalBlock(scope: !9488, file: !4504, line: 79, column: 9)
!9492 = !DILocalVariable(name: "high_buf", scope: !9491, file: !4504, line: 79, type: !9, align: 8)
!9493 = !DILocalVariable(name: "u", scope: !9494, file: !4504, line: 83, type: !327, align: 2)
!9494 = distinct !DILexicalBlock(scope: !9488, file: !4504, line: 83, column: 13)
!9495 = !DILocalVariable(name: "u", scope: !9494, file: !4504, line: 83, type: !335, align: 8)
!9496 = !DILocalVariable(name: "_u", scope: !9497, file: !4504, line: 89, type: !327, align: 2)
!9497 = distinct !DILexicalBlock(scope: !9488, file: !4504, line: 89, column: 13)
!9498 = !DILocalVariable(name: "_u", scope: !9497, file: !4504, line: 89, type: !335, align: 8)
!9499 = !DILocalVariable(name: "_u", scope: !9500, file: !4504, line: 94, type: !327, align: 2)
!9500 = distinct !DILexicalBlock(scope: !9488, file: !4504, line: 94, column: 13)
!9501 = !DILocalVariable(name: "low", scope: !9502, file: !4504, line: 102, type: !9, align: 8)
!9502 = distinct !DILexicalBlock(scope: !9491, file: !4504, line: 102, column: 9)
!9503 = !DILocalVariable(name: "high", scope: !9504, file: !4504, line: 103, type: !664, align: 8)
!9504 = distinct !DILexicalBlock(scope: !9502, file: !4504, line: 103, column: 9)
!9505 = !DILocation(line: 76, column: 18, scope: !9481)
!9506 = !DILocation(line: 77, column: 19, scope: !9488)
!9507 = !DILocation(line: 79, column: 23, scope: !9491)
!9508 = !DILocation(line: 77, column: 27, scope: !9481)
!9509 = !DILocation(line: 77, column: 14, scope: !9481)
!9510 = !DILocation(line: 77, column: 14, scope: !9488)
!9511 = !DILocation(line: 77, column: 19, scope: !9481)
!9512 = !DILocation(line: 79, column: 41, scope: !9488)
!9513 = !DILocation(line: 79, column: 35, scope: !9488)
!9514 = !DILocation(line: 81, column: 21, scope: !9488)
!9515 = !DILocation(line: 83, column: 18, scope: !9488)
!9516 = !DILocation(line: 83, column: 18, scope: !9494)
!9517 = !DILocation(line: 83, column: 25, scope: !9488)
!9518 = !DILocation(line: 79, column: 14, scope: !9488)
!9519 = !DILocation(line: 79, column: 14, scope: !9491)
!9520 = !DILocation(line: 79, column: 23, scope: !9488)
!9521 = !DILocation(line: 102, column: 19, scope: !9491)
!9522 = !DILocation(line: 83, column: 51, scope: !9494)
!9523 = !DILocation(line: 83, column: 56, scope: !9488)
!9524 = !DILocation(line: 89, column: 18, scope: !9488)
!9525 = !DILocation(line: 89, column: 18, scope: !9497)
!9526 = !DILocation(line: 89, column: 25, scope: !9488)
!9527 = !DILocation(line: 94, column: 18, scope: !9488)
!9528 = !DILocation(line: 94, column: 18, scope: !9500)
!9529 = !DILocation(line: 94, column: 25, scope: !9500)
!9530 = !DILocation(line: 94, column: 30, scope: !9488)
!9531 = !DILocation(line: 89, column: 44, scope: !9497)
!9532 = !DILocation(line: 89, column: 49, scope: !9488)
!9533 = !DILocation(line: 102, column: 13, scope: !9502)
!9534 = !DILocation(line: 103, column: 20, scope: !9502)
!9535 = !DILocation(line: 103, column: 13, scope: !9504)
!9536 = !DILocation(line: 105, column: 9, scope: !9504)
!9537 = !DILocation(line: 106, column: 6, scope: !9481)
!9538 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4e794c678f5b34f7E", scope: !7090, file: !4504, line: 76, type: !9539, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !441, retainedNodes: !9542)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!660, !9541}
!9541 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !394, size: 64, align: 64, dwarfAddressSpace: 0)
!9542 = !{!9543, !9544, !9546, !9547, !9549, !9550, !9552, !9553, !9555, !9556, !9558, !9560}
!9543 = !DILocalVariable(name: "self", arg: 1, scope: !9538, file: !4504, line: 76, type: !9541)
!9544 = !DILocalVariable(name: "low", scope: !9545, file: !4504, line: 77, type: !9, align: 8)
!9545 = distinct !DILexicalBlock(scope: !9538, file: !4504, line: 77, column: 9)
!9546 = !DILocalVariable(name: "high", scope: !9545, file: !4504, line: 77, type: !664, align: 8)
!9547 = !DILocalVariable(name: "low_buf", scope: !9548, file: !4504, line: 79, type: !9, align: 8)
!9548 = distinct !DILexicalBlock(scope: !9545, file: !4504, line: 79, column: 9)
!9549 = !DILocalVariable(name: "high_buf", scope: !9548, file: !4504, line: 79, type: !9, align: 8)
!9550 = !DILocalVariable(name: "u", scope: !9551, file: !4504, line: 83, type: !327, align: 2)
!9551 = distinct !DILexicalBlock(scope: !9545, file: !4504, line: 83, column: 13)
!9552 = !DILocalVariable(name: "u", scope: !9551, file: !4504, line: 83, type: !335, align: 8)
!9553 = !DILocalVariable(name: "_u", scope: !9554, file: !4504, line: 89, type: !327, align: 2)
!9554 = distinct !DILexicalBlock(scope: !9545, file: !4504, line: 89, column: 13)
!9555 = !DILocalVariable(name: "_u", scope: !9554, file: !4504, line: 89, type: !335, align: 8)
!9556 = !DILocalVariable(name: "_u", scope: !9557, file: !4504, line: 94, type: !327, align: 2)
!9557 = distinct !DILexicalBlock(scope: !9545, file: !4504, line: 94, column: 13)
!9558 = !DILocalVariable(name: "low", scope: !9559, file: !4504, line: 102, type: !9, align: 8)
!9559 = distinct !DILexicalBlock(scope: !9548, file: !4504, line: 102, column: 9)
!9560 = !DILocalVariable(name: "high", scope: !9561, file: !4504, line: 103, type: !664, align: 8)
!9561 = distinct !DILexicalBlock(scope: !9559, file: !4504, line: 103, column: 9)
!9562 = !DILocation(line: 76, column: 18, scope: !9538)
!9563 = !DILocation(line: 77, column: 19, scope: !9545)
!9564 = !DILocation(line: 79, column: 23, scope: !9548)
!9565 = !DILocation(line: 77, column: 27, scope: !9538)
!9566 = !DILocation(line: 77, column: 14, scope: !9538)
!9567 = !DILocation(line: 77, column: 14, scope: !9545)
!9568 = !DILocation(line: 77, column: 19, scope: !9538)
!9569 = !DILocation(line: 79, column: 41, scope: !9545)
!9570 = !DILocation(line: 79, column: 35, scope: !9545)
!9571 = !DILocation(line: 81, column: 21, scope: !9545)
!9572 = !DILocation(line: 83, column: 18, scope: !9545)
!9573 = !DILocation(line: 83, column: 18, scope: !9551)
!9574 = !DILocation(line: 83, column: 25, scope: !9545)
!9575 = !DILocation(line: 79, column: 14, scope: !9545)
!9576 = !DILocation(line: 79, column: 14, scope: !9548)
!9577 = !DILocation(line: 79, column: 23, scope: !9545)
!9578 = !DILocation(line: 102, column: 19, scope: !9548)
!9579 = !DILocation(line: 83, column: 51, scope: !9551)
!9580 = !DILocation(line: 83, column: 56, scope: !9545)
!9581 = !DILocation(line: 89, column: 18, scope: !9545)
!9582 = !DILocation(line: 89, column: 18, scope: !9554)
!9583 = !DILocation(line: 89, column: 25, scope: !9545)
!9584 = !DILocation(line: 94, column: 18, scope: !9545)
!9585 = !DILocation(line: 94, column: 18, scope: !9557)
!9586 = !DILocation(line: 94, column: 25, scope: !9557)
!9587 = !DILocation(line: 94, column: 30, scope: !9545)
!9588 = !DILocation(line: 89, column: 44, scope: !9554)
!9589 = !DILocation(line: 89, column: 49, scope: !9545)
!9590 = !DILocation(line: 102, column: 13, scope: !9559)
!9591 = !DILocation(line: 103, column: 20, scope: !9559)
!9592 = !DILocation(line: 103, column: 13, scope: !9561)
!9593 = !DILocation(line: 105, column: 9, scope: !9561)
!9594 = !DILocation(line: 106, column: 6, scope: !9538)
!9595 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h6d263224b728e7f1E", scope: !7090, file: !4504, line: 76, type: !9596, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !852, retainedNodes: !9599)
!9596 = !DISubroutineType(types: !9597)
!9597 = !{!660, !9598}
!9598 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !848, size: 64, align: 64, dwarfAddressSpace: 0)
!9599 = !{!9600, !9601, !9603, !9604, !9606, !9607, !9609, !9610, !9612, !9613, !9615, !9617}
!9600 = !DILocalVariable(name: "self", arg: 1, scope: !9595, file: !4504, line: 76, type: !9598)
!9601 = !DILocalVariable(name: "low", scope: !9602, file: !4504, line: 77, type: !9, align: 8)
!9602 = distinct !DILexicalBlock(scope: !9595, file: !4504, line: 77, column: 9)
!9603 = !DILocalVariable(name: "high", scope: !9602, file: !4504, line: 77, type: !664, align: 8)
!9604 = !DILocalVariable(name: "low_buf", scope: !9605, file: !4504, line: 79, type: !9, align: 8)
!9605 = distinct !DILexicalBlock(scope: !9602, file: !4504, line: 79, column: 9)
!9606 = !DILocalVariable(name: "high_buf", scope: !9605, file: !4504, line: 79, type: !9, align: 8)
!9607 = !DILocalVariable(name: "u", scope: !9608, file: !4504, line: 83, type: !327, align: 2)
!9608 = distinct !DILexicalBlock(scope: !9602, file: !4504, line: 83, column: 13)
!9609 = !DILocalVariable(name: "u", scope: !9608, file: !4504, line: 83, type: !335, align: 8)
!9610 = !DILocalVariable(name: "_u", scope: !9611, file: !4504, line: 89, type: !327, align: 2)
!9611 = distinct !DILexicalBlock(scope: !9602, file: !4504, line: 89, column: 13)
!9612 = !DILocalVariable(name: "_u", scope: !9611, file: !4504, line: 89, type: !335, align: 8)
!9613 = !DILocalVariable(name: "_u", scope: !9614, file: !4504, line: 94, type: !327, align: 2)
!9614 = distinct !DILexicalBlock(scope: !9602, file: !4504, line: 94, column: 13)
!9615 = !DILocalVariable(name: "low", scope: !9616, file: !4504, line: 102, type: !9, align: 8)
!9616 = distinct !DILexicalBlock(scope: !9605, file: !4504, line: 102, column: 9)
!9617 = !DILocalVariable(name: "high", scope: !9618, file: !4504, line: 103, type: !664, align: 8)
!9618 = distinct !DILexicalBlock(scope: !9616, file: !4504, line: 103, column: 9)
!9619 = !DILocation(line: 76, column: 18, scope: !9595)
!9620 = !DILocation(line: 77, column: 19, scope: !9602)
!9621 = !DILocation(line: 79, column: 23, scope: !9605)
!9622 = !DILocation(line: 77, column: 27, scope: !9595)
!9623 = !DILocation(line: 77, column: 14, scope: !9595)
!9624 = !DILocation(line: 77, column: 14, scope: !9602)
!9625 = !DILocation(line: 77, column: 19, scope: !9595)
!9626 = !DILocation(line: 79, column: 41, scope: !9602)
!9627 = !DILocation(line: 79, column: 35, scope: !9602)
!9628 = !DILocation(line: 81, column: 21, scope: !9602)
!9629 = !DILocation(line: 83, column: 18, scope: !9602)
!9630 = !DILocation(line: 83, column: 18, scope: !9608)
!9631 = !DILocation(line: 83, column: 25, scope: !9602)
!9632 = !DILocation(line: 79, column: 14, scope: !9602)
!9633 = !DILocation(line: 79, column: 14, scope: !9605)
!9634 = !DILocation(line: 79, column: 23, scope: !9602)
!9635 = !DILocation(line: 102, column: 19, scope: !9605)
!9636 = !DILocation(line: 83, column: 51, scope: !9608)
!9637 = !DILocation(line: 83, column: 56, scope: !9602)
!9638 = !DILocation(line: 89, column: 18, scope: !9602)
!9639 = !DILocation(line: 89, column: 18, scope: !9611)
!9640 = !DILocation(line: 89, column: 25, scope: !9602)
!9641 = !DILocation(line: 94, column: 18, scope: !9602)
!9642 = !DILocation(line: 94, column: 18, scope: !9614)
!9643 = !DILocation(line: 94, column: 25, scope: !9614)
!9644 = !DILocation(line: 94, column: 30, scope: !9602)
!9645 = !DILocation(line: 89, column: 44, scope: !9611)
!9646 = !DILocation(line: 89, column: 49, scope: !9602)
!9647 = !DILocation(line: 102, column: 13, scope: !9616)
!9648 = !DILocation(line: 103, column: 20, scope: !9616)
!9649 = !DILocation(line: 103, column: 13, scope: !9618)
!9650 = !DILocation(line: 105, column: 9, scope: !9618)
!9651 = !DILocation(line: 106, column: 6, scope: !9595)
!9652 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7a4cf7d250e8c107E", scope: !7090, file: !4504, line: 76, type: !9653, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !924, retainedNodes: !9656)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!660, !9655}
!9655 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !920, size: 64, align: 64, dwarfAddressSpace: 0)
!9656 = !{!9657, !9658, !9660, !9661, !9663, !9664, !9666, !9667, !9669, !9670, !9672, !9674}
!9657 = !DILocalVariable(name: "self", arg: 1, scope: !9652, file: !4504, line: 76, type: !9655)
!9658 = !DILocalVariable(name: "low", scope: !9659, file: !4504, line: 77, type: !9, align: 8)
!9659 = distinct !DILexicalBlock(scope: !9652, file: !4504, line: 77, column: 9)
!9660 = !DILocalVariable(name: "high", scope: !9659, file: !4504, line: 77, type: !664, align: 8)
!9661 = !DILocalVariable(name: "low_buf", scope: !9662, file: !4504, line: 79, type: !9, align: 8)
!9662 = distinct !DILexicalBlock(scope: !9659, file: !4504, line: 79, column: 9)
!9663 = !DILocalVariable(name: "high_buf", scope: !9662, file: !4504, line: 79, type: !9, align: 8)
!9664 = !DILocalVariable(name: "u", scope: !9665, file: !4504, line: 83, type: !327, align: 2)
!9665 = distinct !DILexicalBlock(scope: !9659, file: !4504, line: 83, column: 13)
!9666 = !DILocalVariable(name: "u", scope: !9665, file: !4504, line: 83, type: !335, align: 8)
!9667 = !DILocalVariable(name: "_u", scope: !9668, file: !4504, line: 89, type: !327, align: 2)
!9668 = distinct !DILexicalBlock(scope: !9659, file: !4504, line: 89, column: 13)
!9669 = !DILocalVariable(name: "_u", scope: !9668, file: !4504, line: 89, type: !335, align: 8)
!9670 = !DILocalVariable(name: "_u", scope: !9671, file: !4504, line: 94, type: !327, align: 2)
!9671 = distinct !DILexicalBlock(scope: !9659, file: !4504, line: 94, column: 13)
!9672 = !DILocalVariable(name: "low", scope: !9673, file: !4504, line: 102, type: !9, align: 8)
!9673 = distinct !DILexicalBlock(scope: !9662, file: !4504, line: 102, column: 9)
!9674 = !DILocalVariable(name: "high", scope: !9675, file: !4504, line: 103, type: !664, align: 8)
!9675 = distinct !DILexicalBlock(scope: !9673, file: !4504, line: 103, column: 9)
!9676 = !DILocation(line: 76, column: 18, scope: !9652)
!9677 = !DILocation(line: 77, column: 19, scope: !9659)
!9678 = !DILocation(line: 79, column: 23, scope: !9662)
!9679 = !DILocation(line: 77, column: 27, scope: !9652)
!9680 = !DILocation(line: 77, column: 14, scope: !9652)
!9681 = !DILocation(line: 77, column: 14, scope: !9659)
!9682 = !DILocation(line: 77, column: 19, scope: !9652)
!9683 = !DILocation(line: 79, column: 41, scope: !9659)
!9684 = !DILocation(line: 79, column: 35, scope: !9659)
!9685 = !DILocation(line: 81, column: 21, scope: !9659)
!9686 = !DILocation(line: 83, column: 18, scope: !9659)
!9687 = !DILocation(line: 83, column: 18, scope: !9665)
!9688 = !DILocation(line: 83, column: 25, scope: !9659)
!9689 = !DILocation(line: 79, column: 14, scope: !9659)
!9690 = !DILocation(line: 79, column: 14, scope: !9662)
!9691 = !DILocation(line: 79, column: 23, scope: !9659)
!9692 = !DILocation(line: 102, column: 19, scope: !9662)
!9693 = !DILocation(line: 83, column: 51, scope: !9665)
!9694 = !DILocation(line: 83, column: 56, scope: !9659)
!9695 = !DILocation(line: 89, column: 18, scope: !9659)
!9696 = !DILocation(line: 89, column: 18, scope: !9668)
!9697 = !DILocation(line: 89, column: 25, scope: !9659)
!9698 = !DILocation(line: 94, column: 18, scope: !9659)
!9699 = !DILocation(line: 94, column: 18, scope: !9671)
!9700 = !DILocation(line: 94, column: 25, scope: !9671)
!9701 = !DILocation(line: 94, column: 30, scope: !9659)
!9702 = !DILocation(line: 89, column: 44, scope: !9668)
!9703 = !DILocation(line: 89, column: 49, scope: !9659)
!9704 = !DILocation(line: 102, column: 13, scope: !9673)
!9705 = !DILocation(line: 103, column: 20, scope: !9673)
!9706 = !DILocation(line: 103, column: 13, scope: !9675)
!9707 = !DILocation(line: 105, column: 9, scope: !9675)
!9708 = !DILocation(line: 106, column: 6, scope: !9652)
!9709 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbea72e21e6a48405E", scope: !7090, file: !4504, line: 76, type: !9710, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !481, retainedNodes: !9713)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{!660, !9712}
!9712 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", baseType: !473, size: 64, align: 64, dwarfAddressSpace: 0)
!9713 = !{!9714, !9715, !9717, !9718, !9720, !9721, !9723, !9724, !9726, !9727, !9729, !9731}
!9714 = !DILocalVariable(name: "self", arg: 1, scope: !9709, file: !4504, line: 76, type: !9712)
!9715 = !DILocalVariable(name: "low", scope: !9716, file: !4504, line: 77, type: !9, align: 8)
!9716 = distinct !DILexicalBlock(scope: !9709, file: !4504, line: 77, column: 9)
!9717 = !DILocalVariable(name: "high", scope: !9716, file: !4504, line: 77, type: !664, align: 8)
!9718 = !DILocalVariable(name: "low_buf", scope: !9719, file: !4504, line: 79, type: !9, align: 8)
!9719 = distinct !DILexicalBlock(scope: !9716, file: !4504, line: 79, column: 9)
!9720 = !DILocalVariable(name: "high_buf", scope: !9719, file: !4504, line: 79, type: !9, align: 8)
!9721 = !DILocalVariable(name: "u", scope: !9722, file: !4504, line: 83, type: !327, align: 2)
!9722 = distinct !DILexicalBlock(scope: !9716, file: !4504, line: 83, column: 13)
!9723 = !DILocalVariable(name: "u", scope: !9722, file: !4504, line: 83, type: !335, align: 8)
!9724 = !DILocalVariable(name: "_u", scope: !9725, file: !4504, line: 89, type: !327, align: 2)
!9725 = distinct !DILexicalBlock(scope: !9716, file: !4504, line: 89, column: 13)
!9726 = !DILocalVariable(name: "_u", scope: !9725, file: !4504, line: 89, type: !335, align: 8)
!9727 = !DILocalVariable(name: "_u", scope: !9728, file: !4504, line: 94, type: !327, align: 2)
!9728 = distinct !DILexicalBlock(scope: !9716, file: !4504, line: 94, column: 13)
!9729 = !DILocalVariable(name: "low", scope: !9730, file: !4504, line: 102, type: !9, align: 8)
!9730 = distinct !DILexicalBlock(scope: !9719, file: !4504, line: 102, column: 9)
!9731 = !DILocalVariable(name: "high", scope: !9732, file: !4504, line: 103, type: !664, align: 8)
!9732 = distinct !DILexicalBlock(scope: !9730, file: !4504, line: 103, column: 9)
!9733 = !DILocation(line: 76, column: 18, scope: !9709)
!9734 = !DILocation(line: 77, column: 19, scope: !9716)
!9735 = !DILocation(line: 79, column: 23, scope: !9719)
!9736 = !DILocation(line: 77, column: 27, scope: !9709)
!9737 = !DILocation(line: 77, column: 14, scope: !9709)
!9738 = !DILocation(line: 77, column: 14, scope: !9716)
!9739 = !DILocation(line: 77, column: 19, scope: !9709)
!9740 = !DILocation(line: 79, column: 41, scope: !9716)
!9741 = !DILocation(line: 79, column: 35, scope: !9716)
!9742 = !DILocation(line: 81, column: 21, scope: !9716)
!9743 = !DILocation(line: 83, column: 18, scope: !9716)
!9744 = !DILocation(line: 83, column: 18, scope: !9722)
!9745 = !DILocation(line: 83, column: 25, scope: !9716)
!9746 = !DILocation(line: 79, column: 14, scope: !9716)
!9747 = !DILocation(line: 79, column: 14, scope: !9719)
!9748 = !DILocation(line: 79, column: 23, scope: !9716)
!9749 = !DILocation(line: 102, column: 19, scope: !9719)
!9750 = !DILocation(line: 83, column: 51, scope: !9722)
!9751 = !DILocation(line: 83, column: 56, scope: !9716)
!9752 = !DILocation(line: 89, column: 18, scope: !9716)
!9753 = !DILocation(line: 89, column: 18, scope: !9725)
!9754 = !DILocation(line: 89, column: 25, scope: !9716)
!9755 = !DILocation(line: 94, column: 18, scope: !9716)
!9756 = !DILocation(line: 94, column: 18, scope: !9728)
!9757 = !DILocation(line: 94, column: 25, scope: !9728)
!9758 = !DILocation(line: 94, column: 30, scope: !9716)
!9759 = !DILocation(line: 89, column: 44, scope: !9725)
!9760 = !DILocation(line: 89, column: 49, scope: !9716)
!9761 = !DILocation(line: 102, column: 13, scope: !9730)
!9762 = !DILocation(line: 103, column: 20, scope: !9730)
!9763 = !DILocation(line: 103, column: 13, scope: !9732)
!9764 = !DILocation(line: 105, column: 9, scope: !9732)
!9765 = !DILocation(line: 106, column: 6, scope: !9709)
!9766 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h1e9d1ece3c4aa634E", scope: !7089, file: !4504, line: 103, type: !9767, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !852, retainedNodes: !9769)
!9767 = !DISubroutineType(types: !9768)
!9768 = !{!664, !7187, !9}
!9769 = !{!9770, !9771}
!9770 = !DILocalVariable(name: "h", arg: 2, scope: !9766, file: !4504, line: 103, type: !9)
!9771 = !DILocalVariable(name: "high_buf", scope: !9766, file: !4504, line: 79, type: !9, align: 8)
!9772 = !DILocation(line: 79, column: 23, scope: !9766)
!9773 = !DILocation(line: 103, column: 35, scope: !9766)
!9774 = !DILocation(line: 103, column: 52, scope: !9766)
!9775 = !DILocation(line: 103, column: 38, scope: !9766)
!9776 = !DILocation(line: 103, column: 61, scope: !9766)
!9777 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h64121ca5b9a986adE", scope: !7089, file: !4504, line: 103, type: !9778, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !441, retainedNodes: !9780)
!9778 = !DISubroutineType(types: !9779)
!9779 = !{!664, !7163, !9}
!9780 = !{!9781, !9782}
!9781 = !DILocalVariable(name: "h", arg: 2, scope: !9777, file: !4504, line: 103, type: !9)
!9782 = !DILocalVariable(name: "high_buf", scope: !9777, file: !4504, line: 79, type: !9, align: 8)
!9783 = !DILocation(line: 79, column: 23, scope: !9777)
!9784 = !DILocation(line: 103, column: 35, scope: !9777)
!9785 = !DILocation(line: 103, column: 52, scope: !9777)
!9786 = !DILocation(line: 103, column: 38, scope: !9777)
!9787 = !DILocation(line: 103, column: 61, scope: !9777)
!9788 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h75f89146eef50ff0E", scope: !7089, file: !4504, line: 103, type: !9789, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !350, retainedNodes: !9791)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!664, !7115, !9}
!9791 = !{!9792, !9793}
!9792 = !DILocalVariable(name: "h", arg: 2, scope: !9788, file: !4504, line: 103, type: !9)
!9793 = !DILocalVariable(name: "high_buf", scope: !9788, file: !4504, line: 79, type: !9, align: 8)
!9794 = !DILocation(line: 79, column: 23, scope: !9788)
!9795 = !DILocation(line: 103, column: 35, scope: !9788)
!9796 = !DILocation(line: 103, column: 52, scope: !9788)
!9797 = !DILocation(line: 103, column: 38, scope: !9788)
!9798 = !DILocation(line: 103, column: 61, scope: !9788)
!9799 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17hb4feb60f0b9940f5E", scope: !7089, file: !4504, line: 103, type: !9800, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !481, retainedNodes: !9802)
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!664, !7088, !9}
!9802 = !{!9803, !9804}
!9803 = !DILocalVariable(name: "h", arg: 2, scope: !9799, file: !4504, line: 103, type: !9)
!9804 = !DILocalVariable(name: "high_buf", scope: !9799, file: !4504, line: 79, type: !9, align: 8)
!9805 = !DILocation(line: 79, column: 23, scope: !9799)
!9806 = !DILocation(line: 103, column: 35, scope: !9799)
!9807 = !DILocation(line: 103, column: 52, scope: !9799)
!9808 = !DILocation(line: 103, column: 38, scope: !9799)
!9809 = !DILocation(line: 103, column: 61, scope: !9799)
!9810 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17hc81ae4410c8bd3c4E", scope: !7089, file: !4504, line: 103, type: !9811, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !924, retainedNodes: !9813)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{!664, !7139, !9}
!9813 = !{!9814, !9815}
!9814 = !DILocalVariable(name: "h", arg: 2, scope: !9810, file: !4504, line: 103, type: !9)
!9815 = !DILocalVariable(name: "high_buf", scope: !9810, file: !4504, line: 79, type: !9, align: 8)
!9816 = !DILocation(line: 79, column: 23, scope: !9810)
!9817 = !DILocation(line: 103, column: 35, scope: !9810)
!9818 = !DILocation(line: 103, column: 52, scope: !9810)
!9819 = !DILocation(line: 103, column: 38, scope: !9810)
!9820 = !DILocation(line: 103, column: 61, scope: !9810)
!9821 = distinct !DISubprogram(name: "capacity_overflow", linkageName: "_ZN5alloc7raw_vec17capacity_overflow17hf37f287b1e192c14E", scope: !88, file: !9822, line: 24, type: !9823, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15)
!9822 = !DIFile(filename: "src/raw_vec.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "3f89910ba8579bdfc070006f52c626f8")
!9823 = !DISubroutineType(types: !9824)
!9824 = !{null, !1690}
!9825 = !DILocation(line: 25, column: 5, scope: !9821)
!9826 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc7raw_vec3Cap3new17h0219e73abd01dbcdE", scope: !108, file: !9822, line: 48, type: !9827, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !9829, retainedNodes: !9830)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{!108, !9}
!9829 = !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc7raw_vec3Cap3new17h0219e73abd01dbcdE", scope: !108, file: !9822, line: 48, type: !9827, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!9830 = !{!9831}
!9831 = !DILocalVariable(name: "cap", arg: 1, scope: !9826, file: !9822, line: 48, type: !9)
!9832 = !DILocation(line: 48, column: 22, scope: !9826)
!9833 = !DILocation(line: 49, column: 12, scope: !9826)
!9834 = !DILocation(line: 49, column: 52, scope: !9826)
!9835 = !DILocation(line: 49, column: 9, scope: !9826)
!9836 = !DILocation(line: 50, column: 6, scope: !9826)
!9837 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h19dfa1b128272f2cE", scope: !87, file: !9822, line: 106, type: !9838, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !9840)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{!87}
!9840 = !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h19dfa1b128272f2cE", scope: !87, file: !9822, line: 106, type: !9838, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!9841 = !DILocation(line: 107, column: 9, scope: !9837)
!9842 = !DILocation(line: 108, column: 6, scope: !9837)
!9843 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hba3c876e6bbe06e0E", scope: !87, file: !9822, line: 129, type: !9844, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !9846, retainedNodes: !9847)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{!87, !9, !1690}
!9846 = !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17hba3c876e6bbe06e0E", scope: !87, file: !9822, line: 129, type: !9844, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!9847 = !{!9848}
!9848 = !DILocalVariable(name: "capacity", arg: 1, scope: !9843, file: !9822, line: 129, type: !9)
!9849 = !DILocation(line: 129, column: 26, scope: !9843)
!9850 = !DILocation(line: 130, column: 23, scope: !9843)
!9851 = !DILocation(line: 131, column: 6, scope: !9843)
!9852 = distinct !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc7raw_vec11RawVecInner13with_capacity17h78338a2134461b32E", scope: !91, file: !9822, line: 151, type: !9853, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !9855, retainedNodes: !9856)
!9853 = !DISubroutineType(types: !9854)
!9854 = !{!91, !9, !1746, !1690}
!9855 = !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc7raw_vec11RawVecInner13with_capacity17h78338a2134461b32E", scope: !91, file: !9822, line: 151, type: !9853, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!9856 = !{!9857, !9858, !9859, !9861}
!9857 = !DILocalVariable(name: "capacity", arg: 1, scope: !9852, file: !9822, line: 151, type: !9)
!9858 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !9852, file: !9822, line: 151, type: !1746)
!9859 = !DILocalVariable(name: "res", scope: !9860, file: !9822, line: 153, type: !91, align: 8)
!9860 = distinct !DILexicalBlock(scope: !9852, file: !9822, line: 153, column: 13)
!9861 = !DILocalVariable(name: "err", scope: !9862, file: !9822, line: 154, type: !1732, align: 8)
!9862 = distinct !DILexicalBlock(scope: !9852, file: !9822, line: 154, column: 13)
!9863 = !DILocation(line: 151, column: 22, scope: !9852)
!9864 = !DILocation(line: 151, column: 39, scope: !9852)
!9865 = !DILocation(line: 152, column: 47, scope: !9852)
!9866 = !DILocation(line: 152, column: 15, scope: !9852)
!9867 = !DILocation(line: 152, column: 9, scope: !9852)
!9868 = !DILocation(line: 153, column: 16, scope: !9852)
!9869 = !DILocation(line: 153, column: 16, scope: !9860)
!9870 = !DILocation(line: 156, column: 6, scope: !9852)
!9871 = !DILocation(line: 154, column: 17, scope: !9852)
!9872 = !DILocation(line: 154, column: 17, scope: !9862)
!9873 = !DILocation(line: 154, column: 25, scope: !9862)
!9874 = distinct !DISubprogram(name: "min_non_zero_cap", linkageName: "_ZN5alloc7raw_vec16min_non_zero_cap17h013b9e4a5a463f60E", scope: !88, file: !9822, line: 164, type: !9875, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !9877)
!9875 = !DISubroutineType(types: !9876)
!9876 = !{!9, !9}
!9877 = !{!9878}
!9878 = !DILocalVariable(name: "size", arg: 1, scope: !9874, file: !9822, line: 164, type: !9)
!9879 = !DILocation(line: 164, column: 27, scope: !9874)
!9880 = !DILocation(line: 165, column: 8, scope: !9874)
!9881 = !DILocation(line: 166, column: 9, scope: !9874)
!9882 = !DILocation(line: 165, column: 5, scope: !9874)
!9883 = !DILocation(line: 167, column: 15, scope: !9874)
!9884 = !DILocation(line: 172, column: 2, scope: !9874)
!9885 = !DILocation(line: 170, column: 9, scope: !9874)
!9886 = !DILocation(line: 167, column: 12, scope: !9874)
!9887 = !DILocation(line: 168, column: 9, scope: !9874)
!9888 = distinct !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0b30a224f2f12022E", scope: !87, file: !9822, line: 181, type: !9889, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !9891, retainedNodes: !9892)
!9889 = !DISubroutineType(types: !9890)
!9890 = !{!87, !112}
!9891 = !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h0b30a224f2f12022E", scope: !87, file: !9822, line: 181, type: !9889, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!9892 = !{!9893}
!9893 = !DILocalVariable(name: "alloc", arg: 1, scope: !9888, file: !9822, line: 181, type: !112)
!9894 = !DILocation(line: 181, column: 25, scope: !9888)
!9895 = !DILocation(line: 182, column: 23, scope: !9888)
!9896 = !DILocation(line: 183, column: 6, scope: !9888)
!9897 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf98b5c351e817222E", scope: !87, file: !9822, line: 190, type: !9898, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !9900, retainedNodes: !9901)
!9898 = !DISubroutineType(types: !9899)
!9899 = !{!87, !9, !112, !1690}
!9900 = !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf98b5c351e817222E", scope: !87, file: !9822, line: 190, type: !9898, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!9901 = !{!9902, !9903}
!9902 = !DILocalVariable(name: "capacity", arg: 1, scope: !9897, file: !9822, line: 190, type: !9)
!9903 = !DILocalVariable(name: "alloc", arg: 2, scope: !9897, file: !9822, line: 190, type: !112)
!9904 = !DILocation(line: 190, column: 29, scope: !9897)
!9905 = !DILocation(line: 190, column: 46, scope: !9897)
!9906 = !DILocation(line: 192, column: 20, scope: !9897)
!9907 = !DILocation(line: 195, column: 6, scope: !9897)
!9908 = distinct !DISubprogram(name: "into_box<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h2602add354448feaE", scope: !87, file: !9822, line: 231, type: !9909, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !9915, retainedNodes: !9916)
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!9911, !87, !9}
!9911 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !9912, templateParams: !15, identifier: "48ff3b559ab75cc267ef97412ec1f1fb")
!9912 = !{!9913, !9914}
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !9911, file: !2, baseType: !1147, size: 64, align: 64)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9911, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9915 = !DISubprogram(name: "into_box<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17h2602add354448feaE", scope: !87, file: !9822, line: 231, type: !9909, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!9916 = !{!9917, !9918, !9919, !9924}
!9917 = !DILocalVariable(name: "self", arg: 1, scope: !9908, file: !9822, line: 231, type: !87)
!9918 = !DILocalVariable(name: "len", arg: 2, scope: !9908, file: !9822, line: 231, type: !9)
!9919 = !DILocalVariable(name: "me", scope: !9920, file: !9822, line: 238, type: !9921, align: 8)
!9920 = distinct !DILexicalBlock(scope: !9908, file: !9822, line: 238, column: 9)
!9921 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", scope: !1155, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !9922, templateParams: !3226, identifier: "488fc905d5202ac89471441fe588aff6")
!9922 = !{!9923}
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9921, file: !2, baseType: !87, size: 128, align: 64, flags: DIFlagPrivate)
!9924 = !DILocalVariable(name: "slice", scope: !9925, file: !9822, line: 240, type: !1144, align: 8)
!9925 = distinct !DILexicalBlock(scope: !9920, file: !9822, line: 240, column: 13)
!9926 = !DILocation(line: 231, column: 28, scope: !9908)
!9927 = !DILocation(line: 231, column: 34, scope: !9908)
!9928 = !DILocation(line: 238, column: 13, scope: !9920)
!9929 = !DILocation(line: 234, column: 20, scope: !9908)
!9930 = !DILocation(line: 234, column: 13, scope: !9908)
!9931 = !DILocation(line: 233, column: 9, scope: !9908)
!9932 = !DILocation(line: 238, column: 36, scope: !9908)
!9933 = !DILocalVariable(name: "value", arg: 1, scope: !9934, file: !9935, line: 180, type: !87)
!9934 = distinct !DISubprogram(name: "new<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h5c890b64f8f093b0E", scope: !9921, file: !9935, line: 180, type: !9936, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3226, declaration: !9938, retainedNodes: !9939)
!9935 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "2c40d1fdc6f3a9202a958c6002f71a73")
!9936 = !DISubroutineType(types: !9937)
!9937 = !{!9921, !87}
!9938 = !DISubprogram(name: "new<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h5c890b64f8f093b0E", scope: !9921, file: !9935, line: 180, type: !9936, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3226)
!9939 = !{!9933}
!9940 = !DILocation(line: 180, column: 22, scope: !9934, inlinedAt: !9941)
!9941 = distinct !DILocation(line: 238, column: 18, scope: !9908)
!9942 = !DILocation(line: 182, column: 6, scope: !9934, inlinedAt: !9941)
!9943 = !DILocation(line: 238, column: 18, scope: !9908)
!9944 = !DILocalVariable(name: "self", arg: 1, scope: !9945, file: !9935, line: 264, type: !9950)
!9945 = distinct !DISubprogram(name: "deref<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfb76beb6ba8065e0E", scope: !9946, file: !9935, line: 264, type: !9947, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3226, retainedNodes: !9951)
!9946 = !DINamespace(name: "{impl#2}", scope: !1155)
!9947 = !DISubroutineType(types: !9948)
!9948 = !{!9949, !9950}
!9949 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!9950 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", baseType: !9921, size: 64, align: 64, dwarfAddressSpace: 0)
!9951 = !{!9944}
!9952 = !DILocation(line: 264, column: 14, scope: !9945, inlinedAt: !9953)
!9953 = distinct !DILocation(line: 240, column: 55, scope: !9920)
!9954 = !DILocation(line: 240, column: 55, scope: !9920)
!9955 = !DILocation(line: 240, column: 25, scope: !9920)
!9956 = !DILocation(line: 240, column: 17, scope: !9925)
!9957 = !DILocation(line: 264, column: 14, scope: !9945, inlinedAt: !9958)
!9958 = distinct !DILocation(line: 241, column: 48, scope: !9925)
!9959 = !DILocation(line: 241, column: 47, scope: !9925)
!9960 = !DILocation(line: 241, column: 37, scope: !9925)
!9961 = !DILocation(line: 241, column: 13, scope: !9925)
!9962 = !DILocation(line: 243, column: 6, scope: !9908)
!9963 = distinct !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hee2af04e0fde8fafE", scope: !87, file: !9822, line: 256, type: !9964, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !9966, retainedNodes: !9967)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!87, !3364, !9, !112}
!9966 = !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hee2af04e0fde8fafE", scope: !87, file: !9822, line: 256, type: !9964, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!9967 = !{!9968, !9969, !9970, !9971, !9973}
!9968 = !DILocalVariable(name: "ptr", arg: 1, scope: !9963, file: !9822, line: 256, type: !3364)
!9969 = !DILocalVariable(name: "capacity", arg: 2, scope: !9963, file: !9822, line: 256, type: !9)
!9970 = !DILocalVariable(name: "alloc", arg: 3, scope: !9963, file: !9822, line: 256, type: !112)
!9971 = !DILocalVariable(name: "ptr", scope: !9972, file: !9822, line: 259, type: !3364, align: 8)
!9972 = distinct !DILexicalBlock(scope: !9963, file: !9822, line: 259, column: 13)
!9973 = !DILocalVariable(name: "capacity", scope: !9974, file: !9822, line: 260, type: !108, align: 8)
!9974 = distinct !DILexicalBlock(scope: !9972, file: !9822, line: 260, column: 13)
!9975 = !DILocation(line: 256, column: 37, scope: !9963)
!9976 = !DILocation(line: 256, column: 50, scope: !9963)
!9977 = !DILocation(line: 256, column: 67, scope: !9963)
!9978 = !DILocalVariable(name: "self", arg: 1, scope: !9979, file: !1180, line: 44, type: !3364)
!9979 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h3f370a104d25af57E", scope: !1316, file: !1180, line: 44, type: !9980, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2243, retainedNodes: !9982)
!9980 = !DISubroutineType(types: !9981)
!9981 = !{!3364, !3364}
!9982 = !{!9978}
!9983 = !DILocation(line: 44, column: 26, scope: !9979, inlinedAt: !9984)
!9984 = distinct !DILocation(line: 259, column: 23, scope: !9963)
!9985 = !DILocation(line: 259, column: 23, scope: !9963)
!9986 = !DILocation(line: 259, column: 17, scope: !9972)
!9987 = !DILocation(line: 260, column: 28, scope: !9972)
!9988 = !DILocation(line: 260, column: 17, scope: !9974)
!9989 = !DILocation(line: 262, column: 24, scope: !9974)
!9990 = !DILocation(line: 266, column: 6, scope: !9963)
!9991 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E", scope: !87, file: !9822, line: 287, type: !9992, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !9994, retainedNodes: !9995)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{!3364, !9949}
!9994 = !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2f5d64be0250d4d4E", scope: !87, file: !9822, line: 287, type: !9992, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!9995 = !{!9996}
!9996 = !DILocalVariable(name: "self", arg: 1, scope: !9991, file: !9822, line: 287, type: !9949)
!9997 = !DILocation(line: 287, column: 22, scope: !9991)
!9998 = !DILocation(line: 288, column: 9, scope: !9991)
!9999 = !DILocation(line: 289, column: 6, scope: !9991)
!10000 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE", scope: !87, file: !9822, line: 300, type: !10001, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10003, retainedNodes: !10004)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!9, !9949}
!10003 = !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h5f7c879ceb386a8aE", scope: !87, file: !9822, line: 300, type: !10001, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10004 = !{!10005}
!10005 = !DILocalVariable(name: "self", arg: 1, scope: !10000, file: !9822, line: 300, type: !9949)
!10006 = !DILocation(line: 300, column: 27, scope: !10000)
!10007 = !DILocation(line: 301, column: 9, scope: !10000)
!10008 = !DILocation(line: 302, column: 6, scope: !10000)
!10009 = distinct !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17hb5286c63e3c22fabE", scope: !87, file: !9822, line: 306, type: !10010, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10013, retainedNodes: !10014)
!10010 = !DISubroutineType(types: !10011)
!10011 = !{!10012, !9949}
!10012 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !112, size: 64, align: 64, dwarfAddressSpace: 0)
!10013 = !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17hb5286c63e3c22fabE", scope: !87, file: !9822, line: 306, type: !10010, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10014 = !{!10015}
!10015 = !DILocalVariable(name: "self", arg: 1, scope: !10009, file: !9822, line: 306, type: !9949)
!10016 = !DILocation(line: 306, column: 22, scope: !10009)
!10017 = !DILocation(line: 307, column: 9, scope: !10009)
!10018 = !DILocation(line: 308, column: 6, scope: !10009)
!10019 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfe162141bb17885dE", scope: !87, file: !9822, line: 332, type: !10020, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10023, retainedNodes: !10024)
!10020 = !DISubroutineType(types: !10021)
!10021 = !{null, !10022, !9, !9, !1690}
!10022 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!10023 = !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfe162141bb17885dE", scope: !87, file: !9822, line: 332, type: !10020, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10024 = !{!10025, !10026, !10027}
!10025 = !DILocalVariable(name: "self", arg: 1, scope: !10019, file: !9822, line: 332, type: !10022)
!10026 = !DILocalVariable(name: "len", arg: 2, scope: !10019, file: !9822, line: 332, type: !9)
!10027 = !DILocalVariable(name: "additional", arg: 3, scope: !10019, file: !9822, line: 332, type: !9)
!10028 = !DILocation(line: 332, column: 20, scope: !10019)
!10029 = !DILocation(line: 332, column: 31, scope: !10019)
!10030 = !DILocation(line: 332, column: 43, scope: !10019)
!10031 = !DILocation(line: 333, column: 9, scope: !10019)
!10032 = !DILocation(line: 334, column: 6, scope: !10019)
!10033 = distinct !DISubprogram(name: "grow_one<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h6bb6430105e62c38E", scope: !87, file: !9822, line: 341, type: !10034, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10036, retainedNodes: !10037)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{null, !10022, !1690}
!10036 = !DISubprogram(name: "grow_one<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h6bb6430105e62c38E", scope: !87, file: !9822, line: 341, type: !10034, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10037 = !{!10038}
!10038 = !DILocalVariable(name: "self", arg: 1, scope: !10033, file: !9822, line: 341, type: !10022)
!10039 = !DILocation(line: 341, column: 21, scope: !10033)
!10040 = !DILocation(line: 342, column: 9, scope: !10033)
!10041 = !DILocation(line: 343, column: 6, scope: !10033)
!10042 = distinct !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h45f419b025448998E", scope: !87, file: !9822, line: 346, type: !10043, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10045, retainedNodes: !10046)
!10043 = !DISubroutineType(types: !10044)
!10044 = !{!1722, !10022, !9, !9}
!10045 = !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h45f419b025448998E", scope: !87, file: !9822, line: 346, type: !10043, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10046 = !{!10047, !10048, !10049}
!10047 = !DILocalVariable(name: "self", arg: 1, scope: !10042, file: !9822, line: 346, type: !10022)
!10048 = !DILocalVariable(name: "len", arg: 2, scope: !10042, file: !9822, line: 346, type: !9)
!10049 = !DILocalVariable(name: "additional", arg: 3, scope: !10042, file: !9822, line: 346, type: !9)
!10050 = !DILocation(line: 346, column: 24, scope: !10042)
!10051 = !DILocation(line: 346, column: 35, scope: !10042)
!10052 = !DILocation(line: 346, column: 47, scope: !10042)
!10053 = !DILocation(line: 347, column: 9, scope: !10042)
!10054 = !DILocation(line: 348, column: 6, scope: !10042)
!10055 = distinct !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h4fb005f774d65aa5E", scope: !87, file: !9822, line: 369, type: !10020, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10056, retainedNodes: !10057)
!10056 = !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h4fb005f774d65aa5E", scope: !87, file: !9822, line: 369, type: !10020, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10057 = !{!10058, !10059, !10060}
!10058 = !DILocalVariable(name: "self", arg: 1, scope: !10055, file: !9822, line: 369, type: !10022)
!10059 = !DILocalVariable(name: "len", arg: 2, scope: !10055, file: !9822, line: 369, type: !9)
!10060 = !DILocalVariable(name: "additional", arg: 3, scope: !10055, file: !9822, line: 369, type: !9)
!10061 = !DILocation(line: 369, column: 26, scope: !10055)
!10062 = !DILocation(line: 369, column: 37, scope: !10055)
!10063 = !DILocation(line: 369, column: 49, scope: !10055)
!10064 = !DILocation(line: 370, column: 9, scope: !10055)
!10065 = !DILocation(line: 371, column: 6, scope: !10055)
!10066 = distinct !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h555185e7175c9440E", scope: !87, file: !9822, line: 374, type: !10043, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10067, retainedNodes: !10068)
!10067 = !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h555185e7175c9440E", scope: !87, file: !9822, line: 374, type: !10043, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10068 = !{!10069, !10070, !10071}
!10069 = !DILocalVariable(name: "self", arg: 1, scope: !10066, file: !9822, line: 375, type: !10022)
!10070 = !DILocalVariable(name: "len", arg: 2, scope: !10066, file: !9822, line: 376, type: !9)
!10071 = !DILocalVariable(name: "additional", arg: 3, scope: !10066, file: !9822, line: 377, type: !9)
!10072 = !DILocation(line: 375, column: 9, scope: !10066)
!10073 = !DILocation(line: 376, column: 9, scope: !10066)
!10074 = !DILocation(line: 377, column: 9, scope: !10066)
!10075 = !DILocation(line: 379, column: 9, scope: !10066)
!10076 = !DILocation(line: 380, column: 6, scope: !10066)
!10077 = distinct !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17hdf153631dd09b4f0E", scope: !87, file: !9822, line: 395, type: !10078, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !10080, retainedNodes: !10081)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{null, !10022, !9, !1690}
!10080 = !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17hdf153631dd09b4f0E", scope: !87, file: !9822, line: 395, type: !10078, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!10081 = !{!10082, !10083}
!10082 = !DILocalVariable(name: "self", arg: 1, scope: !10077, file: !9822, line: 395, type: !10022)
!10083 = !DILocalVariable(name: "cap", arg: 2, scope: !10077, file: !9822, line: 395, type: !9)
!10084 = !DILocation(line: 395, column: 26, scope: !10077)
!10085 = !DILocation(line: 395, column: 37, scope: !10077)
!10086 = !DILocation(line: 396, column: 9, scope: !10077)
!10087 = !DILocation(line: 397, column: 6, scope: !10077)
!10088 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h320ebc5f8ac34099E", scope: !10089, file: !9822, line: 402, type: !10090, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !10092)
!10089 = !DINamespace(name: "{impl#4}", scope: !88)
!10090 = !DISubroutineType(types: !10091)
!10091 = !{null, !10022}
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "self", arg: 1, scope: !10088, file: !9822, line: 402, type: !10022)
!10094 = !DILocation(line: 402, column: 13, scope: !10088)
!10095 = !DILocation(line: 404, column: 18, scope: !10088)
!10096 = !DILocation(line: 405, column: 6, scope: !10088)
!10097 = distinct !DISubprogram(name: "new_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h5e79d016f74c3295E", scope: !91, file: !9822, line: 410, type: !10098, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10100, retainedNodes: !10101)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{!91, !112, !9}
!10100 = !DISubprogram(name: "new_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h5e79d016f74c3295E", scope: !91, file: !9822, line: 410, type: !10098, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10101 = !{!10102, !10103, !10104}
!10102 = !DILocalVariable(name: "alloc", arg: 1, scope: !10097, file: !9822, line: 410, type: !112)
!10103 = !DILocalVariable(name: "align", arg: 2, scope: !10097, file: !9822, line: 410, type: !9)
!10104 = !DILocalVariable(name: "ptr", scope: !10105, file: !9822, line: 411, type: !94, align: 8)
!10105 = distinct !DILexicalBlock(scope: !10097, file: !9822, line: 411, column: 9)
!10106 = !DILocation(line: 410, column: 21, scope: !10097)
!10107 = !DILocation(line: 410, column: 31, scope: !10097)
!10108 = !DILocation(line: 411, column: 28, scope: !10097)
!10109 = !DILocation(line: 411, column: 13, scope: !10105)
!10110 = !DILocation(line: 414, column: 6, scope: !10097)
!10111 = distinct !DISubprogram(name: "with_capacity_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17h081cff6a0cbe9ec7E", scope: !91, file: !9822, line: 419, type: !10112, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10114, retainedNodes: !10115)
!10112 = !DISubroutineType(types: !10113)
!10113 = !{!91, !9, !112, !1746, !1690}
!10114 = !DISubprogram(name: "with_capacity_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17h081cff6a0cbe9ec7E", scope: !91, file: !9822, line: 419, type: !10112, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10115 = !{!10116, !10117, !10118, !10119, !10121}
!10116 = !DILocalVariable(name: "capacity", arg: 1, scope: !10111, file: !9822, line: 419, type: !9)
!10117 = !DILocalVariable(name: "alloc", arg: 2, scope: !10111, file: !9822, line: 419, type: !112)
!10118 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !10111, file: !9822, line: 419, type: !1746)
!10119 = !DILocalVariable(name: "this", scope: !10120, file: !9822, line: 421, type: !91, align: 8)
!10120 = distinct !DILexicalBlock(scope: !10111, file: !9822, line: 421, column: 13)
!10121 = !DILocalVariable(name: "err", scope: !10122, file: !9822, line: 428, type: !1732, align: 8)
!10122 = distinct !DILexicalBlock(scope: !10111, file: !9822, line: 428, column: 13)
!10123 = !DILocation(line: 419, column: 25, scope: !10111)
!10124 = !DILocation(line: 419, column: 42, scope: !10111)
!10125 = !DILocation(line: 419, column: 52, scope: !10111)
!10126 = !DILocation(line: 421, column: 16, scope: !10120)
!10127 = !DILocation(line: 420, column: 47, scope: !10111)
!10128 = !DILocation(line: 420, column: 15, scope: !10111)
!10129 = !DILocation(line: 420, column: 9, scope: !10111)
!10130 = !DILocation(line: 421, column: 16, scope: !10111)
!10131 = !DILocation(line: 424, column: 45, scope: !10120)
!10132 = !DILocation(line: 424, column: 44, scope: !10120)
!10133 = !DILocalVariable(name: "cond", arg: 1, scope: !10134, file: !4806, line: 200, type: !520)
!10134 = distinct !DISubprogram(name: "assert_unchecked", linkageName: "_ZN4core4hint16assert_unchecked17h0c559e12ad185ad1E", scope: !4798, file: !4806, line: 200, type: !10135, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10137)
!10135 = !DISubroutineType(types: !10136)
!10136 = !{null, !520, !1690}
!10137 = !{!10133}
!10138 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 424, column: 21, scope: !10120)
!10140 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !10139)
!10141 = !DILexicalBlockFile(scope: !10134, file: !1177, discriminator: 0)
!10142 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !10139)
!10143 = !DILocation(line: 426, column: 17, scope: !10120)
!10144 = !DILocation(line: 430, column: 6, scope: !10111)
!10145 = !DILocation(line: 428, column: 17, scope: !10111)
!10146 = !DILocation(line: 428, column: 17, scope: !10122)
!10147 = !DILocation(line: 428, column: 25, scope: !10122)
!10148 = distinct !DISubprogram(name: "try_allocate_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h309b6bc6f7f642b6E", scope: !91, file: !9822, line: 451, type: !10149, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10166, retainedNodes: !10167)
!10149 = !DISubroutineType(types: !10150)
!10150 = !{!10151, !9, !293, !112, !1746}
!10151 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::raw_vec::RawVecInner<alloc::alloc::Global>, alloc::collections::TryReserveError>", scope: !865, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !10152, templateParams: !15, identifier: "6fae43cb2c62f63cf0c8eb2e4ae33588")
!10152 = !{!10153}
!10153 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10151, file: !2, size: 192, align: 64, elements: !10154, templateParams: !15, identifier: "fd22b3c76e95227b97e0fc62d77636be", discriminator: !10165)
!10154 = !{!10155, !10161}
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10153, file: !2, baseType: !10156, size: 192, align: 64, extraData: i128 0)
!10156 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10151, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !10157, templateParams: !10159, identifier: "396ae1a2202b9a3c318cdc316aac0894")
!10157 = !{!10158}
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10156, file: !2, baseType: !91, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!10159 = !{!10160, !1731}
!10160 = !DITemplateTypeParameter(name: "T", type: !91)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10153, file: !2, baseType: !10162, size: 192, align: 64, extraData: i128 1)
!10162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10151, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !10163, templateParams: !10159, identifier: "b478bea0f47dd1f2eb079f87154164db")
!10163 = !{!10164}
!10164 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10162, file: !2, baseType: !1732, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!10165 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!10166 = !DISubprogram(name: "try_allocate_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h309b6bc6f7f642b6E", scope: !91, file: !9822, line: 451, type: !10149, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10167 = !{!10168, !10169, !10170, !10171, !10172, !10174, !10176, !10178, !10180, !10182}
!10168 = !DILocalVariable(name: "capacity", arg: 1, scope: !10148, file: !9822, line: 452, type: !9)
!10169 = !DILocalVariable(name: "init", arg: 2, scope: !10148, file: !9822, line: 453, type: !293)
!10170 = !DILocalVariable(name: "alloc", arg: 3, scope: !10148, file: !9822, line: 454, type: !112)
!10171 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10148, file: !9822, line: 455, type: !1746)
!10172 = !DILocalVariable(name: "layout", scope: !10173, file: !9822, line: 459, type: !1746, align: 8)
!10173 = distinct !DILexicalBlock(scope: !10148, file: !9822, line: 459, column: 9)
!10174 = !DILocalVariable(name: "layout", scope: !10175, file: !9822, line: 460, type: !1746, align: 8)
!10175 = distinct !DILexicalBlock(scope: !10148, file: !9822, line: 460, column: 13)
!10176 = !DILocalVariable(name: "err", scope: !10177, file: !9822, line: 469, type: !1732, align: 8)
!10177 = distinct !DILexicalBlock(scope: !10173, file: !9822, line: 469, column: 54)
!10178 = !DILocalVariable(name: "result", scope: !10179, file: !9822, line: 473, type: !1657, align: 8)
!10179 = distinct !DILexicalBlock(scope: !10173, file: !9822, line: 473, column: 9)
!10180 = !DILocalVariable(name: "ptr", scope: !10181, file: !9822, line: 478, type: !1665, align: 8)
!10181 = distinct !DILexicalBlock(scope: !10179, file: !9822, line: 478, column: 9)
!10182 = !DILocalVariable(name: "ptr", scope: !10183, file: !9822, line: 479, type: !1665, align: 8)
!10183 = distinct !DILexicalBlock(scope: !10179, file: !9822, line: 479, column: 13)
!10184 = !DILocation(line: 452, column: 9, scope: !10148)
!10185 = !DILocation(line: 453, column: 9, scope: !10148)
!10186 = !DILocation(line: 454, column: 9, scope: !10148)
!10187 = !DILocation(line: 455, column: 9, scope: !10148)
!10188 = !DILocation(line: 459, column: 13, scope: !10173)
!10189 = !DILocation(line: 460, column: 16, scope: !10175)
!10190 = !DILocation(line: 473, column: 13, scope: !10179)
!10191 = !DILocation(line: 459, column: 13, scope: !10148)
!10192 = !DILocation(line: 459, column: 28, scope: !10148)
!10193 = !DILocation(line: 459, column: 22, scope: !10148)
!10194 = !DILocation(line: 460, column: 16, scope: !10148)
!10195 = !DILocation(line: 460, column: 27, scope: !10175)
!10196 = !DILocation(line: 465, column: 12, scope: !10173)
!10197 = !DILocation(line: 461, column: 34, scope: !10148)
!10198 = !DILocation(line: 461, column: 30, scope: !10148)
!10199 = !DILocation(line: 0, scope: !10200)
!10200 = !DILexicalBlockFile(scope: !10148, file: !4366, discriminator: 0)
!10201 = !DILocation(line: 466, column: 36, scope: !10173)
!10202 = !DILocation(line: 466, column: 43, scope: !10173)
!10203 = !DILocation(line: 466, column: 23, scope: !10173)
!10204 = !DILocation(line: 466, column: 20, scope: !10173)
!10205 = !DILocation(line: 0, scope: !10206)
!10206 = !DILexicalBlockFile(scope: !10173, file: !4366, discriminator: 0)
!10207 = !DILocation(line: 469, column: 39, scope: !10177)
!10208 = !DILocation(line: 469, column: 27, scope: !10177)
!10209 = !DILocation(line: 469, column: 16, scope: !10177)
!10210 = !DILocation(line: 487, column: 5, scope: !10148)
!10211 = !DILocation(line: 469, column: 20, scope: !10177)
!10212 = !DILocation(line: 470, column: 20, scope: !10177)
!10213 = !DILocation(line: 473, column: 28, scope: !10173)
!10214 = !DILocation(line: 473, column: 22, scope: !10173)
!10215 = !DILocation(line: 474, column: 56, scope: !10173)
!10216 = !DILocation(line: 474, column: 41, scope: !10173)
!10217 = !DILocation(line: 476, column: 56, scope: !10173)
!10218 = !DILocation(line: 476, column: 34, scope: !10173)
!10219 = !DILocation(line: 478, column: 25, scope: !10179)
!10220 = !DILocation(line: 478, column: 19, scope: !10179)
!10221 = !DILocation(line: 479, column: 16, scope: !10179)
!10222 = !DILocation(line: 478, column: 13, scope: !10181)
!10223 = !DILocation(line: 479, column: 16, scope: !10183)
!10224 = !DILocation(line: 486, column: 37, scope: !10181)
!10225 = !DILocation(line: 486, column: 24, scope: !10181)
!10226 = !DILocation(line: 486, column: 81, scope: !10181)
!10227 = !DILocation(line: 486, column: 9, scope: !10181)
!10228 = !DILocation(line: 480, column: 47, scope: !10179)
!10229 = !DILocation(line: 480, column: 34, scope: !10179)
!10230 = !DILocation(line: 480, column: 30, scope: !10179)
!10231 = !DILocation(line: 487, column: 6, scope: !10148)
!10232 = distinct !DISubprogram(name: "from_raw_parts_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17h43dd2dd595bf7e79E", scope: !91, file: !9822, line: 490, type: !10233, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10235, retainedNodes: !10236)
!10233 = !DISubroutineType(types: !10234)
!10234 = !{!91, !3364, !108, !112}
!10235 = !DISubprogram(name: "from_raw_parts_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17h43dd2dd595bf7e79E", scope: !91, file: !9822, line: 490, type: !10233, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10236 = !{!10237, !10238, !10239}
!10237 = !DILocalVariable(name: "ptr", arg: 1, scope: !10232, file: !9822, line: 490, type: !3364)
!10238 = !DILocalVariable(name: "cap", arg: 2, scope: !10232, file: !9822, line: 490, type: !108)
!10239 = !DILocalVariable(name: "alloc", arg: 3, scope: !10232, file: !9822, line: 490, type: !112)
!10240 = !DILocation(line: 490, column: 33, scope: !10232)
!10241 = !DILocation(line: 490, column: 47, scope: !10232)
!10242 = !DILocation(line: 490, column: 57, scope: !10232)
!10243 = !DILocation(line: 491, column: 30, scope: !10232)
!10244 = !DILocation(line: 492, column: 6, scope: !10232)
!10245 = distinct !DISubprogram(name: "ptr<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17hd6a3c9f6f90e86eeE", scope: !91, file: !9822, line: 500, type: !10246, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !10250, declaration: !10249, retainedNodes: !10251)
!10246 = !DISubroutineType(types: !10247)
!10247 = !{!3364, !10248}
!10248 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVecInner<alloc::alloc::Global>", baseType: !91, size: 64, align: 64, dwarfAddressSpace: 0)
!10249 = !DISubprogram(name: "ptr<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17hd6a3c9f6f90e86eeE", scope: !91, file: !9822, line: 500, type: !10246, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !10250)
!10250 = !{!115, !44}
!10251 = !{!10252}
!10252 = !DILocalVariable(name: "self", arg: 1, scope: !10245, file: !9822, line: 500, type: !10248)
!10253 = !DILocation(line: 500, column: 21, scope: !10245)
!10254 = !DILocation(line: 501, column: 9, scope: !10245)
!10255 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !10256)
!10256 = distinct !DILocation(line: 501, column: 9, scope: !10245)
!10257 = !DILocation(line: 502, column: 6, scope: !10245)
!10258 = distinct !DISubprogram(name: "non_null<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17hf0d9a2ceeb32f7beE", scope: !91, file: !9822, line: 505, type: !10259, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !10250, declaration: !10261, retainedNodes: !10262)
!10259 = !DISubroutineType(types: !10260)
!10260 = !{!99, !10248}
!10261 = !DISubprogram(name: "non_null<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17hf0d9a2ceeb32f7beE", scope: !91, file: !9822, line: 505, type: !10259, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !10250)
!10262 = !{!10263}
!10263 = !DILocalVariable(name: "self", arg: 1, scope: !10258, file: !9822, line: 505, type: !10248)
!10264 = !DILocation(line: 505, column: 26, scope: !10258)
!10265 = !DILocation(line: 506, column: 9, scope: !10258)
!10266 = !DILocation(line: 507, column: 6, scope: !10258)
!10267 = distinct !DISubprogram(name: "capacity<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17he20cf9ee637f6c88E", scope: !91, file: !9822, line: 510, type: !10268, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10270, retainedNodes: !10271)
!10268 = !DISubroutineType(types: !10269)
!10269 = !{!9, !10248, !9}
!10270 = !DISubprogram(name: "capacity<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17he20cf9ee637f6c88E", scope: !91, file: !9822, line: 510, type: !10268, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10271 = !{!10272, !10273}
!10272 = !DILocalVariable(name: "self", arg: 1, scope: !10267, file: !9822, line: 510, type: !10248)
!10273 = !DILocalVariable(name: "elem_size", arg: 2, scope: !10267, file: !9822, line: 510, type: !9)
!10274 = !DILocation(line: 510, column: 23, scope: !10267)
!10275 = !DILocation(line: 510, column: 30, scope: !10267)
!10276 = !DILocation(line: 511, column: 12, scope: !10267)
!10277 = !DILocation(line: 511, column: 29, scope: !10267)
!10278 = !DILocation(line: 511, column: 9, scope: !10267)
!10279 = !DILocation(line: 511, column: 49, scope: !10267)
!10280 = !DILocation(line: 512, column: 6, scope: !10267)
!10281 = distinct !DISubprogram(name: "allocator<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17hd6c9d1a9941d3700E", scope: !91, file: !9822, line: 515, type: !10282, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10284, retainedNodes: !10285)
!10282 = !DISubroutineType(types: !10283)
!10283 = !{!10012, !10248}
!10284 = !DISubprogram(name: "allocator<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17hd6c9d1a9941d3700E", scope: !91, file: !9822, line: 515, type: !10282, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "self", arg: 1, scope: !10281, file: !9822, line: 515, type: !10248)
!10287 = !DILocation(line: 515, column: 18, scope: !10281)
!10288 = !DILocation(line: 516, column: 9, scope: !10281)
!10289 = !DILocation(line: 517, column: 6, scope: !10281)
!10290 = distinct !DISubprogram(name: "current_memory<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E", scope: !91, file: !9822, line: 520, type: !10291, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10310, retainedNodes: !10311)
!10291 = !DISubroutineType(types: !10292)
!10292 = !{!10293, !10248, !1746}
!10293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !37, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !10294, templateParams: !15, identifier: "a793c45ac5bc43d499c92b4890c44b19")
!10294 = !{!10295}
!10295 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10293, file: !2, size: 192, align: 64, elements: !10296, templateParams: !15, identifier: "851d77589a197c18cf29789cb9d3490", discriminator: !10309)
!10296 = !{!10297, !10305}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !10295, file: !2, baseType: !10298, size: 192, align: 64, extraData: i128 0)
!10298 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !10293, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !15, templateParams: !10299, identifier: "6aae9314c79f898eddc69b6326d3361a")
!10299 = !{!10300}
!10300 = !DITemplateTypeParameter(name: "T", type: !10301)
!10301 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !10302, templateParams: !15, identifier: "1a62a5ef1377ad7d9c45b779aeec06df")
!10302 = !{!10303, !10304}
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10301, file: !2, baseType: !99, size: 64, align: 64)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !10301, file: !2, baseType: !1746, size: 128, align: 64, offset: 64)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !10295, file: !2, baseType: !10306, size: 192, align: 64)
!10306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !10293, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !10307, templateParams: !10299, identifier: "fb98861f8399ab1b55ed337d0c9c218a")
!10307 = !{!10308}
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10306, file: !2, baseType: !10301, size: 192, align: 64, flags: DIFlagPublic)
!10309 = !DIDerivedType(tag: DW_TAG_member, scope: !10293, file: !2, baseType: !212, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!10310 = !DISubprogram(name: "current_memory<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h3fde653880c0f4c4E", scope: !91, file: !9822, line: 520, type: !10291, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10311 = !{!10312, !10313, !10314, !10316}
!10312 = !DILocalVariable(name: "self", arg: 1, scope: !10290, file: !9822, line: 520, type: !10248)
!10313 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !10290, file: !9822, line: 520, type: !1746)
!10314 = !DILocalVariable(name: "alloc_size", scope: !10315, file: !9822, line: 529, type: !9, align: 8)
!10315 = distinct !DILexicalBlock(scope: !10290, file: !9822, line: 529, column: 17)
!10316 = !DILocalVariable(name: "layout", scope: !10317, file: !9822, line: 530, type: !1746, align: 8)
!10317 = distinct !DILexicalBlock(scope: !10315, file: !9822, line: 530, column: 17)
!10318 = !DILocation(line: 520, column: 23, scope: !10290)
!10319 = !DILocation(line: 520, column: 30, scope: !10290)
!10320 = !DILocation(line: 521, column: 12, scope: !10290)
!10321 = !DILocation(line: 522, column: 13, scope: !10290)
!10322 = !DILocation(line: 521, column: 9, scope: !10290)
!10323 = !DILocation(line: 521, column: 39, scope: !10290)
!10324 = !DILocation(line: 529, column: 34, scope: !10290)
!10325 = !DILocation(line: 529, column: 67, scope: !10290)
!10326 = !DILocalVariable(name: "self", arg: 1, scope: !10327, file: !2672, line: 933, type: !9)
!10327 = distinct !DISubprogram(name: "unchecked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17h96386fa8e808ed0dE", scope: !2720, file: !2672, line: 933, type: !2852, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10328)
!10328 = !{!10326, !10329}
!10329 = !DILocalVariable(name: "rhs", arg: 2, scope: !10327, file: !2672, line: 933, type: !9)
!10330 = !DILocation(line: 933, column: 43, scope: !10327, inlinedAt: !10331)
!10331 = distinct !DILocation(line: 529, column: 34, scope: !10290)
!10332 = !DILocation(line: 933, column: 49, scope: !10327, inlinedAt: !10331)
!10333 = !DILocation(line: 74, column: 35, scope: !10334, inlinedAt: !10331)
!10334 = !DILexicalBlockFile(scope: !10327, file: !1177, discriminator: 0)
!10335 = !DILocation(line: 75, column: 17, scope: !10334, inlinedAt: !10331)
!10336 = !DILocation(line: 945, column: 17, scope: !10327, inlinedAt: !10331)
!10337 = !DILocation(line: 529, column: 21, scope: !10315)
!10338 = !DILocation(line: 530, column: 76, scope: !10315)
!10339 = !DILocation(line: 530, column: 30, scope: !10315)
!10340 = !DILocation(line: 530, column: 21, scope: !10317)
!10341 = !DILocation(line: 531, column: 23, scope: !10317)
!10342 = !DILocation(line: 531, column: 22, scope: !10317)
!10343 = !DILocation(line: 531, column: 17, scope: !10317)
!10344 = !DILocation(line: 534, column: 6, scope: !10290)
!10345 = distinct !DISubprogram(name: "reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17hdf89b6a9e98ad900E", scope: !91, file: !9822, line: 539, type: !10346, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10349, retainedNodes: !10350)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{null, !10348, !9, !9, !1746, !1690}
!10348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVecInner<alloc::alloc::Global>", baseType: !91, size: 64, align: 64, dwarfAddressSpace: 0)
!10349 = !DISubprogram(name: "reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17hdf89b6a9e98ad900E", scope: !91, file: !9822, line: 539, type: !10346, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10350 = !{!10351, !10352, !10353, !10354}
!10351 = !DILocalVariable(name: "self", arg: 1, scope: !10345, file: !9822, line: 539, type: !10348)
!10352 = !DILocalVariable(name: "len", arg: 2, scope: !10345, file: !9822, line: 539, type: !9)
!10353 = !DILocalVariable(name: "additional", arg: 3, scope: !10345, file: !9822, line: 539, type: !9)
!10354 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10345, file: !9822, line: 539, type: !1746)
!10355 = !DILocation(line: 539, column: 16, scope: !10345)
!10356 = !DILocation(line: 539, column: 27, scope: !10345)
!10357 = !DILocation(line: 539, column: 39, scope: !10345)
!10358 = !DILocation(line: 539, column: 58, scope: !10345)
!10359 = !DILocation(line: 556, column: 12, scope: !10345)
!10360 = !DILocation(line: 559, column: 6, scope: !10345)
!10361 = !DILocation(line: 557, column: 13, scope: !10345)
!10362 = distinct !DISubprogram(name: "do_reserve_and_handle<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17hcf51c2800eafe3f8E", scope: !10363, file: !9822, line: 545, type: !10364, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, retainedNodes: !10366)
!10363 = !DINamespace(name: "reserve", scope: !7526)
!10364 = !DISubroutineType(types: !10365)
!10365 = !{null, !10348, !9, !9, !1746}
!10366 = !{!10367, !10368, !10369, !10370, !10371}
!10367 = !DILocalVariable(name: "slf", arg: 1, scope: !10362, file: !9822, line: 546, type: !10348)
!10368 = !DILocalVariable(name: "len", arg: 2, scope: !10362, file: !9822, line: 547, type: !9)
!10369 = !DILocalVariable(name: "additional", arg: 3, scope: !10362, file: !9822, line: 548, type: !9)
!10370 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10362, file: !9822, line: 549, type: !1746)
!10371 = !DILocalVariable(name: "err", scope: !10372, file: !9822, line: 551, type: !1732, align: 8)
!10372 = distinct !DILexicalBlock(scope: !10362, file: !9822, line: 551, column: 80)
!10373 = !DILocation(line: 546, column: 13, scope: !10362)
!10374 = !DILocation(line: 547, column: 13, scope: !10362)
!10375 = !DILocation(line: 548, column: 13, scope: !10362)
!10376 = !DILocation(line: 549, column: 13, scope: !10362)
!10377 = !DILocation(line: 551, column: 31, scope: !10372)
!10378 = !DILocation(line: 551, column: 20, scope: !10372)
!10379 = !DILocation(line: 551, column: 24, scope: !10372)
!10380 = !DILocation(line: 552, column: 17, scope: !10372)
!10381 = !DILocation(line: 554, column: 10, scope: !10362)
!10382 = !DILocation(line: 545, column: 9, scope: !10362)
!10383 = distinct !DISubprogram(name: "grow_one<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17ha3a69cc432d0aea0E", scope: !91, file: !9822, line: 564, type: !10384, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10386, retainedNodes: !10387)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{null, !10348, !1746, !1690}
!10386 = !DISubprogram(name: "grow_one<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17ha3a69cc432d0aea0E", scope: !91, file: !9822, line: 564, type: !10384, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10387 = !{!10388, !10389, !10390}
!10388 = !DILocalVariable(name: "self", arg: 1, scope: !10383, file: !9822, line: 564, type: !10348)
!10389 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !10383, file: !9822, line: 564, type: !1746)
!10390 = !DILocalVariable(name: "err", scope: !10391, file: !9822, line: 565, type: !1732, align: 8)
!10391 = distinct !DILexicalBlock(scope: !10383, file: !9822, line: 565, column: 75)
!10392 = !DILocation(line: 564, column: 17, scope: !10383)
!10393 = !DILocation(line: 564, column: 28, scope: !10383)
!10394 = !DILocation(line: 565, column: 47, scope: !10391)
!10395 = !DILocation(line: 565, column: 27, scope: !10391)
!10396 = !DILocation(line: 565, column: 16, scope: !10391)
!10397 = !DILocation(line: 565, column: 20, scope: !10391)
!10398 = !DILocation(line: 566, column: 13, scope: !10391)
!10399 = !DILocation(line: 568, column: 6, scope: !10383)
!10400 = !DILocation(line: 564, column: 5, scope: !10383)
!10401 = distinct !DISubprogram(name: "try_reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17hbb93dc4b1c763386E", scope: !91, file: !9822, line: 570, type: !10402, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10404, retainedNodes: !10405)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{!1722, !10348, !9, !9, !1746}
!10404 = !DISubprogram(name: "try_reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17hbb93dc4b1c763386E", scope: !91, file: !9822, line: 570, type: !10402, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10405 = !{!10406, !10407, !10408, !10409, !10410, !10412}
!10406 = !DILocalVariable(name: "self", arg: 1, scope: !10401, file: !9822, line: 571, type: !10348)
!10407 = !DILocalVariable(name: "len", arg: 2, scope: !10401, file: !9822, line: 572, type: !9)
!10408 = !DILocalVariable(name: "additional", arg: 3, scope: !10401, file: !9822, line: 573, type: !9)
!10409 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10401, file: !9822, line: 574, type: !1746)
!10410 = !DILocalVariable(name: "residual", scope: !10411, file: !9822, line: 577, type: !1789, align: 8)
!10411 = distinct !DILexicalBlock(scope: !10401, file: !9822, line: 577, column: 62)
!10412 = !DILocalVariable(name: "val", scope: !10413, file: !9822, line: 577, type: !7, align: 1)
!10413 = distinct !DILexicalBlock(scope: !10401, file: !9822, line: 577, column: 13)
!10414 = !DILocation(line: 571, column: 9, scope: !10401)
!10415 = !DILocation(line: 572, column: 9, scope: !10401)
!10416 = !DILocation(line: 573, column: 9, scope: !10401)
!10417 = !DILocation(line: 574, column: 9, scope: !10401)
!10418 = !DILocation(line: 577, column: 13, scope: !10413)
!10419 = !DILocation(line: 576, column: 12, scope: !10401)
!10420 = !DILocation(line: 581, column: 37, scope: !10401)
!10421 = !DILocation(line: 581, column: 36, scope: !10401)
!10422 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !10423)
!10423 = distinct !DILocation(line: 581, column: 13, scope: !10401)
!10424 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !10423)
!10425 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !10423)
!10426 = !DILocation(line: 583, column: 9, scope: !10401)
!10427 = !DILocation(line: 584, column: 6, scope: !10401)
!10428 = !DILocation(line: 577, column: 13, scope: !10401)
!10429 = !DILocation(line: 577, column: 62, scope: !10401)
!10430 = !DILocation(line: 577, column: 62, scope: !10411)
!10431 = !DILocation(line: 577, column: 13, scope: !10411)
!10432 = distinct !DISubprogram(name: "reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h17e04bf2f72d32f7E", scope: !91, file: !9822, line: 588, type: !10346, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10433, retainedNodes: !10434)
!10433 = !DISubprogram(name: "reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h17e04bf2f72d32f7E", scope: !91, file: !9822, line: 588, type: !10346, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10434 = !{!10435, !10436, !10437, !10438, !10439}
!10435 = !DILocalVariable(name: "self", arg: 1, scope: !10432, file: !9822, line: 588, type: !10348)
!10436 = !DILocalVariable(name: "len", arg: 2, scope: !10432, file: !9822, line: 588, type: !9)
!10437 = !DILocalVariable(name: "additional", arg: 3, scope: !10432, file: !9822, line: 588, type: !9)
!10438 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10432, file: !9822, line: 588, type: !1746)
!10439 = !DILocalVariable(name: "err", scope: !10440, file: !9822, line: 589, type: !1732, align: 8)
!10440 = distinct !DILexicalBlock(scope: !10432, file: !9822, line: 589, column: 80)
!10441 = !DILocation(line: 588, column: 22, scope: !10432)
!10442 = !DILocation(line: 588, column: 33, scope: !10432)
!10443 = !DILocation(line: 588, column: 45, scope: !10432)
!10444 = !DILocation(line: 588, column: 64, scope: !10432)
!10445 = !DILocation(line: 589, column: 27, scope: !10440)
!10446 = !DILocation(line: 589, column: 16, scope: !10440)
!10447 = !DILocation(line: 589, column: 20, scope: !10440)
!10448 = !DILocation(line: 590, column: 13, scope: !10440)
!10449 = !DILocation(line: 592, column: 6, scope: !10432)
!10450 = !DILocation(line: 588, column: 5, scope: !10432)
!10451 = distinct !DISubprogram(name: "try_reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17h9e3b900bf6abbe63E", scope: !91, file: !9822, line: 594, type: !10402, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10452, retainedNodes: !10453)
!10452 = !DISubprogram(name: "try_reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17h9e3b900bf6abbe63E", scope: !91, file: !9822, line: 594, type: !10402, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10453 = !{!10454, !10455, !10456, !10457, !10458, !10460}
!10454 = !DILocalVariable(name: "self", arg: 1, scope: !10451, file: !9822, line: 595, type: !10348)
!10455 = !DILocalVariable(name: "len", arg: 2, scope: !10451, file: !9822, line: 596, type: !9)
!10456 = !DILocalVariable(name: "additional", arg: 3, scope: !10451, file: !9822, line: 597, type: !9)
!10457 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10451, file: !9822, line: 598, type: !1746)
!10458 = !DILocalVariable(name: "residual", scope: !10459, file: !9822, line: 601, type: !1789, align: 8)
!10459 = distinct !DILexicalBlock(scope: !10451, file: !9822, line: 601, column: 58)
!10460 = !DILocalVariable(name: "val", scope: !10461, file: !9822, line: 601, type: !7, align: 1)
!10461 = distinct !DILexicalBlock(scope: !10451, file: !9822, line: 601, column: 13)
!10462 = !DILocation(line: 595, column: 9, scope: !10451)
!10463 = !DILocation(line: 596, column: 9, scope: !10451)
!10464 = !DILocation(line: 597, column: 9, scope: !10451)
!10465 = !DILocation(line: 598, column: 9, scope: !10451)
!10466 = !DILocation(line: 601, column: 13, scope: !10461)
!10467 = !DILocation(line: 600, column: 12, scope: !10451)
!10468 = !DILocation(line: 605, column: 37, scope: !10451)
!10469 = !DILocation(line: 605, column: 36, scope: !10451)
!10470 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !10471)
!10471 = distinct !DILocation(line: 605, column: 13, scope: !10451)
!10472 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !10471)
!10473 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !10471)
!10474 = !DILocation(line: 607, column: 9, scope: !10451)
!10475 = !DILocation(line: 608, column: 6, scope: !10451)
!10476 = !DILocation(line: 601, column: 13, scope: !10451)
!10477 = !DILocation(line: 601, column: 58, scope: !10451)
!10478 = !DILocation(line: 601, column: 58, scope: !10459)
!10479 = !DILocation(line: 601, column: 13, scope: !10459)
!10480 = distinct !DISubprogram(name: "shrink_to_fit<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h9a56e8880d89d81bE", scope: !91, file: !9822, line: 613, type: !10481, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10483, retainedNodes: !10484)
!10481 = !DISubroutineType(types: !10482)
!10482 = !{null, !10348, !9, !1746, !1690}
!10483 = !DISubprogram(name: "shrink_to_fit<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h9a56e8880d89d81bE", scope: !91, file: !9822, line: 613, type: !10481, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10484 = !{!10485, !10486, !10487, !10488}
!10485 = !DILocalVariable(name: "self", arg: 1, scope: !10480, file: !9822, line: 613, type: !10348)
!10486 = !DILocalVariable(name: "cap", arg: 2, scope: !10480, file: !9822, line: 613, type: !9)
!10487 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !10480, file: !9822, line: 613, type: !1746)
!10488 = !DILocalVariable(name: "err", scope: !10489, file: !9822, line: 614, type: !1732, align: 8)
!10489 = distinct !DILexicalBlock(scope: !10480, file: !9822, line: 614, column: 57)
!10490 = !DILocation(line: 613, column: 22, scope: !10480)
!10491 = !DILocation(line: 613, column: 33, scope: !10480)
!10492 = !DILocation(line: 613, column: 45, scope: !10480)
!10493 = !DILocation(line: 614, column: 27, scope: !10489)
!10494 = !DILocation(line: 614, column: 16, scope: !10489)
!10495 = !DILocation(line: 614, column: 20, scope: !10489)
!10496 = !DILocation(line: 615, column: 13, scope: !10489)
!10497 = !DILocation(line: 617, column: 6, scope: !10480)
!10498 = !DILocation(line: 613, column: 5, scope: !10480)
!10499 = distinct !DISubprogram(name: "needs_to_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE", scope: !91, file: !9822, line: 620, type: !10500, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10502, retainedNodes: !10503)
!10500 = !DISubroutineType(types: !10501)
!10501 = !{!520, !10248, !9, !9, !1746}
!10502 = !DISubprogram(name: "needs_to_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h30f63cddb5efa99dE", scope: !91, file: !9822, line: 620, type: !10500, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10503 = !{!10504, !10505, !10506, !10507}
!10504 = !DILocalVariable(name: "self", arg: 1, scope: !10499, file: !9822, line: 620, type: !10248)
!10505 = !DILocalVariable(name: "len", arg: 2, scope: !10499, file: !9822, line: 620, type: !9)
!10506 = !DILocalVariable(name: "additional", arg: 3, scope: !10499, file: !9822, line: 620, type: !9)
!10507 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10499, file: !9822, line: 620, type: !1746)
!10508 = !DILocation(line: 620, column: 22, scope: !10499)
!10509 = !DILocation(line: 620, column: 29, scope: !10499)
!10510 = !DILocation(line: 620, column: 41, scope: !10499)
!10511 = !DILocation(line: 620, column: 60, scope: !10499)
!10512 = !DILocation(line: 621, column: 36, scope: !10499)
!10513 = !DILocation(line: 621, column: 22, scope: !10499)
!10514 = !DILocalVariable(name: "self", arg: 1, scope: !10515, file: !2672, line: 1977, type: !9)
!10515 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hf4f5e3945f326c54E", scope: !2720, file: !2672, line: 1977, type: !2852, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10516)
!10516 = !{!10514, !10517}
!10517 = !DILocalVariable(name: "rhs", arg: 2, scope: !10515, file: !2672, line: 1977, type: !9)
!10518 = !DILocation(line: 1977, column: 35, scope: !10515, inlinedAt: !10519)
!10519 = distinct !DILocation(line: 621, column: 22, scope: !10499)
!10520 = !DILocation(line: 1977, column: 41, scope: !10515, inlinedAt: !10519)
!10521 = !DILocation(line: 1978, column: 13, scope: !10515, inlinedAt: !10519)
!10522 = !DILocation(line: 621, column: 9, scope: !10499)
!10523 = !DILocation(line: 622, column: 6, scope: !10499)
!10524 = distinct !DISubprogram(name: "set_ptr_and_cap<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h9c104458183a65fcE", scope: !91, file: !9822, line: 625, type: !10525, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10527, retainedNodes: !10528)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{null, !10348, !1665, !9}
!10527 = !DISubprogram(name: "set_ptr_and_cap<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h9c104458183a65fcE", scope: !91, file: !9822, line: 625, type: !10525, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10528 = !{!10529, !10530, !10531}
!10529 = !DILocalVariable(name: "self", arg: 1, scope: !10524, file: !9822, line: 625, type: !10348)
!10530 = !DILocalVariable(name: "ptr", arg: 2, scope: !10524, file: !9822, line: 625, type: !1665)
!10531 = !DILocalVariable(name: "cap", arg: 3, scope: !10524, file: !9822, line: 625, type: !9)
!10532 = !DILocation(line: 625, column: 31, scope: !10524)
!10533 = !DILocation(line: 625, column: 42, scope: !10524)
!10534 = !DILocation(line: 625, column: 62, scope: !10524)
!10535 = !DILocation(line: 629, column: 33, scope: !10524)
!10536 = !DILocation(line: 629, column: 20, scope: !10524)
!10537 = !DILocation(line: 629, column: 9, scope: !10524)
!10538 = !DILocation(line: 630, column: 9, scope: !10524)
!10539 = !DILocation(line: 631, column: 6, scope: !10524)
!10540 = distinct !DISubprogram(name: "grow_amortized<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17ha98463843d4e0190E", scope: !91, file: !9822, line: 633, type: !10402, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10541, retainedNodes: !10542)
!10541 = !DISubprogram(name: "grow_amortized<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17ha98463843d4e0190E", scope: !91, file: !9822, line: 633, type: !10402, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10542 = !{!10543, !10544, !10545, !10546, !10547, !10549, !10551, !10553, !10555, !10557, !10559, !10561, !10563, !10565, !10567}
!10543 = !DILocalVariable(name: "self", arg: 1, scope: !10540, file: !9822, line: 634, type: !10348)
!10544 = !DILocalVariable(name: "len", arg: 2, scope: !10540, file: !9822, line: 635, type: !9)
!10545 = !DILocalVariable(name: "additional", arg: 3, scope: !10540, file: !9822, line: 636, type: !9)
!10546 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10540, file: !9822, line: 637, type: !1746)
!10547 = !DILocalVariable(name: "required_cap", scope: !10548, file: !9822, line: 649, type: !9, align: 8)
!10548 = distinct !DILexicalBlock(scope: !10540, file: !9822, line: 649, column: 9)
!10549 = !DILocalVariable(name: "residual", scope: !10550, file: !9822, line: 649, type: !1760, align: 8)
!10550 = distinct !DILexicalBlock(scope: !10540, file: !9822, line: 649, column: 79)
!10551 = !DILocalVariable(name: "val", scope: !10552, file: !9822, line: 649, type: !9, align: 8)
!10552 = distinct !DILexicalBlock(scope: !10540, file: !9822, line: 649, column: 28)
!10553 = !DILocalVariable(name: "cap", scope: !10554, file: !9822, line: 653, type: !9, align: 8)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !9822, line: 653, column: 9)
!10555 = !DILocalVariable(name: "cap", scope: !10556, file: !9822, line: 654, type: !9, align: 8)
!10556 = distinct !DILexicalBlock(scope: !10554, file: !9822, line: 654, column: 9)
!10557 = !DILocalVariable(name: "new_layout", scope: !10558, file: !9822, line: 656, type: !1746, align: 8)
!10558 = distinct !DILexicalBlock(scope: !10556, file: !9822, line: 656, column: 9)
!10559 = !DILocalVariable(name: "residual", scope: !10560, file: !9822, line: 656, type: !1789, align: 8)
!10560 = distinct !DILexicalBlock(scope: !10556, file: !9822, line: 656, column: 56)
!10561 = !DILocalVariable(name: "val", scope: !10562, file: !9822, line: 656, type: !1746, align: 8)
!10562 = distinct !DILexicalBlock(scope: !10556, file: !9822, line: 656, column: 26)
!10563 = !DILocalVariable(name: "ptr", scope: !10564, file: !9822, line: 658, type: !1665, align: 8)
!10564 = distinct !DILexicalBlock(scope: !10558, file: !9822, line: 658, column: 9)
!10565 = !DILocalVariable(name: "residual", scope: !10566, file: !9822, line: 658, type: !1789, align: 8)
!10566 = distinct !DILexicalBlock(scope: !10558, file: !9822, line: 658, column: 93)
!10567 = !DILocalVariable(name: "val", scope: !10568, file: !9822, line: 658, type: !1665, align: 8)
!10568 = distinct !DILexicalBlock(scope: !10558, file: !9822, line: 658, column: 19)
!10569 = !DILocation(line: 634, column: 9, scope: !10540)
!10570 = !DILocation(line: 635, column: 9, scope: !10540)
!10571 = !DILocation(line: 636, column: 9, scope: !10540)
!10572 = !DILocation(line: 637, column: 9, scope: !10540)
!10573 = !DILocation(line: 640, column: 23, scope: !10540)
!10574 = !DILocation(line: 640, column: 9, scope: !10540)
!10575 = !DILocation(line: 642, column: 12, scope: !10540)
!10576 = !DILocation(line: 645, column: 24, scope: !10540)
!10577 = !DILocation(line: 645, column: 20, scope: !10540)
!10578 = !DILocation(line: 0, scope: !10579)
!10579 = !DILexicalBlockFile(scope: !10540, file: !4366, discriminator: 0)
!10580 = !DILocation(line: 649, column: 28, scope: !10540)
!10581 = !DILocation(line: 649, column: 62, scope: !10540)
!10582 = !DILocation(line: 663, column: 6, scope: !10540)
!10583 = !DILocation(line: 649, column: 13, scope: !10548)
!10584 = !DILocation(line: 649, column: 28, scope: !10552)
!10585 = !DILocation(line: 653, column: 28, scope: !10548)
!10586 = !DILocation(line: 649, column: 79, scope: !10540)
!10587 = !DILocation(line: 649, column: 79, scope: !10550)
!10588 = !DILocation(line: 649, column: 28, scope: !10550)
!10589 = !DILocation(line: 653, column: 19, scope: !10548)
!10590 = !DILocation(line: 653, column: 13, scope: !10554)
!10591 = !DILocation(line: 654, column: 45, scope: !10554)
!10592 = !DILocation(line: 654, column: 28, scope: !10554)
!10593 = !DILocation(line: 654, column: 19, scope: !10554)
!10594 = !DILocation(line: 654, column: 13, scope: !10556)
!10595 = !DILocation(line: 656, column: 26, scope: !10556)
!10596 = !DILocation(line: 656, column: 13, scope: !10558)
!10597 = !DILocation(line: 656, column: 26, scope: !10562)
!10598 = !DILocation(line: 658, column: 43, scope: !10558)
!10599 = !DILocation(line: 658, column: 77, scope: !10558)
!10600 = !DILocation(line: 658, column: 19, scope: !10558)
!10601 = !DILocation(line: 656, column: 56, scope: !10556)
!10602 = !DILocation(line: 656, column: 56, scope: !10560)
!10603 = !DILocation(line: 656, column: 26, scope: !10560)
!10604 = !DILocation(line: 658, column: 13, scope: !10564)
!10605 = !DILocation(line: 658, column: 19, scope: !10568)
!10606 = !DILocation(line: 661, column: 18, scope: !10564)
!10607 = !DILocation(line: 662, column: 9, scope: !10564)
!10608 = !DILocation(line: 658, column: 93, scope: !10558)
!10609 = !DILocation(line: 658, column: 93, scope: !10566)
!10610 = !DILocation(line: 658, column: 19, scope: !10566)
!10611 = distinct !DISubprogram(name: "grow_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hbafcbfbd14b764c2E", scope: !91, file: !9822, line: 665, type: !10402, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10612, retainedNodes: !10613)
!10612 = !DISubprogram(name: "grow_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hbafcbfbd14b764c2E", scope: !91, file: !9822, line: 665, type: !10402, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10613 = !{!10614, !10615, !10616, !10617, !10618, !10620, !10622, !10624, !10626, !10628, !10630, !10632, !10634}
!10614 = !DILocalVariable(name: "self", arg: 1, scope: !10611, file: !9822, line: 666, type: !10348)
!10615 = !DILocalVariable(name: "len", arg: 2, scope: !10611, file: !9822, line: 667, type: !9)
!10616 = !DILocalVariable(name: "additional", arg: 3, scope: !10611, file: !9822, line: 668, type: !9)
!10617 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !10611, file: !9822, line: 669, type: !1746)
!10618 = !DILocalVariable(name: "cap", scope: !10619, file: !9822, line: 677, type: !9, align: 8)
!10619 = distinct !DILexicalBlock(scope: !10611, file: !9822, line: 677, column: 9)
!10620 = !DILocalVariable(name: "residual", scope: !10621, file: !9822, line: 677, type: !1760, align: 8)
!10621 = distinct !DILexicalBlock(scope: !10611, file: !9822, line: 677, column: 70)
!10622 = !DILocalVariable(name: "val", scope: !10623, file: !9822, line: 677, type: !9, align: 8)
!10623 = distinct !DILexicalBlock(scope: !10611, file: !9822, line: 677, column: 19)
!10624 = !DILocalVariable(name: "new_layout", scope: !10625, file: !9822, line: 678, type: !1746, align: 8)
!10625 = distinct !DILexicalBlock(scope: !10619, file: !9822, line: 678, column: 9)
!10626 = !DILocalVariable(name: "residual", scope: !10627, file: !9822, line: 678, type: !1789, align: 8)
!10627 = distinct !DILexicalBlock(scope: !10619, file: !9822, line: 678, column: 56)
!10628 = !DILocalVariable(name: "val", scope: !10629, file: !9822, line: 678, type: !1746, align: 8)
!10629 = distinct !DILexicalBlock(scope: !10619, file: !9822, line: 678, column: 26)
!10630 = !DILocalVariable(name: "ptr", scope: !10631, file: !9822, line: 680, type: !1665, align: 8)
!10631 = distinct !DILexicalBlock(scope: !10625, file: !9822, line: 680, column: 9)
!10632 = !DILocalVariable(name: "residual", scope: !10633, file: !9822, line: 680, type: !1789, align: 8)
!10633 = distinct !DILexicalBlock(scope: !10625, file: !9822, line: 680, column: 93)
!10634 = !DILocalVariable(name: "val", scope: !10635, file: !9822, line: 680, type: !1665, align: 8)
!10635 = distinct !DILexicalBlock(scope: !10625, file: !9822, line: 680, column: 19)
!10636 = !DILocation(line: 666, column: 9, scope: !10611)
!10637 = !DILocation(line: 667, column: 9, scope: !10611)
!10638 = !DILocation(line: 668, column: 9, scope: !10611)
!10639 = !DILocation(line: 669, column: 9, scope: !10611)
!10640 = !DILocation(line: 671, column: 12, scope: !10611)
!10641 = !DILocation(line: 674, column: 24, scope: !10611)
!10642 = !DILocation(line: 674, column: 20, scope: !10611)
!10643 = !DILocation(line: 0, scope: !10644)
!10644 = !DILexicalBlockFile(scope: !10611, file: !4366, discriminator: 0)
!10645 = !DILocation(line: 677, column: 19, scope: !10611)
!10646 = !DILocation(line: 677, column: 53, scope: !10611)
!10647 = !DILocation(line: 686, column: 6, scope: !10611)
!10648 = !DILocation(line: 677, column: 13, scope: !10619)
!10649 = !DILocation(line: 677, column: 19, scope: !10623)
!10650 = !DILocation(line: 678, column: 26, scope: !10619)
!10651 = !DILocation(line: 677, column: 70, scope: !10611)
!10652 = !DILocation(line: 677, column: 70, scope: !10621)
!10653 = !DILocation(line: 677, column: 19, scope: !10621)
!10654 = !DILocation(line: 678, column: 13, scope: !10625)
!10655 = !DILocation(line: 678, column: 26, scope: !10629)
!10656 = !DILocation(line: 680, column: 43, scope: !10625)
!10657 = !DILocation(line: 680, column: 77, scope: !10625)
!10658 = !DILocation(line: 680, column: 19, scope: !10625)
!10659 = !DILocation(line: 678, column: 56, scope: !10619)
!10660 = !DILocation(line: 678, column: 56, scope: !10627)
!10661 = !DILocation(line: 678, column: 26, scope: !10627)
!10662 = !DILocation(line: 680, column: 13, scope: !10631)
!10663 = !DILocation(line: 680, column: 19, scope: !10635)
!10664 = !DILocation(line: 683, column: 13, scope: !10631)
!10665 = !DILocation(line: 685, column: 9, scope: !10631)
!10666 = !DILocation(line: 680, column: 93, scope: !10625)
!10667 = !DILocation(line: 680, column: 93, scope: !10633)
!10668 = !DILocation(line: 680, column: 19, scope: !10633)
!10669 = distinct !DISubprogram(name: "shrink<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h17a899d03cdf5832E", scope: !91, file: !9822, line: 690, type: !10670, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10672, retainedNodes: !10673)
!10670 = !DISubroutineType(types: !10671)
!10671 = !{!1722, !10348, !9, !1746}
!10672 = !DISubprogram(name: "shrink<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h17a899d03cdf5832E", scope: !91, file: !9822, line: 690, type: !10670, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10673 = !{!10674, !10675, !10676}
!10674 = !DILocalVariable(name: "self", arg: 1, scope: !10669, file: !9822, line: 690, type: !10348)
!10675 = !DILocalVariable(name: "cap", arg: 2, scope: !10669, file: !9822, line: 690, type: !9)
!10676 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !10669, file: !9822, line: 690, type: !1746)
!10677 = !DILocation(line: 690, column: 15, scope: !10669)
!10678 = !DILocation(line: 690, column: 26, scope: !10669)
!10679 = !DILocation(line: 690, column: 38, scope: !10669)
!10680 = !DILocation(line: 691, column: 38, scope: !10669)
!10681 = !DILocation(line: 691, column: 24, scope: !10669)
!10682 = !DILocation(line: 691, column: 17, scope: !10669)
!10683 = !DILocation(line: 691, column: 9, scope: !10669)
!10684 = !DILocation(line: 693, column: 18, scope: !10669)
!10685 = !DILocation(line: 694, column: 6, scope: !10669)
!10686 = distinct !DISubprogram(name: "shrink_unchecked<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17h5abe58aba3fa51d1E", scope: !91, file: !9822, line: 707, type: !10670, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10687, retainedNodes: !10688)
!10687 = !DISubprogram(name: "shrink_unchecked<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17h5abe58aba3fa51d1E", scope: !91, file: !9822, line: 707, type: !10670, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10688 = !{!10689, !10690, !10691, !10692, !10694, !10695, !10697, !10699, !10701, !10703, !10705}
!10689 = !DILocalVariable(name: "self", arg: 1, scope: !10686, file: !9822, line: 708, type: !10348)
!10690 = !DILocalVariable(name: "cap", arg: 2, scope: !10686, file: !9822, line: 709, type: !9)
!10691 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !10686, file: !9822, line: 710, type: !1746)
!10692 = !DILocalVariable(name: "ptr", scope: !10693, file: !9822, line: 712, type: !99, align: 8)
!10693 = distinct !DILexicalBlock(scope: !10686, file: !9822, line: 712, column: 9)
!10694 = !DILocalVariable(name: "layout", scope: !10693, file: !9822, line: 712, type: !1746, align: 8)
!10695 = !DILocalVariable(name: "mem", scope: !10696, file: !9822, line: 713, type: !10301, align: 8)
!10696 = distinct !DILexicalBlock(scope: !10686, file: !9822, line: 713, column: 65)
!10697 = !DILocalVariable(name: "ptr", scope: !10698, file: !9822, line: 724, type: !1665, align: 8)
!10698 = distinct !DILexicalBlock(scope: !10693, file: !9822, line: 724, column: 13)
!10699 = !DILocalVariable(name: "new_size", scope: !10700, file: !9822, line: 727, type: !9, align: 8)
!10700 = distinct !DILexicalBlock(scope: !10693, file: !9822, line: 727, column: 17)
!10701 = !DILocalVariable(name: "new_layout", scope: !10702, file: !9822, line: 728, type: !1746, align: 8)
!10702 = distinct !DILexicalBlock(scope: !10700, file: !9822, line: 728, column: 17)
!10703 = !DILocalVariable(name: "residual", scope: !10704, file: !9822, line: 731, type: !1760, align: 8)
!10704 = distinct !DILexicalBlock(scope: !10702, file: !9822, line: 731, column: 88)
!10705 = !DILocalVariable(name: "val", scope: !10706, file: !9822, line: 729, type: !1665, align: 8)
!10706 = distinct !DILexicalBlock(scope: !10702, file: !9822, line: 729, column: 17)
!10707 = !DILocation(line: 708, column: 9, scope: !10686)
!10708 = !DILocation(line: 709, column: 9, scope: !10686)
!10709 = !DILocation(line: 710, column: 9, scope: !10686)
!10710 = !DILocation(line: 712, column: 19, scope: !10693)
!10711 = !DILocation(line: 713, column: 25, scope: !10696)
!10712 = !DILocation(line: 728, column: 21, scope: !10702)
!10713 = !DILocation(line: 713, column: 32, scope: !10696)
!10714 = !DILocation(line: 713, column: 20, scope: !10696)
!10715 = !DILocation(line: 712, column: 14, scope: !10686)
!10716 = !DILocation(line: 712, column: 14, scope: !10693)
!10717 = !DILocation(line: 712, column: 19, scope: !10686)
!10718 = !DILocation(line: 718, column: 12, scope: !10693)
!10719 = !DILocation(line: 713, column: 87, scope: !10686)
!10720 = !DILocation(line: 0, scope: !10721)
!10721 = !DILexicalBlockFile(scope: !10686, file: !4366, discriminator: 0)
!10722 = !DILocation(line: 719, column: 22, scope: !10693)
!10723 = !DILocation(line: 721, column: 76, scope: !10693)
!10724 = !DILocation(line: 640, column: 40, scope: !6198, inlinedAt: !10725)
!10725 = distinct !DILocation(line: 721, column: 48, scope: !10693)
!10726 = !DILocation(line: 646, column: 14, scope: !6198, inlinedAt: !10725)
!10727 = !DILocation(line: 721, column: 26, scope: !10693)
!10728 = !DILocation(line: 720, column: 13, scope: !10693)
!10729 = !DILocation(line: 722, column: 13, scope: !10693)
!10730 = !DILocation(line: 718, column: 9, scope: !10693)
!10731 = !DILocation(line: 727, column: 32, scope: !10693)
!10732 = !DILocation(line: 933, column: 43, scope: !10327, inlinedAt: !10733)
!10733 = distinct !DILocation(line: 727, column: 32, scope: !10693)
!10734 = !DILocation(line: 933, column: 49, scope: !10327, inlinedAt: !10733)
!10735 = !DILocation(line: 74, column: 35, scope: !10334, inlinedAt: !10733)
!10736 = !DILocation(line: 75, column: 17, scope: !10334, inlinedAt: !10733)
!10737 = !DILocation(line: 945, column: 17, scope: !10327, inlinedAt: !10733)
!10738 = !DILocation(line: 727, column: 21, scope: !10700)
!10739 = !DILocation(line: 728, column: 78, scope: !10700)
!10740 = !DILocation(line: 728, column: 34, scope: !10700)
!10741 = !DILocation(line: 729, column: 17, scope: !10702)
!10742 = !DILocation(line: 738, column: 9, scope: !10693)
!10743 = !DILocation(line: 739, column: 6, scope: !10686)
!10744 = !DILocation(line: 724, column: 17, scope: !10698)
!10745 = !DILocation(line: 729, column: 17, scope: !10706)
!10746 = !DILocation(line: 735, column: 17, scope: !10698)
!10747 = !DILocation(line: 731, column: 88, scope: !10702)
!10748 = !DILocation(line: 731, column: 88, scope: !10704)
!10749 = !DILocation(line: 729, column: 17, scope: !10704)
!10750 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hc12c04f3282927dbE", scope: !7525, file: !9822, line: 731, type: !10751, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, retainedNodes: !10753)
!10751 = !DISubroutineType(types: !10752)
!10752 = !{!1736, !7524, !1671}
!10753 = !{!10754, !10755}
!10754 = !DILocalVariable(name: "new_layout", scope: !10750, file: !9822, line: 728, type: !1746, align: 8)
!10755 = !DILocalVariable(arg: 2, scope: !10750, file: !9822, line: 731, type: !1671)
!10756 = !DILocation(line: 728, column: 21, scope: !10750)
!10757 = !DILocation(line: 731, column: 31, scope: !10750)
!10758 = !DILocation(line: 731, column: 55, scope: !10750)
!10759 = !DILocation(line: 731, column: 34, scope: !10750)
!10760 = !DILocation(line: 731, column: 87, scope: !10750)
!10761 = distinct !DISubprogram(name: "deallocate<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17h8a6de52b9ab0c5bbE", scope: !91, file: !9822, line: 748, type: !10762, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, declaration: !10764, retainedNodes: !10765)
!10762 = !DISubroutineType(types: !10763)
!10763 = !{null, !10348, !1746}
!10764 = !DISubprogram(name: "deallocate<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17h8a6de52b9ab0c5bbE", scope: !91, file: !9822, line: 748, type: !10762, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !114)
!10765 = !{!10766, !10767, !10768, !10770}
!10766 = !DILocalVariable(name: "self", arg: 1, scope: !10761, file: !9822, line: 748, type: !10348)
!10767 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !10761, file: !9822, line: 748, type: !1746)
!10768 = !DILocalVariable(name: "ptr", scope: !10769, file: !9822, line: 749, type: !99, align: 8)
!10769 = distinct !DILexicalBlock(scope: !10761, file: !9822, line: 749, column: 71)
!10770 = !DILocalVariable(name: "layout", scope: !10769, file: !9822, line: 749, type: !1746, align: 8)
!10771 = !DILocation(line: 748, column: 26, scope: !10761)
!10772 = !DILocation(line: 748, column: 37, scope: !10761)
!10773 = !DILocation(line: 749, column: 38, scope: !10769)
!10774 = !DILocation(line: 749, column: 16, scope: !10769)
!10775 = !DILocation(line: 749, column: 22, scope: !10769)
!10776 = !DILocation(line: 749, column: 27, scope: !10769)
!10777 = !DILocation(line: 751, column: 17, scope: !10769)
!10778 = !DILocation(line: 754, column: 6, scope: !10761)
!10779 = !DILocation(line: 748, column: 5, scope: !10761)
!10780 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17ha729baa936d24039E", scope: !88, file: !9822, line: 760, type: !10781, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, retainedNodes: !10784)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!1849, !1746, !10293, !10783}
!10783 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !112, size: 64, align: 64, dwarfAddressSpace: 0)
!10784 = !{!10785, !10786, !10787, !10788, !10790, !10792, !10794, !10796, !10797, !10800, !10801}
!10785 = !DILocalVariable(name: "new_layout", arg: 1, scope: !10780, file: !9822, line: 761, type: !1746)
!10786 = !DILocalVariable(name: "current_memory", arg: 2, scope: !10780, file: !9822, line: 762, type: !10293)
!10787 = !DILocalVariable(name: "alloc", arg: 3, scope: !10780, file: !9822, line: 763, type: !10783)
!10788 = !DILocalVariable(name: "residual", scope: !10789, file: !9822, line: 768, type: !1789, align: 8)
!10789 = distinct !DILexicalBlock(scope: !10780, file: !9822, line: 768, column: 35)
!10790 = !DILocalVariable(name: "val", scope: !10791, file: !9822, line: 768, type: !7, align: 1)
!10791 = distinct !DILexicalBlock(scope: !10780, file: !9822, line: 768, column: 5)
!10792 = !DILocalVariable(name: "memory", scope: !10793, file: !9822, line: 770, type: !1657, align: 8)
!10793 = distinct !DILexicalBlock(scope: !10780, file: !9822, line: 770, column: 5)
!10794 = !DILocalVariable(name: "ptr", scope: !10795, file: !9822, line: 770, type: !99, align: 8)
!10795 = distinct !DILexicalBlock(scope: !10780, file: !9822, line: 770, column: 66)
!10796 = !DILocalVariable(name: "old_layout", scope: !10795, file: !9822, line: 770, type: !1746, align: 8)
!10797 = !DILocalVariable(name: "left_val", scope: !10798, file: !9822, line: 771, type: !2172, align: 8)
!10798 = !DILexicalBlockFile(scope: !10799, file: !9822, discriminator: 0)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !2221, line: 45, column: 13)
!10800 = !DILocalVariable(name: "right_val", scope: !10798, file: !9822, line: 771, type: !2172, align: 8)
!10801 = !DILocalVariable(name: "kind", scope: !10802, file: !9822, line: 771, type: !287, align: 1)
!10802 = !DILexicalBlockFile(scope: !10803, file: !9822, discriminator: 0)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !2221, line: 47, column: 21)
!10804 = !DILocation(line: 761, column: 5, scope: !10780)
!10805 = !DILocation(line: 762, column: 5, scope: !10780)
!10806 = !DILocation(line: 763, column: 5, scope: !10780)
!10807 = !DILocation(line: 770, column: 9, scope: !10793)
!10808 = !DILocation(line: 770, column: 36, scope: !10795)
!10809 = !DILocation(line: 771, column: 9, scope: !10802)
!10810 = !DILocation(line: 768, column: 5, scope: !10791)
!10811 = !DILocation(line: 768, column: 17, scope: !10780)
!10812 = !DILocation(line: 768, column: 5, scope: !10780)
!10813 = !DILocation(line: 770, column: 51, scope: !10795)
!10814 = !DILocation(line: 770, column: 25, scope: !10795)
!10815 = !DILocation(line: 768, column: 35, scope: !10780)
!10816 = !DILocation(line: 768, column: 35, scope: !10789)
!10817 = !DILocation(line: 768, column: 5, scope: !10789)
!10818 = !DILocation(line: 770, column: 31, scope: !10795)
!10819 = !DILocation(line: 771, column: 26, scope: !10795)
!10820 = !DILocation(line: 771, column: 46, scope: !10795)
!10821 = !DILocation(line: 771, column: 9, scope: !10795)
!10822 = !DILocation(line: 771, column: 9, scope: !10798)
!10823 = !DILocation(line: 778, column: 9, scope: !10780)
!10824 = !DILocation(line: 774, column: 36, scope: !10795)
!10825 = !DILocation(line: 774, column: 58, scope: !10795)
!10826 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !10827)
!10827 = distinct !DILocation(line: 774, column: 13, scope: !10795)
!10828 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !10827)
!10829 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !10827)
!10830 = !DILocation(line: 775, column: 13, scope: !10795)
!10831 = !DILocation(line: 781, column: 5, scope: !10793)
!10832 = !DILocation(line: 782, column: 2, scope: !10780)
!10833 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h65541403ff8832abE", scope: !7409, file: !9822, line: 781, type: !10834, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, retainedNodes: !10836)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{!1732, !7408, !1671}
!10836 = !{!10837, !10838}
!10837 = !DILocalVariable(name: "new_layout", scope: !10833, file: !9822, line: 761, type: !1746, align: 8)
!10838 = !DILocalVariable(arg: 2, scope: !10833, file: !9822, line: 781, type: !1671)
!10839 = !DILocation(line: 761, column: 5, scope: !10833)
!10840 = !DILocation(line: 781, column: 21, scope: !10833)
!10841 = !DILocation(line: 781, column: 45, scope: !10833)
!10842 = !DILocation(line: 781, column: 24, scope: !10833)
!10843 = !DILocation(line: 781, column: 84, scope: !10833)
!10844 = distinct !DISubprogram(name: "handle_error", linkageName: "_ZN5alloc7raw_vec12handle_error17h659fecd23faed489E", scope: !88, file: !9822, line: 789, type: !10845, scopeLine: 789, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10847)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{null, !1732, !1690}
!10847 = !{!10848, !10849}
!10848 = !DILocalVariable(name: "e", arg: 1, scope: !10844, file: !9822, line: 789, type: !1732)
!10849 = !DILocalVariable(name: "layout", scope: !10850, file: !9822, line: 792, type: !1746, align: 8)
!10850 = distinct !DILexicalBlock(scope: !10844, file: !9822, line: 792, column: 9)
!10851 = !DILocation(line: 789, column: 17, scope: !10844)
!10852 = !DILocation(line: 790, column: 11, scope: !10844)
!10853 = !DILocation(line: 790, column: 5, scope: !10844)
!10854 = !DILocation(line: 791, column: 29, scope: !10844)
!10855 = !DILocation(line: 792, column: 22, scope: !10844)
!10856 = !DILocation(line: 792, column: 22, scope: !10850)
!10857 = !DILocation(line: 792, column: 38, scope: !10850)
!10858 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hafad2d284ee85d9fE", scope: !88, file: !9822, line: 805, type: !10859, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10861)
!10859 = !DISubroutineType(types: !10860)
!10860 = !{!1722, !9}
!10861 = !{!10862}
!10862 = !DILocalVariable(name: "alloc_size", arg: 1, scope: !10858, file: !9822, line: 805, type: !9)
!10863 = !DILocation(line: 805, column: 16, scope: !10858)
!10864 = !DILocation(line: 806, column: 8, scope: !10858)
!10865 = !DILocation(line: 809, column: 9, scope: !10858)
!10866 = !DILocation(line: 806, column: 5, scope: !10858)
!10867 = !DILocation(line: 806, column: 28, scope: !10858)
!10868 = !DILocation(line: 807, column: 13, scope: !10858)
!10869 = !DILocation(line: 807, column: 9, scope: !10858)
!10870 = !DILocation(line: 811, column: 2, scope: !10858)
!10871 = distinct !DISubprogram(name: "layout_array", linkageName: "_ZN5alloc7raw_vec12layout_array17h10e5035f4ab8749dE", scope: !88, file: !9822, line: 814, type: !10872, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10874)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!7366, !9, !1746}
!10874 = !{!10875, !10876}
!10875 = !DILocalVariable(name: "cap", arg: 1, scope: !10871, file: !9822, line: 814, type: !9)
!10876 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !10871, file: !9822, line: 814, type: !1746)
!10877 = !DILocation(line: 814, column: 17, scope: !10871)
!10878 = !DILocation(line: 814, column: 29, scope: !10871)
!10879 = !DILocation(line: 815, column: 5, scope: !10871)
!10880 = !DILocation(line: 816, column: 2, scope: !10871)
!10881 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17h1aa03a9512b3776fE", scope: !7269, file: !9822, line: 815, type: !10882, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10884)
!10882 = !DISubroutineType(types: !10883)
!10883 = !{!1746, !7268, !6123}
!10884 = !{!10885, !10887, !10888, !10889}
!10885 = !DILocalVariable(name: "layout", scope: !10886, file: !9822, line: 815, type: !1746, align: 8)
!10886 = distinct !DILexicalBlock(scope: !10881, file: !9822, line: 815, column: 50)
!10887 = !DILocalVariable(name: "_pad", scope: !10886, file: !9822, line: 815, type: !9, align: 8)
!10888 = !DILocalVariable(arg: 1, scope: !10881, file: !9822, line: 815, type: !7268)
!10889 = !DILocalVariable(arg: 2, scope: !10881, file: !9822, line: 815, type: !6123)
!10890 = !DILocation(line: 815, column: 33, scope: !10881)
!10891 = !DILocation(line: 815, column: 34, scope: !10881)
!10892 = !DILocation(line: 815, column: 35, scope: !10881)
!10893 = !DILocation(line: 815, column: 35, scope: !10886)
!10894 = !DILocation(line: 815, column: 43, scope: !10881)
!10895 = !DILocation(line: 815, column: 43, scope: !10886)
!10896 = !DILocation(line: 815, column: 56, scope: !10881)
!10897 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17he3993737c547ff05E", scope: !7269, file: !9822, line: 815, type: !10898, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10900)
!10898 = !DISubroutineType(types: !10899)
!10899 = !{!1732, !7380, !24}
!10900 = !{!10901, !10902}
!10901 = !DILocalVariable(arg: 1, scope: !10897, file: !9822, line: 815, type: !7380)
!10902 = !DILocalVariable(arg: 2, scope: !10897, file: !9822, line: 815, type: !24)
!10903 = !DILocation(line: 815, column: 66, scope: !10897)
!10904 = !DILocation(line: 815, column: 67, scope: !10897)
!10905 = !DILocation(line: 815, column: 70, scope: !10897)
!10906 = !DILocation(line: 815, column: 93, scope: !10897)
!10907 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h3ac871a60ddec661E", scope: !113, file: !10908, line: 90, type: !10909, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10911)
!10908 = !DIFile(filename: "src/alloc.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "ca453c0f5d79b1528145e72b35e919a1")
!10909 = !DISubroutineType(types: !10910)
!10910 = !{!3364, !1746}
!10911 = !{!10912}
!10912 = !DILocalVariable(name: "layout", arg: 1, scope: !10907, file: !10908, line: 90, type: !1746)
!10913 = !DILocation(line: 90, column: 21, scope: !10907)
!10914 = !DILocation(line: 94, column: 9, scope: !10907)
!10915 = !DILocation(line: 96, column: 22, scope: !10907)
!10916 = !DILocation(line: 96, column: 37, scope: !10907)
!10917 = !DILocation(line: 96, column: 9, scope: !10907)
!10918 = !DILocation(line: 98, column: 2, scope: !10907)
!10919 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17he58641e8dbf5d71eE", scope: !113, file: !10908, line: 115, type: !10920, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10922)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{null, !3364, !1746}
!10922 = !{!10923, !10924}
!10923 = !DILocalVariable(name: "ptr", arg: 1, scope: !10919, file: !10908, line: 115, type: !3364)
!10924 = !DILocalVariable(name: "layout", arg: 2, scope: !10919, file: !10908, line: 115, type: !1746)
!10925 = !DILocation(line: 115, column: 23, scope: !10919)
!10926 = !DILocation(line: 115, column: 37, scope: !10919)
!10927 = !DILocation(line: 116, column: 34, scope: !10919)
!10928 = !DILocation(line: 116, column: 49, scope: !10919)
!10929 = !DILocation(line: 116, column: 14, scope: !10919)
!10930 = !DILocation(line: 117, column: 2, scope: !10919)
!10931 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17he622dfad08f6c289E", scope: !113, file: !10908, line: 135, type: !10932, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10934)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!3364, !3364, !1746, !9}
!10934 = !{!10935, !10936, !10937}
!10935 = !DILocalVariable(name: "ptr", arg: 1, scope: !10931, file: !10908, line: 135, type: !3364)
!10936 = !DILocalVariable(name: "layout", arg: 2, scope: !10931, file: !10908, line: 135, type: !1746)
!10937 = !DILocalVariable(name: "new_size", arg: 3, scope: !10931, file: !10908, line: 135, type: !9)
!10938 = !DILocation(line: 135, column: 23, scope: !10931)
!10939 = !DILocation(line: 135, column: 37, scope: !10931)
!10940 = !DILocation(line: 135, column: 53, scope: !10931)
!10941 = !DILocation(line: 136, column: 34, scope: !10931)
!10942 = !DILocation(line: 136, column: 49, scope: !10931)
!10943 = !DILocation(line: 136, column: 14, scope: !10931)
!10944 = !DILocation(line: 137, column: 2, scope: !10931)
!10945 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h55dee345680adf2dE", scope: !113, file: !10908, line: 173, type: !10909, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !10946)
!10946 = !{!10947}
!10947 = !DILocalVariable(name: "layout", arg: 1, scope: !10945, file: !10908, line: 173, type: !1746)
!10948 = !DILocation(line: 173, column: 28, scope: !10945)
!10949 = !DILocation(line: 177, column: 9, scope: !10945)
!10950 = !DILocation(line: 179, column: 29, scope: !10945)
!10951 = !DILocation(line: 179, column: 44, scope: !10945)
!10952 = !DILocation(line: 179, column: 9, scope: !10945)
!10953 = !DILocation(line: 181, column: 2, scope: !10945)
!10954 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE", scope: !112, file: !10908, line: 187, type: !10955, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !10957, retainedNodes: !10958)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!1657, !10012, !1746, !520}
!10957 = !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17he05d8cea37e75fcfE", scope: !112, file: !10908, line: 187, type: !10955, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!10958 = !{!10959, !10960, !10961, !10962, !10964, !10966, !10968, !10970}
!10959 = !DILocalVariable(name: "self", arg: 1, scope: !10954, file: !10908, line: 187, type: !10012)
!10960 = !DILocalVariable(name: "layout", arg: 2, scope: !10954, file: !10908, line: 187, type: !1746)
!10961 = !DILocalVariable(name: "zeroed", arg: 3, scope: !10954, file: !10908, line: 187, type: !520)
!10962 = !DILocalVariable(name: "size", scope: !10963, file: !10908, line: 191, type: !9, align: 8)
!10963 = distinct !DILexicalBlock(scope: !10954, file: !10908, line: 191, column: 13)
!10964 = !DILocalVariable(name: "raw_ptr", scope: !10965, file: !10908, line: 192, type: !3364, align: 8)
!10965 = distinct !DILexicalBlock(scope: !10963, file: !10908, line: 192, column: 17)
!10966 = !DILocalVariable(name: "ptr", scope: !10967, file: !10908, line: 193, type: !99, align: 8)
!10967 = distinct !DILexicalBlock(scope: !10965, file: !10908, line: 193, column: 17)
!10968 = !DILocalVariable(name: "residual", scope: !10969, file: !10908, line: 193, type: !1677, align: 1)
!10969 = distinct !DILexicalBlock(scope: !10965, file: !10908, line: 193, column: 66)
!10970 = !DILocalVariable(name: "val", scope: !10971, file: !10908, line: 193, type: !99, align: 8)
!10971 = distinct !DILexicalBlock(scope: !10965, file: !10908, line: 193, column: 27)
!10972 = !DILocation(line: 187, column: 19, scope: !10954)
!10973 = !DILocation(line: 187, column: 26, scope: !10954)
!10974 = !DILocation(line: 187, column: 42, scope: !10954)
!10975 = !DILocation(line: 192, column: 21, scope: !10965)
!10976 = !DILocation(line: 193, column: 66, scope: !10969)
!10977 = !DILocation(line: 188, column: 15, scope: !10954)
!10978 = !DILocation(line: 191, column: 13, scope: !10963)
!10979 = !DILocation(line: 188, column: 9, scope: !10954)
!10980 = !DILocation(line: 189, column: 51, scope: !10954)
!10981 = !DILocation(line: 189, column: 21, scope: !10954)
!10982 = !DILocation(line: 189, column: 18, scope: !10954)
!10983 = !DILocation(line: 189, column: 72, scope: !10954)
!10984 = !DILocation(line: 192, column: 34, scope: !10963)
!10985 = !DILocation(line: 197, column: 6, scope: !10954)
!10986 = !DILocation(line: 192, column: 73, scope: !10963)
!10987 = !DILocation(line: 192, column: 43, scope: !10963)
!10988 = !DILocation(line: 193, column: 40, scope: !10965)
!10989 = !DILocation(line: 193, column: 27, scope: !10965)
!10990 = !DILocation(line: 193, column: 21, scope: !10967)
!10991 = !DILocation(line: 193, column: 27, scope: !10971)
!10992 = !DILocation(line: 194, column: 20, scope: !10967)
!10993 = !DILocation(line: 194, column: 17, scope: !10967)
!10994 = !DILocation(line: 195, column: 13, scope: !10954)
!10995 = !DILocation(line: 193, column: 27, scope: !10969)
!10996 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h5f45bd336a212eafE", scope: !112, file: !10908, line: 202, type: !10997, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !10999, retainedNodes: !11000)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!1657, !10012, !99, !1746, !1746, !520}
!10999 = !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h5f45bd336a212eafE", scope: !112, file: !10908, line: 202, type: !10997, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!11000 = !{!11001, !11002, !11003, !11004, !11005, !11006, !11008, !11009, !11011, !11013, !11015, !11017, !11019, !11021, !11023, !11025}
!11001 = !DILocalVariable(name: "self", arg: 1, scope: !10996, file: !10908, line: 203, type: !10012)
!11002 = !DILocalVariable(name: "ptr", arg: 2, scope: !10996, file: !10908, line: 204, type: !99)
!11003 = !DILocalVariable(name: "old_layout", arg: 3, scope: !10996, file: !10908, line: 205, type: !1746)
!11004 = !DILocalVariable(name: "new_layout", arg: 4, scope: !10996, file: !10908, line: 206, type: !1746)
!11005 = !DILocalVariable(name: "zeroed", arg: 5, scope: !10996, file: !10908, line: 207, type: !520)
!11006 = !DILocalVariable(name: "old_size", scope: !11007, file: !10908, line: 219, type: !9, align: 8)
!11007 = distinct !DILexicalBlock(scope: !10996, file: !10908, line: 219, column: 13)
!11008 = !DILocalVariable(name: "old_size", scope: !11007, file: !10908, line: 219, type: !2172, align: 8)
!11009 = !DILocalVariable(name: "new_size", scope: !11010, file: !10908, line: 220, type: !9, align: 8)
!11010 = distinct !DILexicalBlock(scope: !11007, file: !10908, line: 220, column: 17)
!11011 = !DILocalVariable(name: "raw_ptr", scope: !11012, file: !10908, line: 225, type: !3364, align: 8)
!11012 = distinct !DILexicalBlock(scope: !11010, file: !10908, line: 225, column: 17)
!11013 = !DILocalVariable(name: "ptr", scope: !11014, file: !10908, line: 226, type: !99, align: 8)
!11014 = distinct !DILexicalBlock(scope: !11012, file: !10908, line: 226, column: 17)
!11015 = !DILocalVariable(name: "residual", scope: !11016, file: !10908, line: 226, type: !1677, align: 1)
!11016 = distinct !DILexicalBlock(scope: !11012, file: !10908, line: 226, column: 66)
!11017 = !DILocalVariable(name: "val", scope: !11018, file: !10908, line: 226, type: !99, align: 8)
!11018 = distinct !DILexicalBlock(scope: !11012, file: !10908, line: 226, column: 27)
!11019 = !DILocalVariable(name: "old_size", scope: !11020, file: !10908, line: 238, type: !9, align: 8)
!11020 = distinct !DILexicalBlock(scope: !10996, file: !10908, line: 238, column: 13)
!11021 = !DILocalVariable(name: "new_ptr", scope: !11022, file: !10908, line: 239, type: !1665, align: 8)
!11022 = distinct !DILexicalBlock(scope: !11020, file: !10908, line: 239, column: 17)
!11023 = !DILocalVariable(name: "residual", scope: !11024, file: !10908, line: 239, type: !1677, align: 1)
!11024 = distinct !DILexicalBlock(scope: !11020, file: !10908, line: 239, column: 66)
!11025 = !DILocalVariable(name: "val", scope: !11026, file: !10908, line: 239, type: !1665, align: 8)
!11026 = distinct !DILexicalBlock(scope: !11020, file: !10908, line: 239, column: 31)
!11027 = !DILocation(line: 203, column: 9, scope: !10996)
!11028 = !DILocation(line: 204, column: 9, scope: !10996)
!11029 = !DILocation(line: 205, column: 9, scope: !10996)
!11030 = !DILocation(line: 206, column: 9, scope: !10996)
!11031 = !DILocation(line: 207, column: 9, scope: !10996)
!11032 = !DILocation(line: 219, column: 13, scope: !11007)
!11033 = !DILocation(line: 238, column: 13, scope: !11020)
!11034 = !DILocation(line: 226, column: 66, scope: !11016)
!11035 = !DILocation(line: 239, column: 66, scope: !11024)
!11036 = !DILocation(line: 210, column: 13, scope: !10996)
!11037 = !DILocation(line: 210, column: 34, scope: !10996)
!11038 = !DILocation(line: 209, column: 9, scope: !10996)
!11039 = !DILocation(line: 214, column: 15, scope: !10996)
!11040 = !DILocation(line: 214, column: 9, scope: !10996)
!11041 = !DILocation(line: 215, column: 18, scope: !10996)
!11042 = !DILocation(line: 219, column: 13, scope: !10996)
!11043 = !DILocation(line: 219, column: 25, scope: !10996)
!11044 = !DILocation(line: 219, column: 47, scope: !10996)
!11045 = !DILocation(line: 245, column: 6, scope: !10996)
!11046 = !DILocation(line: 239, column: 31, scope: !11020)
!11047 = !DILocation(line: 220, column: 32, scope: !11007)
!11048 = !DILocation(line: 220, column: 21, scope: !11010)
!11049 = !DILocation(line: 223, column: 52, scope: !11010)
!11050 = !DILocation(line: 223, column: 40, scope: !11010)
!11051 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !11052)
!11052 = distinct !DILocation(line: 223, column: 17, scope: !11010)
!11053 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !11052)
!11054 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !11052)
!11055 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !11056)
!11056 = distinct !DILocation(line: 225, column: 39, scope: !11010)
!11057 = !DILocation(line: 225, column: 31, scope: !11010)
!11058 = !DILocation(line: 225, column: 21, scope: !11012)
!11059 = !DILocation(line: 226, column: 27, scope: !11012)
!11060 = !DILocation(line: 239, column: 21, scope: !11022)
!11061 = !DILocation(line: 239, column: 31, scope: !11026)
!11062 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !11063)
!11063 = distinct !DILocation(line: 240, column: 42, scope: !11022)
!11064 = !DILocation(line: 240, column: 56, scope: !11022)
!11065 = !DILocation(line: 240, column: 17, scope: !11022)
!11066 = !DILocation(line: 4316, column: 44, scope: !4092, inlinedAt: !11067)
!11067 = distinct !DILocation(line: 240, column: 17, scope: !11022)
!11068 = !DILocation(line: 4316, column: 59, scope: !4092, inlinedAt: !11067)
!11069 = !DILocation(line: 4316, column: 72, scope: !4092, inlinedAt: !11067)
!11070 = !DILocation(line: 74, column: 35, scope: !4101, inlinedAt: !11067)
!11071 = !DILocation(line: 75, column: 17, scope: !4101, inlinedAt: !11067)
!11072 = !DILocation(line: 4345, column: 14, scope: !4092, inlinedAt: !11067)
!11073 = !DILocation(line: 241, column: 17, scope: !11022)
!11074 = !DILocation(line: 242, column: 17, scope: !11022)
!11075 = !DILocation(line: 243, column: 13, scope: !10996)
!11076 = !DILocation(line: 239, column: 31, scope: !11024)
!11077 = !DILocation(line: 226, column: 21, scope: !11014)
!11078 = !DILocation(line: 226, column: 27, scope: !11018)
!11079 = !DILocation(line: 227, column: 20, scope: !11014)
!11080 = !DILocation(line: 226, column: 27, scope: !11016)
!11081 = !DILocation(line: 230, column: 20, scope: !11014)
!11082 = !DILocation(line: 230, column: 17, scope: !11014)
!11083 = !DILocation(line: 231, column: 13, scope: !10996)
!11084 = !DILocation(line: 228, column: 21, scope: !11014)
!11085 = !DILocalVariable(name: "self", arg: 1, scope: !11086, file: !1180, line: 993, type: !3364)
!11086 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hacfce1f29e87388bE", scope: !1316, file: !1180, line: 993, type: !11087, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11089)
!11087 = !DISubroutineType(types: !11088)
!11088 = !{!3364, !3364, !9}
!11089 = !{!11085, !11090}
!11090 = !DILocalVariable(name: "count", arg: 2, scope: !11086, file: !1180, line: 993, type: !9)
!11091 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !11092)
!11092 = distinct !DILocation(line: 228, column: 21, scope: !11014)
!11093 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !11092)
!11094 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !11092)
!11095 = !DILexicalBlockFile(scope: !11086, file: !1177, discriminator: 0)
!11096 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !11092)
!11097 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !11092)
!11098 = !DILocation(line: 228, column: 58, scope: !11014)
!11099 = !DILocalVariable(name: "self", arg: 1, scope: !11100, file: !1180, line: 1494, type: !3364)
!11100 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17haf8ffa4bf70e81b8E", scope: !1316, file: !1180, line: 1494, type: !11101, scopeLine: 1494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11103)
!11101 = !DISubroutineType(types: !11102)
!11102 = !{null, !3364, !45, !9}
!11103 = !{!11099, !11104, !11105}
!11104 = !DILocalVariable(name: "val", arg: 2, scope: !11100, file: !1180, line: 1494, type: !45)
!11105 = !DILocalVariable(name: "count", arg: 3, scope: !11100, file: !1180, line: 1494, type: !9)
!11106 = !DILocation(line: 1494, column: 37, scope: !11100, inlinedAt: !11107)
!11107 = distinct !DILocation(line: 228, column: 21, scope: !11014)
!11108 = !DILocation(line: 1494, column: 43, scope: !11100, inlinedAt: !11107)
!11109 = !DILocation(line: 1494, column: 52, scope: !11100, inlinedAt: !11107)
!11110 = !DILocalVariable(name: "dst", arg: 1, scope: !11111, file: !2057, line: 4505, type: !3364)
!11111 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hc8f7344dcb8caba4E", scope: !2047, file: !2057, line: 4505, type: !11101, scopeLine: 4505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11112)
!11112 = !{!11110, !11113, !11114}
!11113 = !DILocalVariable(name: "val", arg: 2, scope: !11111, file: !2057, line: 4505, type: !45)
!11114 = !DILocalVariable(name: "count", arg: 3, scope: !11111, file: !2057, line: 4505, type: !9)
!11115 = !DILocation(line: 4505, column: 36, scope: !11111, inlinedAt: !11116)
!11116 = distinct !DILocation(line: 1499, column: 18, scope: !11100, inlinedAt: !11107)
!11117 = !DILocation(line: 4505, column: 49, scope: !11111, inlinedAt: !11116)
!11118 = !DILocation(line: 4505, column: 58, scope: !11111, inlinedAt: !11116)
!11119 = !DILocation(line: 74, column: 35, scope: !11120, inlinedAt: !11116)
!11120 = !DILexicalBlockFile(scope: !11111, file: !1177, discriminator: 0)
!11121 = !DILocation(line: 4522, column: 48, scope: !11111, inlinedAt: !11116)
!11122 = !DILocation(line: 75, column: 17, scope: !11120, inlinedAt: !11116)
!11123 = !DILocation(line: 4525, column: 9, scope: !11111, inlinedAt: !11116)
!11124 = !DILocation(line: 0, scope: !11125)
!11125 = !DILexicalBlockFile(scope: !10996, file: !4366, discriminator: 0)
!11126 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hc6e3b5736570da34E", scope: !11127, file: !10908, line: 253, type: !11128, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11130)
!11127 = !DINamespace(name: "{impl#1}", scope: !113)
!11128 = !DISubroutineType(types: !11129)
!11129 = !{!1657, !10012, !1746}
!11130 = !{!11131, !11132}
!11131 = !DILocalVariable(name: "self", arg: 1, scope: !11126, file: !10908, line: 253, type: !10012)
!11132 = !DILocalVariable(name: "layout", arg: 2, scope: !11126, file: !10908, line: 253, type: !1746)
!11133 = !DILocation(line: 253, column: 17, scope: !11126)
!11134 = !DILocation(line: 253, column: 24, scope: !11126)
!11135 = !DILocation(line: 254, column: 9, scope: !11126)
!11136 = !DILocation(line: 255, column: 6, scope: !11126)
!11137 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hc68de8c2f80c6d90E", scope: !11127, file: !10908, line: 259, type: !11128, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11138)
!11138 = !{!11139, !11140}
!11139 = !DILocalVariable(name: "self", arg: 1, scope: !11137, file: !10908, line: 259, type: !10012)
!11140 = !DILocalVariable(name: "layout", arg: 2, scope: !11137, file: !10908, line: 259, type: !1746)
!11141 = !DILocation(line: 259, column: 24, scope: !11137)
!11142 = !DILocation(line: 259, column: 31, scope: !11137)
!11143 = !DILocation(line: 260, column: 9, scope: !11137)
!11144 = !DILocation(line: 261, column: 6, scope: !11137)
!11145 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h2fe6158c2fdf3afcE", scope: !11127, file: !10908, line: 265, type: !11146, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11148)
!11146 = !DISubroutineType(types: !11147)
!11147 = !{null, !10012, !99, !1746}
!11148 = !{!11149, !11150, !11151}
!11149 = !DILocalVariable(name: "self", arg: 1, scope: !11145, file: !10908, line: 265, type: !10012)
!11150 = !DILocalVariable(name: "ptr", arg: 2, scope: !11145, file: !10908, line: 265, type: !99)
!11151 = !DILocalVariable(name: "layout", arg: 3, scope: !11145, file: !10908, line: 265, type: !1746)
!11152 = !DILocation(line: 265, column: 26, scope: !11145)
!11153 = !DILocation(line: 265, column: 33, scope: !11145)
!11154 = !DILocation(line: 265, column: 51, scope: !11145)
!11155 = !DILocation(line: 266, column: 12, scope: !11145)
!11156 = !DILocation(line: 271, column: 6, scope: !11145)
!11157 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !11158)
!11158 = distinct !DILocation(line: 269, column: 30, scope: !11145)
!11159 = !DILocation(line: 269, column: 22, scope: !11145)
!11160 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h2ce5776082fbb9d2E", scope: !11127, file: !10908, line: 275, type: !11161, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11163)
!11161 = !DISubroutineType(types: !11162)
!11162 = !{!1657, !10012, !99, !1746, !1746}
!11163 = !{!11164, !11165, !11166, !11167}
!11164 = !DILocalVariable(name: "self", arg: 1, scope: !11160, file: !10908, line: 276, type: !10012)
!11165 = !DILocalVariable(name: "ptr", arg: 2, scope: !11160, file: !10908, line: 277, type: !99)
!11166 = !DILocalVariable(name: "old_layout", arg: 3, scope: !11160, file: !10908, line: 278, type: !1746)
!11167 = !DILocalVariable(name: "new_layout", arg: 4, scope: !11160, file: !10908, line: 279, type: !1746)
!11168 = !DILocation(line: 276, column: 9, scope: !11160)
!11169 = !DILocation(line: 277, column: 9, scope: !11160)
!11170 = !DILocation(line: 278, column: 9, scope: !11160)
!11171 = !DILocation(line: 279, column: 9, scope: !11160)
!11172 = !DILocation(line: 282, column: 18, scope: !11160)
!11173 = !DILocation(line: 283, column: 6, scope: !11160)
!11174 = distinct !DISubprogram(name: "shrink", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h921dc962da536af2E", scope: !11127, file: !10908, line: 299, type: !11161, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11175)
!11175 = !{!11176, !11177, !11178, !11179, !11180, !11182, !11183, !11185, !11187, !11189, !11191, !11193, !11195, !11197}
!11176 = !DILocalVariable(name: "self", arg: 1, scope: !11174, file: !10908, line: 300, type: !10012)
!11177 = !DILocalVariable(name: "ptr", arg: 2, scope: !11174, file: !10908, line: 301, type: !99)
!11178 = !DILocalVariable(name: "old_layout", arg: 3, scope: !11174, file: !10908, line: 302, type: !1746)
!11179 = !DILocalVariable(name: "new_layout", arg: 4, scope: !11174, file: !10908, line: 303, type: !1746)
!11180 = !DILocalVariable(name: "new_size", scope: !11181, file: !10908, line: 318, type: !9, align: 8)
!11181 = distinct !DILexicalBlock(scope: !11174, file: !10908, line: 318, column: 13)
!11182 = !DILocalVariable(name: "new_size", scope: !11181, file: !10908, line: 318, type: !2172, align: 8)
!11183 = !DILocalVariable(name: "raw_ptr", scope: !11184, file: !10908, line: 322, type: !3364, align: 8)
!11184 = distinct !DILexicalBlock(scope: !11181, file: !10908, line: 322, column: 17)
!11185 = !DILocalVariable(name: "ptr", scope: !11186, file: !10908, line: 323, type: !99, align: 8)
!11186 = distinct !DILexicalBlock(scope: !11184, file: !10908, line: 323, column: 17)
!11187 = !DILocalVariable(name: "residual", scope: !11188, file: !10908, line: 323, type: !1677, align: 1)
!11188 = distinct !DILexicalBlock(scope: !11184, file: !10908, line: 323, column: 66)
!11189 = !DILocalVariable(name: "val", scope: !11190, file: !10908, line: 323, type: !99, align: 8)
!11190 = distinct !DILexicalBlock(scope: !11184, file: !10908, line: 323, column: 27)
!11191 = !DILocalVariable(name: "new_size", scope: !11192, file: !10908, line: 332, type: !9, align: 8)
!11192 = distinct !DILexicalBlock(scope: !11174, file: !10908, line: 332, column: 13)
!11193 = !DILocalVariable(name: "new_ptr", scope: !11194, file: !10908, line: 333, type: !1665, align: 8)
!11194 = distinct !DILexicalBlock(scope: !11192, file: !10908, line: 333, column: 17)
!11195 = !DILocalVariable(name: "residual", scope: !11196, file: !10908, line: 333, type: !1677, align: 1)
!11196 = distinct !DILexicalBlock(scope: !11192, file: !10908, line: 333, column: 56)
!11197 = !DILocalVariable(name: "val", scope: !11198, file: !10908, line: 333, type: !1665, align: 8)
!11198 = distinct !DILexicalBlock(scope: !11192, file: !10908, line: 333, column: 31)
!11199 = !DILocation(line: 300, column: 9, scope: !11174)
!11200 = !DILocation(line: 301, column: 9, scope: !11174)
!11201 = !DILocation(line: 302, column: 9, scope: !11174)
!11202 = !DILocation(line: 303, column: 9, scope: !11174)
!11203 = !DILocation(line: 318, column: 13, scope: !11181)
!11204 = !DILocation(line: 332, column: 13, scope: !11192)
!11205 = !DILocation(line: 323, column: 66, scope: !11188)
!11206 = !DILocation(line: 333, column: 56, scope: !11196)
!11207 = !DILocation(line: 306, column: 13, scope: !11174)
!11208 = !DILocation(line: 306, column: 34, scope: !11174)
!11209 = !DILocation(line: 305, column: 9, scope: !11174)
!11210 = !DILocation(line: 310, column: 15, scope: !11174)
!11211 = !DILocation(line: 310, column: 9, scope: !11174)
!11212 = !DILocation(line: 313, column: 17, scope: !11174)
!11213 = !DILocation(line: 314, column: 50, scope: !11174)
!11214 = !DILocation(line: 314, column: 20, scope: !11174)
!11215 = !DILocation(line: 314, column: 17, scope: !11174)
!11216 = !DILocation(line: 314, column: 75, scope: !11174)
!11217 = !DILocation(line: 318, column: 13, scope: !11174)
!11218 = !DILocation(line: 318, column: 25, scope: !11174)
!11219 = !DILocation(line: 318, column: 47, scope: !11174)
!11220 = !DILocation(line: 339, column: 6, scope: !11174)
!11221 = !DILocation(line: 333, column: 31, scope: !11192)
!11222 = !DILocation(line: 320, column: 52, scope: !11181)
!11223 = !DILocation(line: 320, column: 40, scope: !11181)
!11224 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !11225)
!11225 = distinct !DILocation(line: 320, column: 17, scope: !11181)
!11226 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !11225)
!11227 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !11225)
!11228 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !11229)
!11229 = distinct !DILocation(line: 322, column: 39, scope: !11181)
!11230 = !DILocation(line: 322, column: 31, scope: !11181)
!11231 = !DILocation(line: 322, column: 21, scope: !11184)
!11232 = !DILocation(line: 323, column: 27, scope: !11184)
!11233 = !DILocation(line: 333, column: 21, scope: !11194)
!11234 = !DILocation(line: 333, column: 31, scope: !11198)
!11235 = !DILocation(line: 339, column: 25, scope: !3890, inlinedAt: !11236)
!11236 = distinct !DILocation(line: 334, column: 42, scope: !11194)
!11237 = !DILocation(line: 334, column: 56, scope: !11194)
!11238 = !DILocation(line: 334, column: 17, scope: !11194)
!11239 = !DILocation(line: 4316, column: 44, scope: !4092, inlinedAt: !11240)
!11240 = distinct !DILocation(line: 334, column: 17, scope: !11194)
!11241 = !DILocation(line: 4316, column: 59, scope: !4092, inlinedAt: !11240)
!11242 = !DILocation(line: 4316, column: 72, scope: !4092, inlinedAt: !11240)
!11243 = !DILocation(line: 74, column: 35, scope: !4101, inlinedAt: !11240)
!11244 = !DILocation(line: 75, column: 17, scope: !4101, inlinedAt: !11240)
!11245 = !DILocation(line: 4345, column: 14, scope: !4092, inlinedAt: !11240)
!11246 = !DILocation(line: 335, column: 17, scope: !11194)
!11247 = !DILocation(line: 336, column: 17, scope: !11194)
!11248 = !DILocation(line: 337, column: 13, scope: !11174)
!11249 = !DILocation(line: 333, column: 31, scope: !11196)
!11250 = !DILocation(line: 323, column: 21, scope: !11186)
!11251 = !DILocation(line: 323, column: 27, scope: !11190)
!11252 = !DILocation(line: 324, column: 20, scope: !11186)
!11253 = !DILocation(line: 324, column: 17, scope: !11186)
!11254 = !DILocation(line: 325, column: 13, scope: !11174)
!11255 = !DILocation(line: 323, column: 27, scope: !11188)
!11256 = !DILocation(line: 0, scope: !11257)
!11257 = !DILexicalBlockFile(scope: !11174, file: !4366, discriminator: 0)
!11258 = distinct !DISubprogram(name: "exchange_malloc", linkageName: "_ZN5alloc5alloc15exchange_malloc17h671db6c8b01b187cE", scope: !113, file: !10908, line: 347, type: !11259, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11261)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{!3364, !9, !9}
!11261 = !{!11262, !11263, !11264, !11266}
!11262 = !DILocalVariable(name: "size", arg: 1, scope: !11258, file: !10908, line: 347, type: !9)
!11263 = !DILocalVariable(name: "align", arg: 2, scope: !11258, file: !10908, line: 347, type: !9)
!11264 = !DILocalVariable(name: "layout", scope: !11265, file: !10908, line: 348, type: !1746, align: 8)
!11265 = distinct !DILexicalBlock(scope: !11258, file: !10908, line: 348, column: 5)
!11266 = !DILocalVariable(name: "ptr", scope: !11267, file: !10908, line: 350, type: !1665, align: 8)
!11267 = distinct !DILexicalBlock(scope: !11265, file: !10908, line: 350, column: 9)
!11268 = !DILocation(line: 347, column: 27, scope: !11258)
!11269 = !DILocation(line: 347, column: 40, scope: !11258)
!11270 = !DILocation(line: 348, column: 27, scope: !11258)
!11271 = !DILocation(line: 348, column: 9, scope: !11265)
!11272 = !DILocation(line: 349, column: 11, scope: !11265)
!11273 = !DILocation(line: 349, column: 5, scope: !11265)
!11274 = !DILocation(line: 350, column: 12, scope: !11265)
!11275 = !DILocation(line: 350, column: 12, scope: !11267)
!11276 = !DILocation(line: 350, column: 20, scope: !11267)
!11277 = !DILocation(line: 353, column: 2, scope: !11258)
!11278 = !DILocation(line: 351, column: 19, scope: !11265)
!11279 = distinct !DISubprogram(name: "handle_alloc_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error17h78cf9973be69c22fE", scope: !113, file: !10908, line: 395, type: !11280, scopeLine: 395, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11282)
!11280 = !DISubroutineType(types: !11281)
!11281 = !{null, !1746}
!11282 = !{!11283}
!11283 = !DILocalVariable(name: "layout", arg: 1, scope: !11279, file: !10908, line: 395, type: !1746)
!11284 = !DILocation(line: 395, column: 33, scope: !11279)
!11285 = !DILocation(line: 409, column: 9, scope: !11279)
!11286 = distinct !DISubprogram(name: "ct_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error8ct_error17heb8c9575625c925cE", scope: !11287, file: !10908, line: 396, type: !11280, scopeLine: 396, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11288)
!11287 = !DINamespace(name: "handle_alloc_error", scope: !113)
!11288 = !{!11289}
!11289 = !DILocalVariable(arg: 1, scope: !11286, file: !10908, line: 396, type: !1746)
!11290 = !DILocation(line: 396, column: 23, scope: !11286)
!11291 = !DILocation(line: 397, column: 9, scope: !11286)
!11292 = distinct !DISubprogram(name: "rt_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error8rt_error17h3a62122d94f15743E", scope: !11287, file: !10908, line: 401, type: !11280, scopeLine: 401, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11293)
!11293 = !{!11294}
!11294 = !DILocalVariable(name: "layout", arg: 1, scope: !11292, file: !10908, line: 401, type: !1746)
!11295 = !DILocation(line: 401, column: 17, scope: !11292)
!11296 = !DILocation(line: 403, column: 40, scope: !11292)
!11297 = !DILocation(line: 403, column: 55, scope: !11292)
!11298 = !DILocation(line: 403, column: 13, scope: !11292)
!11299 = distinct !DISubprogram(name: "__rdl_oom", scope: !11300, file: !10908, line: 428, type: !2808, scopeLine: 428, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11301)
!11300 = !DINamespace(name: "__alloc_error_handler", scope: !113)
!11301 = !{!11302, !11303}
!11302 = !DILocalVariable(name: "size", arg: 1, scope: !11299, file: !10908, line: 428, type: !9)
!11303 = !DILocalVariable(name: "_align", arg: 2, scope: !11299, file: !10908, line: 428, type: !9)
!11304 = !DILocation(line: 428, column: 29, scope: !11299)
!11305 = !DILocation(line: 428, column: 42, scope: !11299)
!11306 = !DILocation(line: 435, column: 21, scope: !11299)
!11307 = !DILocation(line: 435, column: 12, scope: !11299)
!11308 = !DILocation(line: 439, column: 17, scope: !11299)
!11309 = !DILocation(line: 438, column: 13, scope: !11299)
!11310 = !DILocation(line: 436, column: 13, scope: !11299)
!11311 = distinct !DISubprogram(name: "from_slice<u8>", linkageName: "_ZN101_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..boxed..convert..BoxFromSlice$LT$T$GT$$GT$10from_slice17h58ffb5d3f2525b75E", scope: !11313, file: !11312, line: 80, type: !11314, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11316)
!11312 = !DIFile(filename: "src/boxed/convert.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "8ff4eb0c65b7f15e21613c7b97f43b92")
!11313 = !DINamespace(name: "{impl#3}", scope: !137)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!2539, !427}
!11316 = !{!11317, !11318, !11320}
!11317 = !DILocalVariable(name: "slice", arg: 1, scope: !11311, file: !11312, line: 80, type: !427)
!11318 = !DILocalVariable(name: "len", scope: !11319, file: !11312, line: 81, type: !9, align: 8)
!11319 = distinct !DILexicalBlock(scope: !11311, file: !11312, line: 81, column: 9)
!11320 = !DILocalVariable(name: "buf", scope: !11321, file: !11312, line: 82, type: !87, align: 8)
!11321 = distinct !DILexicalBlock(scope: !11319, file: !11312, line: 82, column: 9)
!11322 = !DILocation(line: 80, column: 19, scope: !11311)
!11323 = !DILocation(line: 82, column: 13, scope: !11321)
!11324 = !DILocation(line: 81, column: 19, scope: !11311)
!11325 = !DILocation(line: 81, column: 13, scope: !11319)
!11326 = !DILocation(line: 82, column: 19, scope: !11319)
!11327 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !11328)
!11328 = distinct !DILocation(line: 84, column: 38, scope: !11321)
!11329 = !DILocation(line: 84, column: 54, scope: !11321)
!11330 = !DILocation(line: 4316, column: 44, scope: !4092, inlinedAt: !11331)
!11331 = distinct !DILocation(line: 84, column: 13, scope: !11321)
!11332 = !DILocation(line: 4316, column: 59, scope: !4092, inlinedAt: !11331)
!11333 = !DILocation(line: 4316, column: 72, scope: !4092, inlinedAt: !11331)
!11334 = !DILocation(line: 74, column: 35, scope: !4101, inlinedAt: !11331)
!11335 = !DILocation(line: 75, column: 17, scope: !4101, inlinedAt: !11331)
!11336 = !DILocation(line: 4345, column: 14, scope: !4092, inlinedAt: !11331)
!11337 = !DILocation(line: 85, column: 13, scope: !11321)
!11338 = !DILocation(line: 87, column: 6, scope: !11311)
!11339 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17hca9842cba6e06ba6E", scope: !11340, file: !11312, line: 107, type: !11314, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11341)
!11340 = !DINamespace(name: "{impl#4}", scope: !137)
!11341 = !{!11342}
!11342 = !DILocalVariable(name: "slice", arg: 1, scope: !11339, file: !11312, line: 107, type: !427)
!11343 = !DILocation(line: 107, column: 13, scope: !11339)
!11344 = !DILocation(line: 108, column: 9, scope: !11339)
!11345 = !DILocation(line: 109, column: 6, scope: !11339)
!11346 = distinct !DISubprogram(name: "from<alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed7convert131_$LT$impl$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$GT$4from17h2855a1b3981b3881E", scope: !11347, file: !11312, line: 249, type: !11348, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !114, retainedNodes: !11354)
!11347 = !DINamespace(name: "{impl#10}", scope: !137)
!11348 = !DISubroutineType(types: !11349)
!11349 = !{!2539, !11350}
!11350 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<str, alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !11351, templateParams: !15, identifier: "9e9dbf31785598ec9c621258eb7e34af")
!11351 = !{!11352, !11353}
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11350, file: !2, baseType: !173, size: 64, align: 64)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11350, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11354 = !{!11355, !11356, !11358}
!11355 = !DILocalVariable(name: "s", arg: 1, scope: !11346, file: !11312, line: 249, type: !11350)
!11356 = !DILocalVariable(name: "raw", scope: !11357, file: !11312, line: 250, type: !3496, align: 8)
!11357 = distinct !DILexicalBlock(scope: !11346, file: !11312, line: 250, column: 9)
!11358 = !DILocalVariable(name: "alloc", scope: !11357, file: !11312, line: 250, type: !112, align: 1)
!11359 = !DILocation(line: 249, column: 13, scope: !11346)
!11360 = !DILocation(line: 250, column: 19, scope: !11357)
!11361 = !DILocation(line: 250, column: 28, scope: !11346)
!11362 = !DILocation(line: 250, column: 14, scope: !11346)
!11363 = !DILocation(line: 250, column: 14, scope: !11357)
!11364 = !DILocation(line: 251, column: 18, scope: !11357)
!11365 = !DILocation(line: 252, column: 6, scope: !11346)
!11366 = distinct !DISubprogram(name: "from<u8, 1>", linkageName: "_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$u5b$T$u3b$$u20$N$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h0d07abc93b54b782E", scope: !11367, file: !11312, line: 268, type: !11368, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11370)
!11367 = !DINamespace(name: "{impl#11}", scope: !137)
!11368 = !DISubroutineType(types: !11369)
!11369 = !{!2539, !198}
!11370 = !{!11371}
!11371 = !DILocalVariable(name: "array", arg: 1, scope: !11366, file: !11312, line: 268, type: !198)
!11372 = !DILocation(line: 268, column: 13, scope: !11366)
!11373 = !DILocation(line: 269, column: 9, scope: !11366)
!11374 = !DILocalVariable(name: "x", arg: 1, scope: !11375, file: !11376, line: 252, type: !198)
!11375 = distinct !DISubprogram(name: "new<[u8; 1]>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h4306f98af9fb6ba6E", scope: !11377, file: !11376, line: 252, type: !11378, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !201, retainedNodes: !11381)
!11376 = !DIFile(filename: "src/boxed.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "0d38c838f2cfdcadb8d0c717da794f11")
!11377 = !DINamespace(name: "{impl#0}", scope: !138)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!11380, !198}
!11380 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<[u8; 1], alloc::alloc::Global>", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!11381 = !{!11374}
!11382 = !DILocation(line: 252, column: 16, scope: !11375, inlinedAt: !11383)
!11383 = distinct !DILocation(line: 269, column: 9, scope: !11366)
!11384 = !DILocation(line: 254, column: 9, scope: !11375, inlinedAt: !11383)
!11385 = !DILocation(line: 254, column: 18, scope: !11375, inlinedAt: !11383)
!11386 = !DILocation(line: 270, column: 6, scope: !11366)
!11387 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h7143c78066fed9ecE", scope: !136, file: !11312, line: 611, type: !11388, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11396)
!11388 = !DISubroutineType(types: !11389)
!11389 = !{!11390, !78}
!11390 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !11391, templateParams: !15, identifier: "1aa025249b77e77f54840fc71f3e3b89")
!11391 = !{!11392, !11395}
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11390, file: !2, baseType: !11393, size: 64, align: 64)
!11393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11394, size: 64, align: 64, dwarfAddressSpace: 0)
!11394 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !15, identifier: "ed0bbb12de33d2a82831a1e66bdaf485")
!11395 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11390, file: !2, baseType: !6227, size: 64, align: 64, offset: 64)
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "err", arg: 1, scope: !11387, file: !11312, line: 611, type: !78)
!11398 = !DILocation(line: 611, column: 13, scope: !11387)
!11399 = !DILocation(line: 634, column: 18, scope: !11387)
!11400 = !DILocalVariable(name: "x", arg: 1, scope: !11401, file: !11376, line: 252, type: !134)
!11401 = distinct !DISubprogram(name: "new<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h78c13ed2866c3d34E", scope: !11377, file: !11376, line: 252, type: !11402, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2118, retainedNodes: !11405)
!11402 = !DISubroutineType(types: !11403)
!11403 = !{!11404, !134}
!11404 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<alloc::boxed::convert::{impl#19}::from::StringError, alloc::alloc::Global>", baseType: !134, size: 64, align: 64, dwarfAddressSpace: 0)
!11405 = !{!11400}
!11406 = !DILocation(line: 252, column: 16, scope: !11401, inlinedAt: !11407)
!11407 = distinct !DILocation(line: 634, column: 9, scope: !11387)
!11408 = !DILocation(line: 254, column: 9, scope: !11401, inlinedAt: !11407)
!11409 = !DILocation(line: 254, column: 18, scope: !11401, inlinedAt: !11407)
!11410 = !DILocation(line: 635, column: 6, scope: !11387)
!11411 = distinct !DISubprogram(name: "description", linkageName: "_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..error..Error$GT$11description17h48c6d84981b3d80cE", scope: !11412, file: !11312, line: 616, type: !11413, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11415)
!11412 = !DINamespace(name: "{impl#0}", scope: !135)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!170, !6236}
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "self", arg: 1, scope: !11411, file: !11312, line: 616, type: !6236)
!11417 = !DILocation(line: 616, column: 28, scope: !11411)
!11418 = !DILocation(line: 617, column: 17, scope: !11411)
!11419 = !DILocation(line: 618, column: 14, scope: !11411)
!11420 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h4065c6c534685a91E", scope: !11421, file: !11312, line: 622, type: !11422, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11424)
!11421 = !DINamespace(name: "{impl#1}", scope: !135)
!11422 = !DISubroutineType(types: !11423)
!11423 = !{!1961, !6236, !1977}
!11424 = !{!11425, !11426}
!11425 = !DILocalVariable(name: "self", arg: 1, scope: !11420, file: !11312, line: 622, type: !6236)
!11426 = !DILocalVariable(name: "f", arg: 2, scope: !11420, file: !11312, line: 622, type: !1977)
!11427 = !DILocation(line: 622, column: 20, scope: !11420)
!11428 = !DILocation(line: 622, column: 27, scope: !11420)
!11429 = !DILocation(line: 623, column: 17, scope: !11420)
!11430 = !DILocation(line: 624, column: 14, scope: !11420)
!11431 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN254_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd6e614d15668a76eE", scope: !11432, file: !11312, line: 629, type: !11422, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11433)
!11432 = !DINamespace(name: "{impl#2}", scope: !135)
!11433 = !{!11434, !11435}
!11434 = !DILocalVariable(name: "self", arg: 1, scope: !11431, file: !11312, line: 629, type: !6236)
!11435 = !DILocalVariable(name: "f", arg: 2, scope: !11431, file: !11312, line: 629, type: !1977)
!11436 = !DILocation(line: 629, column: 20, scope: !11431)
!11437 = !DILocation(line: 629, column: 27, scope: !11431)
!11438 = !DILocation(line: 630, column: 17, scope: !11431)
!11439 = !DILocation(line: 631, column: 14, scope: !11431)
!11440 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17ha02e589e1d982d6aE", scope: !11441, file: !11312, line: 653, type: !11442, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11448)
!11441 = !DINamespace(name: "{impl#20}", scope: !137)
!11442 = !DISubroutineType(types: !11443)
!11443 = !{!11444, !78}
!11444 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !11445, templateParams: !15, identifier: "701625352d6a833bac5556db071d68d")
!11445 = !{!11446, !11447}
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11444, file: !2, baseType: !6224, size: 64, align: 64)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11444, file: !2, baseType: !6227, size: 64, align: 64, offset: 64)
!11448 = !{!11449, !11450, !11452}
!11449 = !DILocalVariable(name: "str_err", arg: 1, scope: !11440, file: !11312, line: 653, type: !78)
!11450 = !DILocalVariable(name: "err1", scope: !11451, file: !11312, line: 654, type: !11390, align: 8)
!11451 = distinct !DILexicalBlock(scope: !11440, file: !11312, line: 654, column: 9)
!11452 = !DILocalVariable(name: "err2", scope: !11453, file: !11312, line: 655, type: !11444, align: 8)
!11453 = distinct !DILexicalBlock(scope: !11451, file: !11312, line: 655, column: 9)
!11454 = !DILocation(line: 654, column: 50, scope: !11440)
!11455 = !DILocation(line: 653, column: 13, scope: !11440)
!11456 = !DILocation(line: 654, column: 13, scope: !11451)
!11457 = !DILocation(line: 655, column: 36, scope: !11451)
!11458 = !DILocation(line: 655, column: 13, scope: !11453)
!11459 = !DILocation(line: 657, column: 6, scope: !11440)
!11460 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h3b5f53dbb3bfd540E", scope: !11461, file: !11312, line: 701, type: !11462, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11464)
!11461 = !DINamespace(name: "{impl#22}", scope: !137)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{!11444, !170}
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "err", arg: 1, scope: !11460, file: !11312, line: 701, type: !170)
!11466 = !DILocation(line: 701, column: 13, scope: !11460)
!11467 = !DILocation(line: 702, column: 20, scope: !11460)
!11468 = !DILocation(line: 702, column: 9, scope: !11460)
!11469 = !DILocation(line: 703, column: 6, scope: !11460)
!11470 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert184_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h481fb0a98c172b4aE", scope: !11471, file: !11312, line: 723, type: !11472, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11474)
!11471 = !DINamespace(name: "{impl#23}", scope: !137)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!11390, !3286}
!11474 = !{!11475}
!11475 = !DILocalVariable(name: "err", arg: 1, scope: !11470, file: !11312, line: 723, type: !3286)
!11476 = !DILocation(line: 723, column: 13, scope: !11470)
!11477 = !DILocation(line: 724, column: 20, scope: !11470)
!11478 = !DILocation(line: 724, column: 9, scope: !11470)
!11479 = !DILocation(line: 725, column: 6, scope: !11470)
!11480 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert138_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17ha4b94dd11ba5aac5E", scope: !11481, file: !11312, line: 744, type: !11482, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11484)
!11481 = !DINamespace(name: "{impl#24}", scope: !137)
!11482 = !DISubroutineType(types: !11483)
!11483 = !{!11444, !3286}
!11484 = !{!11485}
!11485 = !DILocalVariable(name: "err", arg: 1, scope: !11480, file: !11312, line: 744, type: !3286)
!11486 = !DILocation(line: 744, column: 13, scope: !11480)
!11487 = !DILocation(line: 745, column: 20, scope: !11480)
!11488 = !DILocation(line: 745, column: 9, scope: !11480)
!11489 = !DILocation(line: 746, column: 6, scope: !11480)
!11490 = distinct !DISubprogram(name: "max", linkageName: "_ZN5alloc5boxed4thin19WithHeader$LT$H$GT$14new_unsize_zst3max17hcd579b3dab5d820aE", scope: !11492, file: !11491, line: 320, type: !2852, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11495)
!11491 = !DIFile(filename: "src/boxed/thin.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "e511716d2939ecb5dd283439327a8c2c")
!11492 = !DINamespace(name: "new_unsize_zst", scope: !11493)
!11493 = !DINamespace(name: "{impl#11}", scope: !11494)
!11494 = !DINamespace(name: "thin", scope: !138)
!11495 = !{!11496, !11497}
!11496 = !DILocalVariable(name: "a", arg: 1, scope: !11490, file: !11491, line: 320, type: !9)
!11497 = !DILocalVariable(name: "b", arg: 2, scope: !11490, file: !11491, line: 320, type: !9)
!11498 = !DILocation(line: 320, column: 22, scope: !11490)
!11499 = !DILocation(line: 320, column: 32, scope: !11490)
!11500 = !DILocation(line: 321, column: 16, scope: !11490)
!11501 = !DILocation(line: 321, column: 35, scope: !11490)
!11502 = !DILocation(line: 321, column: 13, scope: !11490)
!11503 = !DILocation(line: 321, column: 24, scope: !11490)
!11504 = !DILocation(line: 322, column: 10, scope: !11490)
!11505 = distinct !DISubprogram(name: "assume_init<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17ha700e6df5a143db9E", scope: !11506, file: !11376, line: 1007, type: !11507, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11509)
!11506 = !DINamespace(name: "{impl#5}", scope: !138)
!11507 = !DISubroutineType(types: !11508)
!11508 = !{!2539, !9911}
!11509 = !{!11510, !11511, !11513}
!11510 = !DILocalVariable(name: "self", arg: 1, scope: !11505, file: !11376, line: 1007, type: !9911)
!11511 = !DILocalVariable(name: "raw", scope: !11512, file: !11376, line: 1008, type: !1144, align: 8)
!11512 = distinct !DILexicalBlock(scope: !11505, file: !11376, line: 1008, column: 9)
!11513 = !DILocalVariable(name: "alloc", scope: !11512, file: !11376, line: 1008, type: !112, align: 1)
!11514 = !DILocation(line: 1007, column: 31, scope: !11505)
!11515 = !DILocation(line: 1008, column: 19, scope: !11512)
!11516 = !DILocation(line: 1008, column: 28, scope: !11505)
!11517 = !DILocation(line: 1008, column: 14, scope: !11505)
!11518 = !DILocation(line: 1008, column: 14, scope: !11512)
!11519 = !DILocation(line: 1009, column: 18, scope: !11512)
!11520 = !DILocation(line: 1010, column: 6, scope: !11505)
!11521 = distinct !DISubprogram(name: "from_raw<[u8]>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h13a71ae362b77767E", scope: !11522, file: !11376, line: 1058, type: !11523, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11525)
!11522 = !DINamespace(name: "{impl#6}", scope: !138)
!11523 = !DISubroutineType(types: !11524)
!11524 = !{!2539, !3471}
!11525 = !{!11526}
!11526 = !DILocalVariable(name: "raw", arg: 1, scope: !11521, file: !11376, line: 1058, type: !3471)
!11527 = !DILocation(line: 1058, column: 28, scope: !11521)
!11528 = !DILocation(line: 1059, column: 18, scope: !11521)
!11529 = !DILocation(line: 1060, column: 6, scope: !11521)
!11530 = distinct !DISubprogram(name: "from_raw<str>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h640c3af015d6226fE", scope: !11522, file: !11376, line: 1058, type: !11531, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11533)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{!11350, !3496}
!11533 = !{!11534}
!11534 = !DILocalVariable(name: "raw", arg: 1, scope: !11530, file: !11376, line: 1058, type: !3496)
!11535 = !DILocation(line: 1058, column: 28, scope: !11530)
!11536 = !DILocation(line: 1059, column: 18, scope: !11530)
!11537 = !DILocation(line: 1060, column: 6, scope: !11530)
!11538 = distinct !DISubprogram(name: "from_raw<core::ffi::c_str::CStr>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hecf9e2ffed1d57f8E", scope: !11522, file: !11376, line: 1058, type: !11539, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3447, retainedNodes: !11545)
!11539 = !DISubroutineType(types: !11540)
!11540 = !{!11541, !3453}
!11541 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !11542, templateParams: !15, identifier: "8b05e2ae4455714f2ef7d5671d170cc2")
!11542 = !{!11543, !11544}
!11543 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11541, file: !2, baseType: !2193, size: 64, align: 64)
!11544 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11541, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11545 = !{!11546}
!11546 = !DILocalVariable(name: "raw", arg: 1, scope: !11538, file: !11376, line: 1058, type: !3453)
!11547 = !DILocation(line: 1058, column: 28, scope: !11538)
!11548 = !DILocation(line: 1059, column: 18, scope: !11538)
!11549 = !DILocation(line: 1060, column: 6, scope: !11538)
!11550 = distinct !DISubprogram(name: "from_raw_in<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h1238ef3c6c24c25eE", scope: !11551, file: !11376, line: 1167, type: !11552, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11554)
!11551 = !DINamespace(name: "{impl#7}", scope: !138)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{!11350, !3496, !112}
!11554 = !{!11555, !11556}
!11555 = !DILocalVariable(name: "raw", arg: 1, scope: !11550, file: !11376, line: 1167, type: !3496)
!11556 = !DILocalVariable(name: "alloc", arg: 2, scope: !11550, file: !11376, line: 1167, type: !112)
!11557 = !DILocation(line: 1167, column: 37, scope: !11550)
!11558 = !DILocation(line: 1167, column: 50, scope: !11550)
!11559 = !DILocation(line: 1168, column: 22, scope: !11550)
!11560 = !DILocation(line: 1169, column: 6, scope: !11550)
!11561 = distinct !DISubprogram(name: "from_raw_in<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h8ce9e3824757248aE", scope: !11551, file: !11376, line: 1167, type: !11562, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11567, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{!9911, !1144, !112}
!11564 = !{!11565, !11566}
!11565 = !DILocalVariable(name: "raw", arg: 1, scope: !11561, file: !11376, line: 1167, type: !1144)
!11566 = !DILocalVariable(name: "alloc", arg: 2, scope: !11561, file: !11376, line: 1167, type: !112)
!11567 = !{!1172, !115}
!11568 = !DILocation(line: 1167, column: 37, scope: !11561)
!11569 = !DILocation(line: 1167, column: 50, scope: !11561)
!11570 = !DILocation(line: 1168, column: 22, scope: !11561)
!11571 = !DILocation(line: 1169, column: 6, scope: !11561)
!11572 = distinct !DISubprogram(name: "from_raw_in<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17ha49bc0180d442c98E", scope: !11551, file: !11376, line: 1167, type: !11573, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11578, retainedNodes: !11575)
!11573 = !DISubroutineType(types: !11574)
!11574 = !{!11541, !3453, !112}
!11575 = !{!11576, !11577}
!11576 = !DILocalVariable(name: "raw", arg: 1, scope: !11572, file: !11376, line: 1167, type: !3453)
!11577 = !DILocalVariable(name: "alloc", arg: 2, scope: !11572, file: !11376, line: 1167, type: !112)
!11578 = !{!3448, !115}
!11579 = !DILocation(line: 1167, column: 37, scope: !11572)
!11580 = !DILocation(line: 1167, column: 50, scope: !11572)
!11581 = !DILocation(line: 1168, column: 22, scope: !11572)
!11582 = !DILocation(line: 1169, column: 6, scope: !11572)
!11583 = distinct !DISubprogram(name: "from_raw_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf2328b2d9fb7bfddE", scope: !11551, file: !11376, line: 1167, type: !11584, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11586)
!11584 = !DISubroutineType(types: !11585)
!11585 = !{!2539, !3471, !112}
!11586 = !{!11587, !11588}
!11587 = !DILocalVariable(name: "raw", arg: 1, scope: !11583, file: !11376, line: 1167, type: !3471)
!11588 = !DILocalVariable(name: "alloc", arg: 2, scope: !11583, file: !11376, line: 1167, type: !112)
!11589 = !DILocation(line: 1167, column: 37, scope: !11583)
!11590 = !DILocation(line: 1167, column: 50, scope: !11583)
!11591 = !DILocation(line: 1168, column: 22, scope: !11583)
!11592 = !DILocation(line: 1169, column: 6, scope: !11583)
!11593 = distinct !DISubprogram(name: "into_raw<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h82a4a9f336b81157E", scope: !11551, file: !11376, line: 1276, type: !11594, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11578, retainedNodes: !11596)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{!3453, !11541}
!11596 = !{!11597}
!11597 = !DILocalVariable(name: "b", arg: 1, scope: !11593, file: !11376, line: 1276, type: !11541)
!11598 = !DILocation(line: 1276, column: 21, scope: !11593)
!11599 = !DILocation(line: 1278, column: 34, scope: !11593)
!11600 = !DILocation(line: 1278, column: 28, scope: !11593)
!11601 = !DILocation(line: 1279, column: 6, scope: !11593)
!11602 = distinct !DISubprogram(name: "into_raw<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17haa0de9018da4c18fE", scope: !11551, file: !11376, line: 1276, type: !11603, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11605)
!11603 = !DISubroutineType(types: !11604)
!11604 = !{!3471, !2539}
!11605 = !{!11606}
!11606 = !DILocalVariable(name: "b", arg: 1, scope: !11602, file: !11376, line: 1276, type: !2539)
!11607 = !DILocation(line: 1276, column: 21, scope: !11602)
!11608 = !DILocation(line: 1278, column: 34, scope: !11602)
!11609 = !DILocation(line: 1278, column: 28, scope: !11602)
!11610 = !DILocation(line: 1279, column: 6, scope: !11602)
!11611 = distinct !DISubprogram(name: "into_raw_with_allocator<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h181002c231574c74E", scope: !11551, file: !11376, line: 1390, type: !11612, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11618)
!11612 = !DISubroutineType(types: !11613)
!11613 = !{!11614, !11350}
!11614 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut str, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !11615, templateParams: !15, identifier: "642033c1d669bf4ff0e7eca06dbcc4d5")
!11615 = !{!11616, !11617}
!11616 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11614, file: !2, baseType: !3496, size: 128, align: 64)
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !11614, file: !2, baseType: !112, align: 8, offset: 128)
!11618 = !{!11619, !11620, !11627, !11629}
!11619 = !DILocalVariable(name: "b", arg: 1, scope: !11611, file: !11376, line: 1390, type: !11350)
!11620 = !DILocalVariable(name: "b", scope: !11621, file: !11376, line: 1391, type: !11622, align: 8)
!11621 = distinct !DILexicalBlock(scope: !11611, file: !11376, line: 1391, column: 9)
!11622 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", scope: !1155, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !11623, templateParams: !11625, identifier: "f57dca6132ea9754c3e6f8e79bf95646")
!11623 = !{!11624}
!11624 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11622, file: !2, baseType: !11350, size: 128, align: 64, flags: DIFlagPrivate)
!11625 = !{!11626}
!11626 = !DITemplateTypeParameter(name: "T", type: !11350)
!11627 = !DILocalVariable(name: "ptr", scope: !11628, file: !11376, line: 1397, type: !3496, align: 8)
!11628 = distinct !DILexicalBlock(scope: !11621, file: !11376, line: 1397, column: 9)
!11629 = !DILocalVariable(name: "alloc", scope: !11630, file: !11376, line: 1398, type: !112, align: 1)
!11630 = distinct !DILexicalBlock(scope: !11628, file: !11376, line: 1398, column: 9)
!11631 = !DILocation(line: 1390, column: 36, scope: !11611)
!11632 = !DILocation(line: 1391, column: 13, scope: !11621)
!11633 = !DILocation(line: 1398, column: 13, scope: !11630)
!11634 = !DILocalVariable(name: "value", arg: 1, scope: !11635, file: !9935, line: 180, type: !11350)
!11635 = distinct !DISubprogram(name: "new<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hff027b6267e8d0a5E", scope: !11622, file: !9935, line: 180, type: !11636, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11625, declaration: !11638, retainedNodes: !11639)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{!11622, !11350}
!11638 = !DISubprogram(name: "new<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hff027b6267e8d0a5E", scope: !11622, file: !9935, line: 180, type: !11636, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11625)
!11639 = !{!11634}
!11640 = !DILocation(line: 180, column: 22, scope: !11635, inlinedAt: !11641)
!11641 = distinct !DILocation(line: 1391, column: 21, scope: !11611)
!11642 = !DILocation(line: 182, column: 6, scope: !11635, inlinedAt: !11641)
!11643 = !DILocation(line: 1391, column: 21, scope: !11611)
!11644 = !DILocalVariable(name: "self", arg: 1, scope: !11645, file: !9935, line: 272, type: !11650)
!11645 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3136d635ccee4597E", scope: !11646, file: !9935, line: 272, type: !11647, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11625, retainedNodes: !11651)
!11646 = !DINamespace(name: "{impl#3}", scope: !1155)
!11647 = !DISubroutineType(types: !11648)
!11648 = !{!11649, !11650}
!11649 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<str, alloc::alloc::Global>", baseType: !11350, size: 64, align: 64, dwarfAddressSpace: 0)
!11650 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", baseType: !11622, size: 64, align: 64, dwarfAddressSpace: 0)
!11651 = !{!11644}
!11652 = !DILocation(line: 272, column: 18, scope: !11645, inlinedAt: !11653)
!11653 = distinct !DILocation(line: 1397, column: 29, scope: !11621)
!11654 = !DILocation(line: 1397, column: 19, scope: !11621)
!11655 = !DILocation(line: 1397, column: 13, scope: !11628)
!11656 = !DILocalVariable(name: "self", arg: 1, scope: !11657, file: !9935, line: 264, type: !11661)
!11657 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3860473620af20d5E", scope: !9946, file: !9935, line: 264, type: !11658, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11625, retainedNodes: !11662)
!11658 = !DISubroutineType(types: !11659)
!11659 = !{!11660, !11661}
!11660 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<str, alloc::alloc::Global>", baseType: !11350, size: 64, align: 64, dwarfAddressSpace: 0)
!11661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", baseType: !11622, size: 64, align: 64, dwarfAddressSpace: 0)
!11662 = !{!11656}
!11663 = !DILocation(line: 264, column: 14, scope: !11657, inlinedAt: !11664)
!11664 = distinct !DILocation(line: 1398, column: 41, scope: !11628)
!11665 = !DILocation(line: 1398, column: 40, scope: !11628)
!11666 = !DILocation(line: 1398, column: 30, scope: !11628)
!11667 = !DILocation(line: 1400, column: 6, scope: !11611)
!11668 = distinct !DISubprogram(name: "into_raw_with_allocator<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h62554975f423fdbfE", scope: !11551, file: !11376, line: 1390, type: !11669, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11675)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!11671, !2539}
!11671 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut [u8], alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !11672, templateParams: !15, identifier: "9a38f207baa4cb42df875424c1878dc")
!11672 = !{!11673, !11674}
!11673 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11671, file: !2, baseType: !3471, size: 128, align: 64)
!11674 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !11671, file: !2, baseType: !112, align: 8, offset: 128)
!11675 = !{!11676, !11677, !11682, !11684}
!11676 = !DILocalVariable(name: "b", arg: 1, scope: !11668, file: !11376, line: 1390, type: !2539)
!11677 = !DILocalVariable(name: "b", scope: !11678, file: !11376, line: 1391, type: !11679, align: 8)
!11678 = distinct !DILexicalBlock(scope: !11668, file: !11376, line: 1391, column: 9)
!11679 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", scope: !1155, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !11680, templateParams: !2546, identifier: "60d1a1012531559b6f49aaabb1f083cb")
!11680 = !{!11681}
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11679, file: !2, baseType: !2539, size: 128, align: 64, flags: DIFlagPrivate)
!11682 = !DILocalVariable(name: "ptr", scope: !11683, file: !11376, line: 1397, type: !3471, align: 8)
!11683 = distinct !DILexicalBlock(scope: !11678, file: !11376, line: 1397, column: 9)
!11684 = !DILocalVariable(name: "alloc", scope: !11685, file: !11376, line: 1398, type: !112, align: 1)
!11685 = distinct !DILexicalBlock(scope: !11683, file: !11376, line: 1398, column: 9)
!11686 = !DILocation(line: 1390, column: 36, scope: !11668)
!11687 = !DILocation(line: 1391, column: 13, scope: !11678)
!11688 = !DILocation(line: 1398, column: 13, scope: !11685)
!11689 = !DILocalVariable(name: "value", arg: 1, scope: !11690, file: !9935, line: 180, type: !2539)
!11690 = distinct !DISubprogram(name: "new<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hc1310b5461f3dd0aE", scope: !11679, file: !9935, line: 180, type: !11691, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, declaration: !11693, retainedNodes: !11694)
!11691 = !DISubroutineType(types: !11692)
!11692 = !{!11679, !2539}
!11693 = !DISubprogram(name: "new<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hc1310b5461f3dd0aE", scope: !11679, file: !9935, line: 180, type: !11691, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2546)
!11694 = !{!11689}
!11695 = !DILocation(line: 180, column: 22, scope: !11690, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 1391, column: 21, scope: !11668)
!11697 = !DILocation(line: 182, column: 6, scope: !11690, inlinedAt: !11696)
!11698 = !DILocation(line: 1391, column: 21, scope: !11668)
!11699 = !DILocalVariable(name: "self", arg: 1, scope: !11700, file: !9935, line: 272, type: !11703)
!11700 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5c0d518559fca0e3E", scope: !11646, file: !9935, line: 272, type: !11701, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !11704)
!11701 = !DISubroutineType(types: !11702)
!11702 = !{!2543, !11703}
!11703 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", baseType: !11679, size: 64, align: 64, dwarfAddressSpace: 0)
!11704 = !{!11699}
!11705 = !DILocation(line: 272, column: 18, scope: !11700, inlinedAt: !11706)
!11706 = distinct !DILocation(line: 1397, column: 29, scope: !11678)
!11707 = !DILocation(line: 1397, column: 19, scope: !11678)
!11708 = !DILocation(line: 1397, column: 13, scope: !11683)
!11709 = !DILocalVariable(name: "self", arg: 1, scope: !11710, file: !9935, line: 264, type: !11714)
!11710 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha84f4f70771e5c12E", scope: !9946, file: !9935, line: 264, type: !11711, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !2546, retainedNodes: !11715)
!11711 = !DISubroutineType(types: !11712)
!11712 = !{!11713, !11714}
!11713 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !2539, size: 64, align: 64, dwarfAddressSpace: 0)
!11714 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", baseType: !11679, size: 64, align: 64, dwarfAddressSpace: 0)
!11715 = !{!11709}
!11716 = !DILocation(line: 264, column: 14, scope: !11710, inlinedAt: !11717)
!11717 = distinct !DILocation(line: 1398, column: 41, scope: !11683)
!11718 = !DILocation(line: 1398, column: 40, scope: !11683)
!11719 = !DILocation(line: 1398, column: 30, scope: !11683)
!11720 = !DILocation(line: 1400, column: 6, scope: !11668)
!11721 = distinct !DISubprogram(name: "into_raw_with_allocator<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h6272260b31fb11b9E", scope: !11551, file: !11376, line: 1390, type: !11722, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11578, retainedNodes: !11728)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{!11724, !11541}
!11724 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut core::ffi::c_str::CStr, alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !11725, templateParams: !15, identifier: "6312e99cbb25d7143dc4ff603a5ac0e2")
!11725 = !{!11726, !11727}
!11726 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11724, file: !2, baseType: !3453, size: 128, align: 64)
!11727 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !11724, file: !2, baseType: !112, align: 8, offset: 128)
!11728 = !{!11729, !11730, !11737, !11739}
!11729 = !DILocalVariable(name: "b", arg: 1, scope: !11721, file: !11376, line: 1390, type: !11541)
!11730 = !DILocalVariable(name: "b", scope: !11731, file: !11376, line: 1391, type: !11732, align: 8)
!11731 = distinct !DILexicalBlock(scope: !11721, file: !11376, line: 1391, column: 9)
!11732 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", scope: !1155, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !11733, templateParams: !11735, identifier: "2f0edc6092d2d1b2392c2aff0045c1b3")
!11733 = !{!11734}
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11732, file: !2, baseType: !11541, size: 128, align: 64, flags: DIFlagPrivate)
!11735 = !{!11736}
!11736 = !DITemplateTypeParameter(name: "T", type: !11541)
!11737 = !DILocalVariable(name: "ptr", scope: !11738, file: !11376, line: 1397, type: !3453, align: 8)
!11738 = distinct !DILexicalBlock(scope: !11731, file: !11376, line: 1397, column: 9)
!11739 = !DILocalVariable(name: "alloc", scope: !11740, file: !11376, line: 1398, type: !112, align: 1)
!11740 = distinct !DILexicalBlock(scope: !11738, file: !11376, line: 1398, column: 9)
!11741 = !DILocation(line: 1390, column: 36, scope: !11721)
!11742 = !DILocation(line: 1391, column: 13, scope: !11731)
!11743 = !DILocation(line: 1398, column: 13, scope: !11740)
!11744 = !DILocalVariable(name: "value", arg: 1, scope: !11745, file: !9935, line: 180, type: !11541)
!11745 = distinct !DISubprogram(name: "new<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdd95fc28d6336163E", scope: !11732, file: !9935, line: 180, type: !11746, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11735, declaration: !11748, retainedNodes: !11749)
!11746 = !DISubroutineType(types: !11747)
!11747 = !{!11732, !11541}
!11748 = !DISubprogram(name: "new<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdd95fc28d6336163E", scope: !11732, file: !9935, line: 180, type: !11746, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11735)
!11749 = !{!11744}
!11750 = !DILocation(line: 180, column: 22, scope: !11745, inlinedAt: !11751)
!11751 = distinct !DILocation(line: 1391, column: 21, scope: !11721)
!11752 = !DILocation(line: 182, column: 6, scope: !11745, inlinedAt: !11751)
!11753 = !DILocation(line: 1391, column: 21, scope: !11721)
!11754 = !DILocalVariable(name: "self", arg: 1, scope: !11755, file: !9935, line: 272, type: !11759)
!11755 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h2224b91ec4f47958E", scope: !11646, file: !9935, line: 272, type: !11756, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11735, retainedNodes: !11760)
!11756 = !DISubroutineType(types: !11757)
!11757 = !{!11758, !11759}
!11758 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", baseType: !11541, size: 64, align: 64, dwarfAddressSpace: 0)
!11759 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", baseType: !11732, size: 64, align: 64, dwarfAddressSpace: 0)
!11760 = !{!11754}
!11761 = !DILocation(line: 272, column: 18, scope: !11755, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 1397, column: 29, scope: !11731)
!11763 = !DILocation(line: 1397, column: 19, scope: !11731)
!11764 = !DILocation(line: 1397, column: 13, scope: !11738)
!11765 = !DILocalVariable(name: "self", arg: 1, scope: !11766, file: !9935, line: 264, type: !11770)
!11766 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha42c7880c2617d6aE", scope: !9946, file: !9935, line: 264, type: !11767, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11735, retainedNodes: !11771)
!11767 = !DISubroutineType(types: !11768)
!11768 = !{!11769, !11770}
!11769 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", baseType: !11541, size: 64, align: 64, dwarfAddressSpace: 0)
!11770 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", baseType: !11732, size: 64, align: 64, dwarfAddressSpace: 0)
!11771 = !{!11765}
!11772 = !DILocation(line: 264, column: 14, scope: !11766, inlinedAt: !11773)
!11773 = distinct !DILocation(line: 1398, column: 41, scope: !11738)
!11774 = !DILocation(line: 1398, column: 40, scope: !11738)
!11775 = !DILocation(line: 1398, column: 30, scope: !11738)
!11776 = !DILocation(line: 1400, column: 6, scope: !11721)
!11777 = distinct !DISubprogram(name: "into_raw_with_allocator<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hf25177ebfef01753E", scope: !11551, file: !11376, line: 1390, type: !11778, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11567, retainedNodes: !11784)
!11778 = !DISubroutineType(types: !11779)
!11779 = !{!11780, !9911}
!11780 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut [core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global)", file: !2, size: 128, align: 64, elements: !11781, templateParams: !15, identifier: "f2d69f2086c9739a77da1ed2d403f4b0")
!11781 = !{!11782, !11783}
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11780, file: !2, baseType: !1144, size: 128, align: 64)
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !11780, file: !2, baseType: !112, align: 8, offset: 128)
!11784 = !{!11785, !11786, !11793, !11795}
!11785 = !DILocalVariable(name: "b", arg: 1, scope: !11777, file: !11376, line: 1390, type: !9911)
!11786 = !DILocalVariable(name: "b", scope: !11787, file: !11376, line: 1391, type: !11788, align: 8)
!11787 = distinct !DILexicalBlock(scope: !11777, file: !11376, line: 1391, column: 9)
!11788 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", scope: !1155, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !11789, templateParams: !11791, identifier: "5bf33e572a750872314c2ac4029b3b81")
!11789 = !{!11790}
!11790 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11788, file: !2, baseType: !9911, size: 128, align: 64, flags: DIFlagPrivate)
!11791 = !{!11792}
!11792 = !DITemplateTypeParameter(name: "T", type: !9911)
!11793 = !DILocalVariable(name: "ptr", scope: !11794, file: !11376, line: 1397, type: !1144, align: 8)
!11794 = distinct !DILexicalBlock(scope: !11787, file: !11376, line: 1397, column: 9)
!11795 = !DILocalVariable(name: "alloc", scope: !11796, file: !11376, line: 1398, type: !112, align: 1)
!11796 = distinct !DILexicalBlock(scope: !11794, file: !11376, line: 1398, column: 9)
!11797 = !DILocation(line: 1390, column: 36, scope: !11777)
!11798 = !DILocation(line: 1391, column: 13, scope: !11787)
!11799 = !DILocation(line: 1398, column: 13, scope: !11796)
!11800 = !DILocalVariable(name: "value", arg: 1, scope: !11801, file: !9935, line: 180, type: !9911)
!11801 = distinct !DISubprogram(name: "new<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h81962fbcbfa91354E", scope: !11788, file: !9935, line: 180, type: !11802, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11791, declaration: !11804, retainedNodes: !11805)
!11802 = !DISubroutineType(types: !11803)
!11803 = !{!11788, !9911}
!11804 = !DISubprogram(name: "new<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h81962fbcbfa91354E", scope: !11788, file: !9935, line: 180, type: !11802, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11791)
!11805 = !{!11800}
!11806 = !DILocation(line: 180, column: 22, scope: !11801, inlinedAt: !11807)
!11807 = distinct !DILocation(line: 1391, column: 21, scope: !11777)
!11808 = !DILocation(line: 182, column: 6, scope: !11801, inlinedAt: !11807)
!11809 = !DILocation(line: 1391, column: 21, scope: !11777)
!11810 = !DILocalVariable(name: "self", arg: 1, scope: !11811, file: !9935, line: 272, type: !11815)
!11811 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6c18d3f16de0f672E", scope: !11646, file: !9935, line: 272, type: !11812, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11791, retainedNodes: !11816)
!11812 = !DISubroutineType(types: !11813)
!11813 = !{!11814, !11815}
!11814 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", baseType: !9911, size: 64, align: 64, dwarfAddressSpace: 0)
!11815 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", baseType: !11788, size: 64, align: 64, dwarfAddressSpace: 0)
!11816 = !{!11810}
!11817 = !DILocation(line: 272, column: 18, scope: !11811, inlinedAt: !11818)
!11818 = distinct !DILocation(line: 1397, column: 29, scope: !11787)
!11819 = !DILocation(line: 1397, column: 19, scope: !11787)
!11820 = !DILocation(line: 1397, column: 13, scope: !11794)
!11821 = !DILocalVariable(name: "self", arg: 1, scope: !11822, file: !9935, line: 264, type: !11826)
!11822 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3f6c61d53230ce9bE", scope: !9946, file: !9935, line: 264, type: !11823, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !11791, retainedNodes: !11827)
!11823 = !DISubroutineType(types: !11824)
!11824 = !{!11825, !11826}
!11825 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", baseType: !9911, size: 64, align: 64, dwarfAddressSpace: 0)
!11826 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", baseType: !11788, size: 64, align: 64, dwarfAddressSpace: 0)
!11827 = !{!11821}
!11828 = !DILocation(line: 264, column: 14, scope: !11822, inlinedAt: !11829)
!11829 = distinct !DILocation(line: 1398, column: 41, scope: !11794)
!11830 = !DILocation(line: 1398, column: 40, scope: !11794)
!11831 = !DILocation(line: 1398, column: 30, scope: !11794)
!11832 = !DILocation(line: 1400, column: 6, scope: !11777)
!11833 = distinct !DISubprogram(name: "drop<[u8], alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09b9ddd7b4a3eacdE", scope: !11834, file: !11376, line: 1670, type: !11835, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !11837)
!11834 = !DINamespace(name: "{impl#8}", scope: !138)
!11835 = !DISubroutineType(types: !11836)
!11836 = !{null, !2543}
!11837 = !{!11838, !11839, !11841}
!11838 = !DILocalVariable(name: "self", arg: 1, scope: !11833, file: !11376, line: 1670, type: !2543)
!11839 = !DILocalVariable(name: "ptr", scope: !11840, file: !11376, line: 1673, type: !3464, align: 8)
!11840 = distinct !DILexicalBlock(scope: !11833, file: !11376, line: 1673, column: 9)
!11841 = !DILocalVariable(name: "layout", scope: !11842, file: !11376, line: 1676, type: !1746, align: 8)
!11842 = distinct !DILexicalBlock(scope: !11840, file: !11376, line: 1676, column: 13)
!11843 = !DILocation(line: 1670, column: 13, scope: !11833)
!11844 = !DILocation(line: 1676, column: 17, scope: !11842)
!11845 = !DILocation(line: 1673, column: 19, scope: !11833)
!11846 = !DILocation(line: 1673, column: 13, scope: !11840)
!11847 = !DILocation(line: 1676, column: 48, scope: !11840)
!11848 = !DILocation(line: 1676, column: 26, scope: !11840)
!11849 = !DILocation(line: 1677, column: 16, scope: !11842)
!11850 = !DILocation(line: 1681, column: 6, scope: !11833)
!11851 = !DILocation(line: 1678, column: 17, scope: !11842)
!11852 = !DILocation(line: 1678, column: 46, scope: !11842)
!11853 = !DILocation(line: 1678, column: 35, scope: !11842)
!11854 = distinct !DISubprogram(name: "default<u8>", linkageName: "_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h799a061006e6e183E", scope: !11855, file: !11376, line: 1698, type: !11856, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !11858)
!11855 = !DINamespace(name: "{impl#10}", scope: !138)
!11856 = !DISubroutineType(types: !11857)
!11857 = !{!2539}
!11858 = !{!11859}
!11859 = !DILocalVariable(name: "ptr", scope: !11860, file: !11376, line: 1699, type: !3464, align: 8)
!11860 = distinct !DILexicalBlock(scope: !11854, file: !11376, line: 1699, column: 9)
!11861 = !DILocation(line: 1699, column: 32, scope: !11854)
!11862 = !DILocation(line: 1699, column: 13, scope: !11860)
!11863 = !DILocation(line: 1701, column: 6, scope: !11854)
!11864 = distinct !DISubprogram(name: "clone", linkageName: "_ZN67_$LT$alloc..boxed..Box$LT$str$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h15d497ecddb5e249E", scope: !11865, file: !11376, line: 1806, type: !11866, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11868)
!11865 = !DINamespace(name: "{impl#14}", scope: !138)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{!11350, !11660}
!11868 = !{!11869, !11870}
!11869 = !DILocalVariable(name: "self", arg: 1, scope: !11864, file: !11376, line: 1806, type: !11660)
!11870 = !DILocalVariable(name: "buf", scope: !11871, file: !11376, line: 1808, type: !2539, align: 8)
!11871 = distinct !DILexicalBlock(scope: !11864, file: !11376, line: 1808, column: 9)
!11872 = !DILocation(line: 1806, column: 14, scope: !11864)
!11873 = !DILocation(line: 1808, column: 30, scope: !11864)
!11874 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !11875)
!11875 = distinct !DILocation(line: 1808, column: 30, scope: !11864)
!11876 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !11875)
!11877 = !DILocation(line: 1808, column: 13, scope: !11871)
!11878 = !DILocation(line: 1809, column: 18, scope: !11871)
!11879 = !DILocation(line: 1810, column: 6, scope: !11864)
!11880 = distinct !DISubprogram(name: "to_mut<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h3f254fbddca720f4E", scope: !3286, file: !11881, line: 272, type: !11882, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3295, declaration: !11885, retainedNodes: !11886)
!11881 = !DIFile(filename: "src/borrow.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "97ce11f77c591b4f39f685a2a69ffd5a")
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!372, !11884}
!11884 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::borrow::Cow<str>", baseType: !3286, size: 64, align: 64, dwarfAddressSpace: 0)
!11885 = !DISubprogram(name: "to_mut<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h3f254fbddca720f4E", scope: !3286, file: !11881, line: 272, type: !11882, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3295)
!11886 = !{!11887, !11888, !11890, !11892}
!11887 = !DILocalVariable(name: "self", arg: 1, scope: !11880, file: !11881, line: 272, type: !11884)
!11888 = !DILocalVariable(name: "borrowed", scope: !11889, file: !11881, line: 274, type: !170, align: 8)
!11889 = distinct !DILexicalBlock(scope: !11880, file: !11881, line: 274, column: 13)
!11890 = !DILocalVariable(name: "owned", scope: !11891, file: !11881, line: 278, type: !372, align: 8)
!11891 = distinct !DILexicalBlock(scope: !11889, file: !11881, line: 278, column: 21)
!11892 = !DILocalVariable(name: "owned", scope: !11893, file: !11881, line: 281, type: !372, align: 8)
!11893 = distinct !DILexicalBlock(scope: !11880, file: !11881, line: 281, column: 13)
!11894 = !DILocation(line: 272, column: 19, scope: !11880)
!11895 = !DILocation(line: 273, column: 15, scope: !11880)
!11896 = !DILocation(line: 273, column: 9, scope: !11880)
!11897 = !DILocation(line: 274, column: 22, scope: !11880)
!11898 = !DILocation(line: 274, column: 22, scope: !11889)
!11899 = !DILocation(line: 275, column: 31, scope: !11889)
!11900 = !DILocation(line: 275, column: 25, scope: !11889)
!11901 = !DILocation(line: 275, column: 17, scope: !11889)
!11902 = !DILocation(line: 276, column: 23, scope: !11889)
!11903 = !DILocation(line: 276, column: 17, scope: !11889)
!11904 = !DILocation(line: 281, column: 19, scope: !11880)
!11905 = !DILocation(line: 281, column: 19, scope: !11893)
!11906 = !DILocation(line: 281, column: 37, scope: !11893)
!11907 = !DILocation(line: 281, column: 41, scope: !11880)
!11908 = !DILocation(line: 277, column: 37, scope: !11889)
!11909 = !DILocation(line: 278, column: 27, scope: !11889)
!11910 = !DILocation(line: 278, column: 27, scope: !11891)
!11911 = !DILocation(line: 280, column: 13, scope: !11880)
!11912 = !DILocation(line: 283, column: 6, scope: !11880)
!11913 = !DILocation(line: 0, scope: !11914)
!11914 = !DILexicalBlockFile(scope: !11880, file: !4366, discriminator: 0)
!11915 = distinct !DISubprogram(name: "into_owned<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17he85c5a07ac1cd5c4E", scope: !3286, file: !11881, line: 320, type: !11916, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3295, declaration: !11918, retainedNodes: !11919)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!78, !3286}
!11918 = !DISubprogram(name: "into_owned<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17he85c5a07ac1cd5c4E", scope: !3286, file: !11881, line: 320, type: !11916, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3295)
!11919 = !{!11920, !11921, !11923}
!11920 = !DILocalVariable(name: "self", arg: 1, scope: !11915, file: !11881, line: 320, type: !3286)
!11921 = !DILocalVariable(name: "borrowed", scope: !11922, file: !11881, line: 322, type: !170, align: 8)
!11922 = distinct !DILexicalBlock(scope: !11915, file: !11881, line: 322, column: 13)
!11923 = !DILocalVariable(name: "owned", scope: !11924, file: !11881, line: 323, type: !78, align: 8)
!11924 = distinct !DILexicalBlock(scope: !11915, file: !11881, line: 323, column: 13)
!11925 = !DILocation(line: 320, column: 23, scope: !11915)
!11926 = !DILocation(line: 323, column: 19, scope: !11924)
!11927 = !DILocation(line: 321, column: 15, scope: !11915)
!11928 = !DILocation(line: 321, column: 9, scope: !11915)
!11929 = !DILocation(line: 322, column: 22, scope: !11915)
!11930 = !DILocation(line: 322, column: 22, scope: !11922)
!11931 = !DILocation(line: 322, column: 35, scope: !11922)
!11932 = !DILocation(line: 323, column: 19, scope: !11915)
!11933 = !DILocation(line: 323, column: 29, scope: !11924)
!11934 = !DILocation(line: 323, column: 33, scope: !11915)
!11935 = !DILocation(line: 325, column: 6, scope: !11915)
!11936 = distinct !DISubprogram(name: "deref<str>", linkageName: "_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h36e0e2c2ff4241c3E", scope: !11937, file: !11881, line: 335, type: !11938, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3295, retainedNodes: !11941)
!11937 = !DINamespace(name: "{impl#4}", scope: !3287)
!11938 = !DISubroutineType(types: !11939)
!11939 = !{!170, !11940}
!11940 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::borrow::Cow<str>", baseType: !3286, size: 64, align: 64, dwarfAddressSpace: 0)
!11941 = !{!11942, !11943, !11945}
!11942 = !DILocalVariable(name: "self", arg: 1, scope: !11936, file: !11881, line: 335, type: !11940)
!11943 = !DILocalVariable(name: "borrowed", scope: !11944, file: !11881, line: 337, type: !170, align: 8)
!11944 = distinct !DILexicalBlock(scope: !11936, file: !11881, line: 337, column: 13)
!11945 = !DILocalVariable(name: "owned", scope: !11946, file: !11881, line: 338, type: !11947, align: 8)
!11946 = distinct !DILexicalBlock(scope: !11936, file: !11881, line: 338, column: 13)
!11947 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!11948 = !DILocation(line: 335, column: 14, scope: !11936)
!11949 = !DILocation(line: 336, column: 15, scope: !11936)
!11950 = !DILocation(line: 336, column: 9, scope: !11936)
!11951 = !DILocation(line: 337, column: 22, scope: !11936)
!11952 = !DILocation(line: 337, column: 22, scope: !11944)
!11953 = !DILocation(line: 337, column: 35, scope: !11944)
!11954 = !DILocation(line: 337, column: 42, scope: !11936)
!11955 = !DILocation(line: 338, column: 19, scope: !11936)
!11956 = !DILocation(line: 338, column: 19, scope: !11946)
!11957 = !DILocation(line: 338, column: 33, scope: !11946)
!11958 = !DILocation(line: 338, column: 46, scope: !11936)
!11959 = !DILocation(line: 340, column: 6, scope: !11936)
!11960 = distinct !DISubprogram(name: "add_assign", linkageName: "_ZN92_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$LT$$RF$str$GT$$GT$10add_assign17h6bbd71f2d061106eE", scope: !11961, file: !11881, line: 465, type: !11962, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11964)
!11961 = !DINamespace(name: "{impl#17}", scope: !3287)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{null, !11884, !170}
!11964 = !{!11965, !11966, !11967, !11969}
!11965 = !DILocalVariable(name: "self", arg: 1, scope: !11960, file: !11881, line: 465, type: !11884)
!11966 = !DILocalVariable(name: "rhs", arg: 2, scope: !11960, file: !11881, line: 465, type: !170)
!11967 = !DILocalVariable(name: "lhs", scope: !11968, file: !11881, line: 469, type: !170, align: 8)
!11968 = distinct !DILexicalBlock(scope: !11960, file: !11881, line: 469, column: 47)
!11969 = !DILocalVariable(name: "s", scope: !11970, file: !11881, line: 470, type: !78, align: 8)
!11970 = distinct !DILexicalBlock(scope: !11968, file: !11881, line: 470, column: 17)
!11971 = !DILocation(line: 465, column: 19, scope: !11960)
!11972 = !DILocation(line: 465, column: 30, scope: !11960)
!11973 = !DILocation(line: 470, column: 21, scope: !11970)
!11974 = !DILocation(line: 466, column: 12, scope: !11960)
!11975 = !DILocation(line: 468, column: 20, scope: !11960)
!11976 = !DILocation(line: 467, column: 21, scope: !11960)
!11977 = !DILocation(line: 467, column: 13, scope: !11960)
!11978 = !DILocation(line: 466, column: 9, scope: !11960)
!11979 = !DILocation(line: 469, column: 41, scope: !11968)
!11980 = !DILocation(line: 469, column: 20, scope: !11968)
!11981 = !DILocation(line: 476, column: 6, scope: !11960)
!11982 = !DILocation(line: 469, column: 34, scope: !11968)
!11983 = !DILocation(line: 470, column: 51, scope: !11968)
!11984 = !DILocation(line: 470, column: 63, scope: !11968)
!11985 = !DILocation(line: 474, column: 13, scope: !11960)
!11986 = !DILocation(line: 470, column: 29, scope: !11968)
!11987 = !DILocation(line: 471, column: 17, scope: !11970)
!11988 = !DILocation(line: 472, column: 36, scope: !11970)
!11989 = !DILocation(line: 472, column: 25, scope: !11970)
!11990 = !DILocation(line: 472, column: 17, scope: !11970)
!11991 = !DILocation(line: 469, column: 13, scope: !11960)
!11992 = !DILocation(line: 465, column: 5, scope: !11960)
!11993 = distinct !DISubprogram(name: "add_assign", linkageName: "_ZN77_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hebdc7760d57d1d1cE", scope: !11994, file: !11881, line: 482, type: !11995, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !11997)
!11994 = !DINamespace(name: "{impl#18}", scope: !3287)
!11995 = !DISubroutineType(types: !11996)
!11996 = !{null, !11884, !3286}
!11997 = !{!11998, !11999, !12000, !12002}
!11998 = !DILocalVariable(name: "self", arg: 1, scope: !11993, file: !11881, line: 482, type: !11884)
!11999 = !DILocalVariable(name: "rhs", arg: 2, scope: !11993, file: !11881, line: 482, type: !3286)
!12000 = !DILocalVariable(name: "lhs", scope: !12001, file: !11881, line: 486, type: !170, align: 8)
!12001 = distinct !DILexicalBlock(scope: !11993, file: !11881, line: 486, column: 47)
!12002 = !DILocalVariable(name: "s", scope: !12003, file: !11881, line: 487, type: !78, align: 8)
!12003 = distinct !DILexicalBlock(scope: !12001, file: !11881, line: 487, column: 17)
!12004 = !DILocation(line: 482, column: 19, scope: !11993)
!12005 = !DILocation(line: 482, column: 30, scope: !11993)
!12006 = !DILocation(line: 487, column: 21, scope: !12003)
!12007 = !DILocation(line: 483, column: 12, scope: !11993)
!12008 = !DILocation(line: 485, column: 20, scope: !11993)
!12009 = !DILocation(line: 484, column: 21, scope: !11993)
!12010 = !DILocation(line: 484, column: 13, scope: !11993)
!12011 = !DILocation(line: 483, column: 9, scope: !11993)
!12012 = !DILocation(line: 486, column: 41, scope: !12001)
!12013 = !DILocation(line: 486, column: 20, scope: !12001)
!12014 = !DILocation(line: 493, column: 5, scope: !11993)
!12015 = !DILocation(line: 486, column: 34, scope: !12001)
!12016 = !DILocation(line: 487, column: 51, scope: !12001)
!12017 = !DILocation(line: 487, column: 63, scope: !12001)
!12018 = !DILocation(line: 491, column: 13, scope: !11993)
!12019 = !DILocation(line: 491, column: 36, scope: !11993)
!12020 = !DILocation(line: 487, column: 29, scope: !12001)
!12021 = !DILocation(line: 488, column: 17, scope: !12003)
!12022 = !DILocation(line: 489, column: 36, scope: !12003)
!12023 = !DILocation(line: 489, column: 25, scope: !12003)
!12024 = !DILocation(line: 489, column: 17, scope: !12003)
!12025 = !DILocation(line: 486, column: 13, scope: !11993)
!12026 = !DILocation(line: 482, column: 5, scope: !11993)
!12027 = !DILocation(line: 493, column: 6, scope: !11993)
!12028 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN88_$LT$alloc..collections..btree..map..UnorderedKeyError$u20$as$u20$core..fmt..Display$GT$3fmt17h23d81eed968b884eE", scope: !12030, file: !12029, line: 3469, type: !12033, scopeLine: 3469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12037)
!12029 = !DIFile(filename: "src/collections/btree/map.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "76e54bc4f117671a6f0a453077b51c61")
!12030 = !DINamespace(name: "{impl#102}", scope: !12031)
!12031 = !DINamespace(name: "map", scope: !12032)
!12032 = !DINamespace(name: "btree", scope: !1733)
!12033 = !DISubroutineType(types: !12034)
!12034 = !{!1961, !12035, !1977}
!12035 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::map::UnorderedKeyError", baseType: !12036, size: 64, align: 64, dwarfAddressSpace: 0)
!12036 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnorderedKeyError", scope: !12031, file: !2, align: 8, flags: DIFlagPublic, elements: !15, identifier: "d5a2cf94989061a968fbe152fbb4b8d4")
!12037 = !{!12038, !12039}
!12038 = !DILocalVariable(name: "self", arg: 1, scope: !12028, file: !12029, line: 3469, type: !12035)
!12039 = !DILocalVariable(name: "f", arg: 2, scope: !12028, file: !12029, line: 3469, type: !1977)
!12040 = !DILocation(line: 3469, column: 12, scope: !12028)
!12041 = !DILocation(line: 3469, column: 19, scope: !12028)
!12042 = !DILocation(line: 3470, column: 9, scope: !12028)
!12043 = !DILocation(line: 3471, column: 6, scope: !12028)
!12044 = distinct !DISubprogram(name: "drop", linkageName: "_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4454aabe2e88e5b3E", scope: !12046, file: !12045, line: 21, type: !12049, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12053)
!12045 = !DIFile(filename: "src/collections/btree/mem.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "d03eae32c955a681411a9bfddf557173")
!12046 = !DINamespace(name: "{impl#0}", scope: !12047)
!12047 = !DINamespace(name: "replace", scope: !12048)
!12048 = !DINamespace(name: "mem", scope: !12032)
!12049 = !DISubroutineType(types: !12050)
!12050 = !{null, !12051}
!12051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::mem::replace::PanicGuard", baseType: !12052, size: 64, align: 64, dwarfAddressSpace: 0)
!12052 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicGuard", scope: !12047, file: !2, align: 8, flags: DIFlagProtected, elements: !15, identifier: "5b5d222b7c2b4ffc10d9fe2ed4972bea")
!12053 = !{!12054}
!12054 = !DILocalVariable(name: "self", arg: 1, scope: !12044, file: !12045, line: 21, type: !12051)
!12055 = !DILocation(line: 21, column: 17, scope: !12044)
!12056 = !DILocation(line: 22, column: 13, scope: !12044)
!12057 = distinct !DISubprogram(name: "splitpoint", linkageName: "_ZN5alloc11collections5btree4node10splitpoint17hca233f880b440073E", scope: !12059, file: !12058, line: 895, type: !12060, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12079)
!12058 = !DIFile(filename: "src/collections/btree/node.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "dabda7798a2dc5b66a90b18a6b423699")
!12059 = !DINamespace(name: "node", scope: !12032)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{!12062, !9}
!12062 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, alloc::collections::btree::node::LeftOrRight<usize>)", file: !2, size: 192, align: 64, elements: !12063, templateParams: !15, identifier: "47f1448e62b90f6a24e45326a9fa706c")
!12063 = !{!12064, !12065}
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12062, file: !2, baseType: !9, size: 64, align: 64)
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12062, file: !2, baseType: !12066, size: 128, align: 64, offset: 64)
!12066 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeftOrRight<usize>", scope: !12059, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !12067, templateParams: !15, identifier: "f5b03a830b87151d2b101b703ab1ce63")
!12067 = !{!12068}
!12068 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12066, file: !2, size: 128, align: 64, elements: !12069, templateParams: !15, identifier: "fba1ebec0bbf900ed37a6a49be186d55", discriminator: !12078)
!12069 = !{!12070, !12074}
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "Left", scope: !12068, file: !2, baseType: !12071, size: 128, align: 64, extraData: i128 0)
!12071 = !DICompositeType(tag: DW_TAG_structure_type, name: "Left", scope: !12066, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !12072, templateParams: !194, identifier: "bc7fb659f6c91f2014089599118e7798")
!12072 = !{!12073}
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12071, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!12074 = !DIDerivedType(tag: DW_TAG_member, name: "Right", scope: !12068, file: !2, baseType: !12075, size: 128, align: 64, extraData: i128 1)
!12075 = !DICompositeType(tag: DW_TAG_structure_type, name: "Right", scope: !12066, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !12076, templateParams: !194, identifier: "90dae2cd842d0b4de8420428910cf126")
!12076 = !{!12077}
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12075, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!12078 = !DIDerivedType(tag: DW_TAG_member, scope: !12066, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!12079 = !{!12080}
!12080 = !DILocalVariable(name: "edge_idx", arg: 1, scope: !12057, file: !12058, line: 895, type: !9)
!12081 = !DILocation(line: 895, column: 15, scope: !12057)
!12082 = !DILocation(line: 896, column: 19, scope: !12057)
!12083 = !DILocation(line: 896, column: 5, scope: !12057)
!12084 = !DILocation(line: 899, column: 9, scope: !12057)
!12085 = !DILocation(line: 898, column: 5, scope: !12057)
!12086 = !DILocation(line: 899, column: 59, scope: !12057)
!12087 = !DILocation(line: 899, column: 39, scope: !12057)
!12088 = !DILocation(line: 899, column: 86, scope: !12057)
!12089 = !DILocation(line: 902, column: 15, scope: !12057)
!12090 = !DILocation(line: 900, column: 52, scope: !12057)
!12091 = !DILocation(line: 900, column: 36, scope: !12057)
!12092 = !DILocation(line: 900, column: 79, scope: !12057)
!12093 = !DILocation(line: 901, column: 53, scope: !12057)
!12094 = !DILocation(line: 901, column: 37, scope: !12057)
!12095 = !DILocation(line: 901, column: 74, scope: !12057)
!12096 = !DILocation(line: 904, column: 2, scope: !12057)
!12097 = !DILocation(line: 902, column: 65, scope: !12057)
!12098 = !DILocation(line: 902, column: 64, scope: !12057)
!12099 = !DILocation(line: 902, column: 53, scope: !12057)
!12100 = !DILocation(line: 902, column: 34, scope: !12057)
!12101 = !DILocation(line: 902, column: 14, scope: !12057)
!12102 = !DILocation(line: 902, column: 88, scope: !12057)
!12103 = distinct !DISubprogram(name: "is_set_val", linkageName: "_ZN110_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$alloc..collections..btree..set_val..IsSetVal$GT$10is_set_val17h0618bf7be60d9affE", scope: !12105, file: !12104, line: 26, type: !7635, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15)
!12104 = !DIFile(filename: "src/collections/btree/set_val.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "6a0dd0962022153097579878f76ec8f3")
!12105 = !DINamespace(name: "{impl#1}", scope: !12106)
!12106 = !DINamespace(name: "set_val", scope: !12032)
!12107 = !DILocation(line: 28, column: 6, scope: !12103)
!12108 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17haee17c6b6643f677E", scope: !1732, file: !12109, line: 71, type: !12110, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12113, retainedNodes: !12114)
!12109 = !DIFile(filename: "src/collections/mod.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "86057d13956f8e38f423b83655e5b01b")
!12110 = !DISubroutineType(types: !12111)
!12111 = !{!1736, !12112}
!12112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !1732, size: 64, align: 64, dwarfAddressSpace: 0)
!12113 = !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17haee17c6b6643f677E", scope: !1732, file: !12109, line: 71, type: !12110, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!12114 = !{!12115}
!12115 = !DILocalVariable(name: "self", arg: 1, scope: !12108, file: !12109, line: 71, type: !12112)
!12116 = !DILocation(line: 71, column: 17, scope: !12108)
!12117 = !DILocation(line: 72, column: 9, scope: !12108)
!12118 = !DILocation(line: 73, column: 6, scope: !12108)
!12119 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf2f6d2c9f90567a2E", scope: !12120, file: !12109, line: 113, type: !12121, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12123)
!12120 = !DINamespace(name: "{impl#1}", scope: !1733)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!1732, !1736}
!12123 = !{!12124}
!12124 = !DILocalVariable(name: "kind", arg: 1, scope: !12119, file: !12109, line: 113, type: !1736)
!12125 = !DILocation(line: 113, column: 13, scope: !12119)
!12126 = !DILocation(line: 115, column: 6, scope: !12119)
!12127 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN74_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Display$GT$3fmt17ha40ef8fe1b5c9243E", scope: !12128, file: !12109, line: 129, type: !12129, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12131)
!12128 = !DINamespace(name: "{impl#3}", scope: !1733)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{!1961, !12112, !1977}
!12131 = !{!12132, !12133, !12134, !12149, !12151}
!12132 = !DILocalVariable(name: "self", arg: 1, scope: !12127, file: !12109, line: 130, type: !12112)
!12133 = !DILocalVariable(name: "fmt", arg: 2, scope: !12127, file: !12109, line: 131, type: !1977)
!12134 = !DILocalVariable(name: "residual", scope: !12135, file: !12109, line: 133, type: !12136, align: 1)
!12135 = distinct !DILexicalBlock(scope: !12127, file: !12109, line: 133, column: 50)
!12136 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::fmt::Error>", scope: !865, file: !2, align: 8, flags: DIFlagPublic, elements: !12137, templateParams: !15, identifier: "654a2cff61bf7b0095815434d8354fbe")
!12137 = !{!12138}
!12138 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12136, file: !2, align: 8, elements: !12139, templateParams: !15, identifier: "4e1af73c683d10591cef1456e193bf8b")
!12139 = !{!12140, !12145}
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12138, file: !2, baseType: !12141, align: 8)
!12141 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12136, file: !2, align: 8, flags: DIFlagPublic, elements: !12142, templateParams: !12144, identifier: "921950cf37719fcf53ed618761f099ca")
!12142 = !{!12143}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12141, file: !2, baseType: !873, align: 8, flags: DIFlagPublic)
!12144 = !{!878, !1970}
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12138, file: !2, baseType: !12146, align: 8)
!12146 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12136, file: !2, align: 8, flags: DIFlagPublic, elements: !12147, templateParams: !12144, identifier: "a814ad71ff009a9cec228b42553e5b89")
!12147 = !{!12148}
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12146, file: !2, baseType: !12, align: 8, flags: DIFlagPublic)
!12149 = !DILocalVariable(name: "val", scope: !12150, file: !12109, line: 133, type: !7, align: 1)
!12150 = distinct !DILexicalBlock(scope: !12127, file: !12109, line: 133, column: 9)
!12151 = !DILocalVariable(name: "reason", scope: !12152, file: !12109, line: 134, type: !170, align: 8)
!12152 = distinct !DILexicalBlock(scope: !12127, file: !12109, line: 134, column: 9)
!12153 = !DILocation(line: 130, column: 9, scope: !12127)
!12154 = !DILocation(line: 131, column: 9, scope: !12127)
!12155 = !DILocation(line: 134, column: 13, scope: !12152)
!12156 = !DILocation(line: 133, column: 50, scope: !12135)
!12157 = !DILocation(line: 133, column: 9, scope: !12150)
!12158 = !DILocation(line: 133, column: 9, scope: !12127)
!12159 = !DILocation(line: 134, column: 28, scope: !12127)
!12160 = !DILocation(line: 134, column: 22, scope: !12127)
!12161 = !DILocation(line: 133, column: 9, scope: !12135)
!12162 = !DILocation(line: 136, column: 17, scope: !12127)
!12163 = !DILocation(line: 139, column: 17, scope: !12127)
!12164 = !DILocation(line: 140, column: 13, scope: !12127)
!12165 = !DILocation(line: 142, column: 23, scope: !12152)
!12166 = !DILocation(line: 142, column: 9, scope: !12152)
!12167 = !DILocation(line: 143, column: 6, scope: !12127)
!12168 = !DILocation(line: 0, scope: !12169)
!12169 = !DILexicalBlockFile(scope: !12127, file: !4366, discriminator: 0)
!12170 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17hef1f41a988d37f7bE", scope: !12172, file: !12171, line: 182, type: !12187, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12190, retainedNodes: !12191)
!12171 = !DIFile(filename: "src/ffi/c_str.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "5a8a7c9b689eab815de08660f623a44f")
!12172 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromVecWithNulError", scope: !7465, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !12173, templateParams: !15, identifier: "1bccd80300fd16c81e3ae4a0c5fcf4c8")
!12173 = !{!12174, !12186}
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "error_kind", scope: !12172, file: !2, baseType: !12175, size: 128, align: 64, flags: DIFlagPrivate)
!12175 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromBytesWithNulErrorKind", scope: !7465, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !12176, templateParams: !15, identifier: "11a36d29fddbdc36185ed5d11469083e")
!12176 = !{!12177}
!12177 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12175, file: !2, size: 128, align: 64, elements: !12178, templateParams: !15, identifier: "f80fa37c540d4600bb12c1b748af63b1", discriminator: !12185)
!12178 = !{!12179, !12183}
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "InteriorNul", scope: !12177, file: !2, baseType: !12180, size: 128, align: 64, extraData: i128 0)
!12180 = !DICompositeType(tag: DW_TAG_structure_type, name: "InteriorNul", scope: !12175, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !12181, templateParams: !15, identifier: "c9da4e2a46d3b0c10d67050774ea195")
!12181 = !{!12182}
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12180, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "NotNulTerminated", scope: !12177, file: !2, baseType: !12184, size: 128, align: 64, extraData: i128 1)
!12184 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotNulTerminated", scope: !12175, file: !2, size: 128, align: 64, flags: DIFlagPrivate, elements: !15, identifier: "f32b539e957e304846a8583b02b32573")
!12185 = !DIDerivedType(tag: DW_TAG_member, scope: !12175, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !12172, file: !2, baseType: !83, size: 192, align: 64, offset: 128, flags: DIFlagPrivate)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!427, !12189}
!12189 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::FromVecWithNulError", baseType: !12172, size: 64, align: 64, dwarfAddressSpace: 0)
!12190 = !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17hef1f41a988d37f7bE", scope: !12172, file: !12171, line: 182, type: !12187, scopeLine: 182, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12191 = !{!12192}
!12192 = !DILocalVariable(name: "self", arg: 1, scope: !12170, file: !12171, line: 182, type: !12189)
!12193 = !DILocation(line: 182, column: 21, scope: !12170)
!12194 = !DILocation(line: 183, column: 10, scope: !12170)
!12195 = !DILocation(line: 183, column: 20, scope: !12170)
!12196 = !DILocation(line: 184, column: 6, scope: !12170)
!12197 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17h0043e6c54ef8e733E", scope: !12172, file: !12171, line: 208, type: !12198, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12200, retainedNodes: !12201)
!12198 = !DISubroutineType(types: !12199)
!12199 = !{!83, !12172}
!12200 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17h0043e6c54ef8e733E", scope: !12172, file: !12171, line: 208, type: !12198, scopeLine: 208, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12201 = !{!12202}
!12202 = !DILocalVariable(name: "self", arg: 1, scope: !12197, file: !12171, line: 208, type: !12172)
!12203 = !DILocation(line: 208, column: 23, scope: !12197)
!12204 = !DILocation(line: 209, column: 9, scope: !12197)
!12205 = !DILocation(line: 210, column: 6, scope: !12197)
!12206 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN81_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hb3b047ff8fd7e774E", scope: !12207, file: !12171, line: 295, type: !12209, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12231)
!12207 = !DINamespace(name: "{impl#1}", scope: !12208)
!12208 = !DINamespace(name: "new", scope: !7480)
!12209 = !DISubroutineType(types: !12210)
!12210 = !{!12211, !427}
!12211 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !865, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !12212, templateParams: !15, identifier: "4187dc6a8cee63fa563102a4edede1b0")
!12212 = !{!12213}
!12213 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12211, file: !2, size: 256, align: 64, elements: !12214, templateParams: !15, identifier: "4c7a0e8e1d404dab4b16525907d0f21", discriminator: !12230)
!12214 = !{!12215, !12226}
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12213, file: !2, baseType: !12216, size: 256, align: 64, extraData: i128 9223372036854775808)
!12216 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12211, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !12217, templateParams: !12219, identifier: "940627225729696df03fead33e694091")
!12217 = !{!12218}
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12216, file: !2, baseType: !7469, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!12219 = !{!12220, !12221}
!12220 = !DITemplateTypeParameter(name: "T", type: !7469)
!12221 = !DITemplateTypeParameter(name: "E", type: !12222)
!12222 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !7465, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !12223, templateParams: !15, identifier: "8d216495d17c40eca08ab32ed7093d88")
!12223 = !{!12224, !12225}
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12222, file: !2, baseType: !9, size: 64, align: 64, offset: 192, flags: DIFlagPrivate)
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12222, file: !2, baseType: !83, size: 192, align: 64, flags: DIFlagPrivate)
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12213, file: !2, baseType: !12227, size: 256, align: 64)
!12227 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12211, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !12228, templateParams: !12219, identifier: "b38c9d83d17ee5c3f26b2e7456eb2fc1")
!12228 = !{!12229}
!12229 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12227, file: !2, baseType: !12222, size: 256, align: 64, flags: DIFlagPublic)
!12230 = !DIDerivedType(tag: DW_TAG_member, scope: !12211, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!12231 = !{!12232}
!12232 = !DILocalVariable(name: "self", arg: 1, scope: !12206, file: !12171, line: 295, type: !427)
!12233 = !DILocation(line: 295, column: 30, scope: !12206)
!12234 = !DILocalVariable(name: "bytes", arg: 1, scope: !12235, file: !12171, line: 274, type: !427)
!12235 = distinct !DISubprogram(name: "spec_new_impl_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17hc272c1d5abfd32a5E", scope: !12208, file: !12171, line: 274, type: !12209, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12236)
!12236 = !{!12234, !12237, !12239, !12241}
!12237 = !DILocalVariable(name: "capacity", scope: !12238, file: !12171, line: 279, type: !9, align: 8)
!12238 = distinct !DILexicalBlock(scope: !12235, file: !12171, line: 279, column: 13)
!12239 = !DILocalVariable(name: "buffer", scope: !12240, file: !12171, line: 283, type: !83, align: 8)
!12240 = distinct !DILexicalBlock(scope: !12238, file: !12171, line: 283, column: 13)
!12241 = !DILocalVariable(name: "i", scope: !12242, file: !12171, line: 289, type: !9, align: 8)
!12242 = distinct !DILexicalBlock(scope: !12240, file: !12171, line: 289, column: 17)
!12243 = !DILocation(line: 274, column: 32, scope: !12235, inlinedAt: !12244)
!12244 = distinct !DILocation(line: 296, column: 17, scope: !12206)
!12245 = !DILocation(line: 283, column: 17, scope: !12240, inlinedAt: !12244)
!12246 = !DILocation(line: 279, column: 28, scope: !12235, inlinedAt: !12244)
!12247 = !DILocalVariable(name: "self", arg: 1, scope: !12248, file: !1619, line: 969, type: !664)
!12248 = distinct !DISubprogram(name: "unwrap<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E", scope: !664, file: !1619, line: 969, type: !12249, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !194, declaration: !12251, retainedNodes: !12252)
!12249 = !DISubroutineType(types: !12250)
!12250 = !{!9, !664, !1690}
!12251 = !DISubprogram(name: "unwrap<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h4199b339fa5d0719E", scope: !664, file: !1619, line: 969, type: !12249, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !194)
!12252 = !{!12247, !12253}
!12253 = !DILocalVariable(name: "val", scope: !12254, file: !1619, line: 971, type: !9, align: 8)
!12254 = distinct !DILexicalBlock(scope: !12248, file: !1619, line: 971, column: 13)
!12255 = !DILocation(line: 969, column: 25, scope: !12248, inlinedAt: !12256)
!12256 = distinct !DILocation(line: 279, column: 28, scope: !12235, inlinedAt: !12244)
!12257 = !DILocation(line: 970, column: 15, scope: !12248, inlinedAt: !12256)
!12258 = !DILocation(line: 970, column: 9, scope: !12248, inlinedAt: !12256)
!12259 = !DILocation(line: 972, column: 21, scope: !12248, inlinedAt: !12256)
!12260 = !DILocation(line: 971, column: 18, scope: !12248, inlinedAt: !12256)
!12261 = !DILocation(line: 971, column: 18, scope: !12254, inlinedAt: !12256)
!12262 = !DILocation(line: 279, column: 17, scope: !12238, inlinedAt: !12244)
!12263 = !DILocation(line: 283, column: 30, scope: !12238, inlinedAt: !12244)
!12264 = !DILocation(line: 284, column: 13, scope: !12240, inlinedAt: !12244)
!12265 = !DILocation(line: 288, column: 19, scope: !12240, inlinedAt: !12244)
!12266 = !DILocation(line: 288, column: 13, scope: !12240, inlinedAt: !12244)
!12267 = !DILocation(line: 290, column: 66, scope: !12240, inlinedAt: !12244)
!12268 = !DILocation(line: 290, column: 37, scope: !12240, inlinedAt: !12244)
!12269 = !DILocation(line: 290, column: 25, scope: !12240, inlinedAt: !12244)
!12270 = !DILocation(line: 290, column: 75, scope: !12240, inlinedAt: !12244)
!12271 = !DILocation(line: 289, column: 22, scope: !12240, inlinedAt: !12244)
!12272 = !DILocation(line: 289, column: 22, scope: !12242, inlinedAt: !12244)
!12273 = !DILocation(line: 289, column: 44, scope: !12242, inlinedAt: !12244)
!12274 = !DILocation(line: 289, column: 32, scope: !12242, inlinedAt: !12244)
!12275 = !DILocation(line: 289, column: 28, scope: !12242, inlinedAt: !12244)
!12276 = !DILocation(line: 289, column: 51, scope: !12240, inlinedAt: !12244)
!12277 = !DILocation(line: 297, column: 14, scope: !12206)
!12278 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h89f9e00cb5e205bdE", scope: !12279, file: !12171, line: 301, type: !12280, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12282)
!12279 = !DINamespace(name: "{impl#2}", scope: !12208)
!12280 = !DISubroutineType(types: !12281)
!12281 = !{!12211, !170}
!12282 = !{!12283}
!12283 = !DILocalVariable(name: "self", arg: 1, scope: !12278, file: !12171, line: 301, type: !170)
!12284 = !DILocation(line: 301, column: 30, scope: !12278)
!12285 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !12286)
!12286 = distinct !DILocation(line: 302, column: 37, scope: !12278)
!12287 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !12286)
!12288 = !DILocation(line: 302, column: 37, scope: !12278)
!12289 = !DILocation(line: 274, column: 32, scope: !12235, inlinedAt: !12290)
!12290 = distinct !DILocation(line: 302, column: 17, scope: !12278)
!12291 = !DILocation(line: 283, column: 17, scope: !12240, inlinedAt: !12290)
!12292 = !DILocation(line: 279, column: 28, scope: !12235, inlinedAt: !12290)
!12293 = !DILocation(line: 969, column: 25, scope: !12248, inlinedAt: !12294)
!12294 = distinct !DILocation(line: 279, column: 28, scope: !12235, inlinedAt: !12290)
!12295 = !DILocation(line: 970, column: 15, scope: !12248, inlinedAt: !12294)
!12296 = !DILocation(line: 970, column: 9, scope: !12248, inlinedAt: !12294)
!12297 = !DILocation(line: 972, column: 21, scope: !12248, inlinedAt: !12294)
!12298 = !DILocation(line: 971, column: 18, scope: !12248, inlinedAt: !12294)
!12299 = !DILocation(line: 971, column: 18, scope: !12254, inlinedAt: !12294)
!12300 = !DILocation(line: 279, column: 17, scope: !12238, inlinedAt: !12290)
!12301 = !DILocation(line: 283, column: 30, scope: !12238, inlinedAt: !12290)
!12302 = !DILocation(line: 284, column: 13, scope: !12240, inlinedAt: !12290)
!12303 = !DILocation(line: 288, column: 19, scope: !12240, inlinedAt: !12290)
!12304 = !DILocation(line: 288, column: 13, scope: !12240, inlinedAt: !12290)
!12305 = !DILocation(line: 290, column: 66, scope: !12240, inlinedAt: !12290)
!12306 = !DILocation(line: 290, column: 37, scope: !12240, inlinedAt: !12290)
!12307 = !DILocation(line: 290, column: 25, scope: !12240, inlinedAt: !12290)
!12308 = !DILocation(line: 290, column: 75, scope: !12240, inlinedAt: !12290)
!12309 = !DILocation(line: 289, column: 22, scope: !12240, inlinedAt: !12290)
!12310 = !DILocation(line: 289, column: 22, scope: !12242, inlinedAt: !12290)
!12311 = !DILocation(line: 289, column: 44, scope: !12242, inlinedAt: !12290)
!12312 = !DILocation(line: 289, column: 32, scope: !12242, inlinedAt: !12290)
!12313 = !DILocation(line: 289, column: 28, scope: !12242, inlinedAt: !12290)
!12314 = !DILocation(line: 289, column: 51, scope: !12240, inlinedAt: !12290)
!12315 = !DILocation(line: 303, column: 14, scope: !12278)
!12316 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN89_$LT$$RF$mut$u20$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hfd73c39f1fac8afcE", scope: !12317, file: !12171, line: 307, type: !12318, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12320)
!12317 = !DINamespace(name: "{impl#3}", scope: !12208)
!12318 = !DISubroutineType(types: !12319)
!12319 = !{!12211, !4495}
!12320 = !{!12321}
!12321 = !DILocalVariable(name: "self", arg: 1, scope: !12316, file: !12171, line: 307, type: !4495)
!12322 = !DILocation(line: 307, column: 30, scope: !12316)
!12323 = !DILocation(line: 274, column: 32, scope: !12235, inlinedAt: !12324)
!12324 = distinct !DILocation(line: 308, column: 17, scope: !12316)
!12325 = !DILocation(line: 283, column: 17, scope: !12240, inlinedAt: !12324)
!12326 = !DILocation(line: 279, column: 28, scope: !12235, inlinedAt: !12324)
!12327 = !DILocation(line: 969, column: 25, scope: !12248, inlinedAt: !12328)
!12328 = distinct !DILocation(line: 279, column: 28, scope: !12235, inlinedAt: !12324)
!12329 = !DILocation(line: 970, column: 15, scope: !12248, inlinedAt: !12328)
!12330 = !DILocation(line: 970, column: 9, scope: !12248, inlinedAt: !12328)
!12331 = !DILocation(line: 972, column: 21, scope: !12248, inlinedAt: !12328)
!12332 = !DILocation(line: 971, column: 18, scope: !12248, inlinedAt: !12328)
!12333 = !DILocation(line: 971, column: 18, scope: !12254, inlinedAt: !12328)
!12334 = !DILocation(line: 279, column: 17, scope: !12238, inlinedAt: !12324)
!12335 = !DILocation(line: 283, column: 30, scope: !12238, inlinedAt: !12324)
!12336 = !DILocation(line: 284, column: 13, scope: !12240, inlinedAt: !12324)
!12337 = !DILocation(line: 288, column: 19, scope: !12240, inlinedAt: !12324)
!12338 = !DILocation(line: 288, column: 13, scope: !12240, inlinedAt: !12324)
!12339 = !DILocation(line: 290, column: 66, scope: !12240, inlinedAt: !12324)
!12340 = !DILocation(line: 290, column: 37, scope: !12240, inlinedAt: !12324)
!12341 = !DILocation(line: 290, column: 25, scope: !12240, inlinedAt: !12324)
!12342 = !DILocation(line: 290, column: 75, scope: !12240, inlinedAt: !12324)
!12343 = !DILocation(line: 289, column: 22, scope: !12240, inlinedAt: !12324)
!12344 = !DILocation(line: 289, column: 22, scope: !12242, inlinedAt: !12324)
!12345 = !DILocation(line: 289, column: 44, scope: !12242, inlinedAt: !12324)
!12346 = !DILocation(line: 289, column: 32, scope: !12242, inlinedAt: !12324)
!12347 = !DILocation(line: 289, column: 28, scope: !12242, inlinedAt: !12324)
!12348 = !DILocation(line: 289, column: 51, scope: !12240, inlinedAt: !12324)
!12349 = !DILocation(line: 309, column: 14, scope: !12316)
!12350 = distinct !DISubprogram(name: "from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17hc10e08b27d6b20efE", scope: !7469, file: !12171, line: 336, type: !12351, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12353, retainedNodes: !12354)
!12351 = !DISubroutineType(types: !12352)
!12352 = !{!7469, !83}
!12353 = !DISubprogram(name: "from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17hc10e08b27d6b20efE", scope: !7469, file: !12171, line: 336, type: !12351, scopeLine: 336, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12354 = !{!12355}
!12355 = !DILocalVariable(name: "v", arg: 1, scope: !12350, file: !12171, line: 336, type: !83)
!12356 = !DILocation(line: 336, column: 38, scope: !12350)
!12357 = !DILocation(line: 337, column: 41, scope: !12350)
!12358 = !DILocation(line: 337, column: 23, scope: !12350)
!12359 = !DILocation(line: 337, column: 9, scope: !12350)
!12360 = !DILocation(line: 338, column: 18, scope: !12350)
!12361 = !DILocation(line: 339, column: 6, scope: !12350)
!12362 = distinct !DISubprogram(name: "_from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE", scope: !7469, file: !12171, line: 341, type: !12351, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12363, retainedNodes: !12364)
!12363 = !DISubprogram(name: "_from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h8af86602b49423fdE", scope: !7469, file: !12171, line: 341, type: !12351, scopeLine: 341, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12364 = !{!12365}
!12365 = !DILocalVariable(name: "v", arg: 1, scope: !12362, file: !12171, line: 341, type: !83)
!12366 = !DILocation(line: 341, column: 35, scope: !12362)
!12367 = !DILocation(line: 342, column: 9, scope: !12362)
!12368 = !DILocation(line: 343, column: 9, scope: !12362)
!12369 = !DILocation(line: 344, column: 23, scope: !12362)
!12370 = !DILocation(line: 345, column: 6, scope: !12362)
!12371 = distinct !DISubprogram(name: "from_raw", linkageName: "_ZN5alloc3ffi5c_str7CString8from_raw17h4fd357127ea36e1dE", scope: !7469, file: !12171, line: 393, type: !12372, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12374, retainedNodes: !12375)
!12372 = !DISubroutineType(types: !12373)
!12373 = !{!7469, !3364}
!12374 = !DISubprogram(name: "from_raw", linkageName: "_ZN5alloc3ffi5c_str7CString8from_raw17h4fd357127ea36e1dE", scope: !7469, file: !12171, line: 393, type: !12372, scopeLine: 393, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12375 = !{!12376, !12377, !12379}
!12376 = !DILocalVariable(name: "ptr", arg: 1, scope: !12371, file: !12171, line: 393, type: !3364)
!12377 = !DILocalVariable(name: "len", scope: !12378, file: !12171, line: 404, type: !9, align: 8)
!12378 = distinct !DILexicalBlock(scope: !12371, file: !12171, line: 404, column: 13)
!12379 = !DILocalVariable(name: "slice", scope: !12380, file: !12171, line: 405, type: !4495, align: 8)
!12380 = distinct !DILexicalBlock(scope: !12378, file: !12171, line: 405, column: 13)
!12381 = !DILocation(line: 393, column: 28, scope: !12371)
!12382 = !DILocation(line: 404, column: 23, scope: !12371)
!12383 = !DILocation(line: 404, column: 17, scope: !12378)
!12384 = !DILocation(line: 405, column: 25, scope: !12378)
!12385 = !DILocation(line: 405, column: 17, scope: !12380)
!12386 = !DILocation(line: 406, column: 30, scope: !12380)
!12387 = !DILocation(line: 408, column: 6, scope: !12371)
!12388 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string17hb1300f768f348071E", scope: !7469, file: !12171, line: 469, type: !12389, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12391, retainedNodes: !12392)
!12389 = !DISubroutineType(types: !12390)
!12390 = !{!7454, !7469}
!12391 = !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string17hb1300f768f348071E", scope: !7469, file: !12171, line: 469, type: !12389, scopeLine: 469, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12392 = !{!12393}
!12393 = !DILocalVariable(name: "self", arg: 1, scope: !12388, file: !12171, line: 469, type: !7469)
!12394 = !DILocation(line: 469, column: 24, scope: !12388)
!12395 = !DILocation(line: 470, column: 27, scope: !12388)
!12396 = !DILocation(line: 470, column: 9, scope: !12388)
!12397 = !DILocation(line: 474, column: 6, scope: !12388)
!12398 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17h6d6702930b05347dE", scope: !7479, file: !12171, line: 470, type: !12399, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12401)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{!7464, !7478, !3199}
!12401 = !{!12402, !12403}
!12402 = !DILocalVariable(name: "e", arg: 2, scope: !12398, file: !12171, line: 470, type: !3199)
!12403 = !DILocalVariable(arg: 1, scope: !12398, file: !12171, line: 470, type: !7478)
!12404 = !DILocation(line: 470, column: 54, scope: !12398)
!12405 = !DILocation(line: 470, column: 55, scope: !12398)
!12406 = !DILocation(line: 471, column: 20, scope: !12398)
!12407 = !DILocation(line: 472, column: 55, scope: !12398)
!12408 = !DILocation(line: 472, column: 29, scope: !12398)
!12409 = !DILocation(line: 470, column: 58, scope: !12398)
!12410 = !DILocation(line: 473, column: 10, scope: !12398)
!12411 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString10into_bytes17h4d27f1a9eff3f28dE", scope: !7469, file: !12171, line: 493, type: !12412, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12414, retainedNodes: !12415)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!83, !7469}
!12414 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString10into_bytes17h4d27f1a9eff3f28dE", scope: !7469, file: !12171, line: 493, type: !12412, scopeLine: 493, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12415 = !{!12416, !12417, !12419, !12421, !12424, !12425}
!12416 = !DILocalVariable(name: "self", arg: 1, scope: !12411, file: !12171, line: 493, type: !7469)
!12417 = !DILocalVariable(name: "vec", scope: !12418, file: !12171, line: 494, type: !83, align: 8)
!12418 = distinct !DILexicalBlock(scope: !12411, file: !12171, line: 494, column: 9)
!12419 = !DILocalVariable(name: "_nul", scope: !12420, file: !12171, line: 495, type: !36, align: 1)
!12420 = distinct !DILexicalBlock(scope: !12418, file: !12171, line: 495, column: 9)
!12421 = !DILocalVariable(name: "left_val", scope: !12422, file: !12171, line: 496, type: !35, align: 8)
!12422 = !DILexicalBlockFile(scope: !12423, file: !12171, discriminator: 0)
!12423 = distinct !DILexicalBlock(scope: !12420, file: !2221, line: 45, column: 13)
!12424 = !DILocalVariable(name: "right_val", scope: !12422, file: !12171, line: 496, type: !35, align: 8)
!12425 = !DILocalVariable(name: "kind", scope: !12426, file: !12171, line: 496, type: !287, align: 1)
!12426 = !DILexicalBlockFile(scope: !12427, file: !12171, discriminator: 0)
!12427 = distinct !DILexicalBlock(scope: !12423, file: !2221, line: 47, column: 21)
!12428 = !DILocation(line: 493, column: 23, scope: !12411)
!12429 = !DILocation(line: 494, column: 13, scope: !12418)
!12430 = !DILocation(line: 495, column: 13, scope: !12420)
!12431 = !DILocation(line: 496, column: 9, scope: !12426)
!12432 = !DILocation(line: 494, column: 32, scope: !12411)
!12433 = !DILocation(line: 494, column: 23, scope: !12411)
!12434 = !DILocation(line: 495, column: 20, scope: !12418)
!12435 = !DILocation(line: 496, column: 9, scope: !12420)
!12436 = !DILocation(line: 496, column: 9, scope: !12422)
!12437 = !DILocation(line: 497, column: 9, scope: !12420)
!12438 = !DILocation(line: 498, column: 6, scope: !12411)
!12439 = distinct !DISubprogram(name: "into_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h0ae8f6045b10d7ceE", scope: !7469, file: !12171, line: 514, type: !12412, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12440, retainedNodes: !12441)
!12440 = !DISubprogram(name: "into_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h0ae8f6045b10d7ceE", scope: !7469, file: !12171, line: 514, type: !12412, scopeLine: 514, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12441 = !{!12442}
!12442 = !DILocalVariable(name: "self", arg: 1, scope: !12439, file: !12171, line: 514, type: !7469)
!12443 = !DILocation(line: 514, column: 32, scope: !12439)
!12444 = !DILocation(line: 515, column: 18, scope: !12439)
!12445 = !DILocation(line: 515, column: 9, scope: !12439)
!12446 = !DILocation(line: 516, column: 6, scope: !12439)
!12447 = distinct !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h850785f953d13936E", scope: !7469, file: !12171, line: 557, type: !12448, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12451, retainedNodes: !12452)
!12448 = !DISubroutineType(types: !12449)
!12449 = !{!427, !12450}
!12450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::CString", baseType: !7469, size: 64, align: 64, dwarfAddressSpace: 0)
!12451 = !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17h850785f953d13936E", scope: !7469, file: !12171, line: 557, type: !12448, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!12452 = !{!12453}
!12453 = !DILocalVariable(name: "self", arg: 1, scope: !12447, file: !12171, line: 557, type: !12450)
!12454 = !DILocation(line: 557, column: 30, scope: !12447)
!12455 = !DILocation(line: 558, column: 9, scope: !12447)
!12456 = !DILocation(line: 559, column: 6, scope: !12447)
!12457 = distinct !DISubprogram(name: "into_boxed_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17hd45d2e252c69da5bE", scope: !7469, file: !12171, line: 592, type: !12458, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12460, retainedNodes: !12461)
!12458 = !DISubroutineType(types: !12459)
!12459 = !{!11541, !7469}
!12460 = !DISubprogram(name: "into_boxed_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17hd45d2e252c69da5bE", scope: !7469, file: !12171, line: 592, type: !12458, scopeLine: 592, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12461 = !{!12462}
!12462 = !DILocalVariable(name: "self", arg: 1, scope: !12457, file: !12171, line: 592, type: !7469)
!12463 = !DILocation(line: 592, column: 29, scope: !12457)
!12464 = !DILocation(line: 593, column: 46, scope: !12457)
!12465 = !DILocation(line: 593, column: 32, scope: !12457)
!12466 = !DILocation(line: 593, column: 18, scope: !12457)
!12467 = !DILocation(line: 594, column: 6, scope: !12457)
!12468 = distinct !DISubprogram(name: "into_inner", linkageName: "_ZN5alloc3ffi5c_str7CString10into_inner17h0669530a238e0199E", scope: !7469, file: !12171, line: 598, type: !12469, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12471, retainedNodes: !12472)
!12469 = !DISubroutineType(types: !12470)
!12470 = !{!2539, !7469}
!12471 = !DISubprogram(name: "into_inner", linkageName: "_ZN5alloc3ffi5c_str7CString10into_inner17h0669530a238e0199E", scope: !7469, file: !12171, line: 598, type: !12469, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!12472 = !{!12473, !12474}
!12473 = !DILocalVariable(name: "self", arg: 1, scope: !12468, file: !12171, line: 598, type: !7469)
!12474 = !DILocalVariable(name: "this", scope: !12475, file: !12171, line: 603, type: !12476, align: 8)
!12475 = distinct !DILexicalBlock(scope: !12468, file: !12171, line: 603, column: 9)
!12476 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::ffi::c_str::CString>", scope: !1155, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !12477, templateParams: !12479, identifier: "acd1ef4d58ea69d42156bbdba3e7757e")
!12477 = !{!12478}
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12476, file: !2, baseType: !7469, size: 128, align: 64, flags: DIFlagPrivate)
!12479 = !{!12220}
!12480 = !DILocation(line: 598, column: 19, scope: !12468)
!12481 = !DILocation(line: 603, column: 13, scope: !12475)
!12482 = !DILocalVariable(name: "value", arg: 1, scope: !12483, file: !9935, line: 180, type: !7469)
!12483 = distinct !DISubprogram(name: "new<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h8f645d37aae1abe8E", scope: !12476, file: !9935, line: 180, type: !12484, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !12479, declaration: !12486, retainedNodes: !12487)
!12484 = !DISubroutineType(types: !12485)
!12485 = !{!12476, !7469}
!12486 = !DISubprogram(name: "new<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h8f645d37aae1abe8E", scope: !12476, file: !9935, line: 180, type: !12484, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12479)
!12487 = !{!12482}
!12488 = !DILocation(line: 180, column: 22, scope: !12483, inlinedAt: !12489)
!12489 = distinct !DILocation(line: 603, column: 20, scope: !12468)
!12490 = !DILocation(line: 182, column: 6, scope: !12483, inlinedAt: !12489)
!12491 = !DILocation(line: 603, column: 20, scope: !12468)
!12492 = !DILocalVariable(name: "self", arg: 1, scope: !12493, file: !9935, line: 264, type: !12496)
!12493 = distinct !DISubprogram(name: "deref<alloc::ffi::c_str::CString>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h11c7c405d0d29f95E", scope: !9946, file: !9935, line: 264, type: !12494, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !12479, retainedNodes: !12497)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!12450, !12496}
!12496 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::ffi::c_str::CString>", baseType: !12476, size: 64, align: 64, dwarfAddressSpace: 0)
!12497 = !{!12492}
!12498 = !DILocation(line: 264, column: 14, scope: !12493, inlinedAt: !12499)
!12499 = distinct !DILocation(line: 604, column: 29, scope: !12475)
!12500 = !DILocation(line: 604, column: 18, scope: !12475)
!12501 = !DILocation(line: 605, column: 6, scope: !12468)
!12502 = distinct !DISubprogram(name: "from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17hc8a8494032dfc278E", scope: !7469, file: !12171, line: 626, type: !12351, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12503, retainedNodes: !12504)
!12503 = !DISubprogram(name: "from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17hc8a8494032dfc278E", scope: !7469, file: !12171, line: 626, type: !12351, scopeLine: 626, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12504 = !{!12505}
!12505 = !DILocalVariable(name: "v", arg: 1, scope: !12502, file: !12171, line: 626, type: !83)
!12506 = !DILocation(line: 626, column: 47, scope: !12502)
!12507 = !DILocation(line: 627, column: 41, scope: !12502)
!12508 = !DILocation(line: 627, column: 23, scope: !12502)
!12509 = !DILocation(line: 969, column: 25, scope: !12248, inlinedAt: !12510)
!12510 = distinct !DILocation(line: 627, column: 23, scope: !12502)
!12511 = !DILocation(line: 970, column: 15, scope: !12248, inlinedAt: !12510)
!12512 = !DILocation(line: 970, column: 9, scope: !12248, inlinedAt: !12510)
!12513 = !DILocation(line: 972, column: 21, scope: !12248, inlinedAt: !12510)
!12514 = !DILocation(line: 971, column: 18, scope: !12248, inlinedAt: !12510)
!12515 = !DILocation(line: 971, column: 18, scope: !12254, inlinedAt: !12510)
!12516 = !DILocation(line: 627, column: 61, scope: !12502)
!12517 = !DILocation(line: 627, column: 9, scope: !12502)
!12518 = !DILocation(line: 628, column: 18, scope: !12502)
!12519 = !DILocation(line: 629, column: 6, scope: !12502)
!12520 = distinct !DISubprogram(name: "_from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17hbaa43eabc4dc19c6E", scope: !7469, file: !12171, line: 631, type: !12351, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12521, retainedNodes: !12522)
!12521 = !DISubprogram(name: "_from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17hbaa43eabc4dc19c6E", scope: !7469, file: !12171, line: 631, type: !12351, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!12522 = !{!12523}
!12523 = !DILocalVariable(name: "v", arg: 1, scope: !12520, file: !12171, line: 631, type: !83)
!12524 = !DILocation(line: 631, column: 44, scope: !12520)
!12525 = !DILocation(line: 632, column: 23, scope: !12520)
!12526 = !DILocation(line: 633, column: 6, scope: !12520)
!12527 = distinct !DISubprogram(name: "from_vec_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17h7ff5a879778eacb3E", scope: !7469, file: !12171, line: 669, type: !12528, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12545, retainedNodes: !12546)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!12530, !83}
!12530 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::FromVecWithNulError>", scope: !865, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !12531, templateParams: !15, identifier: "120fdc3e8f46f87d8291d56be76695ad")
!12531 = !{!12532}
!12532 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12530, file: !2, size: 320, align: 64, elements: !12533, templateParams: !15, identifier: "1b728a64285cf4daeedf25c750e227ad", discriminator: !12544)
!12533 = !{!12534, !12540}
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12532, file: !2, baseType: !12535, size: 320, align: 64, extraData: i128 2)
!12535 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12530, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !12536, templateParams: !12538, identifier: "dd3749b0126cf0888f25f1c729e751f6")
!12536 = !{!12537}
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12535, file: !2, baseType: !7469, size: 128, align: 64, offset: 64, flags: DIFlagPublic)
!12538 = !{!12220, !12539}
!12539 = !DITemplateTypeParameter(name: "E", type: !12172)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12532, file: !2, baseType: !12541, size: 320, align: 64)
!12541 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12530, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !12542, templateParams: !12538, identifier: "a8f80403c56ab6e683c70be698e19f50")
!12542 = !{!12543}
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12541, file: !2, baseType: !12172, size: 320, align: 64, flags: DIFlagPublic)
!12544 = !DIDerivedType(tag: DW_TAG_member, scope: !12530, file: !2, baseType: !212, size: 64, align: 64, flags: DIFlagArtificial)
!12545 = !DISubprogram(name: "from_vec_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17h7ff5a879778eacb3E", scope: !7469, file: !12171, line: 669, type: !12528, scopeLine: 669, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12546 = !{!12547, !12548, !12550, !12552, !12553}
!12547 = !DILocalVariable(name: "v", arg: 1, scope: !12527, file: !12171, line: 669, type: !83)
!12548 = !DILocalVariable(name: "nul_pos", scope: !12549, file: !12171, line: 670, type: !664, align: 8)
!12549 = distinct !DILexicalBlock(scope: !12527, file: !12171, line: 670, column: 9)
!12550 = !DILocalVariable(name: "nul_pos", scope: !12551, file: !12171, line: 672, type: !9, align: 8)
!12551 = distinct !DILexicalBlock(scope: !12549, file: !12171, line: 672, column: 13)
!12552 = !DILocalVariable(name: "nul_pos", scope: !12551, file: !12171, line: 672, type: !2172, align: 8)
!12553 = !DILocalVariable(name: "nul_pos", scope: !12554, file: !12171, line: 677, type: !9, align: 8)
!12554 = distinct !DILexicalBlock(scope: !12549, file: !12171, line: 677, column: 13)
!12555 = !DILocation(line: 669, column: 30, scope: !12527)
!12556 = !DILocation(line: 670, column: 13, scope: !12549)
!12557 = !DILocation(line: 670, column: 41, scope: !12527)
!12558 = !DILocation(line: 670, column: 23, scope: !12527)
!12559 = !DILocation(line: 671, column: 15, scope: !12549)
!12560 = !DILocation(line: 671, column: 9, scope: !12549)
!12561 = !DILocation(line: 682, column: 29, scope: !12549)
!12562 = !DILocation(line: 681, column: 25, scope: !12549)
!12563 = !DILocation(line: 681, column: 21, scope: !12549)
!12564 = !DILocation(line: 684, column: 14, scope: !12549)
!12565 = !DILocation(line: 672, column: 18, scope: !12549)
!12566 = !DILocation(line: 672, column: 18, scope: !12551)
!12567 = !DILocation(line: 672, column: 30, scope: !12549)
!12568 = !DILocation(line: 686, column: 6, scope: !12527)
!12569 = !DILocation(line: 672, column: 45, scope: !12549)
!12570 = !DILocation(line: 677, column: 18, scope: !12549)
!12571 = !DILocation(line: 677, column: 18, scope: !12554)
!12572 = !DILocation(line: 678, column: 29, scope: !12554)
!12573 = !DILocation(line: 677, column: 34, scope: !12554)
!12574 = !DILocation(line: 677, column: 30, scope: !12554)
!12575 = !DILocation(line: 680, column: 14, scope: !12549)
!12576 = !DILocation(line: 675, column: 29, scope: !12551)
!12577 = !DILocation(line: 675, column: 17, scope: !12551)
!12578 = !DILocation(line: 676, column: 13, scope: !12549)
!12579 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd8dbaf4bc14ef8a6E", scope: !12580, file: !12171, line: 708, type: !12581, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12583)
!12580 = !DINamespace(name: "{impl#3}", scope: !7465)
!12581 = !DISubroutineType(types: !12582)
!12582 = !{!2190, !12450}
!12583 = !{!12584}
!12584 = !DILocalVariable(name: "self", arg: 1, scope: !12579, file: !12171, line: 708, type: !12450)
!12585 = !DILocation(line: 708, column: 14, scope: !12579)
!12586 = !DILocation(line: 709, column: 54, scope: !12579)
!12587 = !DILocation(line: 709, column: 18, scope: !12579)
!12588 = !DILocation(line: 710, column: 6, scope: !12579)
!12589 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17h06097ac427f2cdd2E", scope: !12590, file: !12171, line: 715, type: !12591, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12593)
!12590 = !DINamespace(name: "{impl#4}", scope: !7465)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!1961, !12450, !1977}
!12593 = !{!12594, !12595}
!12594 = !DILocalVariable(name: "self", arg: 1, scope: !12589, file: !12171, line: 715, type: !12450)
!12595 = !DILocalVariable(name: "f", arg: 2, scope: !12589, file: !12171, line: 715, type: !1977)
!12596 = !DILocation(line: 715, column: 12, scope: !12589)
!12597 = !DILocation(line: 715, column: 19, scope: !12589)
!12598 = !DILocation(line: 716, column: 26, scope: !12589)
!12599 = !DILocation(line: 716, column: 9, scope: !12589)
!12600 = !DILocation(line: 717, column: 6, scope: !12589)
!12601 = distinct !DISubprogram(name: "default", linkageName: "_ZN69_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..default..Default$GT$7default17hd9e41640a4b2aaf2E", scope: !12602, file: !12171, line: 734, type: !12603, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12605)
!12602 = !DINamespace(name: "{impl#6}", scope: !7465)
!12603 = !DISubroutineType(types: !12604)
!12604 = !{!7469}
!12605 = !{!12606}
!12606 = !DILocalVariable(name: "a", scope: !12607, file: !12171, line: 735, type: !2190, align: 8)
!12607 = distinct !DILexicalBlock(scope: !12601, file: !12171, line: 735, column: 9)
!12608 = !DILocation(line: 735, column: 24, scope: !12601)
!12609 = !DILocation(line: 735, column: 13, scope: !12607)
!12610 = !DILocation(line: 736, column: 9, scope: !12607)
!12611 = !DILocation(line: 737, column: 6, scope: !12601)
!12612 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h79d0c5c1a9074749E", scope: !12613, file: !12171, line: 763, type: !12614, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12616)
!12613 = !DINamespace(name: "{impl#9}", scope: !7465)
!12614 = !DISubroutineType(types: !12615)
!12615 = !{!11541, !2190}
!12616 = !{!12617, !12618}
!12617 = !DILocalVariable(name: "s", arg: 1, scope: !12612, file: !12171, line: 763, type: !2190)
!12618 = !DILocalVariable(name: "boxed", scope: !12619, file: !12171, line: 764, type: !2539, align: 8)
!12619 = distinct !DILexicalBlock(scope: !12612, file: !12171, line: 764, column: 9)
!12620 = !DILocation(line: 763, column: 13, scope: !12612)
!12621 = !DILocation(line: 764, column: 42, scope: !12612)
!12622 = !DILocation(line: 764, column: 32, scope: !12612)
!12623 = !DILocation(line: 764, column: 13, scope: !12619)
!12624 = !DILocation(line: 765, column: 32, scope: !12619)
!12625 = !DILocation(line: 765, column: 18, scope: !12619)
!12626 = !DILocation(line: 766, column: 6, scope: !12612)
!12627 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc3ffi5c_str139_$LT$impl$u20$core..convert..From$LT$$RF$mut$u20$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h228db1863265ceb5E", scope: !12628, file: !12171, line: 774, type: !12629, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12635)
!12628 = !DINamespace(name: "{impl#10}", scope: !7465)
!12629 = !DISubroutineType(types: !12630)
!12630 = !{!11541, !12631}
!12631 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !12632, templateParams: !15, identifier: "e9fd2da12b6ba13a9ec2c8de5094e637")
!12632 = !{!12633, !12634}
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !12631, file: !2, baseType: !2193, size: 64, align: 64)
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12631, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!12635 = !{!12636}
!12636 = !DILocalVariable(name: "s", arg: 1, scope: !12627, file: !12171, line: 774, type: !12631)
!12637 = !DILocation(line: 774, column: 13, scope: !12627)
!12638 = !DILocation(line: 775, column: 9, scope: !12627)
!12639 = !DILocation(line: 776, column: 6, scope: !12627)
!12640 = distinct !DISubprogram(name: "from", linkageName: "_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17h066f422034282278E", scope: !12641, file: !12171, line: 796, type: !12642, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12644)
!12641 = !DINamespace(name: "{impl#12}", scope: !7465)
!12642 = !DISubroutineType(types: !12643)
!12643 = !{!7469, !11541}
!12644 = !{!12645, !12646}
!12645 = !DILocalVariable(name: "s", arg: 1, scope: !12640, file: !12171, line: 796, type: !11541)
!12646 = !DILocalVariable(name: "raw", scope: !12647, file: !12171, line: 797, type: !3471, align: 8)
!12647 = distinct !DILexicalBlock(scope: !12640, file: !12171, line: 797, column: 9)
!12648 = !DILocation(line: 796, column: 13, scope: !12640)
!12649 = !DILocation(line: 797, column: 19, scope: !12640)
!12650 = !DILocation(line: 797, column: 13, scope: !12647)
!12651 = !DILocation(line: 798, column: 35, scope: !12647)
!12652 = !DILocation(line: 799, column: 6, scope: !12640)
!12653 = distinct !DISubprogram(name: "default", linkageName: "_ZN5alloc3ffi5c_str100_$LT$impl$u20$core..default..Default$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$7default17h9a42db6b7ec97cfdE", scope: !12654, file: !12171, line: 976, type: !12655, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12657)
!12654 = !DINamespace(name: "{impl#28}", scope: !7465)
!12655 = !DISubroutineType(types: !12656)
!12656 = !{!11541}
!12657 = !{!12658}
!12658 = !DILocalVariable(name: "boxed", scope: !12659, file: !12171, line: 977, type: !2539, align: 8)
!12659 = distinct !DILexicalBlock(scope: !12653, file: !12171, line: 977, column: 9)
!12660 = !DILocation(line: 977, column: 42, scope: !12653)
!12661 = !DILocation(line: 977, column: 32, scope: !12653)
!12662 = !DILocation(line: 977, column: 13, scope: !12659)
!12663 = !DILocation(line: 978, column: 32, scope: !12659)
!12664 = !DILocation(line: 978, column: 18, scope: !12659)
!12665 = !DILocation(line: 979, column: 6, scope: !12653)
!12666 = distinct !DISubprogram(name: "nul_position", linkageName: "_ZN5alloc3ffi5c_str8NulError12nul_position17h7035d6e9a5c653e7E", scope: !12222, file: !12171, line: 999, type: !12667, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12670, retainedNodes: !12671)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!9, !12669}
!12669 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::NulError", baseType: !12222, size: 64, align: 64, dwarfAddressSpace: 0)
!12670 = !DISubprogram(name: "nul_position", linkageName: "_ZN5alloc3ffi5c_str8NulError12nul_position17h7035d6e9a5c653e7E", scope: !12222, file: !12171, line: 999, type: !12667, scopeLine: 999, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12671 = !{!12672}
!12672 = !DILocalVariable(name: "self", arg: 1, scope: !12666, file: !12171, line: 999, type: !12669)
!12673 = !DILocation(line: 999, column: 25, scope: !12666)
!12674 = !DILocation(line: 1000, column: 9, scope: !12666)
!12675 = !DILocation(line: 1001, column: 6, scope: !12666)
!12676 = distinct !DISubprogram(name: "into_vec", linkageName: "_ZN5alloc3ffi5c_str8NulError8into_vec17h58b0b551c7a27fc1E", scope: !12222, file: !12171, line: 1016, type: !12677, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12679, retainedNodes: !12680)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!83, !12222}
!12679 = !DISubprogram(name: "into_vec", linkageName: "_ZN5alloc3ffi5c_str8NulError8into_vec17h58b0b551c7a27fc1E", scope: !12222, file: !12171, line: 1016, type: !12677, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12680 = !{!12681}
!12681 = !DILocalVariable(name: "self", arg: 1, scope: !12676, file: !12171, line: 1016, type: !12222)
!12682 = !DILocation(line: 1016, column: 21, scope: !12676)
!12683 = !DILocation(line: 1017, column: 9, scope: !12676)
!12684 = !DILocation(line: 1018, column: 6, scope: !12676)
!12685 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Display$GT$3fmt17h1cd0b1ebd9ceafdeE", scope: !12686, file: !12171, line: 1023, type: !12687, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12689)
!12686 = !DINamespace(name: "{impl#30}", scope: !7465)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!1961, !12669, !1977}
!12689 = !{!12690, !12691}
!12690 = !DILocalVariable(name: "self", arg: 1, scope: !12685, file: !12171, line: 1023, type: !12669)
!12691 = !DILocalVariable(name: "f", arg: 2, scope: !12685, file: !12171, line: 1023, type: !1977)
!12692 = !DILocation(line: 1023, column: 12, scope: !12685)
!12693 = !DILocation(line: 1023, column: 19, scope: !12685)
!12694 = !DILocation(line: 1024, column: 9, scope: !12685)
!12695 = !DILocation(line: 1025, column: 6, scope: !12685)
!12696 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN77_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h16026dcd0a6e83cdE", scope: !12697, file: !12171, line: 1030, type: !12698, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12700)
!12697 = !DINamespace(name: "{impl#31}", scope: !7465)
!12698 = !DISubroutineType(types: !12699)
!12699 = !{!1961, !12189, !1977}
!12700 = !{!12701, !12702, !12703}
!12701 = !DILocalVariable(name: "self", arg: 1, scope: !12696, file: !12171, line: 1030, type: !12189)
!12702 = !DILocalVariable(name: "f", arg: 2, scope: !12696, file: !12171, line: 1030, type: !1977)
!12703 = !DILocalVariable(name: "pos", scope: !12704, file: !12171, line: 1032, type: !9, align: 8)
!12704 = distinct !DILexicalBlock(scope: !12696, file: !12171, line: 1032, column: 13)
!12705 = !DILocation(line: 1030, column: 12, scope: !12696)
!12706 = !DILocation(line: 1030, column: 19, scope: !12696)
!12707 = !DILocation(line: 1032, column: 52, scope: !12704)
!12708 = !DILocation(line: 1031, column: 15, scope: !12696)
!12709 = !DILocation(line: 1031, column: 9, scope: !12696)
!12710 = !DILocation(line: 1032, column: 52, scope: !12696)
!12711 = !DILocation(line: 1033, column: 17, scope: !12704)
!12712 = !DILocation(line: 1036, column: 17, scope: !12696)
!12713 = !DILocation(line: 1039, column: 6, scope: !12696)
!12714 = distinct !DISubprogram(name: "into_cstring", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17hf728a0670d083f8fE", scope: !7464, file: !12171, line: 1047, type: !12715, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12717, retainedNodes: !12718)
!12715 = !DISubroutineType(types: !12716)
!12716 = !{!7469, !7464}
!12717 = !DISubprogram(name: "into_cstring", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17hf728a0670d083f8fE", scope: !7464, file: !12171, line: 1047, type: !12715, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12718 = !{!12719}
!12719 = !DILocalVariable(name: "self", arg: 1, scope: !12714, file: !12171, line: 1047, type: !7464)
!12720 = !DILocation(line: 1047, column: 25, scope: !12714)
!12721 = !DILocation(line: 1048, column: 9, scope: !12714)
!12722 = !DILocation(line: 1049, column: 6, scope: !12714)
!12723 = distinct !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17h37caa9b2ca078fb3E", scope: !7464, file: !12171, line: 1054, type: !12724, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12727, retainedNodes: !12728)
!12724 = !DISubroutineType(types: !12725)
!12725 = !{!156, !12726}
!12726 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::IntoStringError", baseType: !7464, size: 64, align: 64, dwarfAddressSpace: 0)
!12727 = !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17h37caa9b2ca078fb3E", scope: !7464, file: !12171, line: 1054, type: !12724, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12728 = !{!12729}
!12729 = !DILocalVariable(name: "self", arg: 1, scope: !12723, file: !12171, line: 1054, type: !12726)
!12730 = !DILocation(line: 1054, column: 23, scope: !12723)
!12731 = !DILocation(line: 1055, column: 9, scope: !12723)
!12732 = !DILocation(line: 1056, column: 6, scope: !12723)
!12733 = distinct !DISubprogram(name: "description", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError11description17h80071276c8ae3439E", scope: !7464, file: !12171, line: 1060, type: !12734, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12736, retainedNodes: !12737)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{!170, !12726}
!12736 = !DISubprogram(name: "description", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError11description17h80071276c8ae3439E", scope: !7464, file: !12171, line: 1060, type: !12734, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!12737 = !{!12738}
!12738 = !DILocalVariable(name: "self", arg: 1, scope: !12733, file: !12171, line: 1060, type: !12726)
!12739 = !DILocation(line: 1060, column: 20, scope: !12733)
!12740 = !DILocation(line: 1062, column: 6, scope: !12733)
!12741 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Display$GT$3fmt17h178b0b9b43fe99daE", scope: !12742, file: !12171, line: 1068, type: !12743, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12745)
!12742 = !DINamespace(name: "{impl#34}", scope: !7465)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!1961, !12726, !1977}
!12745 = !{!12746, !12747}
!12746 = !DILocalVariable(name: "self", arg: 1, scope: !12741, file: !12171, line: 1068, type: !12726)
!12747 = !DILocalVariable(name: "f", arg: 2, scope: !12741, file: !12171, line: 1068, type: !1977)
!12748 = !DILocation(line: 1068, column: 12, scope: !12741)
!12749 = !DILocation(line: 1068, column: 19, scope: !12741)
!12750 = !DILocation(line: 1069, column: 9, scope: !12741)
!12751 = !DILocation(line: 1070, column: 6, scope: !12741)
!12752 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17ha531f8d2a532c5bbE", scope: !12753, file: !12171, line: 1077, type: !12754, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12756)
!12753 = !DINamespace(name: "{impl#35}", scope: !7465)
!12754 = !DISubroutineType(types: !12755)
!12755 = !{!7469, !2190}
!12756 = !{!12757}
!12757 = !DILocalVariable(name: "self", arg: 1, scope: !12752, file: !12171, line: 1077, type: !2190)
!12758 = !DILocation(line: 1077, column: 17, scope: !12752)
!12759 = !DILocation(line: 1078, column: 26, scope: !12752)
!12760 = !DILocation(line: 1079, column: 6, scope: !12752)
!12761 = distinct !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$10clone_into17h138c81d8fd9e6327E", scope: !12753, file: !12171, line: 1081, type: !12762, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12765)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{null, !2190, !12764}
!12764 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !7469, size: 64, align: 64, dwarfAddressSpace: 0)
!12765 = !{!12766, !12767, !12768}
!12766 = !DILocalVariable(name: "self", arg: 1, scope: !12761, file: !12171, line: 1081, type: !2190)
!12767 = !DILocalVariable(name: "target", arg: 2, scope: !12761, file: !12171, line: 1081, type: !12764)
!12768 = !DILocalVariable(name: "b", scope: !12769, file: !12171, line: 1082, type: !83, align: 8)
!12769 = distinct !DILexicalBlock(scope: !12761, file: !12171, line: 1082, column: 9)
!12770 = !DILocation(line: 1081, column: 19, scope: !12761)
!12771 = !DILocation(line: 1081, column: 26, scope: !12761)
!12772 = !DILocation(line: 1082, column: 13, scope: !12769)
!12773 = !DILocation(line: 1082, column: 30, scope: !12761)
!12774 = !DILocation(line: 1082, column: 21, scope: !12761)
!12775 = !DILocation(line: 1083, column: 9, scope: !12769)
!12776 = !DILocation(line: 1084, column: 24, scope: !12769)
!12777 = !DILocation(line: 1084, column: 9, scope: !12769)
!12778 = !DILocation(line: 1085, column: 6, scope: !12761)
!12779 = distinct !DISubprogram(name: "from", linkageName: "_ZN100_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$GT$4from17h510fd84899783eceE", scope: !12780, file: !12171, line: 1092, type: !12754, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12781)
!12780 = !DINamespace(name: "{impl#36}", scope: !7465)
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "s", arg: 1, scope: !12779, file: !12171, line: 1092, type: !2190)
!12783 = !DILocation(line: 1092, column: 13, scope: !12779)
!12784 = !DILocation(line: 1093, column: 9, scope: !12779)
!12785 = !DILocation(line: 1094, column: 6, scope: !12779)
!12786 = distinct !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17h8294f23583f41e66E", scope: !2183, file: !12171, line: 1156, type: !12787, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12789, retainedNodes: !12790)
!12787 = !DISubroutineType(types: !12788)
!12788 = !{!3286, !2190}
!12789 = !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17h8294f23583f41e66E", scope: !2183, file: !12171, line: 1156, type: !12787, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12790 = !{!12791}
!12791 = !DILocalVariable(name: "self", arg: 1, scope: !12786, file: !12171, line: 1156, type: !2190)
!12792 = !DILocation(line: 1156, column: 28, scope: !12786)
!12793 = !DILocation(line: 1157, column: 33, scope: !12786)
!12794 = !DILocation(line: 1157, column: 9, scope: !12786)
!12795 = !DILocation(line: 1158, column: 6, scope: !12786)
!12796 = distinct !DISubprogram(name: "into_c_string", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17hab664bc3b4c40108E", scope: !2183, file: !12171, line: 1175, type: !12642, scopeLine: 1175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !12797, retainedNodes: !12798)
!12797 = !DISubprogram(name: "into_c_string", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17hab664bc3b4c40108E", scope: !2183, file: !12171, line: 1175, type: !12642, scopeLine: 1175, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!12798 = !{!12799}
!12799 = !DILocalVariable(name: "self", arg: 1, scope: !12796, file: !12171, line: 1175, type: !11541)
!12800 = !DILocation(line: 1175, column: 26, scope: !12796)
!12801 = !DILocation(line: 1176, column: 9, scope: !12796)
!12802 = !DILocation(line: 1177, column: 6, scope: !12796)
!12803 = distinct !DISubprogram(name: "description", linkageName: "_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..error..Error$GT$11description17h7ecb78d2134ac623E", scope: !12804, file: !12171, line: 1183, type: !12805, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12807)
!12804 = !DINamespace(name: "{impl#40}", scope: !7465)
!12805 = !DISubroutineType(types: !12806)
!12806 = !{!170, !12669}
!12807 = !{!12808}
!12808 = !DILocalVariable(name: "self", arg: 1, scope: !12803, file: !12171, line: 1183, type: !12669)
!12809 = !DILocation(line: 1183, column: 20, scope: !12803)
!12810 = !DILocation(line: 1185, column: 6, scope: !12803)
!12811 = distinct !DISubprogram(name: "description", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$11description17h9e47c84b5e9571ddE", scope: !12812, file: !12171, line: 1194, type: !12734, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12813)
!12812 = !DINamespace(name: "{impl#42}", scope: !7465)
!12813 = !{!12814}
!12814 = !DILocalVariable(name: "self", arg: 1, scope: !12811, file: !12171, line: 1194, type: !12726)
!12815 = !DILocation(line: 1194, column: 20, scope: !12811)
!12816 = !DILocation(line: 1196, column: 6, scope: !12811)
!12817 = distinct !DISubprogram(name: "source", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$6source17h6ae0e798383679b2E", scope: !12812, file: !12171, line: 1198, type: !12818, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12820)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{!6213, !12726}
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "self", arg: 1, scope: !12817, file: !12171, line: 1198, type: !12726)
!12822 = !DILocation(line: 1198, column: 15, scope: !12817)
!12823 = !DILocation(line: 1199, column: 14, scope: !12817)
!12824 = !DILocation(line: 1199, column: 9, scope: !12817)
!12825 = !DILocation(line: 1200, column: 6, scope: !12817)
!12826 = distinct !DISubprogram(name: "format_inner", linkageName: "_ZN5alloc3fmt6format12format_inner17hef86f7aaee29d1e9E", scope: !12828, file: !12827, line: 645, type: !12830, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12832)
!12827 = !DIFile(filename: "src/fmt.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "f02a67ac5adb8dfc4b47a9a14c4f41af")
!12828 = !DINamespace(name: "format", scope: !12829)
!12829 = !DINamespace(name: "fmt", scope: !80)
!12830 = !DISubroutineType(types: !12831)
!12831 = !{!78, !2325}
!12832 = !{!12833, !12834, !12836}
!12833 = !DILocalVariable(name: "args", arg: 1, scope: !12826, file: !12827, line: 645, type: !2325)
!12834 = !DILocalVariable(name: "capacity", scope: !12835, file: !12827, line: 646, type: !9, align: 8)
!12835 = distinct !DILexicalBlock(scope: !12826, file: !12827, line: 646, column: 9)
!12836 = !DILocalVariable(name: "output", scope: !12837, file: !12827, line: 647, type: !78, align: 8)
!12837 = distinct !DILexicalBlock(scope: !12835, file: !12827, line: 647, column: 9)
!12838 = !DILocation(line: 645, column: 21, scope: !12826)
!12839 = !DILocation(line: 647, column: 13, scope: !12837)
!12840 = !DILocation(line: 646, column: 24, scope: !12826)
!12841 = !DILocation(line: 646, column: 13, scope: !12835)
!12842 = !DILocation(line: 647, column: 26, scope: !12835)
!12843 = !DILocation(line: 648, column: 9, scope: !12837)
!12844 = !DILocation(line: 651, column: 9, scope: !12837)
!12845 = !DILocation(line: 652, column: 6, scope: !12826)
!12846 = distinct !DISubprogram(name: "rc_inner_layout_for_value_layout", linkageName: "_ZN5alloc2rc32rc_inner_layout_for_value_layout17h692e767b077914c2E", scope: !5923, file: !12847, line: 292, type: !12848, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12850)
!12847 = !DIFile(filename: "src/rc.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "365e7de4816ecbbab9fc9459141208b1")
!12848 = !DISubroutineType(types: !12849)
!12849 = !{!1746, !1746}
!12850 = !{!12851}
!12851 = !DILocalVariable(name: "layout", arg: 1, scope: !12846, file: !12847, line: 292, type: !1746)
!12852 = !DILocation(line: 292, column: 37, scope: !12846)
!12853 = !DILocation(line: 297, column: 5, scope: !12846)
!12854 = !DILocalVariable(name: "t", scope: !12855, file: !1555, line: 1103, type: !6123, align: 8)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !1555, line: 1103, column: 13)
!12856 = distinct !DISubprogram(name: "unwrap<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha05559181cb40b44E", scope: !6115, file: !1555, line: 1098, type: !12857, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6127, declaration: !12859, retainedNodes: !12860)
!12857 = !DISubroutineType(types: !12858)
!12858 = !{!6123, !6115, !1690}
!12859 = !DISubprogram(name: "unwrap<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17ha05559181cb40b44E", scope: !6115, file: !1555, line: 1098, type: !12857, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6127)
!12860 = !{!12861, !12854, !12862}
!12861 = !DILocalVariable(name: "self", arg: 1, scope: !12856, file: !1555, line: 1098, type: !6115)
!12862 = !DILocalVariable(name: "e", scope: !12863, file: !1555, line: 1104, type: !24, align: 1)
!12863 = distinct !DILexicalBlock(scope: !12856, file: !1555, line: 1104, column: 13)
!12864 = !DILocation(line: 1103, column: 16, scope: !12855, inlinedAt: !12865)
!12865 = distinct !DILocation(line: 297, column: 5, scope: !12846)
!12866 = !DILocation(line: 1098, column: 19, scope: !12856, inlinedAt: !12865)
!12867 = !DILocation(line: 1104, column: 17, scope: !12863, inlinedAt: !12865)
!12868 = !DILocation(line: 1102, column: 15, scope: !12856, inlinedAt: !12865)
!12869 = !DILocation(line: 1102, column: 9, scope: !12856, inlinedAt: !12865)
!12870 = !DILocation(line: 1104, column: 23, scope: !12863, inlinedAt: !12865)
!12871 = !DILocation(line: 1103, column: 16, scope: !12856, inlinedAt: !12865)
!12872 = !DILocation(line: 298, column: 2, scope: !12846)
!12873 = distinct !DISubprogram(name: "into_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice4hack8into_vec17h3eb148217c08a6b6E", scope: !12875, file: !12874, line: 98, type: !12877, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !12879)
!12874 = !DIFile(filename: "src/slice.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "ce3a394397ad5b82481f09f48c8edd27")
!12875 = !DINamespace(name: "hack", scope: !12876)
!12876 = !DINamespace(name: "slice", scope: !80)
!12877 = !DISubroutineType(types: !12878)
!12878 = !{!83, !2539}
!12879 = !{!12880, !12881, !12883, !12885}
!12880 = !DILocalVariable(name: "b", arg: 1, scope: !12873, file: !12874, line: 98, type: !2539)
!12881 = !DILocalVariable(name: "len", scope: !12882, file: !12874, line: 100, type: !9, align: 8)
!12882 = distinct !DILexicalBlock(scope: !12873, file: !12874, line: 100, column: 13)
!12883 = !DILocalVariable(name: "b", scope: !12884, file: !12874, line: 101, type: !3471, align: 8)
!12884 = distinct !DILexicalBlock(scope: !12882, file: !12874, line: 101, column: 13)
!12885 = !DILocalVariable(name: "alloc", scope: !12884, file: !12874, line: 101, type: !112, align: 1)
!12886 = !DILocation(line: 98, column: 38, scope: !12873)
!12887 = !DILocation(line: 101, column: 21, scope: !12884)
!12888 = !DILocation(line: 100, column: 23, scope: !12873)
!12889 = !DILocation(line: 100, column: 17, scope: !12882)
!12890 = !DILocation(line: 101, column: 30, scope: !12882)
!12891 = !DILocation(line: 101, column: 18, scope: !12882)
!12892 = !DILocation(line: 101, column: 18, scope: !12884)
!12893 = !DILocation(line: 102, column: 13, scope: !12884)
!12894 = !DILocation(line: 104, column: 6, scope: !12873)
!12895 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice4hack6to_vec17h44a6bbfffc4c5d0bE", scope: !12875, file: !12874, line: 109, type: !12896, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !12898)
!12896 = !DISubroutineType(types: !12897)
!12897 = !{!83, !427, !112}
!12898 = !{!12899, !12900}
!12899 = !DILocalVariable(name: "s", arg: 1, scope: !12895, file: !12874, line: 109, type: !427)
!12900 = !DILocalVariable(name: "alloc", arg: 2, scope: !12895, file: !12874, line: 109, type: !112)
!12901 = !DILocation(line: 109, column: 48, scope: !12895)
!12902 = !DILocation(line: 109, column: 57, scope: !12895)
!12903 = !DILocation(line: 110, column: 9, scope: !12895)
!12904 = !DILocation(line: 111, column: 6, scope: !12895)
!12905 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h240a5a37248956a7E", scope: !12906, file: !12874, line: 160, type: !12896, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !12907)
!12906 = !DINamespace(name: "{impl#1}", scope: !12875)
!12907 = !{!12908, !12909, !12910}
!12908 = !DILocalVariable(name: "s", arg: 1, scope: !12905, file: !12874, line: 160, type: !427)
!12909 = !DILocalVariable(name: "alloc", arg: 2, scope: !12905, file: !12874, line: 160, type: !112)
!12910 = !DILocalVariable(name: "v", scope: !12911, file: !12874, line: 161, type: !83, align: 8)
!12911 = distinct !DILexicalBlock(scope: !12905, file: !12874, line: 161, column: 13)
!12912 = !DILocation(line: 160, column: 33, scope: !12905)
!12913 = !DILocation(line: 160, column: 45, scope: !12905)
!12914 = !DILocation(line: 161, column: 17, scope: !12911)
!12915 = !DILocation(line: 161, column: 25, scope: !12905)
!12916 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !12917)
!12917 = distinct !DILocation(line: 166, column: 17, scope: !12911)
!12918 = !DILocation(line: 166, column: 51, scope: !12911)
!12919 = !DILocation(line: 166, column: 17, scope: !12911)
!12920 = !DILocation(line: 167, column: 17, scope: !12911)
!12921 = !DILocation(line: 169, column: 13, scope: !12911)
!12922 = !DILocation(line: 170, column: 10, scope: !12905)
!12923 = distinct !DISubprogram(name: "to_vec<u8>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hef05650c30b71d4bE", scope: !12924, file: !12874, line: 475, type: !12925, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !12927)
!12924 = !DINamespace(name: "{impl#0}", scope: !12876)
!12925 = !DISubroutineType(types: !12926)
!12926 = !{!83, !427}
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "self", arg: 1, scope: !12923, file: !12874, line: 475, type: !427)
!12929 = !DILocation(line: 475, column: 19, scope: !12923)
!12930 = !DILocation(line: 479, column: 9, scope: !12923)
!12931 = !DILocation(line: 480, column: 6, scope: !12923)
!12932 = distinct !DISubprogram(name: "to_vec_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h1cd06a32d75f4646E", scope: !12924, file: !12874, line: 499, type: !12896, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !12933)
!12933 = !{!12934, !12935}
!12934 = !DILocalVariable(name: "self", arg: 1, scope: !12932, file: !12874, line: 499, type: !427)
!12935 = !DILocalVariable(name: "alloc", arg: 2, scope: !12932, file: !12874, line: 499, type: !112)
!12936 = !DILocation(line: 499, column: 36, scope: !12932)
!12937 = !DILocation(line: 499, column: 43, scope: !12932)
!12938 = !DILocation(line: 504, column: 9, scope: !12932)
!12939 = !DILocation(line: 505, column: 6, scope: !12932)
!12940 = distinct !DISubprogram(name: "into_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17ha5ad211c85a97096E", scope: !12924, file: !12874, line: 525, type: !12877, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !12941)
!12941 = !{!12942}
!12942 = !DILocalVariable(name: "self", arg: 1, scope: !12940, file: !12874, line: 525, type: !2539)
!12943 = !DILocation(line: 525, column: 35, scope: !12940)
!12944 = !DILocation(line: 527, column: 9, scope: !12940)
!12945 = !DILocation(line: 528, column: 6, scope: !12940)
!12946 = distinct !DISubprogram(name: "clone_into<u8, alloc::alloc::Global>", linkageName: "_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h5320f0f9405b2486E", scope: !12947, file: !12874, line: 875, type: !12948, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !12950)
!12947 = !DINamespace(name: "{impl#8}", scope: !12876)
!12948 = !DISubroutineType(types: !12949)
!12949 = !{null, !427, !4007}
!12950 = !{!12951, !12952}
!12951 = !DILocalVariable(name: "self", arg: 1, scope: !12946, file: !12874, line: 875, type: !427)
!12952 = !DILocalVariable(name: "target", arg: 2, scope: !12946, file: !12874, line: 875, type: !4007)
!12953 = !DILocation(line: 875, column: 19, scope: !12946)
!12954 = !DILocation(line: 875, column: 26, scope: !12946)
!12955 = !DILocation(line: 876, column: 9, scope: !12946)
!12956 = !DILocation(line: 877, column: 9, scope: !12946)
!12957 = !DILocation(line: 878, column: 6, scope: !12946)
!12958 = distinct !DISubprogram(name: "to_owned<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17hde18547f56e350c8E", scope: !12959, file: !12874, line: 886, type: !12925, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !12960)
!12959 = !DINamespace(name: "{impl#9}", scope: !12876)
!12960 = !{!12961}
!12961 = !DILocalVariable(name: "self", arg: 1, scope: !12958, file: !12874, line: 886, type: !427)
!12962 = !DILocation(line: 886, column: 17, scope: !12958)
!12963 = !DILocation(line: 887, column: 9, scope: !12958)
!12964 = !DILocation(line: 888, column: 6, scope: !12958)
!12965 = distinct !DISubprogram(name: "clone_into<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h5c005fedc5721282E", scope: !12959, file: !12874, line: 895, type: !12948, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !12966)
!12966 = !{!12967, !12968}
!12967 = !DILocalVariable(name: "self", arg: 1, scope: !12965, file: !12874, line: 895, type: !427)
!12968 = !DILocalVariable(name: "target", arg: 2, scope: !12965, file: !12874, line: 895, type: !4007)
!12969 = !DILocation(line: 895, column: 19, scope: !12965)
!12970 = !DILocation(line: 895, column: 26, scope: !12965)
!12971 = !DILocation(line: 896, column: 9, scope: !12965)
!12972 = !DILocation(line: 897, column: 6, scope: !12965)
!12973 = distinct !DISubprogram(name: "borrow", linkageName: "_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h25447f92ec0acb71E", scope: !12975, file: !12974, line: 191, type: !12976, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12978)
!12974 = !DIFile(filename: "src/str.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "0cb0510f76e8bc593235021c0170a811")
!12975 = !DINamespace(name: "{impl#2}", scope: !532)
!12976 = !DISubroutineType(types: !12977)
!12977 = !{!170, !11947}
!12978 = !{!12979}
!12979 = !DILocalVariable(name: "self", arg: 1, scope: !12973, file: !12974, line: 191, type: !11947)
!12980 = !DILocation(line: 191, column: 15, scope: !12973)
!12981 = !DILocation(line: 192, column: 14, scope: !12973)
!12982 = !DILocation(line: 193, column: 6, scope: !12973)
!12983 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17he2a6fa28c2c08bf7E", scope: !12984, file: !12974, line: 210, type: !12985, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12987)
!12984 = !DINamespace(name: "{impl#4}", scope: !532)
!12985 = !DISubroutineType(types: !12986)
!12986 = !{!78, !170}
!12987 = !{!12988}
!12988 = !DILocalVariable(name: "self", arg: 1, scope: !12983, file: !12974, line: 210, type: !170)
!12989 = !DILocation(line: 210, column: 17, scope: !12983)
!12990 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !12991)
!12991 = distinct !DILocation(line: 211, column: 46, scope: !12983)
!12992 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !12991)
!12993 = !DILocation(line: 211, column: 46, scope: !12983)
!12994 = !DILocation(line: 211, column: 18, scope: !12983)
!12995 = !DILocation(line: 212, column: 6, scope: !12983)
!12996 = distinct !DISubprogram(name: "to_lowercase", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase17h7a09f6fec5e68a0bE", scope: !1413, file: !12974, line: 384, type: !12985, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !12997)
!12997 = !{!12998, !12999, !13001, !13002, !13004, !13006, !13008, !13009, !13011, !13013, !13015, !13016, !13018, !13019}
!12998 = !DILocalVariable(name: "self", arg: 1, scope: !12996, file: !12974, line: 384, type: !170)
!12999 = !DILocalVariable(name: "s", scope: !13000, file: !12974, line: 385, type: !78, align: 8)
!13000 = distinct !DILexicalBlock(scope: !12996, file: !12974, line: 385, column: 9)
!13001 = !DILocalVariable(name: "rest", scope: !13000, file: !12974, line: 385, type: !170, align: 8)
!13002 = !DILocalVariable(name: "prefix_len", scope: !13003, file: !12974, line: 387, type: !9, align: 8)
!13003 = distinct !DILexicalBlock(scope: !13000, file: !12974, line: 387, column: 9)
!13004 = !DILocalVariable(name: "iter", scope: !13005, file: !12974, line: 389, type: !4397, align: 8)
!13005 = distinct !DILexicalBlock(scope: !13003, file: !12974, line: 389, column: 9)
!13006 = !DILocalVariable(name: "i", scope: !13007, file: !12974, line: 389, type: !9, align: 8)
!13007 = distinct !DILexicalBlock(scope: !13005, file: !12974, line: 389, column: 43)
!13008 = !DILocalVariable(name: "c", scope: !13007, file: !12974, line: 389, type: !379, align: 4)
!13009 = !DILocalVariable(name: "sigma_lowercase", scope: !13010, file: !12974, line: 396, type: !379, align: 4)
!13010 = distinct !DILexicalBlock(scope: !13007, file: !12974, line: 396, column: 17)
!13011 = !DILocalVariable(name: "a", scope: !13012, file: !12974, line: 400, type: !379, align: 4)
!13012 = distinct !DILexicalBlock(scope: !13007, file: !12974, line: 400, column: 21)
!13013 = !DILocalVariable(name: "a", scope: !13014, file: !12974, line: 401, type: !379, align: 4)
!13014 = distinct !DILexicalBlock(scope: !13007, file: !12974, line: 401, column: 21)
!13015 = !DILocalVariable(name: "b", scope: !13014, file: !12974, line: 401, type: !379, align: 4)
!13016 = !DILocalVariable(name: "a", scope: !13017, file: !12974, line: 405, type: !379, align: 4)
!13017 = distinct !DILexicalBlock(scope: !13007, file: !12974, line: 405, column: 21)
!13018 = !DILocalVariable(name: "b", scope: !13017, file: !12974, line: 405, type: !379, align: 4)
!13019 = !DILocalVariable(name: "c", scope: !13017, file: !12974, line: 405, type: !379, align: 4)
!13020 = !DILocation(line: 384, column: 25, scope: !12996)
!13021 = !DILocation(line: 385, column: 14, scope: !13000)
!13022 = !DILocation(line: 389, column: 23, scope: !13005)
!13023 = !DILocation(line: 385, column: 29, scope: !12996)
!13024 = !DILocation(line: 385, column: 14, scope: !12996)
!13025 = !DILocation(line: 385, column: 21, scope: !12996)
!13026 = !DILocation(line: 385, column: 21, scope: !13000)
!13027 = !DILocation(line: 387, column: 26, scope: !13000)
!13028 = !DILocation(line: 387, column: 13, scope: !13003)
!13029 = !DILocation(line: 389, column: 23, scope: !13003)
!13030 = !DILocation(line: 389, column: 9, scope: !13005)
!13031 = !DILocation(line: 413, column: 16, scope: !13003)
!13032 = !DILocation(line: 431, column: 6, scope: !12996)
!13033 = !DILocation(line: 389, column: 14, scope: !13005)
!13034 = !DILocation(line: 389, column: 14, scope: !13007)
!13035 = !DILocation(line: 389, column: 17, scope: !13005)
!13036 = !DILocation(line: 389, column: 17, scope: !13007)
!13037 = !DILocation(line: 390, column: 16, scope: !13007)
!13038 = !DILocation(line: 396, column: 65, scope: !13007)
!13039 = !DILocation(line: 399, column: 23, scope: !13007)
!13040 = !DILocation(line: 399, column: 17, scope: !13007)
!13041 = !DILocation(line: 396, column: 39, scope: !13007)
!13042 = !DILocation(line: 396, column: 21, scope: !13010)
!13043 = !DILocation(line: 397, column: 17, scope: !13010)
!13044 = !DILocation(line: 400, column: 22, scope: !13007)
!13045 = !DILocation(line: 400, column: 22, scope: !13012)
!13046 = !DILocation(line: 400, column: 37, scope: !13012)
!13047 = !DILocation(line: 401, column: 22, scope: !13007)
!13048 = !DILocation(line: 401, column: 22, scope: !13014)
!13049 = !DILocation(line: 401, column: 25, scope: !13007)
!13050 = !DILocation(line: 401, column: 25, scope: !13014)
!13051 = !DILocation(line: 402, column: 25, scope: !13014)
!13052 = !DILocation(line: 403, column: 25, scope: !13014)
!13053 = !DILocation(line: 405, column: 22, scope: !13007)
!13054 = !DILocation(line: 405, column: 22, scope: !13017)
!13055 = !DILocation(line: 405, column: 25, scope: !13007)
!13056 = !DILocation(line: 405, column: 25, scope: !13017)
!13057 = !DILocation(line: 405, column: 28, scope: !13007)
!13058 = !DILocation(line: 405, column: 28, scope: !13017)
!13059 = !DILocation(line: 406, column: 25, scope: !13017)
!13060 = !DILocation(line: 407, column: 25, scope: !13017)
!13061 = !DILocation(line: 408, column: 25, scope: !13017)
!13062 = distinct !DISubprogram(name: "map_uppercase_sigma", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17hca04c30b5486cfcaE", scope: !1412, file: !12974, line: 415, type: !13063, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13065)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!379, !170, !9}
!13065 = !{!13066, !13067, !13068}
!13066 = !DILocalVariable(name: "from", arg: 1, scope: !13062, file: !12974, line: 415, type: !170)
!13067 = !DILocalVariable(name: "i", arg: 2, scope: !13062, file: !12974, line: 415, type: !9)
!13068 = !DILocalVariable(name: "is_word_final", scope: !13069, file: !12974, line: 419, type: !520, align: 1)
!13069 = distinct !DILexicalBlock(scope: !13062, file: !12974, line: 419, column: 13)
!13070 = !DILocation(line: 415, column: 32, scope: !13062)
!13071 = !DILocation(line: 415, column: 44, scope: !13062)
!13072 = !DILocation(line: 419, column: 17, scope: !13069)
!13073 = !DILocation(line: 418, column: 27, scope: !13062)
!13074 = !DILocation(line: 419, column: 63, scope: !13062)
!13075 = !DILocation(line: 419, column: 59, scope: !13062)
!13076 = !DILocation(line: 419, column: 33, scope: !13062)
!13077 = !DILocation(line: 418, column: 13, scope: !13062)
!13078 = !DILocation(line: 420, column: 52, scope: !13062)
!13079 = !DILocation(line: 421, column: 16, scope: !13069)
!13080 = !DILocation(line: 420, column: 51, scope: !13062)
!13081 = !DILocation(line: 420, column: 47, scope: !13062)
!13082 = !DILocation(line: 420, column: 21, scope: !13062)
!13083 = !DILocation(line: 420, column: 20, scope: !13062)
!13084 = !DILocation(line: 421, column: 46, scope: !13069)
!13085 = !DILocation(line: 421, column: 13, scope: !13069)
!13086 = !DILocation(line: 421, column: 32, scope: !13069)
!13087 = !DILocation(line: 422, column: 10, scope: !13062)
!13088 = distinct !DISubprogram(name: "case_ignorable_then_cased<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17hb6451dd30fbe164bE", scope: !1412, file: !12974, line: 424, type: !13089, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !13095, retainedNodes: !13091)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!520, !1440}
!13091 = !{!13092, !13093}
!13092 = !DILocalVariable(name: "iter", arg: 1, scope: !13088, file: !12974, line: 424, type: !1440)
!13093 = !DILocalVariable(name: "c", scope: !13094, file: !12974, line: 427, type: !379, align: 4)
!13094 = distinct !DILexicalBlock(scope: !13088, file: !12974, line: 427, column: 17)
!13095 = !{!1450}
!13096 = !DILocation(line: 424, column: 64, scope: !13088)
!13097 = !DILocation(line: 426, column: 19, scope: !13088)
!13098 = !DILocation(line: 426, column: 13, scope: !13088)
!13099 = !DILocation(line: 428, column: 25, scope: !13088)
!13100 = !DILocation(line: 427, column: 22, scope: !13088)
!13101 = !DILocation(line: 427, column: 22, scope: !13094)
!13102 = !DILocation(line: 427, column: 28, scope: !13094)
!13103 = !DILocation(line: 430, column: 10, scope: !13088)
!13104 = distinct !DISubprogram(name: "case_ignorable_then_cased<core::str::iter::Chars>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17hcef374aacb8ca1f8E", scope: !1412, file: !12974, line: 424, type: !13105, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !13111, retainedNodes: !13107)
!13105 = !DISubroutineType(types: !13106)
!13106 = !{!520, !1396}
!13107 = !{!13108, !13109}
!13108 = !DILocalVariable(name: "iter", arg: 1, scope: !13104, file: !12974, line: 424, type: !1396)
!13109 = !DILocalVariable(name: "c", scope: !13110, file: !12974, line: 427, type: !379, align: 4)
!13110 = distinct !DILexicalBlock(scope: !13104, file: !12974, line: 427, column: 17)
!13111 = !{!1415}
!13112 = !DILocation(line: 424, column: 64, scope: !13104)
!13113 = !DILocation(line: 426, column: 19, scope: !13104)
!13114 = !DILocation(line: 426, column: 13, scope: !13104)
!13115 = !DILocation(line: 428, column: 25, scope: !13104)
!13116 = !DILocation(line: 427, column: 22, scope: !13104)
!13117 = !DILocation(line: 427, column: 22, scope: !13110)
!13118 = !DILocation(line: 427, column: 28, scope: !13110)
!13119 = !DILocation(line: 430, column: 10, scope: !13104)
!13120 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h6ef02b37b9a12ce2E", scope: !1411, file: !12974, line: 426, type: !13121, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !13095, retainedNodes: !13123)
!13121 = !DISubroutineType(types: !13122)
!13122 = !{!520, !1458, !1503}
!13123 = !{!13124, !13126, !13127}
!13124 = !DILocalVariable(name: "c", scope: !13125, file: !12974, line: 426, type: !379, align: 4)
!13125 = distinct !DILexicalBlock(scope: !13120, file: !12974, line: 426, column: 40)
!13126 = !DILocalVariable(arg: 1, scope: !13120, file: !12974, line: 426, type: !1458)
!13127 = !DILocalVariable(arg: 2, scope: !13120, file: !12974, line: 426, type: !1503)
!13128 = !DILocation(line: 426, column: 35, scope: !13120)
!13129 = !DILocation(line: 426, column: 36, scope: !13120)
!13130 = !DILocation(line: 426, column: 37, scope: !13120)
!13131 = !DILocation(line: 426, column: 37, scope: !13125)
!13132 = !DILocation(line: 426, column: 40, scope: !13125)
!13133 = !DILocation(line: 426, column: 57, scope: !13120)
!13134 = distinct !DISubprogram(name: "{closure#0}<core::str::iter::Chars>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h87fcd1a278770be1E", scope: !1411, file: !12974, line: 426, type: !13135, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !13111, retainedNodes: !13137)
!13135 = !DISubroutineType(types: !13136)
!13136 = !{!520, !1424, !1503}
!13137 = !{!13138, !13140, !13141}
!13138 = !DILocalVariable(name: "c", scope: !13139, file: !12974, line: 426, type: !379, align: 4)
!13139 = distinct !DILexicalBlock(scope: !13134, file: !12974, line: 426, column: 40)
!13140 = !DILocalVariable(arg: 1, scope: !13134, file: !12974, line: 426, type: !1424)
!13141 = !DILocalVariable(arg: 2, scope: !13134, file: !12974, line: 426, type: !1503)
!13142 = !DILocation(line: 426, column: 35, scope: !13134)
!13143 = !DILocation(line: 426, column: 36, scope: !13134)
!13144 = !DILocation(line: 426, column: 37, scope: !13134)
!13145 = !DILocation(line: 426, column: 37, scope: !13139)
!13146 = !DILocation(line: 426, column: 40, scope: !13139)
!13147 = !DILocation(line: 426, column: 57, scope: !13134)
!13148 = distinct !DISubprogram(name: "to_uppercase", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_uppercase17h1a9efdf013e53ceeE", scope: !1413, file: !12974, line: 471, type: !12985, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13149)
!13149 = !{!13150, !13151, !13153, !13154, !13156, !13158, !13160, !13162, !13163, !13165, !13166}
!13150 = !DILocalVariable(name: "self", arg: 1, scope: !13148, file: !12974, line: 471, type: !170)
!13151 = !DILocalVariable(name: "s", scope: !13152, file: !12974, line: 472, type: !78, align: 8)
!13152 = distinct !DILexicalBlock(scope: !13148, file: !12974, line: 472, column: 9)
!13153 = !DILocalVariable(name: "rest", scope: !13152, file: !12974, line: 472, type: !170, align: 8)
!13154 = !DILocalVariable(name: "iter", scope: !13155, file: !12974, line: 474, type: !1396, align: 8)
!13155 = distinct !DILexicalBlock(scope: !13152, file: !12974, line: 474, column: 9)
!13156 = !DILocalVariable(name: "c", scope: !13157, file: !12974, line: 474, type: !379, align: 4)
!13157 = distinct !DILexicalBlock(scope: !13155, file: !12974, line: 474, column: 31)
!13158 = !DILocalVariable(name: "a", scope: !13159, file: !12974, line: 476, type: !379, align: 4)
!13159 = distinct !DILexicalBlock(scope: !13157, file: !12974, line: 476, column: 17)
!13160 = !DILocalVariable(name: "a", scope: !13161, file: !12974, line: 477, type: !379, align: 4)
!13161 = distinct !DILexicalBlock(scope: !13157, file: !12974, line: 477, column: 17)
!13162 = !DILocalVariable(name: "b", scope: !13161, file: !12974, line: 477, type: !379, align: 4)
!13163 = !DILocalVariable(name: "a", scope: !13164, file: !12974, line: 481, type: !379, align: 4)
!13164 = distinct !DILexicalBlock(scope: !13157, file: !12974, line: 481, column: 17)
!13165 = !DILocalVariable(name: "b", scope: !13164, file: !12974, line: 481, type: !379, align: 4)
!13166 = !DILocalVariable(name: "c", scope: !13164, file: !12974, line: 481, type: !379, align: 4)
!13167 = !DILocation(line: 471, column: 25, scope: !13148)
!13168 = !DILocation(line: 472, column: 14, scope: !13152)
!13169 = !DILocation(line: 474, column: 18, scope: !13155)
!13170 = !DILocation(line: 472, column: 29, scope: !13148)
!13171 = !DILocation(line: 472, column: 14, scope: !13148)
!13172 = !DILocation(line: 472, column: 21, scope: !13148)
!13173 = !DILocation(line: 472, column: 21, scope: !13152)
!13174 = !DILocation(line: 474, column: 18, scope: !13152)
!13175 = !DILocation(line: 474, column: 9, scope: !13155)
!13176 = !DILocation(line: 488, column: 9, scope: !13152)
!13177 = !DILocation(line: 489, column: 6, scope: !13148)
!13178 = !DILocation(line: 474, column: 13, scope: !13155)
!13179 = !DILocation(line: 474, column: 13, scope: !13157)
!13180 = !DILocation(line: 475, column: 19, scope: !13157)
!13181 = !DILocation(line: 475, column: 13, scope: !13157)
!13182 = !DILocation(line: 476, column: 18, scope: !13157)
!13183 = !DILocation(line: 476, column: 18, scope: !13159)
!13184 = !DILocation(line: 476, column: 33, scope: !13159)
!13185 = !DILocation(line: 477, column: 18, scope: !13157)
!13186 = !DILocation(line: 477, column: 18, scope: !13161)
!13187 = !DILocation(line: 477, column: 21, scope: !13157)
!13188 = !DILocation(line: 477, column: 21, scope: !13161)
!13189 = !DILocation(line: 478, column: 21, scope: !13161)
!13190 = !DILocation(line: 479, column: 21, scope: !13161)
!13191 = !DILocation(line: 481, column: 18, scope: !13157)
!13192 = !DILocation(line: 481, column: 18, scope: !13164)
!13193 = !DILocation(line: 481, column: 21, scope: !13157)
!13194 = !DILocation(line: 481, column: 21, scope: !13164)
!13195 = !DILocation(line: 481, column: 24, scope: !13157)
!13196 = !DILocation(line: 481, column: 24, scope: !13164)
!13197 = !DILocation(line: 482, column: 21, scope: !13164)
!13198 = !DILocation(line: 483, column: 21, scope: !13164)
!13199 = !DILocation(line: 484, column: 21, scope: !13164)
!13200 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17h8096f41a5a555169E", scope: !1413, file: !12974, line: 505, type: !13201, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13203)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{!78, !11350}
!13203 = !{!13204, !13205}
!13204 = !DILocalVariable(name: "self", arg: 1, scope: !13200, file: !12974, line: 505, type: !11350)
!13205 = !DILocalVariable(name: "slice", scope: !13206, file: !12974, line: 506, type: !2539, align: 8)
!13206 = distinct !DILexicalBlock(scope: !13200, file: !12974, line: 506, column: 9)
!13207 = !DILocation(line: 505, column: 24, scope: !13200)
!13208 = !DILocation(line: 506, column: 21, scope: !13200)
!13209 = !DILocation(line: 506, column: 13, scope: !13206)
!13210 = !DILocation(line: 507, column: 46, scope: !13206)
!13211 = !DILocation(line: 507, column: 18, scope: !13206)
!13212 = !DILocation(line: 508, column: 6, scope: !13200)
!13213 = distinct !DISubprogram(name: "from_boxed_utf8_unchecked", linkageName: "_ZN5alloc3str25from_boxed_utf8_unchecked17h16bc6e03dea23d89E", scope: !532, file: !12974, line: 618, type: !13214, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13216)
!13214 = !DISubroutineType(types: !13215)
!13215 = !{!11350, !2539}
!13216 = !{!13217}
!13217 = !DILocalVariable(name: "v", arg: 1, scope: !13213, file: !12974, line: 618, type: !2539)
!13218 = !DILocation(line: 618, column: 41, scope: !13213)
!13219 = !DILocation(line: 619, column: 28, scope: !13213)
!13220 = !DILocation(line: 619, column: 14, scope: !13213)
!13221 = !DILocation(line: 620, column: 2, scope: !13213)
!13222 = distinct !DISubprogram(name: "convert_while_ascii", linkageName: "_ZN5alloc3str19convert_while_ascii17h66812988ffe18450E", scope: !532, file: !12974, line: 636, type: !13223, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13230)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{!13225, !170, !13229}
!13225 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::string::String, &str)", file: !2, size: 320, align: 64, elements: !13226, templateParams: !15, identifier: "2a0015cac6904e65c1d9d07447b2db21")
!13226 = !{!13227, !13228}
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13225, file: !2, baseType: !78, size: 192, align: 64)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !13225, file: !2, baseType: !170, size: 128, align: 64, offset: 192)
!13229 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u8) -> u8", baseType: !2631, size: 64, align: 64, dwarfAddressSpace: 0)
!13230 = !{!13231, !13232, !13233, !13235, !13237, !13239, !13241, !13246, !13248, !13250, !13252, !13254, !13256, !13258, !13260, !13262}
!13231 = !DILocalVariable(name: "s", arg: 1, scope: !13222, file: !12974, line: 636, type: !170)
!13232 = !DILocalVariable(name: "convert", arg: 2, scope: !13222, file: !12974, line: 636, type: !13229)
!13233 = !DILocalVariable(name: "slice", scope: !13234, file: !12974, line: 643, type: !427, align: 8)
!13234 = distinct !DILexicalBlock(scope: !13222, file: !12974, line: 643, column: 5)
!13235 = !DILocalVariable(name: "out", scope: !13236, file: !12974, line: 644, type: !83, align: 8)
!13236 = distinct !DILexicalBlock(scope: !13234, file: !12974, line: 644, column: 5)
!13237 = !DILocalVariable(name: "out_slice", scope: !13238, file: !12974, line: 645, type: !6392, align: 8)
!13238 = distinct !DILexicalBlock(scope: !13236, file: !12974, line: 645, column: 5)
!13239 = !DILocalVariable(name: "ascii_prefix_len", scope: !13240, file: !12974, line: 647, type: !9, align: 8)
!13240 = distinct !DILexicalBlock(scope: !13238, file: !12974, line: 647, column: 5)
!13241 = !DILocalVariable(name: "is_ascii", scope: !13242, file: !12974, line: 648, type: !13243, align: 1)
!13242 = distinct !DILexicalBlock(scope: !13240, file: !12974, line: 648, column: 5)
!13243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 128, align: 8, elements: !13244)
!13244 = !{!13245}
!13245 = !DISubrange(count: 16, lowerBound: 0)
!13246 = !DILocalVariable(name: "chunk", scope: !13247, file: !12974, line: 652, type: !427, align: 8)
!13247 = distinct !DILexicalBlock(scope: !13242, file: !12974, line: 652, column: 9)
!13248 = !DILocalVariable(name: "out_chunk", scope: !13249, file: !12974, line: 654, type: !6392, align: 8)
!13249 = distinct !DILexicalBlock(scope: !13247, file: !12974, line: 654, column: 9)
!13250 = !DILocalVariable(name: "iter", scope: !13251, file: !12974, line: 656, type: !1159, align: 8)
!13251 = distinct !DILexicalBlock(scope: !13249, file: !12974, line: 656, column: 9)
!13252 = !DILocalVariable(name: "j", scope: !13253, file: !12974, line: 656, type: !9, align: 8)
!13253 = distinct !DILexicalBlock(scope: !13251, file: !12974, line: 656, column: 23)
!13254 = !DILocalVariable(name: "iter", scope: !13255, file: !12974, line: 668, type: !1159, align: 8)
!13255 = distinct !DILexicalBlock(scope: !13249, file: !12974, line: 668, column: 9)
!13256 = !DILocalVariable(name: "j", scope: !13257, file: !12974, line: 668, type: !9, align: 8)
!13257 = distinct !DILexicalBlock(scope: !13255, file: !12974, line: 668, column: 23)
!13258 = !DILocalVariable(name: "byte", scope: !13259, file: !12974, line: 679, type: !45, align: 1)
!13259 = distinct !DILexicalBlock(scope: !13242, file: !12974, line: 679, column: 9)
!13260 = !DILocalVariable(name: "ascii_string", scope: !13261, file: !12974, line: 697, type: !78, align: 8)
!13261 = distinct !DILexicalBlock(scope: !13242, file: !12974, line: 697, column: 9)
!13262 = !DILocalVariable(name: "rest", scope: !13263, file: !12974, line: 701, type: !170, align: 8)
!13263 = distinct !DILexicalBlock(scope: !13261, file: !12974, line: 701, column: 9)
!13264 = !DILocation(line: 636, column: 28, scope: !13222)
!13265 = !DILocation(line: 636, column: 37, scope: !13222)
!13266 = !DILocation(line: 643, column: 9, scope: !13234)
!13267 = !DILocation(line: 644, column: 9, scope: !13236)
!13268 = !DILocation(line: 645, column: 9, scope: !13238)
!13269 = !DILocation(line: 647, column: 9, scope: !13240)
!13270 = !DILocation(line: 648, column: 9, scope: !13242)
!13271 = !DILocation(line: 656, column: 18, scope: !13251)
!13272 = !DILocation(line: 668, column: 18, scope: !13255)
!13273 = !DILocation(line: 679, column: 13, scope: !13259)
!13274 = !DILocation(line: 697, column: 13, scope: !13261)
!13275 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 643, column: 21, scope: !13222)
!13277 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !13276)
!13278 = !DILocation(line: 643, column: 21, scope: !13222)
!13279 = !DILocation(line: 644, column: 38, scope: !13234)
!13280 = !DILocation(line: 644, column: 19, scope: !13234)
!13281 = !DILocation(line: 645, column: 25, scope: !13236)
!13282 = !DILocation(line: 647, column: 32, scope: !13238)
!13283 = !DILocation(line: 648, column: 24, scope: !13240)
!13284 = !DILocation(line: 650, column: 5, scope: !13242)
!13285 = !DILocation(line: 650, column: 11, scope: !13242)
!13286 = !DILocation(line: 678, column: 11, scope: !13242)
!13287 = !DILocation(line: 652, column: 30, scope: !13242)
!13288 = !DILocation(line: 652, column: 13, scope: !13247)
!13289 = !DILocation(line: 654, column: 34, scope: !13247)
!13290 = !DILocation(line: 654, column: 13, scope: !13249)
!13291 = !DILocation(line: 656, column: 18, scope: !13249)
!13292 = !DILocation(line: 656, column: 9, scope: !13251)
!13293 = !DILocation(line: 664, column: 12, scope: !13249)
!13294 = !DILocation(line: 656, column: 13, scope: !13251)
!13295 = !DILocation(line: 656, column: 13, scope: !13253)
!13296 = !DILocation(line: 657, column: 27, scope: !13253)
!13297 = !DILocation(line: 668, column: 18, scope: !13249)
!13298 = !DILocation(line: 668, column: 9, scope: !13255)
!13299 = !DILocation(line: 672, column: 9, scope: !13249)
!13300 = !DILocation(line: 668, column: 13, scope: !13255)
!13301 = !DILocation(line: 668, column: 13, scope: !13257)
!13302 = !DILocation(line: 669, column: 54, scope: !13257)
!13303 = !DILocation(line: 673, column: 26, scope: !13249)
!13304 = !DILocation(line: 673, column: 9, scope: !13249)
!13305 = !DILocation(line: 674, column: 30, scope: !13249)
!13306 = !DILocation(line: 674, column: 9, scope: !13249)
!13307 = !DILocation(line: 669, column: 53, scope: !13257)
!13308 = !DILocation(line: 669, column: 45, scope: !13257)
!13309 = !DILocalVariable(name: "val", arg: 1, scope: !13310, file: !13311, line: 288, type: !45)
!13310 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17ha2fb1e72ba2e0c27E", scope: !1148, file: !13311, line: 288, type: !13312, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !13314, retainedNodes: !13315)
!13311 = !DIFile(filename: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "ee6658d125539baac7653b7bbcbbb603")
!13312 = !DISubroutineType(types: !13313)
!13313 = !{!1148, !45}
!13314 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17ha2fb1e72ba2e0c27E", scope: !1148, file: !13311, line: 288, type: !13312, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!13315 = !{!13309}
!13316 = !DILocation(line: 288, column: 22, scope: !13310, inlinedAt: !13317)
!13317 = distinct !DILocation(line: 669, column: 28, scope: !13257)
!13318 = !DILocalVariable(name: "value", arg: 1, scope: !13319, file: !9935, line: 180, type: !45)
!13319 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h6ee3f3c2ed68a34bE", scope: !1154, file: !9935, line: 180, type: !13320, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !13322, retainedNodes: !13323)
!13320 = !DISubroutineType(types: !13321)
!13321 = !{!1154, !45}
!13322 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h6ee3f3c2ed68a34bE", scope: !1154, file: !9935, line: 180, type: !13320, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!13323 = !{!13318}
!13324 = !DILocation(line: 180, column: 22, scope: !13319, inlinedAt: !13325)
!13325 = distinct !DILocation(line: 289, column: 30, scope: !13310, inlinedAt: !13317)
!13326 = !DILocation(line: 289, column: 9, scope: !13310, inlinedAt: !13317)
!13327 = !DILocation(line: 290, column: 6, scope: !13310, inlinedAt: !13317)
!13328 = !DILocation(line: 669, column: 13, scope: !13257)
!13329 = !DILocation(line: 694, column: 21, scope: !13242)
!13330 = !DILocation(line: 694, column: 9, scope: !13242)
!13331 = !DILocation(line: 697, column: 56, scope: !13242)
!13332 = !DILocation(line: 697, column: 28, scope: !13242)
!13333 = !DILocation(line: 701, column: 51, scope: !13261)
!13334 = !DILocation(line: 701, column: 20, scope: !13261)
!13335 = !DILocation(line: 701, column: 13, scope: !13263)
!13336 = !DILocation(line: 703, column: 9, scope: !13263)
!13337 = !DILocation(line: 705, column: 2, scope: !13222)
!13338 = !DILocation(line: 679, column: 20, scope: !13242)
!13339 = !DILocation(line: 680, column: 12, scope: !13259)
!13340 = !DILocation(line: 685, column: 64, scope: !13259)
!13341 = !DILocation(line: 288, column: 22, scope: !13310, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 685, column: 47, scope: !13259)
!13343 = !DILocation(line: 180, column: 22, scope: !13319, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 289, column: 30, scope: !13310, inlinedAt: !13342)
!13345 = !DILocation(line: 289, column: 9, scope: !13310, inlinedAt: !13342)
!13346 = !DILocation(line: 290, column: 6, scope: !13310, inlinedAt: !13342)
!13347 = !DILocation(line: 685, column: 14, scope: !13259)
!13348 = !DILocation(line: 685, column: 13, scope: !13259)
!13349 = !DILocation(line: 687, column: 9, scope: !13259)
!13350 = !DILocation(line: 688, column: 26, scope: !13259)
!13351 = !DILocation(line: 688, column: 9, scope: !13259)
!13352 = !DILocation(line: 689, column: 30, scope: !13259)
!13353 = !DILocation(line: 689, column: 9, scope: !13259)
!13354 = !DILocation(line: 678, column: 5, scope: !13242)
!13355 = !DILocation(line: 657, column: 13, scope: !13253)
!13356 = !DILocation(line: 0, scope: !13357)
!13357 = !DILexicalBlockFile(scope: !13222, file: !4366, discriminator: 0)
!13358 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc3str19convert_while_ascii28_$u7b$$u7b$closure$u7d$$u7d$17hd5bea76adf3287d2E", scope: !531, file: !12974, line: 664, type: !13359, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13362)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!45, !13361, !528}
!13361 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::convert_while_ascii::{closure_env#0}", baseType: !530, size: 64, align: 64, dwarfAddressSpace: 0)
!13362 = !{!13363, !13364}
!13363 = !DILocalVariable(name: "x", arg: 2, scope: !13358, file: !12974, line: 664, type: !528)
!13364 = !DILocalVariable(arg: 1, scope: !13358, file: !12974, line: 664, type: !13361)
!13365 = !DILocation(line: 664, column: 32, scope: !13358)
!13366 = !DILocation(line: 664, column: 33, scope: !13358)
!13367 = !DILocation(line: 664, column: 36, scope: !13358)
!13368 = !DILocation(line: 664, column: 44, scope: !13358)
!13369 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17hf82faab0a3bd0d40E", scope: !78, file: !13370, line: 446, type: !13371, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13373)
!13370 = !DIFile(filename: "src/string.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "8bdb5d4dbfe65c82fb3f471e743433fe")
!13371 = !DISubroutineType(types: !13372)
!13372 = !{!78}
!13373 = !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17hf82faab0a3bd0d40E", scope: !78, file: !13370, line: 446, type: !13371, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13374 = !DILocation(line: 447, column: 23, scope: !13369)
!13375 = !DILocation(line: 447, column: 9, scope: !13369)
!13376 = !DILocation(line: 448, column: 6, scope: !13369)
!13377 = distinct !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE", scope: !78, file: !13370, line: 489, type: !13378, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13380, retainedNodes: !13381)
!13378 = !DISubroutineType(types: !13379)
!13379 = !{!78, !9}
!13380 = !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc6string6String13with_capacity17h5f21485eb85e126fE", scope: !78, file: !13370, line: 489, type: !13378, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13381 = !{!13382}
!13382 = !DILocalVariable(name: "capacity", arg: 1, scope: !13377, file: !13370, line: 489, type: !9)
!13383 = !DILocation(line: 489, column: 26, scope: !13377)
!13384 = !DILocation(line: 490, column: 23, scope: !13377)
!13385 = !DILocation(line: 490, column: 9, scope: !13377)
!13386 = !DILocation(line: 491, column: 6, scope: !13377)
!13387 = distinct !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817h46e709e2886e8f0eE", scope: !78, file: !13370, line: 576, type: !13388, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13390, retainedNodes: !13391)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{!7437, !83}
!13390 = !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817h46e709e2886e8f0eE", scope: !78, file: !13370, line: 576, type: !13388, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13391 = !{!13392, !13393}
!13392 = !DILocalVariable(name: "vec", arg: 1, scope: !13387, file: !13370, line: 576, type: !83)
!13393 = !DILocalVariable(name: "e", scope: !13394, file: !13370, line: 579, type: !156, align: 8)
!13394 = distinct !DILexicalBlock(scope: !13387, file: !13370, line: 579, column: 13)
!13395 = !DILocation(line: 576, column: 22, scope: !13387)
!13396 = !DILocation(line: 579, column: 17, scope: !13394)
!13397 = !DILocation(line: 577, column: 30, scope: !13387)
!13398 = !DILocation(line: 577, column: 15, scope: !13387)
!13399 = !DILocation(line: 577, column: 9, scope: !13387)
!13400 = !DILocation(line: 578, column: 26, scope: !13387)
!13401 = !DILocation(line: 578, column: 23, scope: !13387)
!13402 = !DILocation(line: 578, column: 40, scope: !13387)
!13403 = !DILocation(line: 579, column: 17, scope: !13387)
!13404 = !DILocation(line: 579, column: 27, scope: !13394)
!13405 = !DILocation(line: 579, column: 23, scope: !13394)
!13406 = !DILocation(line: 579, column: 65, scope: !13387)
!13407 = !DILocation(line: 581, column: 6, scope: !13387)
!13408 = distinct !DISubprogram(name: "from_utf8_lossy", linkageName: "_ZN5alloc6string6String15from_utf8_lossy17h2d5a9c797a3f29c5E", scope: !78, file: !13370, line: 635, type: !13409, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13411, retainedNodes: !13412)
!13409 = !DISubroutineType(types: !13410)
!13410 = !{!3286, !427}
!13411 = !DISubprogram(name: "from_utf8_lossy", linkageName: "_ZN5alloc6string6String15from_utf8_lossy17h2d5a9c797a3f29c5E", scope: !78, file: !13370, line: 635, type: !13409, scopeLine: 635, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13412 = !{!13413, !13414, !13420, !13422, !13428, !13430, !13433, !13434, !13437, !13439, !13441}
!13413 = !DILocalVariable(name: "v", arg: 1, scope: !13408, file: !13370, line: 635, type: !427)
!13414 = !DILocalVariable(name: "iter", scope: !13415, file: !13370, line: 636, type: !13416, align: 8)
!13415 = distinct !DILexicalBlock(scope: !13408, file: !13370, line: 636, column: 9)
!13416 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Chunks", scope: !13417, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !13418, templateParams: !15, identifier: "27246c205b14cf28ef483a6c2f3cdf3e")
!13417 = !DINamespace(name: "lossy", scope: !158)
!13418 = !{!13419}
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !13416, file: !2, baseType: !427, size: 128, align: 64, flags: DIFlagPrivate)
!13420 = !DILocalVariable(name: "first_valid", scope: !13421, file: !13370, line: 638, type: !170, align: 8)
!13421 = distinct !DILexicalBlock(scope: !13415, file: !13370, line: 638, column: 9)
!13422 = !DILocalVariable(name: "chunk", scope: !13423, file: !13370, line: 638, type: !13424, align: 8)
!13423 = distinct !DILexicalBlock(scope: !13415, file: !13370, line: 638, column: 60)
!13424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Chunk", scope: !13417, file: !2, size: 256, align: 64, flags: DIFlagPublic, elements: !13425, templateParams: !15, identifier: "88ec791c81a99e17121eb45260aefd26")
!13425 = !{!13426, !13427}
!13426 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !13424, file: !2, baseType: !170, size: 128, align: 64, flags: DIFlagPrivate)
!13427 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !13424, file: !2, baseType: !427, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!13428 = !DILocalVariable(name: "valid", scope: !13429, file: !13370, line: 639, type: !170, align: 8)
!13429 = distinct !DILexicalBlock(scope: !13423, file: !13370, line: 639, column: 13)
!13430 = !DILocalVariable(name: "left_val", scope: !13431, file: !13370, line: 641, type: !2172, align: 8)
!13431 = !DILexicalBlockFile(scope: !13432, file: !13370, discriminator: 0)
!13432 = distinct !DILexicalBlock(scope: !13429, file: !2221, line: 45, column: 13)
!13433 = !DILocalVariable(name: "right_val", scope: !13431, file: !13370, line: 641, type: !2172, align: 8)
!13434 = !DILocalVariable(name: "kind", scope: !13435, file: !13370, line: 641, type: !287, align: 1)
!13435 = !DILexicalBlockFile(scope: !13436, file: !13370, discriminator: 0)
!13436 = distinct !DILexicalBlock(scope: !13432, file: !2221, line: 47, column: 21)
!13437 = !DILocalVariable(name: "res", scope: !13438, file: !13370, line: 651, type: !78, align: 8)
!13438 = distinct !DILexicalBlock(scope: !13421, file: !13370, line: 651, column: 9)
!13439 = !DILocalVariable(name: "iter", scope: !13440, file: !13370, line: 655, type: !13416, align: 8)
!13440 = distinct !DILexicalBlock(scope: !13438, file: !13370, line: 655, column: 9)
!13441 = !DILocalVariable(name: "chunk", scope: !13442, file: !13370, line: 655, type: !13424, align: 8)
!13442 = distinct !DILexicalBlock(scope: !13440, file: !13370, line: 655, column: 27)
!13443 = !DILocation(line: 635, column: 28, scope: !13408)
!13444 = !DILocation(line: 636, column: 13, scope: !13415)
!13445 = !DILocation(line: 638, column: 39, scope: !13423)
!13446 = !DILocation(line: 641, column: 17, scope: !13435)
!13447 = !DILocation(line: 651, column: 13, scope: !13438)
!13448 = !DILocation(line: 655, column: 22, scope: !13440)
!13449 = !DILocation(line: 655, column: 13, scope: !13442)
!13450 = !DILocation(line: 636, column: 24, scope: !13408)
!13451 = !DILocation(line: 638, column: 48, scope: !13423)
!13452 = !DILocation(line: 638, column: 34, scope: !13423)
!13453 = !DILocation(line: 639, column: 25, scope: !13423)
!13454 = !DILocation(line: 638, column: 13, scope: !13421)
!13455 = !DILocation(line: 639, column: 17, scope: !13429)
!13456 = !DILocation(line: 640, column: 16, scope: !13429)
!13457 = !DILocation(line: 646, column: 20, scope: !13415)
!13458 = !DILocation(line: 0, scope: !13459)
!13459 = !DILexicalBlockFile(scope: !13415, file: !4366, discriminator: 0)
!13460 = !DILocation(line: 651, column: 23, scope: !13421)
!13461 = !DILocation(line: 652, column: 9, scope: !13438)
!13462 = !DILocation(line: 653, column: 9, scope: !13438)
!13463 = !DILocation(line: 655, column: 22, scope: !13438)
!13464 = !DILocation(line: 655, column: 9, scope: !13440)
!13465 = !DILocation(line: 641, column: 34, scope: !13429)
!13466 = !DILocation(line: 641, column: 47, scope: !13429)
!13467 = !DILocation(line: 641, column: 17, scope: !13429)
!13468 = !DILocation(line: 641, column: 17, scope: !13431)
!13469 = !DILocation(line: 662, column: 20, scope: !13438)
!13470 = !DILocation(line: 662, column: 9, scope: !13438)
!13471 = !DILocation(line: 663, column: 6, scope: !13408)
!13472 = !DILocation(line: 655, column: 13, scope: !13440)
!13473 = !DILocation(line: 656, column: 26, scope: !13442)
!13474 = !DILocation(line: 656, column: 13, scope: !13442)
!13475 = !DILocation(line: 657, column: 17, scope: !13442)
!13476 = !DILocation(line: 658, column: 17, scope: !13442)
!13477 = !DILocation(line: 642, column: 24, scope: !13429)
!13478 = distinct !DISubprogram(name: "from_utf8_lossy_owned", linkageName: "_ZN5alloc6string6String21from_utf8_lossy_owned17hda5953d0eefd385dE", scope: !78, file: !13370, line: 702, type: !13479, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13481, retainedNodes: !13482)
!13479 = !DISubroutineType(types: !13480)
!13480 = !{!78, !83}
!13481 = !DISubprogram(name: "from_utf8_lossy_owned", linkageName: "_ZN5alloc6string6String21from_utf8_lossy_owned17hda5953d0eefd385dE", scope: !78, file: !13370, line: 702, type: !13479, scopeLine: 702, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13482 = !{!13483, !13484}
!13483 = !DILocalVariable(name: "v", arg: 1, scope: !13478, file: !13370, line: 702, type: !83)
!13484 = !DILocalVariable(name: "string", scope: !13485, file: !13370, line: 703, type: !78, align: 8)
!13485 = distinct !DILexicalBlock(scope: !13478, file: !13370, line: 703, column: 65)
!13486 = !DILocation(line: 702, column: 34, scope: !13478)
!13487 = !DILocation(line: 703, column: 27, scope: !13485)
!13488 = !DILocation(line: 703, column: 37, scope: !13485)
!13489 = !DILocation(line: 703, column: 61, scope: !13485)
!13490 = !DILocation(line: 703, column: 63, scope: !13485)
!13491 = !DILocation(line: 703, column: 16, scope: !13485)
!13492 = !DILocation(line: 704, column: 13, scope: !13485)
!13493 = !DILocation(line: 703, column: 9, scope: !13478)
!13494 = !DILocation(line: 711, column: 50, scope: !13478)
!13495 = !DILocation(line: 711, column: 22, scope: !13478)
!13496 = !DILocation(line: 713, column: 5, scope: !13478)
!13497 = !DILocation(line: 713, column: 6, scope: !13478)
!13498 = !DILocation(line: 702, column: 5, scope: !13478)
!13499 = distinct !DISubprogram(name: "from_utf16", linkageName: "_ZN5alloc6string6String10from_utf1617hdbb6471a5ae280d1E", scope: !78, file: !13370, line: 734, type: !13500, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13502, retainedNodes: !13503)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{!7317, !6486}
!13502 = !DISubprogram(name: "from_utf16", linkageName: "_ZN5alloc6string6String10from_utf1617hdbb6471a5ae280d1E", scope: !78, file: !13370, line: 734, type: !13500, scopeLine: 734, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13503 = !{!13504, !13505, !13507, !13509, !13511}
!13504 = !DILocalVariable(name: "v", arg: 1, scope: !13499, file: !13370, line: 734, type: !6486)
!13505 = !DILocalVariable(name: "ret", scope: !13506, file: !13370, line: 737, type: !78, align: 8)
!13506 = distinct !DILexicalBlock(scope: !13499, file: !13370, line: 737, column: 9)
!13507 = !DILocalVariable(name: "iter", scope: !13508, file: !13370, line: 738, type: !309, align: 8)
!13508 = distinct !DILexicalBlock(scope: !13506, file: !13370, line: 738, column: 9)
!13509 = !DILocalVariable(name: "c", scope: !13510, file: !13370, line: 738, type: !1024, align: 4)
!13510 = distinct !DILexicalBlock(scope: !13508, file: !13370, line: 738, column: 56)
!13511 = !DILocalVariable(name: "c", scope: !13512, file: !13370, line: 739, type: !379, align: 4)
!13512 = distinct !DILexicalBlock(scope: !13510, file: !13370, line: 739, column: 30)
!13513 = !DILocation(line: 734, column: 23, scope: !13499)
!13514 = !DILocation(line: 737, column: 13, scope: !13506)
!13515 = !DILocation(line: 738, column: 18, scope: !13508)
!13516 = !DILocation(line: 738, column: 13, scope: !13510)
!13517 = !DILocation(line: 737, column: 23, scope: !13499)
!13518 = !DILocation(line: 738, column: 37, scope: !13506)
!13519 = !DILocation(line: 738, column: 18, scope: !13506)
!13520 = !DILocation(line: 738, column: 9, scope: !13508)
!13521 = !DILocation(line: 745, column: 12, scope: !13506)
!13522 = !DILocation(line: 745, column: 9, scope: !13506)
!13523 = !DILocation(line: 746, column: 6, scope: !13499)
!13524 = !DILocation(line: 738, column: 13, scope: !13508)
!13525 = !DILocation(line: 739, column: 28, scope: !13512)
!13526 = !DILocation(line: 739, column: 20, scope: !13512)
!13527 = !DILocation(line: 739, column: 23, scope: !13512)
!13528 = !DILocation(line: 740, column: 17, scope: !13512)
!13529 = !DILocation(line: 742, column: 24, scope: !13510)
!13530 = !DILocation(line: 746, column: 5, scope: !13499)
!13531 = distinct !DISubprogram(name: "from_utf16_lossy", linkageName: "_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E", scope: !78, file: !13370, line: 774, type: !13532, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13534, retainedNodes: !13535)
!13532 = !DISubroutineType(types: !13533)
!13533 = !{!78, !6486}
!13534 = !DISubprogram(name: "from_utf16_lossy", linkageName: "_ZN5alloc6string6String16from_utf16_lossy17h995d77eac077e1e5E", scope: !78, file: !13370, line: 774, type: !13532, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13535 = !{!13536}
!13536 = !DILocalVariable(name: "v", arg: 1, scope: !13531, file: !13370, line: 774, type: !6486)
!13537 = !DILocation(line: 774, column: 29, scope: !13531)
!13538 = !DILocation(line: 775, column: 28, scope: !13531)
!13539 = !DILocation(line: 775, column: 9, scope: !13531)
!13540 = !DILocation(line: 778, column: 6, scope: !13531)
!13541 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String16from_utf16_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h3e11a0c3a8d0b8b3E", scope: !354, file: !13370, line: 776, type: !13542, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13545)
!13542 = !DISubroutineType(types: !13543)
!13543 = !{!379, !13544, !1024}
!13544 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}", baseType: !353, size: 64, align: 64, dwarfAddressSpace: 0)
!13545 = !{!13546, !13547}
!13546 = !DILocalVariable(name: "r", arg: 2, scope: !13541, file: !13370, line: 776, type: !1024)
!13547 = !DILocalVariable(arg: 1, scope: !13541, file: !13370, line: 776, type: !13544)
!13548 = !DILocation(line: 776, column: 18, scope: !13541)
!13549 = !DILocation(line: 776, column: 19, scope: !13541)
!13550 = !DILocation(line: 776, column: 22, scope: !13541)
!13551 = !DILocation(line: 776, column: 62, scope: !13541)
!13552 = distinct !DISubprogram(name: "from_utf16le", linkageName: "_ZN5alloc6string6String12from_utf16le17h11d7a10b66f5c695E", scope: !78, file: !13370, line: 802, type: !13553, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13555, retainedNodes: !13556)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{!7317, !427}
!13555 = !DISubprogram(name: "from_utf16le", linkageName: "_ZN5alloc6string6String12from_utf16le17h11d7a10b66f5c695E", scope: !78, file: !13370, line: 802, type: !13553, scopeLine: 802, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13556 = !{!13557, !13558}
!13557 = !DILocalVariable(name: "v", arg: 1, scope: !13552, file: !13370, line: 802, type: !427)
!13558 = !DILocalVariable(name: "v", scope: !13559, file: !13370, line: 807, type: !6486, align: 8)
!13559 = distinct !DILexicalBlock(scope: !13552, file: !13370, line: 807, column: 13)
!13560 = !DILocation(line: 802, column: 25, scope: !13552)
!13561 = !DILocation(line: 803, column: 12, scope: !13552)
!13562 = !DILocation(line: 806, column: 57, scope: !13552)
!13563 = !DILocation(line: 806, column: 15, scope: !13552)
!13564 = !DILocation(line: 806, column: 9, scope: !13552)
!13565 = !DILocation(line: 804, column: 20, scope: !13552)
!13566 = !DILocation(line: 812, column: 6, scope: !13552)
!13567 = !DILocation(line: 808, column: 37, scope: !13552)
!13568 = !DILocation(line: 808, column: 18, scope: !13552)
!13569 = !DILocation(line: 807, column: 21, scope: !13552)
!13570 = !DILocation(line: 807, column: 28, scope: !13552)
!13571 = !DILocation(line: 807, column: 25, scope: !13552)
!13572 = !DILocation(line: 807, column: 25, scope: !13559)
!13573 = !DILocation(line: 807, column: 36, scope: !13559)
!13574 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String12from_utf16le28_$u7b$$u7b$closure$u7d$$u7d$17haa7a00f08f5c7eb8E", scope: !7336, file: !13370, line: 810, type: !13575, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13577)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{null, !7335, !880}
!13577 = !{!13578, !13579}
!13578 = !DILocalVariable(arg: 1, scope: !13574, file: !13370, line: 810, type: !7335)
!13579 = !DILocalVariable(arg: 2, scope: !13574, file: !13370, line: 810, type: !880)
!13580 = !DILocation(line: 810, column: 26, scope: !13574)
!13581 = !DILocation(line: 810, column: 27, scope: !13574)
!13582 = !DILocation(line: 810, column: 48, scope: !13574)
!13583 = distinct !DISubprogram(name: "from_utf16le_lossy", linkageName: "_ZN5alloc6string6String18from_utf16le_lossy17he667aa87439fe2daE", scope: !78, file: !13370, line: 841, type: !13584, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13586, retainedNodes: !13587)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{!78, !427}
!13586 = !DISubprogram(name: "from_utf16le_lossy", linkageName: "_ZN5alloc6string6String18from_utf16le_lossy17he667aa87439fe2daE", scope: !78, file: !13370, line: 841, type: !13584, scopeLine: 841, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13587 = !{!13588, !13589, !13591, !13593, !13594, !13596}
!13588 = !DILocalVariable(name: "v", arg: 1, scope: !13583, file: !13370, line: 841, type: !427)
!13589 = !DILocalVariable(name: "v", scope: !13590, file: !13370, line: 843, type: !6486, align: 8)
!13590 = distinct !DILexicalBlock(scope: !13583, file: !13370, line: 843, column: 13)
!13591 = !DILocalVariable(name: "v", scope: !13592, file: !13370, line: 844, type: !6486, align: 8)
!13592 = distinct !DILexicalBlock(scope: !13583, file: !13370, line: 844, column: 13)
!13593 = !DILocalVariable(name: "_remainder", scope: !13592, file: !13370, line: 844, type: !67, align: 8)
!13594 = !DILocalVariable(name: "iter", scope: !13595, file: !13370, line: 846, type: !405, align: 8)
!13595 = distinct !DILexicalBlock(scope: !13583, file: !13370, line: 846, column: 17)
!13596 = !DILocalVariable(name: "string", scope: !13597, file: !13370, line: 847, type: !78, align: 8)
!13597 = distinct !DILexicalBlock(scope: !13595, file: !13370, line: 847, column: 17)
!13598 = !DILocation(line: 841, column: 31, scope: !13583)
!13599 = !DILocation(line: 846, column: 21, scope: !13595)
!13600 = !DILocation(line: 847, column: 21, scope: !13597)
!13601 = !DILocation(line: 842, column: 57, scope: !13583)
!13602 = !DILocation(line: 842, column: 15, scope: !13583)
!13603 = !DILocation(line: 842, column: 9, scope: !13583)
!13604 = !DILocation(line: 846, column: 32, scope: !13583)
!13605 = !DILocation(line: 847, column: 49, scope: !13595)
!13606 = !DILocation(line: 847, column: 30, scope: !13595)
!13607 = !DILocation(line: 850, column: 20, scope: !13597)
!13608 = !DILocation(line: 843, column: 21, scope: !13583)
!13609 = !DILocation(line: 843, column: 28, scope: !13583)
!13610 = !DILocation(line: 843, column: 25, scope: !13583)
!13611 = !DILocation(line: 843, column: 25, scope: !13590)
!13612 = !DILocation(line: 843, column: 36, scope: !13590)
!13613 = !DILocation(line: 844, column: 28, scope: !13583)
!13614 = !DILocation(line: 853, column: 6, scope: !13583)
!13615 = !DILocation(line: 844, column: 25, scope: !13583)
!13616 = !DILocation(line: 844, column: 25, scope: !13592)
!13617 = !DILocation(line: 844, column: 29, scope: !13583)
!13618 = !DILocation(line: 844, column: 29, scope: !13592)
!13619 = !DILocation(line: 844, column: 46, scope: !13592)
!13620 = !DILocation(line: 850, column: 66, scope: !13597)
!13621 = !DILocation(line: 850, column: 50, scope: !13597)
!13622 = !DILocation(line: 850, column: 17, scope: !13597)
!13623 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String18from_utf16le_lossy28_$u7b$$u7b$closure$u7d$$u7d$17haa8260feb9b9657cE", scope: !485, file: !13370, line: 848, type: !13624, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13627)
!13624 = !DISubroutineType(types: !13625)
!13625 = !{!379, !13626, !1024}
!13626 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}", baseType: !484, size: 64, align: 64, dwarfAddressSpace: 0)
!13627 = !{!13628, !13629}
!13628 = !DILocalVariable(name: "r", arg: 2, scope: !13623, file: !13370, line: 848, type: !1024)
!13629 = !DILocalVariable(arg: 1, scope: !13623, file: !13370, line: 848, type: !13626)
!13630 = !DILocation(line: 848, column: 26, scope: !13623)
!13631 = !DILocation(line: 848, column: 27, scope: !13623)
!13632 = !DILocation(line: 848, column: 30, scope: !13623)
!13633 = !DILocation(line: 848, column: 70, scope: !13623)
!13634 = distinct !DISubprogram(name: "from_utf16be", linkageName: "_ZN5alloc6string6String12from_utf16be17h1e24269c0ea3540bE", scope: !78, file: !13370, line: 877, type: !13553, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13635, retainedNodes: !13636)
!13635 = !DISubprogram(name: "from_utf16be", linkageName: "_ZN5alloc6string6String12from_utf16be17h1e24269c0ea3540bE", scope: !78, file: !13370, line: 877, type: !13553, scopeLine: 877, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13636 = !{!13637, !13638}
!13637 = !DILocalVariable(name: "v", arg: 1, scope: !13634, file: !13370, line: 877, type: !427)
!13638 = !DILocalVariable(name: "v", scope: !13639, file: !13370, line: 882, type: !6486, align: 8)
!13639 = distinct !DILexicalBlock(scope: !13634, file: !13370, line: 882, column: 13)
!13640 = !DILocation(line: 877, column: 25, scope: !13634)
!13641 = !DILocation(line: 878, column: 12, scope: !13634)
!13642 = !DILocation(line: 881, column: 54, scope: !13634)
!13643 = !DILocation(line: 881, column: 15, scope: !13634)
!13644 = !DILocation(line: 881, column: 9, scope: !13634)
!13645 = !DILocation(line: 879, column: 20, scope: !13634)
!13646 = !DILocation(line: 887, column: 6, scope: !13634)
!13647 = !DILocation(line: 883, column: 37, scope: !13634)
!13648 = !DILocation(line: 883, column: 18, scope: !13634)
!13649 = !DILocation(line: 882, column: 21, scope: !13634)
!13650 = !DILocation(line: 882, column: 28, scope: !13634)
!13651 = !DILocation(line: 882, column: 25, scope: !13634)
!13652 = !DILocation(line: 882, column: 25, scope: !13639)
!13653 = !DILocation(line: 882, column: 36, scope: !13639)
!13654 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String12from_utf16be28_$u7b$$u7b$closure$u7d$$u7d$17hff31191c53916e37E", scope: !7558, file: !13370, line: 885, type: !13655, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13657)
!13655 = !DISubroutineType(types: !13656)
!13656 = !{null, !7557, !880}
!13657 = !{!13658, !13659}
!13658 = !DILocalVariable(arg: 1, scope: !13654, file: !13370, line: 885, type: !7557)
!13659 = !DILocalVariable(arg: 2, scope: !13654, file: !13370, line: 885, type: !880)
!13660 = !DILocation(line: 885, column: 26, scope: !13654)
!13661 = !DILocation(line: 885, column: 27, scope: !13654)
!13662 = !DILocation(line: 885, column: 48, scope: !13654)
!13663 = distinct !DISubprogram(name: "from_utf16be_lossy", linkageName: "_ZN5alloc6string6String18from_utf16be_lossy17h47088b5c1d958ac5E", scope: !78, file: !13370, line: 916, type: !13584, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13664, retainedNodes: !13665)
!13664 = !DISubprogram(name: "from_utf16be_lossy", linkageName: "_ZN5alloc6string6String18from_utf16be_lossy17h47088b5c1d958ac5E", scope: !78, file: !13370, line: 916, type: !13584, scopeLine: 916, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13665 = !{!13666, !13667, !13669, !13671, !13672, !13674}
!13666 = !DILocalVariable(name: "v", arg: 1, scope: !13663, file: !13370, line: 916, type: !427)
!13667 = !DILocalVariable(name: "v", scope: !13668, file: !13370, line: 918, type: !6486, align: 8)
!13668 = distinct !DILexicalBlock(scope: !13663, file: !13370, line: 918, column: 13)
!13669 = !DILocalVariable(name: "v", scope: !13670, file: !13370, line: 919, type: !6486, align: 8)
!13670 = distinct !DILexicalBlock(scope: !13663, file: !13370, line: 919, column: 13)
!13671 = !DILocalVariable(name: "_remainder", scope: !13670, file: !13370, line: 919, type: !67, align: 8)
!13672 = !DILocalVariable(name: "iter", scope: !13673, file: !13370, line: 921, type: !405, align: 8)
!13673 = distinct !DILexicalBlock(scope: !13663, file: !13370, line: 921, column: 17)
!13674 = !DILocalVariable(name: "string", scope: !13675, file: !13370, line: 922, type: !78, align: 8)
!13675 = distinct !DILexicalBlock(scope: !13673, file: !13370, line: 922, column: 17)
!13676 = !DILocation(line: 916, column: 31, scope: !13663)
!13677 = !DILocation(line: 921, column: 21, scope: !13673)
!13678 = !DILocation(line: 922, column: 21, scope: !13675)
!13679 = !DILocation(line: 917, column: 54, scope: !13663)
!13680 = !DILocation(line: 917, column: 15, scope: !13663)
!13681 = !DILocation(line: 917, column: 9, scope: !13663)
!13682 = !DILocation(line: 921, column: 32, scope: !13663)
!13683 = !DILocation(line: 922, column: 49, scope: !13673)
!13684 = !DILocation(line: 922, column: 30, scope: !13673)
!13685 = !DILocation(line: 925, column: 20, scope: !13675)
!13686 = !DILocation(line: 918, column: 21, scope: !13663)
!13687 = !DILocation(line: 918, column: 28, scope: !13663)
!13688 = !DILocation(line: 918, column: 25, scope: !13663)
!13689 = !DILocation(line: 918, column: 25, scope: !13668)
!13690 = !DILocation(line: 918, column: 36, scope: !13668)
!13691 = !DILocation(line: 919, column: 28, scope: !13663)
!13692 = !DILocation(line: 928, column: 6, scope: !13663)
!13693 = !DILocation(line: 919, column: 25, scope: !13663)
!13694 = !DILocation(line: 919, column: 25, scope: !13670)
!13695 = !DILocation(line: 919, column: 29, scope: !13663)
!13696 = !DILocation(line: 919, column: 29, scope: !13670)
!13697 = !DILocation(line: 919, column: 46, scope: !13670)
!13698 = !DILocation(line: 925, column: 66, scope: !13675)
!13699 = !DILocation(line: 925, column: 50, scope: !13675)
!13700 = !DILocation(line: 925, column: 17, scope: !13675)
!13701 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String18from_utf16be_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h3ad59939c93a76a4E", scope: !445, file: !13370, line: 923, type: !13702, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13705)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{!379, !13704, !1024}
!13704 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}", baseType: !444, size: 64, align: 64, dwarfAddressSpace: 0)
!13705 = !{!13706, !13707}
!13706 = !DILocalVariable(name: "r", arg: 2, scope: !13701, file: !13370, line: 923, type: !1024)
!13707 = !DILocalVariable(arg: 1, scope: !13701, file: !13370, line: 923, type: !13704)
!13708 = !DILocation(line: 923, column: 26, scope: !13701)
!13709 = !DILocation(line: 923, column: 27, scope: !13701)
!13710 = !DILocation(line: 923, column: 30, scope: !13701)
!13711 = !DILocation(line: 923, column: 70, scope: !13701)
!13712 = distinct !DISubprogram(name: "into_raw_parts", linkageName: "_ZN5alloc6string6String14into_raw_parts17ha38ec374ae3e139bE", scope: !78, file: !13370, line: 958, type: !13713, scopeLine: 958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13720, retainedNodes: !13721)
!13713 = !DISubroutineType(types: !13714)
!13714 = !{!13715, !78}
!13715 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut u8, usize, usize)", file: !2, size: 192, align: 64, elements: !13716, templateParams: !15, identifier: "13043509bb2b2f30fd53160bf1a703d0")
!13716 = !{!13717, !13718, !13719}
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13715, file: !2, baseType: !3364, size: 64, align: 64)
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !13715, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13719 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !13715, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!13720 = !DISubprogram(name: "into_raw_parts", linkageName: "_ZN5alloc6string6String14into_raw_parts17ha38ec374ae3e139bE", scope: !78, file: !13370, line: 958, type: !13713, scopeLine: 958, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13721 = !{!13722}
!13722 = !DILocalVariable(name: "self", arg: 1, scope: !13712, file: !13370, line: 958, type: !78)
!13723 = !DILocation(line: 958, column: 27, scope: !13712)
!13724 = !DILocation(line: 959, column: 9, scope: !13712)
!13725 = !DILocation(line: 960, column: 6, scope: !13712)
!13726 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E", scope: !78, file: !13370, line: 1043, type: !13479, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13727, retainedNodes: !13728)
!13727 = !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h019b8cc80da86341E", scope: !78, file: !13370, line: 1043, type: !13479, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13728 = !{!13729}
!13729 = !DILocalVariable(name: "bytes", arg: 1, scope: !13726, file: !13370, line: 1043, type: !83)
!13730 = !DILocation(line: 1043, column: 39, scope: !13726)
!13731 = !DILocation(line: 1044, column: 9, scope: !13726)
!13732 = !DILocation(line: 1045, column: 6, scope: !13726)
!13733 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string6String10into_bytes17he180ecf317f01a82E", scope: !78, file: !13370, line: 1063, type: !13734, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13736, retainedNodes: !13737)
!13734 = !DISubroutineType(types: !13735)
!13735 = !{!83, !78}
!13736 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string6String10into_bytes17he180ecf317f01a82E", scope: !78, file: !13370, line: 1063, type: !13734, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13737 = !{!13738}
!13738 = !DILocalVariable(name: "self", arg: 1, scope: !13733, file: !13370, line: 1063, type: !78)
!13739 = !DILocation(line: 1063, column: 29, scope: !13733)
!13740 = !DILocation(line: 1064, column: 9, scope: !13733)
!13741 = !DILocation(line: 1065, column: 6, scope: !13733)
!13742 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string6String6as_str17hd771ad2969f56027E", scope: !78, file: !13370, line: 1081, type: !12976, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13743, retainedNodes: !13744)
!13743 = !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string6String6as_str17hd771ad2969f56027E", scope: !78, file: !13370, line: 1081, type: !12976, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13744 = !{!13745}
!13745 = !DILocalVariable(name: "self", arg: 1, scope: !13742, file: !13370, line: 1081, type: !11947)
!13746 = !DILocation(line: 1081, column: 25, scope: !13742)
!13747 = !DILocation(line: 1084, column: 43, scope: !13742)
!13748 = !DILocation(line: 1084, column: 18, scope: !13742)
!13749 = !DILocation(line: 1085, column: 6, scope: !13742)
!13750 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E", scope: !78, file: !13370, line: 1126, type: !13751, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13753, retainedNodes: !13754)
!13751 = !DISubroutineType(types: !13752)
!13752 = !{null, !372, !170}
!13753 = !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17hd7986bb7fde0cdf9E", scope: !78, file: !13370, line: 1126, type: !13751, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13754 = !{!13755, !13756}
!13755 = !DILocalVariable(name: "self", arg: 1, scope: !13750, file: !13370, line: 1126, type: !372)
!13756 = !DILocalVariable(name: "string", arg: 2, scope: !13750, file: !13370, line: 1126, type: !170)
!13757 = !DILocation(line: 1126, column: 21, scope: !13750)
!13758 = !DILocation(line: 1126, column: 32, scope: !13750)
!13759 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !13760)
!13760 = distinct !DILocation(line: 1127, column: 36, scope: !13750)
!13761 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !13760)
!13762 = !DILocation(line: 1127, column: 36, scope: !13750)
!13763 = !DILocation(line: 1127, column: 9, scope: !13750)
!13764 = !DILocation(line: 1128, column: 6, scope: !13750)
!13765 = distinct !DISubprogram(name: "reserve", linkageName: "_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E", scope: !78, file: !13370, line: 1226, type: !13766, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13768, retainedNodes: !13769)
!13766 = !DISubroutineType(types: !13767)
!13767 = !{null, !372, !9}
!13768 = !DISubprogram(name: "reserve", linkageName: "_ZN5alloc6string6String7reserve17h6525cf1fb0ecec58E", scope: !78, file: !13370, line: 1226, type: !13766, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13769 = !{!13770, !13771}
!13770 = !DILocalVariable(name: "self", arg: 1, scope: !13765, file: !13370, line: 1226, type: !372)
!13771 = !DILocalVariable(name: "additional", arg: 2, scope: !13765, file: !13370, line: 1226, type: !9)
!13772 = !DILocation(line: 1226, column: 20, scope: !13765)
!13773 = !DILocation(line: 1226, column: 31, scope: !13765)
!13774 = !DILocation(line: 1227, column: 9, scope: !13765)
!13775 = !DILocation(line: 1228, column: 6, scope: !13765)
!13776 = distinct !DISubprogram(name: "try_reserve", linkageName: "_ZN5alloc6string6String11try_reserve17hf00c6f094e40d823E", scope: !78, file: !13370, line: 1311, type: !13777, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13779, retainedNodes: !13780)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{!1722, !372, !9}
!13779 = !DISubprogram(name: "try_reserve", linkageName: "_ZN5alloc6string6String11try_reserve17hf00c6f094e40d823E", scope: !78, file: !13370, line: 1311, type: !13777, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13780 = !{!13781, !13782}
!13781 = !DILocalVariable(name: "self", arg: 1, scope: !13776, file: !13370, line: 1311, type: !372)
!13782 = !DILocalVariable(name: "additional", arg: 2, scope: !13776, file: !13370, line: 1311, type: !9)
!13783 = !DILocation(line: 1311, column: 24, scope: !13776)
!13784 = !DILocation(line: 1311, column: 35, scope: !13776)
!13785 = !DILocation(line: 1312, column: 9, scope: !13776)
!13786 = !DILocation(line: 1313, column: 6, scope: !13776)
!13787 = distinct !DISubprogram(name: "try_reserve_exact", linkageName: "_ZN5alloc6string6String17try_reserve_exact17hb3ea394410cc3571E", scope: !78, file: !13370, line: 1352, type: !13777, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13788, retainedNodes: !13789)
!13788 = !DISubprogram(name: "try_reserve_exact", linkageName: "_ZN5alloc6string6String17try_reserve_exact17hb3ea394410cc3571E", scope: !78, file: !13370, line: 1352, type: !13777, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13789 = !{!13790, !13791}
!13790 = !DILocalVariable(name: "self", arg: 1, scope: !13787, file: !13370, line: 1352, type: !372)
!13791 = !DILocalVariable(name: "additional", arg: 2, scope: !13787, file: !13370, line: 1352, type: !9)
!13792 = !DILocation(line: 1352, column: 30, scope: !13787)
!13793 = !DILocation(line: 1352, column: 41, scope: !13787)
!13794 = !DILocation(line: 1353, column: 9, scope: !13787)
!13795 = !DILocation(line: 1354, column: 6, scope: !13787)
!13796 = distinct !DISubprogram(name: "push", linkageName: "_ZN5alloc6string6String4push17h0289da195591b545E", scope: !78, file: !13370, line: 1419, type: !13797, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13799, retainedNodes: !13800)
!13797 = !DISubroutineType(types: !13798)
!13798 = !{null, !372, !379}
!13799 = !DISubprogram(name: "push", linkageName: "_ZN5alloc6string6String4push17h0289da195591b545E", scope: !78, file: !13370, line: 1419, type: !13797, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13800 = !{!13801, !13802}
!13801 = !DILocalVariable(name: "self", arg: 1, scope: !13796, file: !13370, line: 1419, type: !372)
!13802 = !DILocalVariable(name: "ch", arg: 2, scope: !13796, file: !13370, line: 1419, type: !379)
!13803 = !DILocation(line: 1419, column: 17, scope: !13796)
!13804 = !DILocation(line: 1419, column: 28, scope: !13796)
!13805 = !DILocation(line: 1420, column: 15, scope: !13796)
!13806 = !DILocation(line: 1420, column: 9, scope: !13796)
!13807 = !DILocation(line: 1421, column: 32, scope: !13796)
!13808 = !DILocation(line: 1421, column: 18, scope: !13796)
!13809 = !DILocation(line: 1422, column: 65, scope: !13796)
!13810 = !DILocation(line: 1422, column: 45, scope: !13796)
!13811 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 1422, column: 45, scope: !13796)
!13813 = !DILocation(line: 1422, column: 18, scope: !13796)
!13814 = !DILocation(line: 1424, column: 6, scope: !13796)
!13815 = distinct !DISubprogram(name: "drop", linkageName: "_ZN85_$LT$alloc..string..String..retain..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83cd7c15c48b0206E", scope: !13816, file: !13370, line: 1650, type: !13818, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !13826)
!13816 = !DINamespace(name: "{impl#0}", scope: !13817)
!13817 = !DINamespace(name: "retain", scope: !355)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{null, !13820}
!13820 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::retain::SetLenOnDrop", baseType: !13821, size: 64, align: 64, dwarfAddressSpace: 0)
!13821 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !13817, file: !2, size: 192, align: 64, flags: DIFlagProtected, elements: !13822, templateParams: !15, identifier: "8084c92061a9390befa547dccc25d291")
!13822 = !{!13823, !13824, !13825}
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !13821, file: !2, baseType: !372, size: 64, align: 64, flags: DIFlagProtected)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !13821, file: !2, baseType: !9, size: 64, align: 64, offset: 64, flags: DIFlagProtected)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "del_bytes", scope: !13821, file: !2, baseType: !9, size: 64, align: 64, offset: 128, flags: DIFlagProtected)
!13826 = !{!13827, !13828}
!13827 = !DILocalVariable(name: "self", arg: 1, scope: !13815, file: !13370, line: 1650, type: !13820)
!13828 = !DILocalVariable(name: "new_len", scope: !13829, file: !13370, line: 1651, type: !9, align: 8)
!13829 = distinct !DILexicalBlock(scope: !13815, file: !13370, line: 1651, column: 17)
!13830 = !DILocation(line: 1650, column: 21, scope: !13815)
!13831 = !DILocation(line: 1651, column: 31, scope: !13815)
!13832 = !DILocation(line: 1651, column: 42, scope: !13815)
!13833 = !DILocation(line: 1651, column: 21, scope: !13829)
!13834 = !DILocation(line: 1652, column: 42, scope: !13829)
!13835 = !DILocation(line: 1652, column: 31, scope: !13829)
!13836 = !DILocation(line: 1652, column: 17, scope: !13829)
!13837 = !DILocation(line: 1653, column: 26, scope: !13829)
!13838 = !DILocation(line: 1654, column: 14, scope: !13815)
!13839 = distinct !DISubprogram(name: "insert_bytes", linkageName: "_ZN5alloc6string6String12insert_bytes17ha16a817e18c4dc27E", scope: !78, file: !13370, line: 1728, type: !13840, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13842, retainedNodes: !13843)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{null, !372, !9, !427}
!13842 = !DISubprogram(name: "insert_bytes", linkageName: "_ZN5alloc6string6String12insert_bytes17ha16a817e18c4dc27E", scope: !78, file: !13370, line: 1728, type: !13840, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13843 = !{!13844, !13845, !13846, !13847, !13849}
!13844 = !DILocalVariable(name: "self", arg: 1, scope: !13839, file: !13370, line: 1728, type: !372)
!13845 = !DILocalVariable(name: "idx", arg: 2, scope: !13839, file: !13370, line: 1728, type: !9)
!13846 = !DILocalVariable(name: "bytes", arg: 3, scope: !13839, file: !13370, line: 1728, type: !427)
!13847 = !DILocalVariable(name: "len", scope: !13848, file: !13370, line: 1729, type: !9, align: 8)
!13848 = distinct !DILexicalBlock(scope: !13839, file: !13370, line: 1729, column: 9)
!13849 = !DILocalVariable(name: "amt", scope: !13850, file: !13370, line: 1730, type: !9, align: 8)
!13850 = distinct !DILexicalBlock(scope: !13848, file: !13370, line: 1730, column: 9)
!13851 = !DILocation(line: 1728, column: 28, scope: !13839)
!13852 = !DILocation(line: 1728, column: 39, scope: !13839)
!13853 = !DILocation(line: 1728, column: 51, scope: !13839)
!13854 = !DILocation(line: 1729, column: 19, scope: !13839)
!13855 = !DILocation(line: 1729, column: 13, scope: !13848)
!13856 = !DILocation(line: 1730, column: 19, scope: !13848)
!13857 = !DILocation(line: 1730, column: 13, scope: !13850)
!13858 = !DILocation(line: 1731, column: 9, scope: !13850)
!13859 = !DILocation(line: 1734, column: 23, scope: !13850)
!13860 = !DILocation(line: 915, column: 29, scope: !6532, inlinedAt: !13861)
!13861 = distinct !DILocation(line: 1734, column: 23, scope: !13850)
!13862 = !DILocation(line: 915, column: 35, scope: !6532, inlinedAt: !13861)
!13863 = !DILocation(line: 74, column: 35, scope: !6541, inlinedAt: !13861)
!13864 = !DILocation(line: 75, column: 17, scope: !6541, inlinedAt: !13861)
!13865 = !DILocation(line: 949, column: 18, scope: !6532, inlinedAt: !13861)
!13866 = !DILocation(line: 1734, column: 51, scope: !13850)
!13867 = !DILocation(line: 1734, column: 77, scope: !13850)
!13868 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 1734, column: 51, scope: !13850)
!13870 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !13869)
!13871 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !13869)
!13872 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !13869)
!13873 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !13869)
!13874 = !DILocation(line: 1734, column: 89, scope: !13850)
!13875 = !DILocalVariable(name: "src", arg: 1, scope: !13876, file: !2057, line: 4422, type: !103)
!13876 = distinct !DISubprogram(name: "copy<u8>", linkageName: "_ZN4core10intrinsics4copy17h94b876f9f7f938a7E", scope: !2047, file: !2057, line: 4422, type: !4082, scopeLine: 4422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !13877)
!13877 = !{!13875, !13878, !13879}
!13878 = !DILocalVariable(name: "dst", arg: 2, scope: !13876, file: !2057, line: 4422, type: !3364)
!13879 = !DILocalVariable(name: "count", arg: 3, scope: !13876, file: !2057, line: 4422, type: !9)
!13880 = !DILocation(line: 4422, column: 29, scope: !13876, inlinedAt: !13881)
!13881 = distinct !DILocation(line: 1734, column: 13, scope: !13850)
!13882 = !DILocation(line: 4422, column: 44, scope: !13876, inlinedAt: !13881)
!13883 = !DILocation(line: 4422, column: 57, scope: !13876, inlinedAt: !13881)
!13884 = !DILocation(line: 74, column: 35, scope: !13885, inlinedAt: !13881)
!13885 = !DILexicalBlockFile(scope: !13876, file: !1177, discriminator: 0)
!13886 = !DILocation(line: 4440, column: 48, scope: !13876, inlinedAt: !13881)
!13887 = !DILocation(line: 75, column: 17, scope: !13885, inlinedAt: !13881)
!13888 = !DILocation(line: 4445, column: 9, scope: !13876, inlinedAt: !13881)
!13889 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 1735, column: 38, scope: !13850)
!13891 = !DILocation(line: 1735, column: 54, scope: !13850)
!13892 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !13893)
!13893 = distinct !DILocation(line: 1735, column: 54, scope: !13850)
!13894 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !13893)
!13895 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !13893)
!13896 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !13893)
!13897 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !13893)
!13898 = !DILocation(line: 4316, column: 44, scope: !4092, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 1735, column: 13, scope: !13850)
!13900 = !DILocation(line: 4316, column: 59, scope: !4092, inlinedAt: !13899)
!13901 = !DILocation(line: 4316, column: 72, scope: !4092, inlinedAt: !13899)
!13902 = !DILocation(line: 74, column: 35, scope: !4101, inlinedAt: !13899)
!13903 = !DILocation(line: 75, column: 17, scope: !4101, inlinedAt: !13899)
!13904 = !DILocation(line: 4345, column: 14, scope: !4092, inlinedAt: !13899)
!13905 = !DILocation(line: 1736, column: 30, scope: !13850)
!13906 = !DILocation(line: 1736, column: 13, scope: !13850)
!13907 = !DILocation(line: 1738, column: 6, scope: !13839)
!13908 = distinct !DISubprogram(name: "as_mut_vec", linkageName: "_ZN5alloc6string6String10as_mut_vec17h4acfc07818fe6ac5E", scope: !78, file: !13370, line: 1797, type: !13909, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13911, retainedNodes: !13912)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{!4007, !372}
!13911 = !DISubprogram(name: "as_mut_vec", linkageName: "_ZN5alloc6string6String10as_mut_vec17h4acfc07818fe6ac5E", scope: !78, file: !13370, line: 1797, type: !13909, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13912 = !{!13913}
!13913 = !DILocalVariable(name: "self", arg: 1, scope: !13908, file: !13370, line: 1797, type: !372)
!13914 = !DILocation(line: 1797, column: 36, scope: !13908)
!13915 = !DILocation(line: 1799, column: 6, scope: !13908)
!13916 = distinct !DISubprogram(name: "len", linkageName: "_ZN5alloc6string6String3len17hec6fd4d7b1d2ed2eE", scope: !78, file: !13370, line: 1820, type: !13917, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13919, retainedNodes: !13920)
!13917 = !DISubroutineType(types: !13918)
!13918 = !{!9, !11947}
!13919 = !DISubprogram(name: "len", linkageName: "_ZN5alloc6string6String3len17hec6fd4d7b1d2ed2eE", scope: !78, file: !13370, line: 1820, type: !13917, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "self", arg: 1, scope: !13916, file: !13370, line: 1820, type: !11947)
!13922 = !DILocation(line: 1820, column: 22, scope: !13916)
!13923 = !DILocation(line: 1821, column: 9, scope: !13916)
!13924 = !DILocation(line: 1822, column: 6, scope: !13916)
!13925 = distinct !DISubprogram(name: "into_boxed_str", linkageName: "_ZN5alloc6string6String14into_boxed_str17hfa7d7d177b854f93E", scope: !78, file: !13370, line: 2025, type: !13926, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13928, retainedNodes: !13929)
!13926 = !DISubroutineType(types: !13927)
!13927 = !{!11350, !78}
!13928 = !DISubprogram(name: "into_boxed_str", linkageName: "_ZN5alloc6string6String14into_boxed_str17hfa7d7d177b854f93E", scope: !78, file: !13370, line: 2025, type: !13926, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15)
!13929 = !{!13930, !13931}
!13930 = !DILocalVariable(name: "self", arg: 1, scope: !13925, file: !13370, line: 2025, type: !78)
!13931 = !DILocalVariable(name: "slice", scope: !13932, file: !13370, line: 2026, type: !2539, align: 8)
!13932 = distinct !DILexicalBlock(scope: !13925, file: !13370, line: 2026, column: 9)
!13933 = !DILocation(line: 2025, column: 27, scope: !13925)
!13934 = !DILocation(line: 2026, column: 21, scope: !13925)
!13935 = !DILocation(line: 2026, column: 13, scope: !13932)
!13936 = !DILocation(line: 2027, column: 18, scope: !13932)
!13937 = !DILocation(line: 2028, column: 6, scope: !13925)
!13938 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error8as_bytes17h54bbddd9da620af4E", scope: !3199, file: !13370, line: 2077, type: !13939, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13942, retainedNodes: !13943)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{!427, !13941}
!13941 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::FromUtf8Error", baseType: !3199, size: 64, align: 64, dwarfAddressSpace: 0)
!13942 = !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error8as_bytes17h54bbddd9da620af4E", scope: !3199, file: !13370, line: 2077, type: !13939, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13943 = !{!13944}
!13944 = !DILocalVariable(name: "self", arg: 1, scope: !13938, file: !13370, line: 2077, type: !13941)
!13945 = !DILocation(line: 2077, column: 21, scope: !13938)
!13946 = !DILocation(line: 2078, column: 20, scope: !13938)
!13947 = !DILocation(line: 2079, column: 6, scope: !13938)
!13948 = distinct !DISubprogram(name: "into_utf8_lossy", linkageName: "_ZN5alloc6string13FromUtf8Error15into_utf8_lossy17h3c3cd93b6bd28f27E", scope: !3199, file: !13370, line: 2101, type: !13949, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13951, retainedNodes: !13952)
!13949 = !DISubroutineType(types: !13950)
!13950 = !{!78, !3199}
!13951 = !DISubprogram(name: "into_utf8_lossy", linkageName: "_ZN5alloc6string13FromUtf8Error15into_utf8_lossy17h3c3cd93b6bd28f27E", scope: !3199, file: !13370, line: 2101, type: !13949, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13952 = !{!13953, !13954, !13956, !13958, !13960, !13962}
!13953 = !DILocalVariable(name: "self", arg: 1, scope: !13948, file: !13370, line: 2101, type: !3199)
!13954 = !DILocalVariable(name: "res", scope: !13955, file: !13370, line: 2104, type: !78, align: 8)
!13955 = distinct !DILexicalBlock(scope: !13948, file: !13370, line: 2104, column: 9)
!13956 = !DILocalVariable(name: "v", scope: !13957, file: !13370, line: 2105, type: !83, align: 8)
!13957 = distinct !DILexicalBlock(scope: !13948, file: !13370, line: 2105, column: 13)
!13958 = !DILocalVariable(name: "iter", scope: !13959, file: !13370, line: 2117, type: !13416, align: 8)
!13959 = distinct !DILexicalBlock(scope: !13955, file: !13370, line: 2117, column: 9)
!13960 = !DILocalVariable(name: "iter", scope: !13961, file: !13370, line: 2119, type: !13416, align: 8)
!13961 = distinct !DILexicalBlock(scope: !13959, file: !13370, line: 2119, column: 9)
!13962 = !DILocalVariable(name: "chunk", scope: !13963, file: !13370, line: 2119, type: !13424, align: 8)
!13963 = distinct !DILexicalBlock(scope: !13961, file: !13370, line: 2119, column: 27)
!13964 = !DILocation(line: 2101, column: 28, scope: !13948)
!13965 = !DILocation(line: 2104, column: 13, scope: !13955)
!13966 = !DILocation(line: 2105, column: 17, scope: !13957)
!13967 = !DILocation(line: 2119, column: 22, scope: !13961)
!13968 = !DILocation(line: 2119, column: 13, scope: !13963)
!13969 = !DILocation(line: 2105, column: 44, scope: !13948)
!13970 = !DILocation(line: 2105, column: 25, scope: !13948)
!13971 = !DILocation(line: 2109, column: 47, scope: !13957)
!13972 = !DILocation(line: 2109, column: 44, scope: !13957)
!13973 = !DILocation(line: 2109, column: 13, scope: !13957)
!13974 = !DILocation(line: 2114, column: 50, scope: !13957)
!13975 = !DILocation(line: 2114, column: 22, scope: !13957)
!13976 = !DILocation(line: 2117, column: 31, scope: !13955)
!13977 = !DILocation(line: 2117, column: 30, scope: !13955)
!13978 = !DILocation(line: 2117, column: 20, scope: !13955)
!13979 = !DILocation(line: 2117, column: 13, scope: !13959)
!13980 = !DILocation(line: 2119, column: 22, scope: !13959)
!13981 = !DILocation(line: 2119, column: 9, scope: !13961)
!13982 = !DILocation(line: 2126, column: 9, scope: !13959)
!13983 = !DILocation(line: 2127, column: 5, scope: !13948)
!13984 = !DILocation(line: 2127, column: 6, scope: !13948)
!13985 = !DILocation(line: 2119, column: 13, scope: !13961)
!13986 = !DILocation(line: 2120, column: 26, scope: !13963)
!13987 = !DILocation(line: 2120, column: 13, scope: !13963)
!13988 = !DILocation(line: 2121, column: 17, scope: !13963)
!13989 = !DILocation(line: 2122, column: 17, scope: !13963)
!13990 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error10into_bytes17h7a20b162a9e3cee6E", scope: !3199, file: !13370, line: 2147, type: !13991, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !13993, retainedNodes: !13994)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!83, !3199}
!13993 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error10into_bytes17h7a20b162a9e3cee6E", scope: !3199, file: !13370, line: 2147, type: !13991, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!13994 = !{!13995}
!13995 = !DILocalVariable(name: "self", arg: 1, scope: !13990, file: !13370, line: 2147, type: !3199)
!13996 = !DILocation(line: 2147, column: 23, scope: !13990)
!13997 = !DILocation(line: 2148, column: 9, scope: !13990)
!13998 = !DILocation(line: 2149, column: 6, scope: !13990)
!13999 = distinct !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc6string13FromUtf8Error10utf8_error17hfdc33b529c4d4fa5E", scope: !3199, file: !13370, line: 2174, type: !14000, scopeLine: 2174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !14002, retainedNodes: !14003)
!14000 = !DISubroutineType(types: !14001)
!14001 = !{!156, !13941}
!14002 = !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc6string13FromUtf8Error10utf8_error17hfdc33b529c4d4fa5E", scope: !3199, file: !13370, line: 2174, type: !14000, scopeLine: 2174, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!14003 = !{!14004}
!14004 = !DILocalVariable(name: "self", arg: 1, scope: !13999, file: !13370, line: 2174, type: !13941)
!14005 = !DILocation(line: 2174, column: 23, scope: !13999)
!14006 = !DILocation(line: 2175, column: 9, scope: !13999)
!14007 = !DILocation(line: 2176, column: 6, scope: !13999)
!14008 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h239edf6e7a1be10cE", scope: !14009, file: !13370, line: 2181, type: !14010, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14012)
!14009 = !DINamespace(name: "{impl#2}", scope: !79)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!1961, !13941, !1977}
!14012 = !{!14013, !14014}
!14013 = !DILocalVariable(name: "self", arg: 1, scope: !14008, file: !13370, line: 2181, type: !13941)
!14014 = !DILocalVariable(name: "f", arg: 2, scope: !14008, file: !13370, line: 2181, type: !1977)
!14015 = !DILocation(line: 2181, column: 12, scope: !14008)
!14016 = !DILocation(line: 2181, column: 19, scope: !14008)
!14017 = !DILocation(line: 2182, column: 27, scope: !14008)
!14018 = !DILocation(line: 2182, column: 9, scope: !14008)
!14019 = !DILocation(line: 2183, column: 6, scope: !14008)
!14020 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Display$GT$3fmt17h577b46c4c8926c4dE", scope: !14021, file: !13370, line: 2188, type: !14022, scopeLine: 2188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14025)
!14021 = !DINamespace(name: "{impl#3}", scope: !79)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{!1961, !14024, !1977}
!14024 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::FromUtf16Error", baseType: !7327, size: 64, align: 64, dwarfAddressSpace: 0)
!14025 = !{!14026, !14027}
!14026 = !DILocalVariable(name: "self", arg: 1, scope: !14020, file: !13370, line: 2188, type: !14024)
!14027 = !DILocalVariable(name: "f", arg: 2, scope: !14020, file: !13370, line: 2188, type: !1977)
!14028 = !DILocation(line: 2188, column: 12, scope: !14020)
!14029 = !DILocation(line: 2188, column: 19, scope: !14020)
!14030 = !DILocation(line: 2189, column: 9, scope: !14020)
!14031 = !DILocation(line: 2190, column: 6, scope: !14020)
!14032 = distinct !DISubprogram(name: "description", linkageName: "_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..error..Error$GT$11description17h61cacdd39bfd8949E", scope: !14033, file: !13370, line: 2196, type: !14034, scopeLine: 2196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14036)
!14033 = !DINamespace(name: "{impl#4}", scope: !79)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{!170, !13941}
!14036 = !{!14037}
!14037 = !DILocalVariable(name: "self", arg: 1, scope: !14032, file: !13370, line: 2196, type: !13941)
!14038 = !DILocation(line: 2196, column: 20, scope: !14032)
!14039 = !DILocation(line: 2198, column: 6, scope: !14032)
!14040 = distinct !DISubprogram(name: "description", linkageName: "_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..error..Error$GT$11description17h62ef1651ff0bf058E", scope: !14041, file: !13370, line: 2204, type: !14042, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14044)
!14041 = !DINamespace(name: "{impl#5}", scope: !79)
!14042 = !DISubroutineType(types: !14043)
!14043 = !{!170, !14024}
!14044 = !{!14045}
!14045 = !DILocalVariable(name: "self", arg: 1, scope: !14040, file: !13370, line: 2204, type: !14024)
!14046 = !DILocation(line: 2204, column: 20, scope: !14040)
!14047 = !DILocation(line: 2206, column: 6, scope: !14040)
!14048 = distinct !DISubprogram(name: "clone", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h2cb5040a3a55c9e2E", scope: !14049, file: !13370, line: 2212, type: !14050, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14052)
!14049 = !DINamespace(name: "{impl#6}", scope: !79)
!14050 = !DISubroutineType(types: !14051)
!14051 = !{!78, !11947}
!14052 = !{!14053}
!14053 = !DILocalVariable(name: "self", arg: 1, scope: !14048, file: !13370, line: 2212, type: !11947)
!14054 = !DILocation(line: 2212, column: 14, scope: !14048)
!14055 = !DILocation(line: 2213, column: 23, scope: !14048)
!14056 = !DILocation(line: 2213, column: 9, scope: !14048)
!14057 = !DILocation(line: 2214, column: 6, scope: !14048)
!14058 = distinct !DISubprogram(name: "clone_from", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$10clone_from17h55ba7fb1a80b2d8eE", scope: !14049, file: !13370, line: 2220, type: !14059, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{null, !372, !11947}
!14061 = !{!14062, !14063}
!14062 = !DILocalVariable(name: "self", arg: 1, scope: !14058, file: !13370, line: 2220, type: !372)
!14063 = !DILocalVariable(name: "source", arg: 2, scope: !14058, file: !13370, line: 2220, type: !11947)
!14064 = !DILocation(line: 2220, column: 19, scope: !14058)
!14065 = !DILocation(line: 2220, column: 30, scope: !14058)
!14066 = !DILocation(line: 2221, column: 9, scope: !14058)
!14067 = !DILocation(line: 2222, column: 6, scope: !14058)
!14068 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h1377f77d17d8a0e5E", scope: !14069, file: !13370, line: 2228, type: !5242, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7966, retainedNodes: !14070)
!14069 = !DINamespace(name: "{impl#7}", scope: !79)
!14070 = !{!14071, !14072}
!14071 = !DILocalVariable(name: "iter", arg: 1, scope: !14068, file: !13370, line: 2228, type: !306)
!14072 = !DILocalVariable(name: "buf", scope: !14073, file: !13370, line: 2229, type: !78, align: 8)
!14073 = distinct !DILexicalBlock(scope: !14068, file: !13370, line: 2229, column: 9)
!14074 = !DILocation(line: 2228, column: 48, scope: !14068)
!14075 = !DILocation(line: 2229, column: 13, scope: !14073)
!14076 = !DILocation(line: 2229, column: 23, scope: !14068)
!14077 = !DILocation(line: 2230, column: 9, scope: !14073)
!14078 = !DILocation(line: 2231, column: 9, scope: !14073)
!14079 = !DILocation(line: 2232, column: 6, scope: !14068)
!14080 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17ha1dce803413e712dE", scope: !14069, file: !13370, line: 2228, type: !5279, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7916, retainedNodes: !14081)
!14081 = !{!14082, !14083}
!14082 = !DILocalVariable(name: "iter", arg: 1, scope: !14080, file: !13370, line: 2228, type: !391)
!14083 = !DILocalVariable(name: "buf", scope: !14084, file: !13370, line: 2229, type: !78, align: 8)
!14084 = distinct !DILexicalBlock(scope: !14080, file: !13370, line: 2229, column: 9)
!14085 = !DILocation(line: 2228, column: 48, scope: !14080)
!14086 = !DILocation(line: 2229, column: 13, scope: !14084)
!14087 = !DILocation(line: 2229, column: 23, scope: !14080)
!14088 = !DILocation(line: 2230, column: 9, scope: !14084)
!14089 = !DILocation(line: 2231, column: 9, scope: !14084)
!14090 = !DILocation(line: 2232, column: 6, scope: !14080)
!14091 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hb36d9acdf1cd8878E", scope: !14069, file: !13370, line: 2228, type: !5232, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7906, retainedNodes: !14092)
!14092 = !{!14093, !14094}
!14093 = !DILocalVariable(name: "iter", arg: 1, scope: !14091, file: !13370, line: 2228, type: !470)
!14094 = !DILocalVariable(name: "buf", scope: !14095, file: !13370, line: 2229, type: !78, align: 8)
!14095 = distinct !DILexicalBlock(scope: !14091, file: !13370, line: 2229, column: 9)
!14096 = !DILocation(line: 2228, column: 48, scope: !14091)
!14097 = !DILocation(line: 2229, column: 13, scope: !14095)
!14098 = !DILocation(line: 2229, column: 23, scope: !14091)
!14099 = !DILocation(line: 2230, column: 9, scope: !14095)
!14100 = !DILocation(line: 2231, column: 9, scope: !14095)
!14101 = !DILocation(line: 2232, column: 6, scope: !14091)
!14102 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hc1d0b6299887d162E", scope: !14069, file: !13370, line: 2228, type: !5269, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7976, retainedNodes: !14103)
!14103 = !{!14104, !14105}
!14104 = !DILocalVariable(name: "iter", arg: 1, scope: !14102, file: !13370, line: 2228, type: !845)
!14105 = !DILocalVariable(name: "buf", scope: !14106, file: !13370, line: 2229, type: !78, align: 8)
!14106 = distinct !DILexicalBlock(scope: !14102, file: !13370, line: 2229, column: 9)
!14107 = !DILocation(line: 2228, column: 48, scope: !14102)
!14108 = !DILocation(line: 2229, column: 13, scope: !14106)
!14109 = !DILocation(line: 2229, column: 23, scope: !14102)
!14110 = !DILocation(line: 2230, column: 9, scope: !14106)
!14111 = !DILocation(line: 2231, column: 9, scope: !14106)
!14112 = !DILocation(line: 2232, column: 6, scope: !14102)
!14113 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17he1c630a156a6adb6E", scope: !14069, file: !13370, line: 2228, type: !5221, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7926, retainedNodes: !14114)
!14114 = !{!14115, !14116}
!14115 = !DILocalVariable(name: "iter", arg: 1, scope: !14113, file: !13370, line: 2228, type: !917)
!14116 = !DILocalVariable(name: "buf", scope: !14117, file: !13370, line: 2229, type: !78, align: 8)
!14117 = distinct !DILexicalBlock(scope: !14113, file: !13370, line: 2229, column: 9)
!14118 = !DILocation(line: 2228, column: 48, scope: !14113)
!14119 = !DILocation(line: 2229, column: 13, scope: !14117)
!14120 = !DILocation(line: 2229, column: 23, scope: !14113)
!14121 = !DILocation(line: 2230, column: 9, scope: !14117)
!14122 = !DILocation(line: 2231, column: 9, scope: !14117)
!14123 = !DILocation(line: 2232, column: 6, scope: !14113)
!14124 = distinct !DISubprogram(name: "extend<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h741a49c1525bdc3eE", scope: !369, file: !13370, line: 2307, type: !14125, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7926, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{null, !372, !917}
!14127 = !{!14128, !14129, !14130, !14132}
!14128 = !DILocalVariable(name: "self", arg: 1, scope: !14124, file: !13370, line: 2307, type: !372)
!14129 = !DILocalVariable(name: "iter", arg: 2, scope: !14124, file: !13370, line: 2307, type: !917)
!14130 = !DILocalVariable(name: "iterator", scope: !14131, file: !13370, line: 2308, type: !917, align: 8)
!14131 = distinct !DILexicalBlock(scope: !14124, file: !13370, line: 2308, column: 9)
!14132 = !DILocalVariable(name: "lower_bound", scope: !14133, file: !13370, line: 2309, type: !9, align: 8)
!14133 = distinct !DILexicalBlock(scope: !14131, file: !13370, line: 2309, column: 9)
!14134 = !DILocation(line: 2307, column: 45, scope: !14124)
!14135 = !DILocation(line: 2307, column: 56, scope: !14124)
!14136 = !DILocation(line: 2308, column: 13, scope: !14131)
!14137 = !DILocation(line: 2308, column: 24, scope: !14124)
!14138 = !DILocation(line: 2309, column: 32, scope: !14131)
!14139 = !DILocation(line: 2309, column: 14, scope: !14131)
!14140 = !DILocation(line: 2309, column: 14, scope: !14133)
!14141 = !DILocation(line: 2310, column: 9, scope: !14133)
!14142 = !DILocation(line: 2311, column: 9, scope: !14133)
!14143 = !DILocation(line: 2312, column: 6, scope: !14124)
!14144 = distinct !DISubprogram(name: "extend<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h7fbea1e0b8d9c1b5E", scope: !369, file: !13370, line: 2307, type: !14145, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7976, retainedNodes: !14147)
!14145 = !DISubroutineType(types: !14146)
!14146 = !{null, !372, !845}
!14147 = !{!14148, !14149, !14150, !14152}
!14148 = !DILocalVariable(name: "self", arg: 1, scope: !14144, file: !13370, line: 2307, type: !372)
!14149 = !DILocalVariable(name: "iter", arg: 2, scope: !14144, file: !13370, line: 2307, type: !845)
!14150 = !DILocalVariable(name: "iterator", scope: !14151, file: !13370, line: 2308, type: !845, align: 8)
!14151 = distinct !DILexicalBlock(scope: !14144, file: !13370, line: 2308, column: 9)
!14152 = !DILocalVariable(name: "lower_bound", scope: !14153, file: !13370, line: 2309, type: !9, align: 8)
!14153 = distinct !DILexicalBlock(scope: !14151, file: !13370, line: 2309, column: 9)
!14154 = !DILocation(line: 2307, column: 45, scope: !14144)
!14155 = !DILocation(line: 2307, column: 56, scope: !14144)
!14156 = !DILocation(line: 2308, column: 13, scope: !14151)
!14157 = !DILocation(line: 2308, column: 24, scope: !14144)
!14158 = !DILocation(line: 2309, column: 32, scope: !14151)
!14159 = !DILocation(line: 2309, column: 14, scope: !14151)
!14160 = !DILocation(line: 2309, column: 14, scope: !14153)
!14161 = !DILocation(line: 2310, column: 9, scope: !14153)
!14162 = !DILocation(line: 2311, column: 9, scope: !14153)
!14163 = !DILocation(line: 2312, column: 6, scope: !14144)
!14164 = distinct !DISubprogram(name: "extend<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hacc5c1954a54f903E", scope: !369, file: !13370, line: 2307, type: !14165, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7916, retainedNodes: !14167)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{null, !372, !391}
!14167 = !{!14168, !14169, !14170, !14172}
!14168 = !DILocalVariable(name: "self", arg: 1, scope: !14164, file: !13370, line: 2307, type: !372)
!14169 = !DILocalVariable(name: "iter", arg: 2, scope: !14164, file: !13370, line: 2307, type: !391)
!14170 = !DILocalVariable(name: "iterator", scope: !14171, file: !13370, line: 2308, type: !391, align: 8)
!14171 = distinct !DILexicalBlock(scope: !14164, file: !13370, line: 2308, column: 9)
!14172 = !DILocalVariable(name: "lower_bound", scope: !14173, file: !13370, line: 2309, type: !9, align: 8)
!14173 = distinct !DILexicalBlock(scope: !14171, file: !13370, line: 2309, column: 9)
!14174 = !DILocation(line: 2307, column: 45, scope: !14164)
!14175 = !DILocation(line: 2307, column: 56, scope: !14164)
!14176 = !DILocation(line: 2308, column: 13, scope: !14171)
!14177 = !DILocation(line: 2308, column: 24, scope: !14164)
!14178 = !DILocation(line: 2309, column: 32, scope: !14171)
!14179 = !DILocation(line: 2309, column: 14, scope: !14171)
!14180 = !DILocation(line: 2309, column: 14, scope: !14173)
!14181 = !DILocation(line: 2310, column: 9, scope: !14173)
!14182 = !DILocation(line: 2311, column: 9, scope: !14173)
!14183 = !DILocation(line: 2312, column: 6, scope: !14164)
!14184 = distinct !DISubprogram(name: "extend<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hce30aa336ccdfa2cE", scope: !369, file: !13370, line: 2307, type: !14185, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7966, retainedNodes: !14187)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{null, !372, !306}
!14187 = !{!14188, !14189, !14190, !14192}
!14188 = !DILocalVariable(name: "self", arg: 1, scope: !14184, file: !13370, line: 2307, type: !372)
!14189 = !DILocalVariable(name: "iter", arg: 2, scope: !14184, file: !13370, line: 2307, type: !306)
!14190 = !DILocalVariable(name: "iterator", scope: !14191, file: !13370, line: 2308, type: !306, align: 8)
!14191 = distinct !DILexicalBlock(scope: !14184, file: !13370, line: 2308, column: 9)
!14192 = !DILocalVariable(name: "lower_bound", scope: !14193, file: !13370, line: 2309, type: !9, align: 8)
!14193 = distinct !DILexicalBlock(scope: !14191, file: !13370, line: 2309, column: 9)
!14194 = !DILocation(line: 2307, column: 45, scope: !14184)
!14195 = !DILocation(line: 2307, column: 56, scope: !14184)
!14196 = !DILocation(line: 2308, column: 13, scope: !14191)
!14197 = !DILocation(line: 2308, column: 24, scope: !14184)
!14198 = !DILocation(line: 2309, column: 32, scope: !14191)
!14199 = !DILocation(line: 2309, column: 14, scope: !14191)
!14200 = !DILocation(line: 2309, column: 14, scope: !14193)
!14201 = !DILocation(line: 2310, column: 9, scope: !14193)
!14202 = !DILocation(line: 2311, column: 9, scope: !14193)
!14203 = !DILocation(line: 2312, column: 6, scope: !14184)
!14204 = distinct !DISubprogram(name: "extend<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17he8e2ad9ef62ec0b6E", scope: !369, file: !13370, line: 2307, type: !14205, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7906, retainedNodes: !14207)
!14205 = !DISubroutineType(types: !14206)
!14206 = !{null, !372, !470}
!14207 = !{!14208, !14209, !14210, !14212}
!14208 = !DILocalVariable(name: "self", arg: 1, scope: !14204, file: !13370, line: 2307, type: !372)
!14209 = !DILocalVariable(name: "iter", arg: 2, scope: !14204, file: !13370, line: 2307, type: !470)
!14210 = !DILocalVariable(name: "iterator", scope: !14211, file: !13370, line: 2308, type: !470, align: 8)
!14211 = distinct !DILexicalBlock(scope: !14204, file: !13370, line: 2308, column: 9)
!14212 = !DILocalVariable(name: "lower_bound", scope: !14213, file: !13370, line: 2309, type: !9, align: 8)
!14213 = distinct !DILexicalBlock(scope: !14211, file: !13370, line: 2309, column: 9)
!14214 = !DILocation(line: 2307, column: 45, scope: !14204)
!14215 = !DILocation(line: 2307, column: 56, scope: !14204)
!14216 = !DILocation(line: 2308, column: 13, scope: !14211)
!14217 = !DILocation(line: 2308, column: 24, scope: !14204)
!14218 = !DILocation(line: 2309, column: 32, scope: !14211)
!14219 = !DILocation(line: 2309, column: 14, scope: !14211)
!14220 = !DILocation(line: 2309, column: 14, scope: !14213)
!14221 = !DILocation(line: 2310, column: 9, scope: !14213)
!14222 = !DILocation(line: 2311, column: 9, scope: !14213)
!14223 = !DILocation(line: 2312, column: 6, scope: !14204)
!14224 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h1cd7c7d8df82a2caE", scope: !368, file: !13370, line: 2311, type: !14225, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7906, retainedNodes: !14228)
!14225 = !DISubroutineType(types: !14226)
!14226 = !{null, !14227, !379}
!14227 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", baseType: !492, size: 64, align: 64, dwarfAddressSpace: 0)
!14228 = !{!14229, !14230}
!14229 = !DILocalVariable(name: "c", arg: 2, scope: !14224, file: !13370, line: 2311, type: !379)
!14230 = !DILocalVariable(name: "self", scope: !14224, file: !13370, line: 2307, type: !372, align: 8)
!14231 = !DILocation(line: 2307, column: 50, scope: !14224)
!14232 = !DILocation(line: 2311, column: 33, scope: !14224)
!14233 = !DILocation(line: 2311, column: 36, scope: !14224)
!14234 = !DILocation(line: 2311, column: 48, scope: !14224)
!14235 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h5426d63641e7abbcE", scope: !368, file: !13370, line: 2311, type: !14236, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7966, retainedNodes: !14239)
!14236 = !DISubroutineType(types: !14237)
!14237 = !{null, !14238, !379}
!14238 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", baseType: !367, size: 64, align: 64, dwarfAddressSpace: 0)
!14239 = !{!14240, !14241}
!14240 = !DILocalVariable(name: "c", arg: 2, scope: !14235, file: !13370, line: 2311, type: !379)
!14241 = !DILocalVariable(name: "self", scope: !14235, file: !13370, line: 2307, type: !372, align: 8)
!14242 = !DILocation(line: 2307, column: 50, scope: !14235)
!14243 = !DILocation(line: 2311, column: 33, scope: !14235)
!14244 = !DILocation(line: 2311, column: 36, scope: !14235)
!14245 = !DILocation(line: 2311, column: 48, scope: !14235)
!14246 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h64c8678e89c969fbE", scope: !368, file: !13370, line: 2311, type: !14247, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7916, retainedNodes: !14250)
!14247 = !DISubroutineType(types: !14248)
!14248 = !{null, !14249, !379}
!14249 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<&mut core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", baseType: !452, size: 64, align: 64, dwarfAddressSpace: 0)
!14250 = !{!14251, !14252}
!14251 = !DILocalVariable(name: "c", arg: 2, scope: !14246, file: !13370, line: 2311, type: !379)
!14252 = !DILocalVariable(name: "self", scope: !14246, file: !13370, line: 2307, type: !372, align: 8)
!14253 = !DILocation(line: 2307, column: 50, scope: !14246)
!14254 = !DILocation(line: 2311, column: 33, scope: !14246)
!14255 = !DILocation(line: 2311, column: 36, scope: !14246)
!14256 = !DILocation(line: 2311, column: 48, scope: !14246)
!14257 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h85427d273adde416E", scope: !368, file: !13370, line: 2311, type: !14258, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7926, retainedNodes: !14261)
!14258 = !DISubroutineType(types: !14259)
!14259 = !{null, !14260, !379}
!14260 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", baseType: !932, size: 64, align: 64, dwarfAddressSpace: 0)
!14261 = !{!14262, !14263}
!14262 = !DILocalVariable(name: "c", arg: 2, scope: !14257, file: !13370, line: 2311, type: !379)
!14263 = !DILocalVariable(name: "self", scope: !14257, file: !13370, line: 2307, type: !372, align: 8)
!14264 = !DILocation(line: 2307, column: 50, scope: !14257)
!14265 = !DILocation(line: 2311, column: 33, scope: !14257)
!14266 = !DILocation(line: 2311, column: 36, scope: !14257)
!14267 = !DILocation(line: 2311, column: 48, scope: !14257)
!14268 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hc22b9a5f5cbf9e43E", scope: !368, file: !13370, line: 2311, type: !14269, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !7976, retainedNodes: !14272)
!14269 = !DISubroutineType(types: !14270)
!14270 = !{null, !14271, !379}
!14271 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::ArrayChunks<u8, 2>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", baseType: !898, size: 64, align: 64, dwarfAddressSpace: 0)
!14272 = !{!14273, !14274}
!14273 = !DILocalVariable(name: "c", arg: 2, scope: !14268, file: !13370, line: 2311, type: !379)
!14274 = !DILocalVariable(name: "self", scope: !14268, file: !13370, line: 2307, type: !372, align: 8)
!14275 = !DILocation(line: 2307, column: 50, scope: !14268)
!14276 = !DILocation(line: 2311, column: 33, scope: !14268)
!14277 = !DILocation(line: 2311, column: 36, scope: !14268)
!14278 = !DILocation(line: 2311, column: 48, scope: !14268)
!14279 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN73_$LT$$RF$alloc..string..String$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h815ac61c6afc7e29E", scope: !14280, file: !13370, line: 2405, type: !14281, scopeLine: 2405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14283)
!14280 = !DINamespace(name: "{impl#19}", scope: !79)
!14281 = !DISubroutineType(types: !14282)
!14282 = !{!7819, !11947, !170}
!14283 = !{!14284, !14285}
!14284 = !DILocalVariable(name: "self", arg: 1, scope: !14279, file: !13370, line: 2405, type: !11947)
!14285 = !DILocalVariable(name: "haystack", arg: 2, scope: !14279, file: !13370, line: 2405, type: !170)
!14286 = !DILocation(line: 2405, column: 22, scope: !14279)
!14287 = !DILocation(line: 2405, column: 28, scope: !14279)
!14288 = !DILocation(line: 2406, column: 13, scope: !14279)
!14289 = !DILocation(line: 2406, column: 9, scope: !14279)
!14290 = !DILocation(line: 2407, column: 6, scope: !14279)
!14291 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h203b596375d19e57E", scope: !14292, file: !13370, line: 2497, type: !14293, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14295)
!14292 = !DINamespace(name: "{impl#21}", scope: !79)
!14293 = !DISubroutineType(types: !14294)
!14294 = !{!1961, !11947, !1977}
!14295 = !{!14296, !14297}
!14296 = !DILocalVariable(name: "self", arg: 1, scope: !14291, file: !13370, line: 2497, type: !11947)
!14297 = !DILocalVariable(name: "f", arg: 2, scope: !14291, file: !13370, line: 2497, type: !1977)
!14298 = !DILocation(line: 2497, column: 12, scope: !14291)
!14299 = !DILocation(line: 2497, column: 19, scope: !14291)
!14300 = !DILocation(line: 2498, column: 28, scope: !14291)
!14301 = !DILocation(line: 2498, column: 9, scope: !14291)
!14302 = !DILocation(line: 2499, column: 6, scope: !14291)
!14303 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17hb50fda63c454e2f1E", scope: !14304, file: !13370, line: 2505, type: !14293, scopeLine: 2505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14305)
!14304 = !DINamespace(name: "{impl#22}", scope: !79)
!14305 = !{!14306, !14307}
!14306 = !DILocalVariable(name: "self", arg: 1, scope: !14303, file: !13370, line: 2505, type: !11947)
!14307 = !DILocalVariable(name: "f", arg: 2, scope: !14303, file: !13370, line: 2505, type: !1977)
!14308 = !DILocation(line: 2505, column: 12, scope: !14303)
!14309 = !DILocation(line: 2505, column: 19, scope: !14303)
!14310 = !DILocation(line: 2506, column: 26, scope: !14303)
!14311 = !DILocation(line: 2506, column: 9, scope: !14303)
!14312 = !DILocation(line: 2507, column: 6, scope: !14303)
!14313 = distinct !DISubprogram(name: "add", linkageName: "_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17hb0f30b25982dfb41E", scope: !14314, file: !13370, line: 2561, type: !14315, scopeLine: 2561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14317)
!14314 = !DINamespace(name: "{impl#24}", scope: !79)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!78, !78, !170}
!14317 = !{!14318, !14319}
!14318 = !DILocalVariable(name: "self", arg: 1, scope: !14313, file: !13370, line: 2561, type: !78)
!14319 = !DILocalVariable(name: "other", arg: 2, scope: !14313, file: !13370, line: 2561, type: !170)
!14320 = !DILocation(line: 2561, column: 12, scope: !14313)
!14321 = !DILocation(line: 2561, column: 22, scope: !14313)
!14322 = !DILocation(line: 2562, column: 9, scope: !14313)
!14323 = !DILocation(line: 2563, column: 9, scope: !14313)
!14324 = !DILocation(line: 2564, column: 6, scope: !14313)
!14325 = distinct !DISubprogram(name: "index<core::ops::range::RangeFull>", linkageName: "_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hf73e75d89969b7ceE", scope: !14326, file: !13370, line: 2587, type: !14327, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !14332, retainedNodes: !14329)
!14326 = !DINamespace(name: "{impl#26}", scope: !79)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!170, !11947, !4471, !1690}
!14329 = !{!14330, !14331}
!14330 = !DILocalVariable(name: "self", arg: 1, scope: !14325, file: !13370, line: 2587, type: !11947)
!14331 = !DILocalVariable(name: "index", arg: 2, scope: !14325, file: !13370, line: 2587, type: !4471)
!14332 = !{!14333}
!14333 = !DITemplateTypeParameter(name: "I", type: !4471)
!14334 = !DILocation(line: 2587, column: 14, scope: !14325)
!14335 = !DILocation(line: 2587, column: 21, scope: !14325)
!14336 = !DILocation(line: 2588, column: 21, scope: !14325)
!14337 = !DILocation(line: 2588, column: 9, scope: !14325)
!14338 = !DILocation(line: 2589, column: 6, scope: !14325)
!14339 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h00d877d5957a177aE", scope: !14340, file: !13370, line: 2608, type: !12976, scopeLine: 2608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14341)
!14340 = !DINamespace(name: "{impl#28}", scope: !79)
!14341 = !{!14342}
!14342 = !DILocalVariable(name: "self", arg: 1, scope: !14339, file: !13370, line: 2608, type: !11947)
!14343 = !DILocation(line: 2608, column: 14, scope: !14339)
!14344 = !DILocation(line: 2609, column: 9, scope: !14339)
!14345 = !DILocation(line: 2610, column: 6, scope: !14339)
!14346 = distinct !DISubprogram(name: "from", linkageName: "_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hbbd0f04abc7c890fE", scope: !14347, file: !13370, line: 2875, type: !12985, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14348)
!14347 = !DINamespace(name: "{impl#45}", scope: !79)
!14348 = !{!14349}
!14349 = !DILocalVariable(name: "s", arg: 1, scope: !14346, file: !13370, line: 2875, type: !170)
!14350 = !DILocation(line: 2875, column: 13, scope: !14346)
!14351 = !DILocation(line: 2876, column: 9, scope: !14346)
!14352 = !DILocation(line: 2877, column: 6, scope: !14346)
!14353 = distinct !DISubprogram(name: "from", linkageName: "_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$GT$$GT$$GT$4from17h9ad89ae0596fa466E", scope: !14354, file: !13370, line: 2920, type: !13201, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14355)
!14354 = !DINamespace(name: "{impl#48}", scope: !79)
!14355 = !{!14356}
!14356 = !DILocalVariable(name: "s", arg: 1, scope: !14353, file: !13370, line: 2920, type: !11350)
!14357 = !DILocation(line: 2920, column: 13, scope: !14353)
!14358 = !DILocation(line: 2921, column: 9, scope: !14353)
!14359 = !DILocation(line: 2922, column: 6, scope: !14353)
!14360 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string107_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$str$GT$$GT$4from17h62d302c685a3a656E", scope: !14361, file: !13370, line: 2939, type: !13926, scopeLine: 2939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14362)
!14361 = !DINamespace(name: "{impl#49}", scope: !79)
!14362 = !{!14363}
!14363 = !DILocalVariable(name: "s", arg: 1, scope: !14360, file: !13370, line: 2939, type: !78)
!14364 = !DILocation(line: 2939, column: 13, scope: !14360)
!14365 = !DILocation(line: 2940, column: 9, scope: !14360)
!14366 = !DILocation(line: 2941, column: 6, scope: !14360)
!14367 = distinct !DISubprogram(name: "from", linkageName: "_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h1a870786092f9a85E", scope: !14368, file: !13370, line: 2963, type: !11916, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14369)
!14368 = !DINamespace(name: "{impl#50}", scope: !79)
!14369 = !{!14370}
!14370 = !DILocalVariable(name: "s", arg: 1, scope: !14367, file: !13370, line: 2963, type: !3286)
!14371 = !DILocation(line: 2963, column: 13, scope: !14367)
!14372 = !DILocation(line: 2964, column: 9, scope: !14367)
!14373 = !DILocation(line: 2965, column: 6, scope: !14367)
!14374 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17h9dac9878e3c76fe3E", scope: !14375, file: !13370, line: 3072, type: !13734, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14376)
!14375 = !DINamespace(name: "{impl#57}", scope: !79)
!14376 = !{!14377}
!14377 = !DILocalVariable(name: "string", arg: 1, scope: !14374, file: !13370, line: 3072, type: !78)
!14378 = !DILocation(line: 3072, column: 13, scope: !14374)
!14379 = !DILocation(line: 3073, column: 9, scope: !14374)
!14380 = !DILocation(line: 3074, column: 6, scope: !14374)
!14381 = distinct !DISubprogram(name: "write_str", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h6e6ff1aa33bbb4faE", scope: !14382, file: !13370, line: 3081, type: !14383, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14385)
!14382 = !DINamespace(name: "{impl#58}", scope: !79)
!14383 = !DISubroutineType(types: !14384)
!14384 = !{!1961, !372, !170}
!14385 = !{!14386, !14387}
!14386 = !DILocalVariable(name: "self", arg: 1, scope: !14381, file: !13370, line: 3081, type: !372)
!14387 = !DILocalVariable(name: "s", arg: 2, scope: !14381, file: !13370, line: 3081, type: !170)
!14388 = !DILocation(line: 3081, column: 18, scope: !14381)
!14389 = !DILocation(line: 3081, column: 29, scope: !14381)
!14390 = !DILocation(line: 3082, column: 9, scope: !14381)
!14391 = !DILocation(line: 3083, column: 9, scope: !14381)
!14392 = !DILocation(line: 3084, column: 6, scope: !14381)
!14393 = distinct !DISubprogram(name: "write_char", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h0c4aaed91e329fa8E", scope: !14382, file: !13370, line: 3087, type: !14394, scopeLine: 3087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14396)
!14394 = !DISubroutineType(types: !14395)
!14395 = !{!1961, !372, !379}
!14396 = !{!14397, !14398}
!14397 = !DILocalVariable(name: "self", arg: 1, scope: !14393, file: !13370, line: 3087, type: !372)
!14398 = !DILocalVariable(name: "c", arg: 2, scope: !14393, file: !13370, line: 3087, type: !379)
!14399 = !DILocation(line: 3087, column: 19, scope: !14393)
!14400 = !DILocation(line: 3087, column: 30, scope: !14393)
!14401 = !DILocation(line: 3088, column: 9, scope: !14393)
!14402 = !DILocation(line: 3089, column: 9, scope: !14393)
!14403 = !DILocation(line: 3090, column: 6, scope: !14393)
!14404 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$alloc..string..Drain$u20$as$u20$core..fmt..Debug$GT$3fmt17h353b067aabf8712cE", scope: !14405, file: !13370, line: 3113, type: !14406, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14415)
!14405 = !DINamespace(name: "{impl#59}", scope: !79)
!14406 = !DISubroutineType(types: !14407)
!14407 = !{!1961, !14408, !1977}
!14408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::Drain", baseType: !14409, size: 64, align: 64, dwarfAddressSpace: 0)
!14409 = !DICompositeType(tag: DW_TAG_structure_type, name: "Drain", scope: !79, file: !2, size: 320, align: 64, flags: DIFlagPublic, elements: !14410, templateParams: !15, identifier: "e36c7156f4e5bf206772ac7bda8e5597")
!14410 = !{!14411, !14412, !14413, !14414}
!14411 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !14409, file: !2, baseType: !3176, size: 64, align: 64, offset: 128, flags: DIFlagPrivate)
!14412 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14409, file: !2, baseType: !9, size: 64, align: 64, offset: 192, flags: DIFlagPrivate)
!14413 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !14409, file: !2, baseType: !9, size: 64, align: 64, offset: 256, flags: DIFlagPrivate)
!14414 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !14409, file: !2, baseType: !1396, size: 128, align: 64, flags: DIFlagPrivate)
!14415 = !{!14416, !14417}
!14416 = !DILocalVariable(name: "self", arg: 1, scope: !14404, file: !13370, line: 3113, type: !14408)
!14417 = !DILocalVariable(name: "f", arg: 2, scope: !14404, file: !13370, line: 3113, type: !1977)
!14418 = !DILocation(line: 3113, column: 12, scope: !14404)
!14419 = !DILocation(line: 3113, column: 19, scope: !14404)
!14420 = !DILocation(line: 3114, column: 9, scope: !14404)
!14421 = !DILocation(line: 3114, column: 39, scope: !14404)
!14422 = !DILocation(line: 3115, column: 6, scope: !14404)
!14423 = distinct !DISubprogram(name: "drop", linkageName: "_ZN62_$LT$alloc..string..Drain$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc3b98caee82d348E", scope: !14424, file: !13370, line: 3125, type: !14425, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14428)
!14424 = !DINamespace(name: "{impl#62}", scope: !79)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{null, !14427}
!14427 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::Drain", baseType: !14409, size: 64, align: 64, dwarfAddressSpace: 0)
!14428 = !{!14429, !14430}
!14429 = !DILocalVariable(name: "self", arg: 1, scope: !14423, file: !13370, line: 3125, type: !14427)
!14430 = !DILocalVariable(name: "self_vec", scope: !14431, file: !13370, line: 3129, type: !4007, align: 8)
!14431 = distinct !DILexicalBlock(scope: !14423, file: !13370, line: 3129, column: 13)
!14432 = !DILocation(line: 3125, column: 13, scope: !14423)
!14433 = !DILocation(line: 3129, column: 28, scope: !14423)
!14434 = !DILocation(line: 3129, column: 17, scope: !14431)
!14435 = !DILocation(line: 3130, column: 16, scope: !14431)
!14436 = !DILocation(line: 3130, column: 30, scope: !14431)
!14437 = !DILocation(line: 3134, column: 6, scope: !14423)
!14438 = !DILocation(line: 3130, column: 42, scope: !14431)
!14439 = !DILocation(line: 3130, column: 54, scope: !14431)
!14440 = !DILocation(line: 3131, column: 32, scope: !14431)
!14441 = !DILocation(line: 3131, column: 44, scope: !14431)
!14442 = !DILocation(line: 3131, column: 17, scope: !14431)
!14443 = !DILocation(line: 3131, column: 53, scope: !14431)
!14444 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string5Drain6as_str17h2d3f85962d36b861E", scope: !14409, file: !13370, line: 3151, type: !14445, scopeLine: 3151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, declaration: !14447, retainedNodes: !14448)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{!170, !14408}
!14447 = !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string5Drain6as_str17h2d3f85962d36b861E", scope: !14409, file: !13370, line: 3151, type: !14445, scopeLine: 3151, flags: DIFlagPrototyped, spFlags: 0, templateParams: !15)
!14448 = !{!14449}
!14449 = !DILocalVariable(name: "self", arg: 1, scope: !14444, file: !13370, line: 3151, type: !14408)
!14450 = !DILocation(line: 3151, column: 19, scope: !14444)
!14451 = !DILocation(line: 3152, column: 9, scope: !14444)
!14452 = !DILocation(line: 3153, column: 6, scope: !14444)
!14453 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN72_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h053943ef4fd55fa7E", scope: !14454, file: !13370, line: 3158, type: !14445, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14455)
!14454 = !DINamespace(name: "{impl#64}", scope: !79)
!14455 = !{!14456}
!14456 = !DILocalVariable(name: "self", arg: 1, scope: !14453, file: !13370, line: 3158, type: !14408)
!14457 = !DILocation(line: 3158, column: 15, scope: !14453)
!14458 = !DILocation(line: 3159, column: 9, scope: !14453)
!14459 = !DILocation(line: 3160, column: 6, scope: !14453)
!14460 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN81_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$GT$6as_ref17hccc97f5f6e14b985E", scope: !14461, file: !13370, line: 3165, type: !14462, scopeLine: 3165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14464)
!14461 = !DINamespace(name: "{impl#65}", scope: !79)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{!427, !14408}
!14464 = !{!14465}
!14465 = !DILocalVariable(name: "self", arg: 1, scope: !14460, file: !13370, line: 3165, type: !14408)
!14466 = !DILocation(line: 3165, column: 15, scope: !14460)
!14467 = !DILocation(line: 3166, column: 9, scope: !14460)
!14468 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !14469)
!14469 = distinct !DILocation(line: 3166, column: 9, scope: !14460)
!14470 = !DILocation(line: 3167, column: 6, scope: !14460)
!14471 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN79_$LT$alloc..string..Drain$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4fb892bef40a2438E", scope: !14472, file: !13370, line: 3179, type: !14473, scopeLine: 3179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14475)
!14472 = !DINamespace(name: "{impl#66}", scope: !79)
!14473 = !DISubroutineType(types: !14474)
!14474 = !{!660, !14408}
!14475 = !{!14476}
!14476 = !DILocalVariable(name: "self", arg: 1, scope: !14471, file: !13370, line: 3179, type: !14408)
!14477 = !DILocation(line: 3179, column: 18, scope: !14471)
!14478 = !DILocation(line: 3180, column: 9, scope: !14471)
!14479 = !DILocation(line: 3181, column: 6, scope: !14471)
!14480 = distinct !DISubprogram(name: "arcinner_layout_for_value_layout", linkageName: "_ZN5alloc4sync32arcinner_layout_for_value_layout17h97edac8d781b0355E", scope: !177, file: !178, line: 361, type: !12848, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14481)
!14481 = !{!14482}
!14482 = !DILocalVariable(name: "layout", arg: 1, scope: !14480, file: !178, line: 361, type: !1746)
!14483 = !DILocation(line: 361, column: 37, scope: !14480)
!14484 = !DILocation(line: 366, column: 5, scope: !14480)
!14485 = !DILocation(line: 1103, column: 16, scope: !12855, inlinedAt: !14486)
!14486 = distinct !DILocation(line: 366, column: 5, scope: !14480)
!14487 = !DILocation(line: 1098, column: 19, scope: !12856, inlinedAt: !14486)
!14488 = !DILocation(line: 1104, column: 17, scope: !12863, inlinedAt: !14486)
!14489 = !DILocation(line: 1102, column: 15, scope: !12856, inlinedAt: !14486)
!14490 = !DILocation(line: 1102, column: 9, scope: !12856, inlinedAt: !14486)
!14491 = !DILocation(line: 1104, column: 23, scope: !12863, inlinedAt: !14486)
!14492 = !DILocation(line: 1103, column: 16, scope: !12856, inlinedAt: !14486)
!14493 = !DILocation(line: 367, column: 2, scope: !14480)
!14494 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbb029c7b50692847E", scope: !3074, file: !14495, line: 175, type: !14496, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !14498)
!14495 = !DIFile(filename: "src/vec/drain.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "4ec1c91005513d1f544d5e67906341d3")
!14496 = !DISubroutineType(types: !14497)
!14497 = !{null, !3078}
!14498 = !{!14499, !14500, !14502, !14504, !14506, !14508, !14510, !14512, !14514, !14516, !14518}
!14499 = !DILocalVariable(name: "self", arg: 1, scope: !14494, file: !14495, line: 175, type: !3078)
!14500 = !DILocalVariable(name: "iter", scope: !14501, file: !14495, line: 198, type: !1400, align: 8)
!14501 = distinct !DILexicalBlock(scope: !14494, file: !14495, line: 198, column: 9)
!14502 = !DILocalVariable(name: "drop_len", scope: !14503, file: !14495, line: 199, type: !9, align: 8)
!14503 = distinct !DILexicalBlock(scope: !14501, file: !14495, line: 199, column: 9)
!14504 = !DILocalVariable(name: "vec", scope: !14505, file: !14495, line: 201, type: !3085, align: 8)
!14505 = distinct !DILexicalBlock(scope: !14503, file: !14495, line: 201, column: 9)
!14506 = !DILocalVariable(name: "vec", scope: !14507, file: !14495, line: 207, type: !4007, align: 8)
!14507 = distinct !DILexicalBlock(scope: !14505, file: !14495, line: 207, column: 17)
!14508 = !DILocalVariable(name: "old_len", scope: !14509, file: !14495, line: 208, type: !9, align: 8)
!14509 = distinct !DILexicalBlock(scope: !14507, file: !14495, line: 208, column: 17)
!14510 = !DILocalVariable(name: "_guard", scope: !14511, file: !14495, line: 217, type: !3072, align: 8)
!14511 = distinct !DILexicalBlock(scope: !14505, file: !14495, line: 217, column: 9)
!14512 = !DILocalVariable(name: "drop_ptr", scope: !14513, file: !14495, line: 227, type: !103, align: 8)
!14513 = distinct !DILexicalBlock(scope: !14511, file: !14495, line: 227, column: 9)
!14514 = !DILocalVariable(name: "vec_ptr", scope: !14515, file: !14495, line: 234, type: !3364, align: 8)
!14515 = distinct !DILexicalBlock(scope: !14513, file: !14495, line: 234, column: 13)
!14516 = !DILocalVariable(name: "drop_offset", scope: !14517, file: !14495, line: 235, type: !9, align: 8)
!14517 = distinct !DILexicalBlock(scope: !14515, file: !14495, line: 235, column: 13)
!14518 = !DILocalVariable(name: "to_drop", scope: !14519, file: !14495, line: 236, type: !3471, align: 8)
!14519 = distinct !DILexicalBlock(scope: !14517, file: !14495, line: 236, column: 13)
!14520 = !DILocation(line: 175, column: 13, scope: !14494)
!14521 = !DILocation(line: 198, column: 13, scope: !14501)
!14522 = !DILocation(line: 201, column: 13, scope: !14505)
!14523 = !DILocation(line: 217, column: 13, scope: !14511)
!14524 = !DILocation(line: 198, column: 20, scope: !14494)
!14525 = !DILocation(line: 141, column: 20, scope: !8536, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 199, column: 24, scope: !14501)
!14527 = !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !14526)
!14528 = !DILocation(line: 62, column: 26, scope: !8550, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 33, column: 34, scope: !8536, inlinedAt: !14526)
!14530 = !DILocation(line: 33, column: 33, scope: !8536, inlinedAt: !14526)
!14531 = !DILocation(line: 33, column: 17, scope: !8545, inlinedAt: !14526)
!14532 = !DILocation(line: 57, column: 38, scope: !8545, inlinedAt: !14526)
!14533 = !DILocation(line: 57, column: 26, scope: !8545, inlinedAt: !14526)
!14534 = !DILocation(line: 143, column: 14, scope: !8536, inlinedAt: !14526)
!14535 = !DILocation(line: 199, column: 24, scope: !14501)
!14536 = !DILocation(line: 199, column: 13, scope: !14503)
!14537 = !DILocation(line: 201, column: 23, scope: !14503)
!14538 = !DILocation(line: 203, column: 12, scope: !14505)
!14539 = !DILocation(line: 217, column: 22, scope: !14505)
!14540 = !DILocation(line: 219, column: 12, scope: !14511)
!14541 = !DILocation(line: 239, column: 5, scope: !14505)
!14542 = !DILocation(line: 227, column: 24, scope: !14511)
!14543 = !DILocation(line: 742, column: 25, scope: !2261, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 227, column: 24, scope: !14511)
!14545 = !DILocation(line: 227, column: 13, scope: !14513)
!14546 = !DILocalVariable(name: "self", arg: 1, scope: !14547, file: !1332, line: 416, type: !14550)
!14547 = distinct !DISubprogram(name: "as_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hd16c212d1792a26eE", scope: !3085, file: !1332, line: 416, type: !14548, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, declaration: !14551, retainedNodes: !14552)
!14548 = !DISubroutineType(types: !14549)
!14549 = !{!4007, !14550}
!14550 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !3085, size: 64, align: 64, dwarfAddressSpace: 0)
!14551 = !DISubprogram(name: "as_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hd16c212d1792a26eE", scope: !3085, file: !1332, line: 416, type: !14548, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3089)
!14552 = !{!14546}
!14553 = !DILocation(line: 416, column: 36, scope: !14547, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 234, column: 27, scope: !14513)
!14555 = !DILocation(line: 419, column: 24, scope: !14547, inlinedAt: !14554)
!14556 = !DILocalVariable(name: "self", arg: 1, scope: !14557, file: !1332, line: 339, type: !3085)
!14557 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5a2e44dddef3684aE", scope: !3085, file: !1332, line: 339, type: !14558, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, declaration: !14560, retainedNodes: !14561)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{!3184, !3085}
!14560 = !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5a2e44dddef3684aE", scope: !3085, file: !1332, line: 339, type: !14558, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3089)
!14561 = !{!14556}
!14562 = !DILocation(line: 339, column: 25, scope: !14557, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 419, column: 24, scope: !14547, inlinedAt: !14554)
!14564 = !DILocation(line: 234, column: 27, scope: !14513)
!14565 = !DILocation(line: 234, column: 17, scope: !14515)
!14566 = !DILocation(line: 235, column: 31, scope: !14515)
!14567 = !DILocation(line: 235, column: 17, scope: !14517)
!14568 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 236, column: 57, scope: !14517)
!14570 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !14569)
!14571 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !14569)
!14572 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !14569)
!14573 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !14569)
!14574 = !DILocation(line: 236, column: 27, scope: !14517)
!14575 = !DILocation(line: 236, column: 17, scope: !14519)
!14576 = !DILocation(line: 239, column: 6, scope: !14494)
!14577 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he8242861257fb4f1E", scope: !14578, file: !14495, line: 180, type: !14579, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !14582)
!14578 = !DINamespace(name: "{impl#0}", scope: !3073)
!14579 = !DISubroutineType(types: !14580)
!14580 = !{null, !14581}
!14581 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>", baseType: !3072, size: 64, align: 64, dwarfAddressSpace: 0)
!14582 = !{!14583, !14584, !14586, !14588, !14590, !14592}
!14583 = !DILocalVariable(name: "self", arg: 1, scope: !14577, file: !14495, line: 180, type: !14581)
!14584 = !DILocalVariable(name: "source_vec", scope: !14585, file: !14495, line: 183, type: !4007, align: 8)
!14585 = distinct !DILexicalBlock(scope: !14577, file: !14495, line: 183, column: 25)
!14586 = !DILocalVariable(name: "start", scope: !14587, file: !14495, line: 185, type: !9, align: 8)
!14587 = distinct !DILexicalBlock(scope: !14585, file: !14495, line: 185, column: 25)
!14588 = !DILocalVariable(name: "tail", scope: !14589, file: !14495, line: 186, type: !9, align: 8)
!14589 = distinct !DILexicalBlock(scope: !14587, file: !14495, line: 186, column: 25)
!14590 = !DILocalVariable(name: "src", scope: !14591, file: !14495, line: 188, type: !103, align: 8)
!14591 = distinct !DILexicalBlock(scope: !14589, file: !14495, line: 188, column: 29)
!14592 = !DILocalVariable(name: "dst", scope: !14593, file: !14495, line: 189, type: !3364, align: 8)
!14593 = distinct !DILexicalBlock(scope: !14591, file: !14495, line: 189, column: 29)
!14594 = !DILocation(line: 180, column: 21, scope: !14577)
!14595 = !DILocation(line: 181, column: 20, scope: !14577)
!14596 = !DILocation(line: 195, column: 14, scope: !14577)
!14597 = !DILocation(line: 183, column: 42, scope: !14577)
!14598 = !DILocation(line: 416, column: 36, scope: !14547, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 183, column: 42, scope: !14577)
!14600 = !DILocation(line: 419, column: 24, scope: !14547, inlinedAt: !14599)
!14601 = !DILocation(line: 339, column: 25, scope: !14557, inlinedAt: !14602)
!14602 = distinct !DILocation(line: 419, column: 24, scope: !14547, inlinedAt: !14599)
!14603 = !DILocation(line: 183, column: 29, scope: !14585)
!14604 = !DILocation(line: 185, column: 37, scope: !14585)
!14605 = !DILocation(line: 185, column: 29, scope: !14587)
!14606 = !DILocation(line: 186, column: 36, scope: !14587)
!14607 = !DILocation(line: 186, column: 29, scope: !14589)
!14608 = !DILocation(line: 187, column: 28, scope: !14589)
!14609 = !DILocation(line: 192, column: 52, scope: !14589)
!14610 = !DILocation(line: 192, column: 44, scope: !14589)
!14611 = !DILocation(line: 188, column: 39, scope: !14589)
!14612 = !DILocation(line: 915, column: 29, scope: !6532, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 188, column: 39, scope: !14589)
!14614 = !DILocation(line: 915, column: 35, scope: !6532, inlinedAt: !14613)
!14615 = !DILocation(line: 74, column: 35, scope: !6541, inlinedAt: !14613)
!14616 = !DILocation(line: 75, column: 17, scope: !6541, inlinedAt: !14613)
!14617 = !DILocation(line: 949, column: 18, scope: !6532, inlinedAt: !14613)
!14618 = !DILocation(line: 188, column: 33, scope: !14591)
!14619 = !DILocation(line: 189, column: 39, scope: !14591)
!14620 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 189, column: 39, scope: !14591)
!14622 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !14621)
!14623 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !14621)
!14624 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !14621)
!14625 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !14621)
!14626 = !DILocation(line: 189, column: 33, scope: !14593)
!14627 = !DILocation(line: 190, column: 49, scope: !14593)
!14628 = !DILocation(line: 4422, column: 29, scope: !13876, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 190, column: 29, scope: !14593)
!14630 = !DILocation(line: 4422, column: 44, scope: !13876, inlinedAt: !14629)
!14631 = !DILocation(line: 4422, column: 57, scope: !13876, inlinedAt: !14629)
!14632 = !DILocation(line: 74, column: 35, scope: !13885, inlinedAt: !14629)
!14633 = !DILocation(line: 4440, column: 48, scope: !13876, inlinedAt: !14629)
!14634 = !DILocation(line: 75, column: 17, scope: !13885, inlinedAt: !14629)
!14635 = !DILocation(line: 4445, column: 9, scope: !13876, inlinedAt: !14629)
!14636 = !DILocation(line: 190, column: 29, scope: !14593)
!14637 = !DILocation(line: 192, column: 25, scope: !14589)
!14638 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h79082c1a5f5ce760E", scope: !14640, file: !14639, line: 59, type: !14642, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !14644)
!14639 = !DIFile(filename: "src/vec/spec_extend.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "60d5b86fd19eaf461a3227e34506b2a6")
!14640 = !DINamespace(name: "{impl#4}", scope: !14641)
!14641 = !DINamespace(name: "spec_extend", scope: !84)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{null, !4007, !1400, !1690}
!14644 = !{!14645, !14646, !14647}
!14645 = !DILocalVariable(name: "self", arg: 1, scope: !14638, file: !14639, line: 59, type: !4007)
!14646 = !DILocalVariable(name: "iterator", arg: 2, scope: !14638, file: !14639, line: 59, type: !1400)
!14647 = !DILocalVariable(name: "slice", scope: !14648, file: !14639, line: 60, type: !427, align: 8)
!14648 = distinct !DILexicalBlock(scope: !14638, file: !14639, line: 60, column: 9)
!14649 = !DILocation(line: 59, column: 20, scope: !14638)
!14650 = !DILocation(line: 59, column: 31, scope: !14638)
!14651 = !DILocation(line: 60, column: 21, scope: !14638)
!14652 = !DILocation(line: 60, column: 13, scope: !14648)
!14653 = !DILocation(line: 61, column: 18, scope: !14648)
!14654 = !DILocation(line: 62, column: 6, scope: !14638)
!14655 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h4dc4ab64060b6e8fE", scope: !83, file: !14656, line: 422, type: !14657, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !14659)
!14656 = !DIFile(filename: "src/vec/mod.rs", directory: "/nix/store/hahzrgjq3ncgd241r37xm63ydm9xxfp7-rust-mixed/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "8b8a00a1f8222359fcec0b027dd58a9a")
!14657 = !DISubroutineType(types: !14658)
!14658 = !{!83}
!14659 = !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h4dc4ab64060b6e8fE", scope: !83, file: !14656, line: 422, type: !14657, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!14660 = !DILocation(line: 423, column: 20, scope: !14655)
!14661 = !DILocation(line: 423, column: 9, scope: !14655)
!14662 = !DILocation(line: 424, column: 6, scope: !14655)
!14663 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE", scope: !83, file: !14656, line: 482, type: !14664, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, declaration: !14666, retainedNodes: !14667)
!14664 = !DISubroutineType(types: !14665)
!14665 = !{!83, !9, !1690}
!14666 = !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hdcce2718e540c15cE", scope: !83, file: !14656, line: 482, type: !14664, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !43)
!14667 = !{!14668}
!14668 = !DILocalVariable(name: "capacity", arg: 1, scope: !14663, file: !14656, line: 482, type: !9)
!14669 = !DILocation(line: 482, column: 26, scope: !14663)
!14670 = !DILocation(line: 483, column: 9, scope: !14663)
!14671 = !DILocation(line: 484, column: 6, scope: !14663)
!14672 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf5dfd896da7902efE", scope: !83, file: !14656, line: 802, type: !14673, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14675, retainedNodes: !14676)
!14673 = !DISubroutineType(types: !14674)
!14674 = !{!83, !9, !112, !1690}
!14675 = !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hf5dfd896da7902efE", scope: !83, file: !14656, line: 802, type: !14673, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14676 = !{!14677, !14678}
!14677 = !DILocalVariable(name: "capacity", arg: 1, scope: !14672, file: !14656, line: 802, type: !9)
!14678 = !DILocalVariable(name: "alloc", arg: 2, scope: !14672, file: !14656, line: 802, type: !112)
!14679 = !DILocation(line: 802, column: 29, scope: !14672)
!14680 = !DILocation(line: 802, column: 46, scope: !14672)
!14681 = !DILocation(line: 803, column: 20, scope: !14672)
!14682 = !DILocation(line: 803, column: 9, scope: !14672)
!14683 = !DILocation(line: 804, column: 6, scope: !14672)
!14684 = distinct !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17hf77891917e6c590eE", scope: !83, file: !14656, line: 934, type: !14685, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14687, retainedNodes: !14688)
!14685 = !DISubroutineType(types: !14686)
!14686 = !{!83, !3364, !9, !9, !112}
!14687 = !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17hf77891917e6c590eE", scope: !83, file: !14656, line: 934, type: !14685, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14688 = !{!14689, !14690, !14691, !14692}
!14689 = !DILocalVariable(name: "ptr", arg: 1, scope: !14684, file: !14656, line: 934, type: !3364)
!14690 = !DILocalVariable(name: "length", arg: 2, scope: !14684, file: !14656, line: 934, type: !9)
!14691 = !DILocalVariable(name: "capacity", arg: 3, scope: !14684, file: !14656, line: 934, type: !9)
!14692 = !DILocalVariable(name: "alloc", arg: 4, scope: !14684, file: !14656, line: 934, type: !112)
!14693 = !DILocation(line: 934, column: 37, scope: !14684)
!14694 = !DILocation(line: 934, column: 50, scope: !14684)
!14695 = !DILocation(line: 934, column: 65, scope: !14684)
!14696 = !DILocation(line: 934, column: 82, scope: !14684)
!14697 = !DILocation(line: 935, column: 29, scope: !14684)
!14698 = !DILocation(line: 935, column: 18, scope: !14684)
!14699 = !DILocation(line: 936, column: 6, scope: !14684)
!14700 = distinct !DISubprogram(name: "into_raw_parts<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hc9f4e0c2ef59f3abE", scope: !83, file: !14656, line: 1088, type: !14701, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14703, retainedNodes: !14704)
!14701 = !DISubroutineType(types: !14702)
!14702 = !{!13715, !83}
!14703 = !DISubprogram(name: "into_raw_parts<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$14into_raw_parts17hc9f4e0c2ef59f3abE", scope: !83, file: !14656, line: 1088, type: !14701, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14704 = !{!14705, !14706}
!14705 = !DILocalVariable(name: "self", arg: 1, scope: !14700, file: !14656, line: 1088, type: !83)
!14706 = !DILocalVariable(name: "me", scope: !14707, file: !14656, line: 1089, type: !14708, align: 8)
!14707 = distinct !DILexicalBlock(scope: !14700, file: !14656, line: 1089, column: 9)
!14708 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !1155, file: !2, size: 192, align: 64, flags: DIFlagPublic, elements: !14709, templateParams: !3089, identifier: "910b730b5de2626794802a41ebf5165a")
!14709 = !{!14710}
!14710 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !14708, file: !2, baseType: !83, size: 192, align: 64, flags: DIFlagPrivate)
!14711 = !DILocation(line: 1088, column: 27, scope: !14700)
!14712 = !DILocation(line: 1089, column: 13, scope: !14707)
!14713 = !DILocalVariable(name: "value", arg: 1, scope: !14714, file: !9935, line: 180, type: !83)
!14714 = distinct !DISubprogram(name: "new<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha33852e90ddacb6eE", scope: !14708, file: !9935, line: 180, type: !14715, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, declaration: !14717, retainedNodes: !14718)
!14715 = !DISubroutineType(types: !14716)
!14716 = !{!14708, !83}
!14717 = !DISubprogram(name: "new<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha33852e90ddacb6eE", scope: !14708, file: !9935, line: 180, type: !14715, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3089)
!14718 = !{!14713}
!14719 = !DILocation(line: 180, column: 22, scope: !14714, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 1089, column: 22, scope: !14700)
!14721 = !DILocation(line: 181, column: 9, scope: !14714, inlinedAt: !14720)
!14722 = !DILocalVariable(name: "self", arg: 1, scope: !14723, file: !9935, line: 272, type: !14726)
!14723 = distinct !DISubprogram(name: "deref_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h358d5da5bc86a1d2E", scope: !11646, file: !9935, line: 272, type: !14724, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, retainedNodes: !14727)
!14724 = !DISubroutineType(types: !14725)
!14725 = !{!4007, !14726}
!14726 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !14708, size: 64, align: 64, dwarfAddressSpace: 0)
!14727 = !{!14722}
!14728 = !DILocation(line: 272, column: 18, scope: !14723, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 1090, column: 10, scope: !14707)
!14730 = !DILocation(line: 1090, column: 10, scope: !14707)
!14731 = !DILocalVariable(name: "self", arg: 1, scope: !14732, file: !9935, line: 264, type: !14736)
!14732 = distinct !DISubprogram(name: "deref<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfddfecb82651612aE", scope: !9946, file: !9935, line: 264, type: !14733, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !3089, retainedNodes: !14737)
!14733 = !DISubroutineType(types: !14734)
!14734 = !{!14735, !14736}
!14735 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!14736 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !14708, size: 64, align: 64, dwarfAddressSpace: 0)
!14737 = !{!14731}
!14738 = !DILocation(line: 264, column: 14, scope: !14732, inlinedAt: !14739)
!14739 = distinct !DILocation(line: 1090, column: 27, scope: !14707)
!14740 = !DILocation(line: 1090, column: 27, scope: !14707)
!14741 = !DILocation(line: 264, column: 14, scope: !14732, inlinedAt: !14742)
!14742 = distinct !DILocation(line: 1090, column: 37, scope: !14707)
!14743 = !DILocation(line: 1090, column: 37, scope: !14707)
!14744 = !DILocation(line: 1090, column: 9, scope: !14707)
!14745 = !DILocation(line: 1091, column: 6, scope: !14700)
!14746 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE", scope: !83, file: !14656, line: 1246, type: !14747, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14749, retainedNodes: !14750)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{!9, !14735}
!14749 = !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13f18f4a7b22760fE", scope: !83, file: !14656, line: 1246, type: !14747, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14750 = !{!14751}
!14751 = !DILocalVariable(name: "self", arg: 1, scope: !14746, file: !14656, line: 1246, type: !14735)
!14752 = !DILocation(line: 1246, column: 27, scope: !14746)
!14753 = !DILocation(line: 1247, column: 9, scope: !14746)
!14754 = !DILocation(line: 1248, column: 6, scope: !14746)
!14755 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5877bb739ea4e293E", scope: !83, file: !14656, line: 1270, type: !14756, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14758, retainedNodes: !14759)
!14756 = !DISubroutineType(types: !14757)
!14757 = !{null, !4007, !9, !1690}
!14758 = !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5877bb739ea4e293E", scope: !83, file: !14656, line: 1270, type: !14756, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14759 = !{!14760, !14761}
!14760 = !DILocalVariable(name: "self", arg: 1, scope: !14755, file: !14656, line: 1270, type: !4007)
!14761 = !DILocalVariable(name: "additional", arg: 2, scope: !14755, file: !14656, line: 1270, type: !9)
!14762 = !DILocation(line: 1270, column: 20, scope: !14755)
!14763 = !DILocation(line: 1270, column: 31, scope: !14755)
!14764 = !DILocation(line: 1271, column: 26, scope: !14755)
!14765 = !DILocation(line: 1271, column: 9, scope: !14755)
!14766 = !DILocation(line: 1272, column: 6, scope: !14755)
!14767 = distinct !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hfe0a39fa792c655aE", scope: !83, file: !14656, line: 1301, type: !14756, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14768, retainedNodes: !14769)
!14768 = !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hfe0a39fa792c655aE", scope: !83, file: !14656, line: 1301, type: !14756, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14769 = !{!14770, !14771}
!14770 = !DILocalVariable(name: "self", arg: 1, scope: !14767, file: !14656, line: 1301, type: !4007)
!14771 = !DILocalVariable(name: "additional", arg: 2, scope: !14767, file: !14656, line: 1301, type: !9)
!14772 = !DILocation(line: 1301, column: 26, scope: !14767)
!14773 = !DILocation(line: 1301, column: 37, scope: !14767)
!14774 = !DILocation(line: 1302, column: 32, scope: !14767)
!14775 = !DILocation(line: 1302, column: 9, scope: !14767)
!14776 = !DILocation(line: 1303, column: 6, scope: !14767)
!14777 = distinct !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h50abbc23c8017640E", scope: !83, file: !14656, line: 1338, type: !14778, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14780, retainedNodes: !14781)
!14778 = !DISubroutineType(types: !14779)
!14779 = !{!1722, !4007, !9}
!14780 = !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h50abbc23c8017640E", scope: !83, file: !14656, line: 1338, type: !14778, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14781 = !{!14782, !14783}
!14782 = !DILocalVariable(name: "self", arg: 1, scope: !14777, file: !14656, line: 1338, type: !4007)
!14783 = !DILocalVariable(name: "additional", arg: 2, scope: !14777, file: !14656, line: 1338, type: !9)
!14784 = !DILocation(line: 1338, column: 24, scope: !14777)
!14785 = !DILocation(line: 1338, column: 35, scope: !14777)
!14786 = !DILocation(line: 1339, column: 30, scope: !14777)
!14787 = !DILocation(line: 1339, column: 9, scope: !14777)
!14788 = !DILocation(line: 1340, column: 6, scope: !14777)
!14789 = distinct !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h014a30c04e6f2f17E", scope: !83, file: !14656, line: 1381, type: !14778, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14790, retainedNodes: !14791)
!14790 = !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h014a30c04e6f2f17E", scope: !83, file: !14656, line: 1381, type: !14778, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14791 = !{!14792, !14793}
!14792 = !DILocalVariable(name: "self", arg: 1, scope: !14789, file: !14656, line: 1381, type: !4007)
!14793 = !DILocalVariable(name: "additional", arg: 2, scope: !14789, file: !14656, line: 1381, type: !9)
!14794 = !DILocation(line: 1381, column: 30, scope: !14789)
!14795 = !DILocation(line: 1381, column: 41, scope: !14789)
!14796 = !DILocation(line: 1382, column: 36, scope: !14789)
!14797 = !DILocation(line: 1382, column: 9, scope: !14789)
!14798 = !DILocation(line: 1383, column: 6, scope: !14789)
!14799 = distinct !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hf46346819fad11beE", scope: !83, file: !14656, line: 1406, type: !14800, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14802, retainedNodes: !14803)
!14800 = !DISubroutineType(types: !14801)
!14801 = !{null, !4007, !1690}
!14802 = !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17hf46346819fad11beE", scope: !83, file: !14656, line: 1406, type: !14800, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14803 = !{!14804}
!14804 = !DILocalVariable(name: "self", arg: 1, scope: !14799, file: !14656, line: 1406, type: !4007)
!14805 = !DILocation(line: 1406, column: 26, scope: !14799)
!14806 = !DILocation(line: 1410, column: 12, scope: !14799)
!14807 = !DILocation(line: 1410, column: 30, scope: !14799)
!14808 = !DILocation(line: 1413, column: 6, scope: !14799)
!14809 = !DILocation(line: 1411, column: 36, scope: !14799)
!14810 = !DILocation(line: 1411, column: 13, scope: !14799)
!14811 = distinct !DISubprogram(name: "into_boxed_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E", scope: !83, file: !14656, line: 1470, type: !14812, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14814, retainedNodes: !14815)
!14812 = !DISubroutineType(types: !14813)
!14813 = !{!2539, !83, !1690}
!14814 = !DISubprogram(name: "into_boxed_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17hfb68385ecc8e1f49E", scope: !83, file: !14656, line: 1470, type: !14812, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14815 = !{!14816, !14817, !14819, !14821}
!14816 = !DILocalVariable(name: "self", arg: 1, scope: !14811, file: !14656, line: 1470, type: !83)
!14817 = !DILocalVariable(name: "me", scope: !14818, file: !14656, line: 1473, type: !14708, align: 8)
!14818 = distinct !DILexicalBlock(scope: !14811, file: !14656, line: 1473, column: 13)
!14819 = !DILocalVariable(name: "buf", scope: !14820, file: !14656, line: 1474, type: !87, align: 8)
!14820 = distinct !DILexicalBlock(scope: !14818, file: !14656, line: 1474, column: 13)
!14821 = !DILocalVariable(name: "len", scope: !14822, file: !14656, line: 1475, type: !9, align: 8)
!14822 = distinct !DILexicalBlock(scope: !14820, file: !14656, line: 1475, column: 13)
!14823 = !DILocation(line: 1470, column: 29, scope: !14811)
!14824 = !DILocation(line: 1473, column: 17, scope: !14818)
!14825 = !DILocation(line: 1472, column: 13, scope: !14811)
!14826 = !DILocation(line: 1473, column: 40, scope: !14811)
!14827 = !DILocation(line: 180, column: 22, scope: !14714, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 1473, column: 22, scope: !14811)
!14829 = !DILocation(line: 181, column: 9, scope: !14714, inlinedAt: !14828)
!14830 = !DILocation(line: 264, column: 14, scope: !14732, inlinedAt: !14831)
!14831 = distinct !DILocation(line: 1474, column: 34, scope: !14818)
!14832 = !DILocation(line: 1474, column: 23, scope: !14818)
!14833 = !DILocation(line: 1474, column: 17, scope: !14820)
!14834 = !DILocation(line: 264, column: 14, scope: !14732, inlinedAt: !14835)
!14835 = distinct !DILocation(line: 1475, column: 23, scope: !14820)
!14836 = !DILocation(line: 1475, column: 23, scope: !14820)
!14837 = !DILocation(line: 1475, column: 17, scope: !14822)
!14838 = !DILocation(line: 1476, column: 13, scope: !14822)
!14839 = !DILocation(line: 1478, column: 6, scope: !14811)
!14840 = distinct !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h527846da8ec6e886E", scope: !83, file: !14656, line: 1560, type: !14841, scopeLine: 1560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14843, retainedNodes: !14844)
!14841 = !DISubroutineType(types: !14842)
!14842 = !{!427, !14735}
!14843 = !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h527846da8ec6e886E", scope: !83, file: !14656, line: 1560, type: !14841, scopeLine: 1560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14844 = !{!14845}
!14845 = !DILocalVariable(name: "self", arg: 1, scope: !14840, file: !14656, line: 1560, type: !14735)
!14846 = !DILocation(line: 1560, column: 27, scope: !14840)
!14847 = !DILocation(line: 1574, column: 40, scope: !14840)
!14848 = !DILocation(line: 1574, column: 55, scope: !14840)
!14849 = !DILocation(line: 1574, column: 18, scope: !14840)
!14850 = !DILocation(line: 1575, column: 6, scope: !14840)
!14851 = distinct !DISubprogram(name: "as_mut_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h52bbfb16e1dc50d0E", scope: !83, file: !14656, line: 1592, type: !14852, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14854, retainedNodes: !14855)
!14852 = !DISubroutineType(types: !14853)
!14853 = !{!4495, !4007}
!14854 = !DISubprogram(name: "as_mut_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h52bbfb16e1dc50d0E", scope: !83, file: !14656, line: 1592, type: !14852, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14855 = !{!14856}
!14856 = !DILocalVariable(name: "self", arg: 1, scope: !14851, file: !14656, line: 1592, type: !4007)
!14857 = !DILocation(line: 1592, column: 31, scope: !14851)
!14858 = !DILocation(line: 1606, column: 44, scope: !14851)
!14859 = !DILocation(line: 1606, column: 63, scope: !14851)
!14860 = !DILocation(line: 1606, column: 18, scope: !14851)
!14861 = !DILocation(line: 1607, column: 6, scope: !14851)
!14862 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E", scope: !83, file: !14656, line: 1667, type: !14863, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14865, retainedNodes: !14866)
!14863 = !DISubroutineType(types: !14864)
!14864 = !{!103, !14735}
!14865 = !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hf69c4f4c3f389991E", scope: !83, file: !14656, line: 1667, type: !14863, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14866 = !{!14867}
!14867 = !DILocalVariable(name: "self", arg: 1, scope: !14862, file: !14656, line: 1667, type: !14735)
!14868 = !DILocation(line: 1667, column: 25, scope: !14862)
!14869 = !DILocation(line: 1670, column: 9, scope: !14862)
!14870 = !DILocation(line: 1671, column: 6, scope: !14862)
!14871 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE", scope: !83, file: !14656, line: 1730, type: !14872, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14874, retainedNodes: !14875)
!14872 = !DISubroutineType(types: !14873)
!14873 = !{!3364, !4007}
!14874 = !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1c394b8d66e886fcE", scope: !83, file: !14656, line: 1730, type: !14872, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14875 = !{!14876}
!14876 = !DILocalVariable(name: "self", arg: 1, scope: !14871, file: !14656, line: 1730, type: !4007)
!14877 = !DILocation(line: 1730, column: 29, scope: !14871)
!14878 = !DILocation(line: 1733, column: 9, scope: !14871)
!14879 = !DILocation(line: 1734, column: 6, scope: !14871)
!14880 = distinct !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h978bd46c0a31e1c3E", scope: !83, file: !14656, line: 1802, type: !14881, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14883, retainedNodes: !14884)
!14881 = !DISubroutineType(types: !14882)
!14882 = !{!10012, !14735}
!14883 = !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h978bd46c0a31e1c3E", scope: !83, file: !14656, line: 1802, type: !14881, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14884 = !{!14885}
!14885 = !DILocalVariable(name: "self", arg: 1, scope: !14880, file: !14656, line: 1802, type: !14735)
!14886 = !DILocation(line: 1802, column: 22, scope: !14880)
!14887 = !DILocation(line: 1803, column: 9, scope: !14880)
!14888 = !DILocation(line: 1804, column: 6, scope: !14880)
!14889 = distinct !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE", scope: !83, file: !14656, line: 1889, type: !14890, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14892, retainedNodes: !14893)
!14890 = !DISubroutineType(types: !14891)
!14891 = !{null, !4007, !9}
!14892 = !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h46aaf12a9604e6aaE", scope: !83, file: !14656, line: 1889, type: !14890, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14893 = !{!14894, !14895}
!14894 = !DILocalVariable(name: "self", arg: 1, scope: !14889, file: !14656, line: 1889, type: !4007)
!14895 = !DILocalVariable(name: "new_len", arg: 2, scope: !14889, file: !14656, line: 1889, type: !9)
!14896 = !DILocation(line: 1889, column: 27, scope: !14889)
!14897 = !DILocation(line: 1889, column: 38, scope: !14889)
!14898 = !DILocation(line: 1890, column: 34, scope: !14889)
!14899 = !DILocation(line: 1890, column: 23, scope: !14889)
!14900 = !DILocation(line: 1890, column: 9, scope: !14889)
!14901 = !DILocation(line: 1892, column: 9, scope: !14889)
!14902 = !DILocation(line: 1893, column: 6, scope: !14889)
!14903 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11swap_remove13assert_failed17h6c36757cd8817389E", scope: !14904, file: !14656, line: 1926, type: !14906, scopeLine: 1926, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14908)
!14904 = !DINamespace(name: "swap_remove", scope: !14905)
!14905 = !DINamespace(name: "{impl#1}", scope: !84)
!14906 = !DISubroutineType(types: !14907)
!14907 = !{null, !9, !9, !1690}
!14908 = !{!14909, !14910}
!14909 = !DILocalVariable(name: "index", arg: 1, scope: !14903, file: !14656, line: 1926, type: !9)
!14910 = !DILocalVariable(name: "len", arg: 2, scope: !14903, file: !14656, line: 1926, type: !9)
!14911 = !DILocation(line: 1926, column: 26, scope: !14903)
!14912 = !DILocation(line: 1926, column: 40, scope: !14903)
!14913 = !DILocation(line: 1927, column: 13, scope: !14903)
!14914 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6insert13assert_failed17h280863e5b5fc12c6E", scope: !14915, file: !14656, line: 1976, type: !14906, scopeLine: 1976, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14916)
!14915 = !DINamespace(name: "insert", scope: !14905)
!14916 = !{!14917, !14918}
!14917 = !DILocalVariable(name: "index", arg: 1, scope: !14914, file: !14656, line: 1976, type: !9)
!14918 = !DILocalVariable(name: "len", arg: 2, scope: !14914, file: !14656, line: 1976, type: !9)
!14919 = !DILocation(line: 1976, column: 26, scope: !14914)
!14920 = !DILocation(line: 1976, column: 40, scope: !14914)
!14921 = !DILocation(line: 1977, column: 13, scope: !14914)
!14922 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17h2c4a4f2d2b3d09d5E", scope: !14923, file: !14656, line: 2039, type: !14906, scopeLine: 2039, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !14924)
!14923 = !DINamespace(name: "remove", scope: !14905)
!14924 = !{!14925, !14926}
!14925 = !DILocalVariable(name: "index", arg: 1, scope: !14922, file: !14656, line: 2039, type: !9)
!14926 = !DILocalVariable(name: "len", arg: 2, scope: !14922, file: !14656, line: 2039, type: !9)
!14927 = !DILocation(line: 2039, column: 26, scope: !14922)
!14928 = !DILocation(line: 2039, column: 40, scope: !14922)
!14929 = !DILocation(line: 2040, column: 13, scope: !14922)
!14930 = distinct !DISubprogram(name: "push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h92d949171015b075E", scope: !83, file: !14656, line: 2411, type: !14931, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14933, retainedNodes: !14934)
!14931 = !DISubroutineType(types: !14932)
!14932 = !{null, !4007, !45, !1690}
!14933 = !DISubprogram(name: "push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h92d949171015b075E", scope: !83, file: !14656, line: 2411, type: !14931, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14934 = !{!14935, !14936, !14937, !14939}
!14935 = !DILocalVariable(name: "self", arg: 1, scope: !14930, file: !14656, line: 2411, type: !4007)
!14936 = !DILocalVariable(name: "value", arg: 2, scope: !14930, file: !14656, line: 2411, type: !45)
!14937 = !DILocalVariable(name: "len", scope: !14938, file: !14656, line: 2413, type: !9, align: 8)
!14938 = distinct !DILexicalBlock(scope: !14930, file: !14656, line: 2413, column: 9)
!14939 = !DILocalVariable(name: "end", scope: !14940, file: !14656, line: 2420, type: !3364, align: 8)
!14940 = distinct !DILexicalBlock(scope: !14938, file: !14656, line: 2420, column: 13)
!14941 = !DILocation(line: 2411, column: 17, scope: !14930)
!14942 = !DILocation(line: 2411, column: 28, scope: !14930)
!14943 = !DILocation(line: 2413, column: 19, scope: !14930)
!14944 = !DILocation(line: 2413, column: 13, scope: !14938)
!14945 = !DILocation(line: 2416, column: 19, scope: !14938)
!14946 = !DILocation(line: 2416, column: 12, scope: !14938)
!14947 = !DILocation(line: 2420, column: 23, scope: !14938)
!14948 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 2420, column: 23, scope: !14938)
!14950 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !14949)
!14951 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !14949)
!14952 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !14949)
!14953 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !14949)
!14954 = !DILocation(line: 2420, column: 17, scope: !14940)
!14955 = !DILocation(line: 2421, column: 13, scope: !14940)
!14956 = !DILocation(line: 2422, column: 24, scope: !14940)
!14957 = !DILocation(line: 2417, column: 13, scope: !14938)
!14958 = !DILocation(line: 2422, column: 13, scope: !14940)
!14959 = !DILocation(line: 2424, column: 6, scope: !14930)
!14960 = distinct !DISubprogram(name: "pop<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h2d5771bad42b3b66E", scope: !83, file: !14656, line: 2497, type: !14961, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14963, retainedNodes: !14964)
!14961 = !DISubroutineType(types: !14962)
!14962 = !{!36, !4007}
!14963 = !DISubprogram(name: "pop<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h2d5771bad42b3b66E", scope: !83, file: !14656, line: 2497, type: !14961, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14964 = !{!14965}
!14965 = !DILocalVariable(name: "self", arg: 1, scope: !14960, file: !14656, line: 2497, type: !4007)
!14966 = !DILocation(line: 2497, column: 16, scope: !14960)
!14967 = !DILocation(line: 2498, column: 12, scope: !14960)
!14968 = !DILocation(line: 2499, column: 13, scope: !14960)
!14969 = !DILocation(line: 2498, column: 9, scope: !14960)
!14970 = !DILocation(line: 2502, column: 17, scope: !14960)
!14971 = !DILocation(line: 2507, column: 6, scope: !14960)
!14972 = !DILocation(line: 2503, column: 46, scope: !14960)
!14973 = !DILocation(line: 2503, column: 57, scope: !14960)
!14974 = !DILocation(line: 200, column: 38, scope: !10134, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 2503, column: 17, scope: !14960)
!14976 = !DILocation(line: 74, column: 35, scope: !10141, inlinedAt: !14975)
!14977 = !DILocation(line: 75, column: 17, scope: !10141, inlinedAt: !14975)
!14978 = !DILocation(line: 2504, column: 32, scope: !14960)
!14979 = !DILocation(line: 2504, column: 50, scope: !14960)
!14980 = !DILocation(line: 915, column: 29, scope: !6532, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 2504, column: 32, scope: !14960)
!14982 = !DILocation(line: 915, column: 35, scope: !6532, inlinedAt: !14981)
!14983 = !DILocation(line: 74, column: 35, scope: !6541, inlinedAt: !14981)
!14984 = !DILocation(line: 75, column: 17, scope: !6541, inlinedAt: !14981)
!14985 = !DILocation(line: 949, column: 18, scope: !6532, inlinedAt: !14981)
!14986 = !DILocation(line: 2504, column: 22, scope: !14960)
!14987 = !DILocation(line: 2504, column: 17, scope: !14960)
!14988 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h1bfb592e4078a097E", scope: !83, file: !14656, line: 2564, type: !14989, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !14991, retainedNodes: !14992)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{null, !4007, !1243, !1690}
!14991 = !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h1bfb592e4078a097E", scope: !83, file: !14656, line: 2564, type: !14989, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!14992 = !{!14993, !14994, !14995, !14997}
!14993 = !DILocalVariable(name: "self", arg: 1, scope: !14988, file: !14656, line: 2564, type: !4007)
!14994 = !DILocalVariable(name: "other", arg: 2, scope: !14988, file: !14656, line: 2564, type: !1243)
!14995 = !DILocalVariable(name: "count", scope: !14996, file: !14656, line: 2565, type: !9, align: 8)
!14996 = distinct !DILexicalBlock(scope: !14988, file: !14656, line: 2565, column: 9)
!14997 = !DILocalVariable(name: "len", scope: !14998, file: !14656, line: 2567, type: !9, align: 8)
!14998 = distinct !DILexicalBlock(scope: !14996, file: !14656, line: 2567, column: 9)
!14999 = !DILocation(line: 2564, column: 31, scope: !14988)
!15000 = !DILocation(line: 2564, column: 42, scope: !14988)
!15001 = !DILocation(line: 2565, column: 30, scope: !14988)
!15002 = !DILocation(line: 2565, column: 13, scope: !14996)
!15003 = !DILocation(line: 2566, column: 9, scope: !14996)
!15004 = !DILocation(line: 2567, column: 19, scope: !14996)
!15005 = !DILocation(line: 2567, column: 13, scope: !14998)
!15006 = !DILocation(line: 2568, column: 62, scope: !14998)
!15007 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !15008)
!15008 = distinct !DILocation(line: 2568, column: 62, scope: !14998)
!15009 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !15008)
!15010 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !15008)
!15011 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !15008)
!15012 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !15008)
!15013 = !DILocation(line: 4316, column: 44, scope: !4092, inlinedAt: !15014)
!15014 = distinct !DILocation(line: 2568, column: 18, scope: !14998)
!15015 = !DILocation(line: 4316, column: 59, scope: !4092, inlinedAt: !15014)
!15016 = !DILocation(line: 4316, column: 72, scope: !4092, inlinedAt: !15014)
!15017 = !DILocation(line: 74, column: 35, scope: !4101, inlinedAt: !15014)
!15018 = !DILocation(line: 75, column: 17, scope: !4101, inlinedAt: !15014)
!15019 = !DILocation(line: 4345, column: 14, scope: !4092, inlinedAt: !15014)
!15020 = !DILocation(line: 2569, column: 9, scope: !14998)
!15021 = !DILocation(line: 2570, column: 6, scope: !14988)
!15022 = distinct !DISubprogram(name: "drain<u8, alloc::alloc::Global, core::ops::range::Range<usize>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17heb5cb9bbe7fb049bE", scope: !83, file: !14656, line: 2603, type: !15023, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15026, declaration: !15025, retainedNodes: !15027)
!15023 = !DISubroutineType(types: !15024)
!15024 = !{!3079, !4007, !1159}
!15025 = !DISubprogram(name: "drain<u8, alloc::alloc::Global, core::ops::range::Range<usize>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17heb5cb9bbe7fb049bE", scope: !83, file: !14656, line: 2603, type: !15023, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !15026)
!15026 = !{!44, !115, !6784}
!15027 = !{!15028, !15029, !15030, !15032, !15034, !15035}
!15028 = !DILocalVariable(name: "self", arg: 1, scope: !15022, file: !14656, line: 2603, type: !4007)
!15029 = !DILocalVariable(name: "range", arg: 2, scope: !15022, file: !14656, line: 2603, type: !1159)
!15030 = !DILocalVariable(name: "len", scope: !15031, file: !14656, line: 2617, type: !9, align: 8)
!15031 = distinct !DILexicalBlock(scope: !15022, file: !14656, line: 2617, column: 9)
!15032 = !DILocalVariable(name: "start", scope: !15033, file: !14656, line: 2618, type: !9, align: 8)
!15033 = distinct !DILexicalBlock(scope: !15031, file: !14656, line: 2618, column: 9)
!15034 = !DILocalVariable(name: "end", scope: !15033, file: !14656, line: 2618, type: !9, align: 8)
!15035 = !DILocalVariable(name: "range_slice", scope: !15036, file: !14656, line: 2623, type: !427, align: 8)
!15036 = distinct !DILexicalBlock(scope: !15033, file: !14656, line: 2623, column: 13)
!15037 = !DILocation(line: 2603, column: 21, scope: !15022)
!15038 = !DILocation(line: 2603, column: 32, scope: !15022)
!15039 = !DILocation(line: 2617, column: 19, scope: !15022)
!15040 = !DILocation(line: 2617, column: 13, scope: !15031)
!15041 = !DILocation(line: 2618, column: 36, scope: !15031)
!15042 = !DILocation(line: 2618, column: 21, scope: !15031)
!15043 = !DILocation(line: 2618, column: 21, scope: !15033)
!15044 = !DILocation(line: 2618, column: 28, scope: !15031)
!15045 = !DILocation(line: 2618, column: 28, scope: !15033)
!15046 = !DILocation(line: 2622, column: 13, scope: !15033)
!15047 = !DILocation(line: 2623, column: 53, scope: !15033)
!15048 = !DILocation(line: 915, column: 29, scope: !6532, inlinedAt: !15049)
!15049 = distinct !DILocation(line: 2623, column: 53, scope: !15033)
!15050 = !DILocation(line: 915, column: 35, scope: !6532, inlinedAt: !15049)
!15051 = !DILocation(line: 74, column: 35, scope: !6541, inlinedAt: !15049)
!15052 = !DILocation(line: 75, column: 17, scope: !6541, inlinedAt: !15049)
!15053 = !DILocation(line: 949, column: 18, scope: !6532, inlinedAt: !15049)
!15054 = !DILocation(line: 2623, column: 79, scope: !15033)
!15055 = !DILocation(line: 2623, column: 31, scope: !15033)
!15056 = !DILocation(line: 2623, column: 17, scope: !15036)
!15057 = !DILocation(line: 2626, column: 27, scope: !15036)
!15058 = !DILocation(line: 2627, column: 23, scope: !15036)
!15059 = !DILocation(line: 2628, column: 22, scope: !15036)
!15060 = !DILocation(line: 2624, column: 13, scope: !15036)
!15061 = !DILocation(line: 2631, column: 6, scope: !15022)
!15062 = distinct !DISubprogram(name: "clear<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17hdc51e58aca5ba4b9E", scope: !83, file: !14656, line: 2649, type: !15063, scopeLine: 2649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !15065, retainedNodes: !15066)
!15063 = !DISubroutineType(types: !15064)
!15064 = !{null, !4007}
!15065 = !DISubprogram(name: "clear<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17hdc51e58aca5ba4b9E", scope: !83, file: !14656, line: 2649, type: !15063, scopeLine: 2649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!15066 = !{!15067, !15068}
!15067 = !DILocalVariable(name: "self", arg: 1, scope: !15062, file: !14656, line: 2649, type: !4007)
!15068 = !DILocalVariable(name: "elems", scope: !15069, file: !14656, line: 2650, type: !3471, align: 8)
!15069 = distinct !DILexicalBlock(scope: !15062, file: !14656, line: 2650, column: 9)
!15070 = !DILocation(line: 2649, column: 18, scope: !15062)
!15071 = !DILocation(line: 2650, column: 31, scope: !15062)
!15072 = !DILocation(line: 2650, column: 13, scope: !15069)
!15073 = !DILocation(line: 2659, column: 13, scope: !15069)
!15074 = !DILocation(line: 2662, column: 6, scope: !15062)
!15075 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E", scope: !83, file: !14656, line: 2677, type: !14747, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !15076, retainedNodes: !15077)
!15076 = !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h75ebb155cc25edb7E", scope: !83, file: !14656, line: 2677, type: !14747, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!15077 = !{!15078}
!15078 = !DILocalVariable(name: "self", arg: 1, scope: !15075, file: !14656, line: 2677, type: !14735)
!15079 = !DILocation(line: 2677, column: 22, scope: !15075)
!15080 = !DILocation(line: 2678, column: 9, scope: !15075)
!15081 = !DILocation(line: 2679, column: 6, scope: !15075)
!15082 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9split_off13assert_failed17h3bf7ef48856a6bffE", scope: !15083, file: !14656, line: 2736, type: !14906, scopeLine: 2736, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !15084)
!15083 = !DINamespace(name: "split_off", scope: !14905)
!15084 = !{!15085, !15086}
!15085 = !DILocalVariable(name: "at", arg: 1, scope: !15082, file: !14656, line: 2736, type: !9)
!15086 = !DILocalVariable(name: "len", arg: 2, scope: !15082, file: !14656, line: 2736, type: !9)
!15087 = !DILocation(line: 2736, column: 26, scope: !15082)
!15088 = !DILocation(line: 2736, column: 37, scope: !15082)
!15089 = !DILocation(line: 2737, column: 13, scope: !15082)
!15090 = distinct !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h2d201c19034bbe04E", scope: !83, file: !14656, line: 2866, type: !15091, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !15093, retainedNodes: !15094)
!15091 = !DISubroutineType(types: !15092)
!15092 = !{!6392, !4007}
!15093 = !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h2d201c19034bbe04E", scope: !83, file: !14656, line: 2866, type: !15091, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!15094 = !{!15095}
!15095 = !DILocalVariable(name: "self", arg: 1, scope: !15090, file: !14656, line: 2866, type: !4007)
!15096 = !DILocation(line: 2866, column: 31, scope: !15090)
!15097 = !DILocation(line: 2872, column: 17, scope: !15090)
!15098 = !DILocation(line: 2872, column: 39, scope: !15090)
!15099 = !DILocation(line: 993, column: 29, scope: !11086, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 2872, column: 17, scope: !15090)
!15101 = !DILocation(line: 993, column: 35, scope: !11086, inlinedAt: !15100)
!15102 = !DILocation(line: 74, column: 35, scope: !11095, inlinedAt: !15100)
!15103 = !DILocation(line: 75, column: 17, scope: !11095, inlinedAt: !15100)
!15104 = !DILocation(line: 1027, column: 18, scope: !11086, inlinedAt: !15100)
!15105 = !DILocation(line: 2873, column: 17, scope: !15090)
!15106 = !DILocation(line: 2873, column: 39, scope: !15090)
!15107 = !DILocation(line: 2871, column: 13, scope: !15090)
!15108 = !DILocation(line: 2876, column: 6, scope: !15090)
!15109 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE", scope: !83, file: !14656, line: 3024, type: !15110, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, declaration: !15112, retainedNodes: !15113)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{null, !4007, !427, !1690}
!15112 = !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h06da2db779f99f8fE", scope: !83, file: !14656, line: 3024, type: !15110, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !117)
!15113 = !{!15114, !15115}
!15114 = !DILocalVariable(name: "self", arg: 1, scope: !15109, file: !14656, line: 3024, type: !4007)
!15115 = !DILocalVariable(name: "other", arg: 2, scope: !15109, file: !14656, line: 3024, type: !427)
!15116 = !DILocation(line: 3024, column: 30, scope: !15109)
!15117 = !DILocation(line: 3024, column: 41, scope: !15109)
!15118 = !DILocation(line: 3025, column: 26, scope: !15109)
!15119 = !DILocation(line: 3025, column: 9, scope: !15109)
!15120 = !DILocation(line: 3026, column: 6, scope: !15109)
!15121 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h076723e9c2b0e41dE", scope: !15122, file: !14656, line: 3256, type: !14841, scopeLine: 3256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !15123)
!15122 = !DINamespace(name: "{impl#8}", scope: !84)
!15123 = !{!15124}
!15124 = !DILocalVariable(name: "self", arg: 1, scope: !15121, file: !14656, line: 3256, type: !14735)
!15125 = !DILocation(line: 3256, column: 14, scope: !15121)
!15126 = !DILocation(line: 3257, column: 9, scope: !15121)
!15127 = !DILocation(line: 3258, column: 6, scope: !15121)
!15128 = distinct !DISubprogram(name: "clone<u8, alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h82cd77fbaeae87fdE", scope: !15129, file: !14656, line: 3277, type: !15130, scopeLine: 3277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !15132)
!15129 = !DINamespace(name: "{impl#11}", scope: !84)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!83, !14735, !1690}
!15132 = !{!15133, !15134}
!15133 = !DILocalVariable(name: "self", arg: 1, scope: !15128, file: !14656, line: 3277, type: !14735)
!15134 = !DILocalVariable(name: "alloc", scope: !15135, file: !14656, line: 3278, type: !112, align: 1)
!15135 = distinct !DILexicalBlock(scope: !15128, file: !14656, line: 3278, column: 9)
!15136 = !DILocation(line: 3277, column: 14, scope: !15128)
!15137 = !DILocation(line: 3278, column: 13, scope: !15135)
!15138 = !DILocation(line: 3278, column: 21, scope: !15128)
!15139 = !DILocation(line: 3279, column: 27, scope: !15135)
!15140 = !DILocation(line: 3279, column: 9, scope: !15135)
!15141 = !DILocation(line: 3280, column: 6, scope: !15128)
!15142 = distinct !DISubprogram(name: "clone_from<u8, alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17hc28935a479ab173dE", scope: !15129, file: !14656, line: 3315, type: !15143, scopeLine: 3315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !15145)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{null, !4007, !14735, !1690}
!15145 = !{!15146, !15147}
!15146 = !DILocalVariable(name: "self", arg: 1, scope: !15142, file: !14656, line: 3315, type: !4007)
!15147 = !DILocalVariable(name: "source", arg: 2, scope: !15142, file: !14656, line: 3315, type: !14735)
!15148 = !DILocation(line: 3315, column: 19, scope: !15142)
!15149 = !DILocation(line: 3315, column: 30, scope: !15142)
!15150 = !DILocation(line: 3316, column: 52, scope: !15142)
!15151 = !DILocation(line: 3316, column: 9, scope: !15142)
!15152 = !DILocation(line: 3317, column: 6, scope: !15142)
!15153 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h0df5c7baa51e96abE", scope: !15154, file: !14656, line: 3348, type: !15155, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15160, retainedNodes: !15157)
!15154 = !DINamespace(name: "{impl#13}", scope: !84)
!15155 = !DISubroutineType(types: !15156)
!15156 = !{!427, !14735, !1247, !1690}
!15157 = !{!15158, !15159}
!15158 = !DILocalVariable(name: "self", arg: 1, scope: !15153, file: !14656, line: 3348, type: !14735)
!15159 = !DILocalVariable(name: "index", arg: 2, scope: !15153, file: !14656, line: 3348, type: !1247)
!15160 = !{!44, !6354, !115}
!15161 = !DILocation(line: 3348, column: 14, scope: !15153)
!15162 = !DILocation(line: 3348, column: 21, scope: !15153)
!15163 = !DILocation(line: 3349, column: 23, scope: !15153)
!15164 = !DILocalVariable(name: "self", arg: 1, scope: !15165, file: !1139, line: 15, type: !427)
!15165 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h32c9fe27373cd1d7E", scope: !15166, file: !1139, line: 15, type: !15167, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6353, retainedNodes: !15169)
!15166 = !DINamespace(name: "{impl#0}", scope: !1141)
!15167 = !DISubroutineType(types: !15168)
!15168 = !{!427, !427, !1247, !1690}
!15169 = !{!15164, !15170}
!15170 = !DILocalVariable(name: "index", arg: 2, scope: !15165, file: !1139, line: 15, type: !1247)
!15171 = !DILocation(line: 15, column: 14, scope: !15165, inlinedAt: !15172)
!15172 = distinct !DILocation(line: 3349, column: 9, scope: !15153)
!15173 = !DILocation(line: 15, column: 21, scope: !15165, inlinedAt: !15172)
!15174 = !DILocalVariable(name: "self", arg: 1, scope: !15175, file: !1139, line: 521, type: !1247)
!15175 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hbf6514bd2f1a6a96E", scope: !1240, file: !1139, line: 521, type: !15176, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !15178)
!15176 = !DISubroutineType(types: !15177)
!15177 = !{!427, !1247, !427, !1690}
!15178 = !{!15174, !15179}
!15179 = !DILocalVariable(name: "slice", arg: 2, scope: !15175, file: !1139, line: 521, type: !427)
!15180 = !DILocation(line: 521, column: 14, scope: !15175, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 16, column: 9, scope: !15165, inlinedAt: !15172)
!15182 = !DILocation(line: 521, column: 20, scope: !15175, inlinedAt: !15181)
!15183 = !DILocalVariable(name: "self", arg: 1, scope: !15184, file: !1139, line: 431, type: !1159)
!15184 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc41a0904f05fa5ceE", scope: !1140, file: !1139, line: 431, type: !15185, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !15187)
!15185 = !DISubroutineType(types: !15186)
!15186 = !{!427, !1159, !427, !1690}
!15187 = !{!15183, !15188, !15189}
!15188 = !DILocalVariable(name: "slice", arg: 2, scope: !15184, file: !1139, line: 431, type: !427)
!15189 = !DILocalVariable(name: "new_len", scope: !15190, file: !1139, line: 433, type: !9, align: 8)
!15190 = distinct !DILexicalBlock(scope: !15184, file: !1139, line: 433, column: 9)
!15191 = !DILocation(line: 431, column: 14, scope: !15184, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 522, column: 9, scope: !15175, inlinedAt: !15181)
!15193 = !DILocation(line: 431, column: 20, scope: !15184, inlinedAt: !15192)
!15194 = !DILocation(line: 433, column: 29, scope: !15184, inlinedAt: !15192)
!15195 = !DILocation(line: 433, column: 13, scope: !15184, inlinedAt: !15192)
!15196 = !DILocation(line: 433, column: 18, scope: !15184, inlinedAt: !15192)
!15197 = !DILocation(line: 433, column: 18, scope: !15190, inlinedAt: !15192)
!15198 = !DILocation(line: 436, column: 12, scope: !15190, inlinedAt: !15192)
!15199 = !DILocation(line: 434, column: 13, scope: !15184, inlinedAt: !15192)
!15200 = !DILocation(line: 437, column: 13, scope: !15190, inlinedAt: !15192)
!15201 = !DILocalVariable(name: "ptr", arg: 1, scope: !15202, file: !1139, line: 102, type: !1243)
!15202 = distinct !DISubprogram(name: "get_offset_len_noubcheck<u8>", linkageName: "_ZN4core5slice5index24get_offset_len_noubcheck17he7f174b180602a59E", scope: !1141, file: !1139, line: 101, type: !15203, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !15205)
!15203 = !DISubroutineType(types: !15204)
!15204 = !{!1243, !1243, !9, !9}
!15205 = !{!15201, !15206, !15207, !15208}
!15206 = !DILocalVariable(name: "offset", arg: 2, scope: !15202, file: !1139, line: 103, type: !9)
!15207 = !DILocalVariable(name: "len", arg: 3, scope: !15202, file: !1139, line: 104, type: !9)
!15208 = !DILocalVariable(name: "ptr", scope: !15209, file: !1139, line: 107, type: !103, align: 8)
!15209 = distinct !DILexicalBlock(scope: !15202, file: !1139, line: 107, column: 5)
!15210 = !DILocation(line: 102, column: 5, scope: !15202, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 440, column: 20, scope: !15190, inlinedAt: !15192)
!15212 = !DILocation(line: 103, column: 5, scope: !15202, inlinedAt: !15211)
!15213 = !DILocation(line: 104, column: 5, scope: !15202, inlinedAt: !15211)
!15214 = !DILocalVariable(name: "ptr", arg: 1, scope: !15215, file: !1139, line: 87, type: !1243)
!15215 = distinct !DISubprogram(name: "get_noubcheck<u8>", linkageName: "_ZN4core5slice5index13get_noubcheck17h049d2fa50de26f6dE", scope: !1141, file: !1139, line: 87, type: !15216, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !15218)
!15216 = !DISubroutineType(types: !15217)
!15217 = !{!103, !1243, !9}
!15218 = !{!15214, !15219, !15220}
!15219 = !DILocalVariable(name: "index", arg: 2, scope: !15215, file: !1139, line: 87, type: !9)
!15220 = !DILocalVariable(name: "ptr", scope: !15221, file: !1139, line: 88, type: !103, align: 8)
!15221 = distinct !DILexicalBlock(scope: !15215, file: !1139, line: 88, column: 5)
!15222 = !DILocation(line: 87, column: 34, scope: !15215, inlinedAt: !15223)
!15223 = distinct !DILocation(line: 107, column: 24, scope: !15202, inlinedAt: !15211)
!15224 = !DILocation(line: 87, column: 51, scope: !15215, inlinedAt: !15223)
!15225 = !DILocation(line: 88, column: 15, scope: !15215, inlinedAt: !15223)
!15226 = !DILocation(line: 88, column: 9, scope: !15221, inlinedAt: !15223)
!15227 = !DILocation(line: 107, column: 24, scope: !15202, inlinedAt: !15211)
!15228 = !DILocation(line: 107, column: 9, scope: !15209, inlinedAt: !15211)
!15229 = !DILocation(line: 109, column: 2, scope: !15202, inlinedAt: !15211)
!15230 = !DILocation(line: 440, column: 20, scope: !15190, inlinedAt: !15192)
!15231 = !DILocation(line: 522, column: 9, scope: !15175, inlinedAt: !15181)
!15232 = !DILocation(line: 16, column: 9, scope: !15165, inlinedAt: !15172)
!15233 = !DILocation(line: 17, column: 6, scope: !15165, inlinedAt: !15172)
!15234 = !DILocation(line: 3349, column: 9, scope: !15153)
!15235 = !DILocation(line: 3350, column: 6, scope: !15153)
!15236 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h8701d00ae8a955aeE", scope: !15154, file: !14656, line: 3348, type: !15237, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15242, retainedNodes: !15239)
!15237 = !DISubroutineType(types: !15238)
!15238 = !{!427, !14735, !4471, !1690}
!15239 = !{!15240, !15241}
!15240 = !DILocalVariable(name: "self", arg: 1, scope: !15236, file: !14656, line: 3348, type: !14735)
!15241 = !DILocalVariable(name: "index", arg: 2, scope: !15236, file: !14656, line: 3348, type: !4471)
!15242 = !{!44, !14333, !115}
!15243 = !DILocation(line: 3348, column: 14, scope: !15236)
!15244 = !DILocation(line: 3348, column: 21, scope: !15236)
!15245 = !DILocation(line: 3349, column: 23, scope: !15236)
!15246 = !DILocalVariable(name: "self", arg: 1, scope: !15247, file: !1139, line: 15, type: !427)
!15247 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h18e47ad48f988d90E", scope: !15166, file: !1139, line: 15, type: !15248, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15252, retainedNodes: !15250)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{!427, !427, !4471, !1690}
!15250 = !{!15246, !15251}
!15251 = !DILocalVariable(name: "index", arg: 2, scope: !15247, file: !1139, line: 15, type: !4471)
!15252 = !{!44, !14333}
!15253 = !DILocation(line: 15, column: 14, scope: !15247, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 3349, column: 9, scope: !15236)
!15255 = !DILocation(line: 15, column: 21, scope: !15247, inlinedAt: !15254)
!15256 = !DILocation(line: 16, column: 9, scope: !15247, inlinedAt: !15254)
!15257 = !DILocation(line: 3349, column: 9, scope: !15236)
!15258 = !DILocation(line: 3350, column: 6, scope: !15236)
!15259 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17haf53587d6ad804b1E", scope: !15154, file: !14656, line: 3348, type: !15260, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15265, retainedNodes: !15262)
!15260 = !DISubroutineType(types: !15261)
!15261 = !{!427, !14735, !1271, !1690}
!15262 = !{!15263, !15264}
!15263 = !DILocalVariable(name: "self", arg: 1, scope: !15259, file: !14656, line: 3348, type: !14735)
!15264 = !DILocalVariable(name: "index", arg: 2, scope: !15259, file: !14656, line: 3348, type: !1271)
!15265 = !{!44, !6342, !115}
!15266 = !DILocation(line: 3348, column: 14, scope: !15259)
!15267 = !DILocation(line: 3348, column: 21, scope: !15259)
!15268 = !DILocation(line: 3349, column: 23, scope: !15259)
!15269 = !DILocalVariable(name: "self", arg: 1, scope: !15270, file: !1139, line: 15, type: !427)
!15270 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h33a4d6cc0decff9bE", scope: !15166, file: !1139, line: 15, type: !15271, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !6341, retainedNodes: !15273)
!15271 = !DISubroutineType(types: !15272)
!15272 = !{!427, !427, !1271, !1690}
!15273 = !{!15269, !15274}
!15274 = !DILocalVariable(name: "index", arg: 2, scope: !15270, file: !1139, line: 15, type: !1271)
!15275 = !DILocation(line: 15, column: 14, scope: !15270, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 3349, column: 9, scope: !15259)
!15277 = !DILocation(line: 15, column: 21, scope: !15270, inlinedAt: !15276)
!15278 = !DILocation(line: 16, column: 9, scope: !15270, inlinedAt: !15276)
!15279 = !DILocation(line: 3349, column: 9, scope: !15259)
!15280 = !DILocation(line: 3350, column: 6, scope: !15259)
!15281 = distinct !DISubprogram(name: "extend<u8, alloc::alloc::Global, &[u8]>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17h49c450e26972f9f4E", scope: !15282, file: !14656, line: 3694, type: !15110, scopeLine: 3694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15286, retainedNodes: !15283)
!15282 = !DINamespace(name: "{impl#21}", scope: !84)
!15283 = !{!15284, !15285}
!15284 = !DILocalVariable(name: "self", arg: 1, scope: !15281, file: !14656, line: 3694, type: !4007)
!15285 = !DILocalVariable(name: "iter", arg: 2, scope: !15281, file: !14656, line: 3694, type: !427)
!15286 = !{!44, !115, !15287}
!15287 = !DITemplateTypeParameter(name: "I", type: !427)
!15288 = !DILocation(line: 3694, column: 46, scope: !15281)
!15289 = !DILocation(line: 3694, column: 57, scope: !15281)
!15290 = !DILocation(line: 3695, column: 26, scope: !15281)
!15291 = !DILocation(line: 3695, column: 9, scope: !15281)
!15292 = !DILocation(line: 3696, column: 6, scope: !15281)
!15293 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdaf5ef8f0552c2caE", scope: !15294, file: !14656, line: 3749, type: !15063, scopeLine: 3749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !117, retainedNodes: !15295)
!15294 = !DINamespace(name: "{impl#25}", scope: !84)
!15295 = !{!15296}
!15296 = !DILocalVariable(name: "self", arg: 1, scope: !15293, file: !14656, line: 3749, type: !4007)
!15297 = !DILocation(line: 3749, column: 13, scope: !15293)
!15298 = !DILocation(line: 3754, column: 62, scope: !15293)
!15299 = !DILocation(line: 3754, column: 81, scope: !15293)
!15300 = !DILocation(line: 3754, column: 32, scope: !15293)
!15301 = !DILocation(line: 3757, column: 6, scope: !15293)
!15302 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h85dded5f46da42afE", scope: !15303, file: !14656, line: 3817, type: !15304, scopeLine: 3817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !43, retainedNodes: !15306)
!15303 = !DINamespace(name: "{impl#32}", scope: !84)
!15304 = !DISubroutineType(types: !15305)
!15305 = !{!83, !427, !1690}
!15306 = !{!15307}
!15307 = !DILocalVariable(name: "s", arg: 1, scope: !15302, file: !14656, line: 3817, type: !427)
!15308 = !DILocation(line: 3817, column: 13, scope: !15302)
!15309 = !DILocation(line: 3818, column: 9, scope: !15302)
!15310 = !DILocation(line: 3819, column: 6, scope: !15302)
!15311 = distinct !DISubprogram(name: "from", linkageName: "_ZN80_$LT$alloc..vec..Vec$LT$u8$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h3f5014ea632fb998E", scope: !15312, file: !14656, line: 3986, type: !15313, scopeLine: 3986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !15315)
!15312 = !DINamespace(name: "{impl#40}", scope: !84)
!15313 = !DISubroutineType(types: !15314)
!15314 = !{!83, !170, !1690}
!15315 = !{!15316}
!15316 = !DILocalVariable(name: "s", arg: 1, scope: !15311, file: !14656, line: 3986, type: !170)
!15317 = !DILocation(line: 3986, column: 13, scope: !15311)
!15318 = !DILocation(line: 303, column: 27, scope: !4414, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 3987, column: 20, scope: !15311)
!15320 = !DILocation(line: 306, column: 6, scope: !4414, inlinedAt: !15319)
!15321 = !DILocation(line: 3987, column: 20, scope: !15311)
!15322 = !DILocation(line: 3987, column: 9, scope: !15311)
!15323 = !DILocation(line: 3988, column: 6, scope: !15311)
!15324 = distinct !DISubprogram(name: "clone", linkageName: "_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h3c1c8386bd0cea87E", scope: !15325, file: !10908, line: 46, type: !15326, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !15328)
!15325 = !DINamespace(name: "{impl#3}", scope: !113)
!15326 = !DISubroutineType(types: !15327)
!15327 = !{null, !10012}
!15328 = !{!15329}
!15329 = !DILocalVariable(name: "self", arg: 1, scope: !15324, file: !10908, line: 46, type: !10012)
!15330 = !DILocation(line: 46, column: 16, scope: !15324)
!15331 = !DILocation(line: 46, column: 21, scope: !15324)
!15332 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h135a58c11680f750E", scope: !15333, file: !12109, line: 77, type: !15334, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !207, templateParams: !15, retainedNodes: !15337)
!15333 = !DINamespace(name: "{impl#10}", scope: !1733)
!15334 = !DISubroutineType(types: !15335)
!15335 = !{!1736, !15336}
!15336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !1736, size: 64, align: 64, dwarfAddressSpace: 0)
!15337 = !{!15338, !15339, !15341}
!15338 = !DILocalVariable(name: "self", arg: 1, scope: !15332, file: !12109, line: 77, type: !15336)
!15339 = !DILocalVariable(name: "__self_0", scope: !15340, file: !12109, line: 91, type: !5935, align: 8)
!15340 = distinct !DILexicalBlock(scope: !15332, file: !12109, line: 77, column: 10)
!15341 = !DILocalVariable(name: "__self_1", scope: !15340, file: !12109, line: 102, type: !2402, align: 8)
!15342 = !DILocation(line: 77, column: 10, scope: !15332)
!15343 = !DILocation(line: 91, column: 9, scope: !15332)
!15344 = !DILocation(line: 91, column: 9, scope: !15340)
!15345 = !DILocation(line: 102, column: 9, scope: !15332)
!15346 = !DILocation(line: 102, column: 9, scope: !15340)
!15347 = !DILocation(line: 77, column: 10, scope: !15340)
!15348 = !DILocation(line: 77, column: 14, scope: !15332)
!15349 = !DILocation(line: 77, column: 15, scope: !15332)
